<Type Name="Reference" FullName="System.Security.Cryptography.Xml.Reference">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b906510510910edb0a742484503ec8db706d3bbb" />
    <Meta Name="ms.sourcegitcommit" Value="df6cf590aa3087f6c7c202712eee781c6a3c8f96" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/07/2018" />
    <Meta Name="ms.locfileid" Value="33681438" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Reference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Reference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.Reference" />
  <TypeSignature Language="VB.NET" Value="Public Class Reference" />
  <TypeSignature Language="C++ CLI" Value="public ref class Reference" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el elemento <see langword="&lt;reference&gt;" /> de una firma XML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.Reference> objeto representa la <`reference`> elemento de una firma digital XML definida por la especificación de firma digital XML.  
  
 Use la <xref:System.Security.Cryptography.Xml.Reference> objeto para especificar la información siguiente:  
  
-   El algoritmo de síntesis utilizado para firmar el objeto de datos.  Este valor es obligatorio.  
  
-   Identificador de recursos uniforme (URI) del objeto de datos para iniciar sesión. El URI puede especificar una ruta de acceso de archivo o elementos concretos dentro de un documento XML.  Este valor es obligatorio.  
  
-   Una cadena de transformaciones que se deben aplicar antes de generar el resumen. Este valor es opcional.  
  
-   El tipo de objeto que se va a iniciar sesión.  Este valor es opcional.  
  
-   Un identificador único usado para hacer referencia a la actual `<reference>` elemento.  Este valor es opcional.  
  
 Para obtener más información acerca de la <`reference`> elemento, vea el W3C especificación en www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo generar y comprobar una firma XML con doble cifrado mediante el <xref:System.Security.Cryptography.Xml.Reference> objeto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.Reference" /> con propiedades predeterminadas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo generar y comprobar una firma XML con doble cifrado mediante el <xref:System.Security.Cryptography.Xml.Reference> objeto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo generar y comprobar una firma XML desasociada mediante el <xref:System.Security.Cryptography.Xml.Reference> objeto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Clase <see cref="T:System.IO.Stream" /> con la que se inicializa la nueva instancia de <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.Reference" /> con un valor hash del <see cref="T:System.IO.Stream" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.Security.Cryptography.Xml.Reference> objeto con el valor hash que se corresponde con el `stream` parámetro.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Reference (string uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (uri As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Reference(System::String ^ uri);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="uri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uri">Clase <see cref="T:System.Uri" /> con la que se inicializa la nueva instancia de <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.Reference" /> con el objeto <see cref="T:System.Uri" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor inicializa la <xref:System.Security.Cryptography.Xml.Reference> objeto a los datos en el URI con un procesamiento especial para `""`, `#xpointer(/)`, y `#xxxx`.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza la <xref:System.Security.Cryptography.Xml.Reference> clase para firmar y comprobar un documento XML mediante una firma con doble cifrado.  
  
 [!code-cpp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CPP/sample.cpp#1)]
 [!code-csharp[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/CS/sample.cs#1)]
 [!code-vb[Cryptography.XML.Signature - Envelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.Signature - Envelope/VB/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTransform">
      <MemberSignature Language="C#" Value="public void AddTransform (System.Security.Cryptography.Xml.Transform transform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddTransform(class System.Security.Cryptography.Xml.Transform transform) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.AddTransform(System.Security.Cryptography.Xml.Transform)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddTransform(System::Security::Cryptography::Xml::Transform ^ transform);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transform" Type="System.Security.Cryptography.Xml.Transform" />
      </Parameters>
      <Docs>
        <param name="transform">Transformación que se agrega a la lista de transformaciones.</param>
        <summary>Agrega un objeto <see cref="T:System.Security.Cryptography.Xml.Transform" /> a la lista de transformaciones que se llevarán a cabo en los datos antes de pasarlos al algoritmo de síntesis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.Reference.AddTransform%2A> método modifica el `<Transform>` elemento y los subelementos asociados de una firma digital XML.  
  
 Las transformaciones se aplican en el orden en que se agregaron. Si no se especifica ninguna transformación, el mínimo requerido transformaciones se agregan automáticamente.  
  
 Para obtener más información acerca de las firmas digitales XML, vea la especificación W3C en www.w3.org/TR/xmldsig-core/.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo generar y comprobar una firma XML con doble cifrado mediante el <xref:System.Security.Cryptography.Xml.Reference> objeto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo generar y comprobar una firma XML desasociada mediante el <xref:System.Security.Cryptography.Xml.Reference> objeto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CPP/xmldsigdetach.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/CS/xmldsigdetach.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigDetached#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigDetached/VB/xmldsigdetach.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="transform" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DigestMethod">
      <MemberSignature Language="C#" Value="public string DigestMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DigestMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DigestMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador uniforme de recursos (URI) del método de síntesis de la <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</summary>
        <value>Identificador URI del método de síntesis de la <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual. El valor predeterminado es "http://www.w3.org/2000/09/xmldsig#sha1".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> propiedad utiliza una cadena URI para representar el <`DigestMethod`> elemento de una firma digital XML.  
  
 El método de algoritmo de síntesis es el algoritmo utilizado para hash los <xref:System.Security.Cryptography.Xml.Reference>. El algoritmo predeterminado es <xref:System.Security.Cryptography.SHA1>.  
  
 Para obtener más información acerca de las firmas digitales XML, vea la especificación W3C en www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DigestValue">
      <MemberSignature Language="C#" Value="public byte[] DigestValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] DigestValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.DigestValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DigestValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ DigestValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de síntesis de la <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</summary>
        <value>Valor de síntesis de la <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> propiedad utiliza una matriz de bytes para representar el <`DigestValue`> elemento de una firma digital XML.  
  
 El <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> propiedad contiene el valor codificado en Base 64 de la síntesis del objeto descrito por el <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> propiedad.  
  
 El <xref:System.Security.Cryptography.Xml.Reference.DigestValue%2A> propiedad se rellena automáticamente con el valor adecuado siempre que realice una llamada a <xref:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature%2A>.  
  
 Para obtener más información acerca de las firmas digitales XML, vea la especificación W3C en www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la representación XML de <see cref="T:System.Security.Cryptography.Xml.Reference" />.</summary>
        <returns>Representación XML del objeto <see cref="T:System.Security.Cryptography.Xml.Reference" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.Reference.DigestMethod" /> es <see langword="null" />.  
  
 O bien  
  
 La propiedad <see cref="P:System.Security.Cryptography.Xml.Reference.DigestValue" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Id" />
      <MemberSignature Language="VB.NET" Value="Public Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el identificador del objeto <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</summary>
        <value>Identificador del objeto <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual. El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Security.Cryptography.Xml.Reference.Id%2A> propiedad que se va a agregar un identificador de cadena a la representación XML del elemento actual <xref:System.Security.Cryptography.Xml.Reference> elemento. El identificador se usa para hacer referencia a la <xref:System.Security.Cryptography.Xml.Reference> elemento desde otra ubicación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.Reference.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Elemento XML a partir del cual se carga el estado de la clase <see cref="T:System.Security.Cryptography.Xml.Reference" />.</param>
        <summary>Carga un estado de la clase <see cref="T:System.Security.Cryptography.Xml.Reference" /> a partir de un elemento XML.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El parámetro <paramref name="value" /> no contiene transformaciones.  
  
 O bien  
  
 El parámetro <paramref name="value" /> contiene una transformación desconocida.</exception>
      </Docs>
    </Member>
    <Member MemberName="TransformChain">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.TransformChain TransformChain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.TransformChain TransformChain" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.TransformChain" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformChain As TransformChain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::TransformChain ^ TransformChain { System::Security::Cryptography::Xml::TransformChain ^ get(); void set(System::Security::Cryptography::Xml::TransformChain ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.TransformChain</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la cadena de transformación de la <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</summary>
        <value>Cadena de transformación de la <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.Reference.TransformChain%2A> propiedad representa la <`Transform`> elemento y los subelementos asociados de una firma digital XML.  
  
 La cadena de la transformación es una lista ordenada de transformaciones. La salida de estas transformaciones constituye la entrada del algoritmo hash especificado en el <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> propiedad.  
  
 Para obtener más información acerca de las firmas digitales XML, vea la especificación W3C en www.w3.org/TR/xmldsig-core/.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tipo de objeto que se va a firmar.</summary>
        <value>Tipo del objeto que se va a firmar.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.Reference.Uri" />
      <MemberSignature Language="VB.NET" Value="Public Property Uri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el <see cref="T:System.Uri" /> del <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</summary>
        <value>
          <see cref="T:System.Uri" /> de <see cref="T:System.Security.Cryptography.Xml.Reference" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> propiedad utiliza una cadena de identificador uniforme de recursos (URI) para representar el <`URI`> elemento de una firma digital XML.  
  
 Use la <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> propiedad para especificar la ubicación de un documento que se va a iniciar sesión como especificar qué elemento del documento XML actual para iniciar sesión o para indicar que se debería firmar todo el documento.  
  
 Para crear correctamente una firma digital XML, debe establecer el <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> propiedad. En la tabla siguiente se describe los valores que puede pasar a la <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> propiedad.  
  
|Objeto que se va a iniciar sesión|Valor pasado a la <xref:System.Security.Cryptography.Xml.Reference.Uri%2A> propiedad|  
|--------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|Un documento XML completo utilizando una firma con doble cifrado.|Una cadena vacía: ""|  
|Un elemento específico dentro de un documento XML mediante una firma con doble cifrado.|El nombre de un elemento XML identificado por un identificador de nombre de atributo. La cadena debe tener el formato siguiente donde `IDname` es el nombre de un identificador de nombre de atributo válido:<br /><br /> "#Idname"|  
|Un archivo mediante una firma desasociada.|El URI de un archivo: "c:\data.jpg" o "c:\data.xml".|  
  
 Para obtener más información acerca de las firmas digitales XML, vea el World Wide Web Consortium (W3C) [XML Signature Syntax y especificación del procesamiento](https://www.w3.org/TR/xmldsig-core/).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo generar y comprobar una firma XML con doble cifrado mediante el <xref:System.Security.Cryptography.Xml.Reference> objeto.  
  
 [!code-cpp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CPP/xmldsigenv.cpp#1)]
 [!code-csharp[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/CS/xmldsigenv.cs#1)]
 [!code-vb[System.Security.Cryptography.XML-XMLDsigEnvelope#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.XML-XMLDsigEnvelope/VB/xmldsigenv.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>