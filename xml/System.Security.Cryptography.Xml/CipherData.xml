<Type Name="CipherData" FullName="System.Security.Cryptography.Xml.CipherData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d8522a77b6840de350c1bf3b449a1baec48644f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37465178" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CipherData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherData sealed" />
  <TypeSignature Language="F#" Value="type CipherData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el elemento <see langword="&lt;CipherData&gt;" /> del cifrado XML. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.CipherData> clase representa el `<CipherData>` elemento en cifrado XML. Es un elemento necesario que proporciona los datos cifrados. Deben contener los datos cifrados como texto codificado en base64 de la `<CipherValue>` elemento, o proporcionar una referencia a una ubicación externa que contiene los datos cifrados mediante el `<CipherReference>` elemento.  
  
 En muchos casos, no es necesario crear directamente una nueva instancia de la <xref:System.Security.Cryptography.Xml.CipherData> clase.  El <xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>, <xref:System.Security.Cryptography.Xml.EncryptedData>, y <xref:System.Security.Cryptography.Xml.EncryptedKey> clases crean instancias para usted.  
  
> [!NOTE]
>  Un <xref:System.Security.Cryptography.Xml.CipherData> objeto puede tener un <xref:System.Security.Cryptography.Xml.CipherReference> propiedad o un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propiedad, pero no ambos. Un <xref:System.Security.Cryptography.CryptographicException> se produce si ambos están asignados a un <xref:System.Security.Cryptography.Xml.CipherData> objeto.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Xml.EncryptedData> clase para crear un <`EncryptedData`> elemento que contiene un <`CipherData`> elemento y, a continuación, escribe el código XML en un archivo XML.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#1)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#1)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea un <xref:System.Security.Cryptography.Xml.CipherData> objeto que representa el `<CipherData>` elemento en cifrado XML. El `<CipherData>` es un elemento requerido en cifrado XML.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo crear una nueva instancia de la clase <xref:System.Security.Cryptography.Xml.CipherData>. El ejemplo completo que puede encontrarse en el <xref:System.Security.Cryptography.Xml.CipherData> tema de la clase.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (byte[] cipherValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] cipherValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cipherValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(cli::array &lt;System::Byte&gt; ^ cipherValue);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherData : byte[] -&gt; System.Security.Cryptography.Xml.CipherData" Usage="new System.Security.Cryptography.Xml.CipherData cipherValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cipherValue">Datos cifrados que se van a utilizar para el elemento <see langword="&lt;CipherValue&gt;" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.CipherData" /> utilizando una matriz de bytes como valor de <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea un <xref:System.Security.Cryptography.Xml.CipherData> objeto que representa el `<CipherData>` elemento en cifrado XML. El constructor asigna el `cipherValue` valor para el <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propiedad como el estado real de los datos cifrados.  
  
> [!NOTE]
>  El `<CipherData>` elemento puede tener un <xref:System.Security.Cryptography.Xml.CipherReference> o un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> elemento secundario, pero no ambos. Un <xref:System.Security.Cryptography.CryptographicException> se produce si ambos están asignados a un <xref:System.Security.Cryptography.Xml.CipherData> objeto.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo crear una nueva instancia de la clase <xref:System.Security.Cryptography.Xml.CipherData>.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="cipherValue" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> ya se ha establecido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (System.Security.Cryptography.Xml.CipherReference cipherReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Xml.CipherReference cipherReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(System::Security::Cryptography::Xml::CipherReference ^ cipherReference);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Xml.CipherData : System.Security.Cryptography.Xml.CipherReference -&gt; System.Security.Cryptography.Xml.CipherData" Usage="new System.Security.Cryptography.Xml.CipherData cipherReference" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherReference" Type="System.Security.Cryptography.Xml.CipherReference" />
      </Parameters>
      <Docs>
        <param name="cipherReference">Objeto <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> que se va a utilizar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Xml.CipherData" /> mediante un objeto <see cref="T:System.Security.Cryptography.Xml.CipherReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor crea un <xref:System.Security.Cryptography.Xml.CipherData> objeto que representa el `<CipherData>` elemento en cifrado XML y asigna el `cipherReference` valor para el <xref:System.Security.Cryptography.Xml.CipherReference> propiedad. El <xref:System.Security.Cryptography.Xml.CipherReference> objeto representa el `<CipherReference>` elemento, que proporciona la ubicación de los datos cifrados.  
  
> [!NOTE]
>  Un <xref:System.Security.Cryptography.Xml.CipherData> objeto puede tener un <xref:System.Security.Cryptography.Xml.CipherReference> propiedad o un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propiedad, pero no ambos. Un <xref:System.Security.Cryptography.CryptographicException> se produce si ambos están asignados a un <xref:System.Security.Cryptography.Xml.CipherData> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una nueva instancia de la <xref:System.Security.Cryptography.Xml.CipherData> mediante la clase <xref:System.Security.Cryptography.Xml.CipherReference> información.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="cipherValue" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> ya se ha establecido.</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherReference">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.CipherReference CipherReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherReference CipherReference" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherReference As CipherReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::CipherReference ^ CipherReference { System::Security::Cryptography::Xml::CipherReference ^ get(); void set(System::Security::Cryptography::Xml::CipherReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherReference : System.Security.Cryptography.Xml.CipherReference with get, set" Usage="System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el elemento <see langword="&lt;CipherReference&gt;" />.</summary>
        <value>Un objeto <see cref="T:System.Security.Cryptography.Xml.CipherReference" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `<CipherReference>` elemento identifica un origen que, cuando se procesa, produce los datos cifrados. Para obtener más información sobre este elemento, vea <xref:System.Security.Cryptography.Xml.CipherReference>.  
  
> [!NOTE]
>  Un <xref:System.Security.Cryptography.Xml.CipherData> objeto puede tener un <xref:System.Security.Cryptography.Xml.CipherReference> propiedad o un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propiedad, pero no ambos. Un <xref:System.Security.Cryptography.CryptographicException> se produce si ambos están asignados a un <xref:System.Security.Cryptography.Xml.CipherData> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una nueva instancia de la <xref:System.Security.Cryptography.Xml.CipherData> mediante la clase <xref:System.Security.Cryptography.Xml.CipherReference> información.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> se estableció en <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> se ha establecido más de una vez.</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherValue">
      <MemberSignature Language="C#" Value="public byte[] CipherValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CipherValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ CipherValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherValue : byte[] with get, set" Usage="System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el elemento <see langword="&lt;CipherValue&gt;" />.</summary>
        <value>Una matriz de bytes que representa el elemento <see langword="&lt;CipherValue&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor es los datos cifrados.  
  
> [!NOTE]
>  El `<CipherData>` elemento puede tener un <xref:System.Security.Cryptography.Xml.CipherReference> o un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> elemento secundario, pero no ambos. Un <xref:System.Security.Cryptography.CryptographicException> se produce si ambos están asignados a un <xref:System.Security.Cryptography.Xml.CipherData> objeto.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo crear una nueva instancia de la clase <xref:System.Security.Cryptography.Xml.CipherData>.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> se estableció en <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> se ha establecido más de una vez.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="member this.GetXml : unit -&gt; System.Xml.XmlElement" Usage="cipherData.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene los valores XML del objeto <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
        <returns>Objeto <see cref="T:System.Xml.XmlElement" /> que representa la información XML para el objeto <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este método para generar XML para un <xref:System.Security.Cryptography.Xml.CipherData> objeto.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una nueva instancia de la <xref:System.Security.Cryptography.Xml.CipherData> objeto.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> y la propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> son <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="member this.LoadXml : System.Xml.XmlElement -&gt; unit" Usage="cipherData.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Clase <see cref="T:System.Xml.XmlElement" /> que representa los datos XML que se van a cargar.</param>
        <summary>Carga datos XML de una clase <see cref="T:System.Xml.XmlElement" /> en un objeto <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.Xml.CipherData.LoadXml%2A> método sobrescribe los elementos XML existentes con el `value` parámetro.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="value" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> y la propiedad <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> son <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>