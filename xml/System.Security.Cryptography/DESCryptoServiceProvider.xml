<Type Name="DESCryptoServiceProvider" FullName="System.Security.Cryptography.DESCryptoServiceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0334a9cba5f0964678006310dde9621c3de9a07d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499249" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DESCryptoServiceProvider : System.Security.Cryptography.DES" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DESCryptoServiceProvider extends System.Security.Cryptography.DES" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DESCryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DESCryptoServiceProvider&#xA;Inherits DES" />
  <TypeSignature Language="C++ CLI" Value="public ref class DESCryptoServiceProvider sealed : System::Security::Cryptography::DES" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DES</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define un objeto contenedor para obtener acceso a la versión del proveedor de servicios criptográficos (CSP) del algoritmo Estándar de cifrado de datos (<see cref="T:System.Security.Cryptography.DES" />). Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este algoritmo admite una longitud de clave de 64 bits.  
  
   
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Security.Cryptography.DESCryptoServiceProvider> (una implementación de <xref:System.Security.Cryptography.DES>) con la clave especificada (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) y el vector de inicialización (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) para cifrar un archivo especificado por `inName`. A continuación, muestra el resultado cifrado en el archivo especificado por `outName`.  
  
 [!code-cpp[Classic DES Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DES Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DES Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DES Example/CS/source.cs#1)]
 [!code-vb[Classic DES Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DES Example/VB/source.vb#1)]  
  
 Descifrado puede tratarse de la misma manera; usar <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> en lugar de <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. La misma clave (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) y el vector de inicialización (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) utilizado para cifrar el archivo debe usarse para descifrarlo.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DESCryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DESCryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DESCryptoServiceProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código usa <xref:System.Security.Cryptography.DESCryptoServiceProvider> (una implementación de <xref:System.Security.Cryptography.DES>) con la clave especificada (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) y el vector de inicialización (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) para cifrar un archivo especificado por `inName`. A continuación, muestra el resultado cifrado en el archivo especificado por `outName`.  
  
 [!code-cpp[Classic DES Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic DES Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DES Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic DES Example/CS/source.cs#1)]
 [!code-vb[Classic DES Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic DES Example/VB/source.vb#1)]  
  
 Descifrado puede tratarse de la misma manera; usar <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> en lugar de <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A>. La misma clave (<xref:System.Security.Cryptography.SymmetricAlgorithm.Key%2A>) y el vector de inicialización (<xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A>) utilizado para cifrar el archivo debe usarse para descifrarlo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El proveedor de servicios criptográficos del algoritmo Estándar de cifrado de datos (<see cref="T:System.Security.Cryptography.DES" />) no está disponible.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDecryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateDecryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateDecryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateDecryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateDecryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">Clave secreta que se va a usar para el algoritmo simétrico.</param>
        <param name="rgbIV">Vector de inicialización que se va a usar para el algoritmo simétrico.</param>
        <summary>Crea un objeto descifrador <see cref="T:System.Security.Cryptography.DES" /> (Estándar de cifrado de datos) simétrico con la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> y el vector de inicialización especificados (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
        <returns>Objeto descifrador <see cref="T:System.Security.Cryptography.DES" /> simétrico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método descifra un mensaje cifrado que se creó mediante el <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor%2A> se puede sobrecargar con los mismos parámetros.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El valor de la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> es <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
  
 O bien  
  
 El valor de la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> es <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> y el valor de la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> no es 8.  
  
 O bien  
  
 Se utilizó un tamaño de clave no válido.  
  
 O bien  
  
 El algoritmo del tamaño de clave no estaba disponible.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateEncryptor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea un objeto cifrador simétrico.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor () As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEncryptor">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.ICryptoTransform CreateEncryptor (byte[] rgbKey, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Security.Cryptography.ICryptoTransform CreateEncryptor(unsigned int8[] rgbKey, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.CreateEncryptor(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateEncryptor (rgbKey As Byte(), rgbIV As Byte()) As ICryptoTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::ICryptoTransform ^ CreateEncryptor(cli::array &lt;System::Byte&gt; ^ rgbKey, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ICryptoTransform</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbKey" Type="System.Byte[]" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbKey">Clave secreta que se va a usar para el algoritmo simétrico.</param>
        <param name="rgbIV">Vector de inicialización que se va a usar para el algoritmo simétrico.</param>
        <summary>Crea un objeto descifrador <see cref="T:System.Security.Cryptography.DES" /> (Estándar de cifrado de datos) simétrico con la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" /> y el vector de inicialización especificados (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />).</summary>
        <returns>Objeto cifrador <see cref="T:System.Security.Cryptography.DES" /> simétrico.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Security.Cryptography.DESCryptoServiceProvider.CreateDecryptor%2A> se puede sobrecargar con los mismos parámetros para descifrar el resultado de este método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear y usar un <xref:System.Security.Cryptography.DESCryptoServiceProvider> objeto para cifrar y descifrar datos en un archivo.  
  
 [!code-cpp[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/CPP/fileexample.cpp#1)]
 [!code-csharp[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/CS/fileexample.cs#1)]
 [!code-vb[Cryptography.DESCSP.CreateEncryptor.File#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.File/VB/fileexample.vb#1)]  
  
 En el ejemplo de código siguiente se muestra cómo crear y usar un <xref:System.Security.Cryptography.DESCryptoServiceProvider> objeto para cifrar y descifrar datos en memoria.  
  
 [!code-cpp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/CPP/memoryexample.cpp#1)]
 [!code-csharp[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/CS/memoryexample.cs#1)]
 [!code-vb[Cryptography.DESCSP.CreateEncryptor.Memory#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DESCSP.CreateEncryptor.Memory/VB/memoryexample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">El valor de la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> es <see cref="F:System.Security.Cryptography.CipherMode.OFB" />.  
  
 O bien  
  
 El valor de la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Mode" /> es <see cref="F:System.Security.Cryptography.CipherMode.CFB" /> y el valor de la propiedad <see cref="P:System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize" /> no es 8.  
  
 O bien  
  
 Se utilizó un tamaño de clave no válido.  
  
 O bien  
  
 El algoritmo del tamaño de clave no estaba disponible.</exception>
      </Docs>
    </Member>
    <Member MemberName="GenerateIV">
      <MemberSignature Language="C#" Value="public override void GenerateIV ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateIV() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateIV" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateIV ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateIV();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera un vector de inicialización aleatorio (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.IV" />) que se va a utilizar para el algoritmo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para generar un aleatorio <xref:System.Security.Cryptography.SymmetricAlgorithm.IV%2A> cuando no se especifica ninguno.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKey">
      <MemberSignature Language="C#" Value="public override void GenerateKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GenerateKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DESCryptoServiceProvider.GenerateKey" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GenerateKey ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GenerateKey();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera una propiedad (<see cref="P:System.Security.Cryptography.SymmetricAlgorithm.Key" />) aleatoria que se va a utilizar para el algoritmo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para generar una clave aleatoria cuando no se especifica ninguno. Este método no devolverá nunca una clave débil (vea <xref:System.Security.Cryptography.DES.IsWeakKey%2A>) o una clave semi-débil (vea <xref:System.Security.Cryptography.DES.IsSemiWeakKey%2A>).  
  
 Este algoritmo admite una longitud de clave de 64 bits.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>