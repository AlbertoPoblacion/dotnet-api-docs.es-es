<Type Name="ECCurve" FullName="System.Security.Cryptography.ECCurve">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8d108df314650ab1a09a8674c26b69090908cc43" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30498629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ECCurve" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ECCurve extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ECCurve" />
  <TypeSignature Language="VB.NET" Value="Public Structure ECCurve" />
  <TypeSignature Language="C++ CLI" Value="public value class ECCurve" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una curva elíptica.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Security.Cryptography.ECCurve.CurveType> campo para determinar si la curva es una curva con nombre o una curva explícita (un bloqueo o una curva característica 2).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="A">
      <MemberSignature Language="C#" Value="public byte[] A;" />
      <MemberSignature Language="ILAsm" Value=".field public unsigned int8[] A" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.A" />
      <MemberSignature Language="VB.NET" Value="Public A As Byte() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Byte&gt; ^ A;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El primer coeficiente de una curva explícita. <c>A</c> para curvas Weierstrass, Montgomery y Twisted Edwards cortas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="B">
      <MemberSignature Language="C#" Value="public byte[] B;" />
      <MemberSignature Language="ILAsm" Value=".field public unsigned int8[] B" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.B" />
      <MemberSignature Language="VB.NET" Value="Public B As Byte() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Byte&gt; ^ B;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El segundo coeficiente de una curva explícita. <c>B</c> para curvas Weierstrass cortas y <c>d</c> para curvas Twisted Edwards.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cofactor">
      <MemberSignature Language="C#" Value="public byte[] Cofactor;" />
      <MemberSignature Language="ILAsm" Value=".field public unsigned int8[] Cofactor" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.Cofactor" />
      <MemberSignature Language="VB.NET" Value="Public Cofactor As Byte() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Byte&gt; ^ Cofactor;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El cofactor de la curva.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromFriendlyName">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECCurve CreateFromFriendlyName (string oidFriendlyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.ECCurve CreateFromFriendlyName(string oidFriendlyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECCurve.CreateFromFriendlyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromFriendlyName (oidFriendlyName As String) As ECCurve" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::ECCurve CreateFromFriendlyName(System::String ^ oidFriendlyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidFriendlyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oidFriendlyName">Nombre descriptivo del identificador.</param>
        <summary>Crea una curva con nombre mediante el nombre descriptivo especificado del identificador.</summary>
        <returns>Un objeto que representa la curva con nombre.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="oidFriendlyName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateFromOid">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECCurve CreateFromOid (System.Security.Cryptography.Oid curveOid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.ECCurve CreateFromOid(class System.Security.Cryptography.Oid curveOid) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECCurve.CreateFromOid(System.Security.Cryptography.Oid)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromOid (curveOid As Oid) As ECCurve" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::ECCurve CreateFromOid(System::Security::Cryptography::Oid ^ curveOid);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="curveOid" Type="System.Security.Cryptography.Oid" />
      </Parameters>
      <Docs>
        <param name="curveOid">El identificador de objetos que se usará.</param>
        <summary>Crea una curva con nombre mediante el objeto <see cref="T:System.Security.Cryptography.Oid" /> especificado.</summary>
        <returns>Un objeto que representa la curva con nombre.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFromValue">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.ECCurve CreateFromValue (string oidValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Security.Cryptography.ECCurve CreateFromValue(string oidValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECCurve.CreateFromValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromValue (oidValue As String) As ECCurve" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::ECCurve CreateFromValue(System::String ^ oidValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECCurve</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oidValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oidValue">El número con punto del identificador.</param>
        <summary>Crea una curva con nombre mediante la representación decimal con punto especificada del identificador.</summary>
        <returns>Un objeto que representa la curva con nombre.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="oidValue" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurveType">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.ECCurve.ECCurveType CurveType;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Security.Cryptography.ECCurve/ECCurveType CurveType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.CurveType" />
      <MemberSignature Language="VB.NET" Value="Public CurveType As ECCurve.ECCurveType " />
      <MemberSignature Language="C++ CLI" Value="public: System::Security::Cryptography::ECCurve::ECCurveType CurveType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECCurve+ECCurveType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la composición del objeto <see cref="T:System.Security.Cryptography.ECCurve" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="G">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.ECPoint G;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Security.Cryptography.ECPoint G" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.G" />
      <MemberSignature Language="VB.NET" Value="Public G As ECPoint " />
      <MemberSignature Language="C++ CLI" Value="public: System::Security::Cryptography::ECPoint G;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.ECPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El generador o punto base para las operaciones de la curva.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.Security.Cryptography.HashAlgorithmName&gt; Hash;" />
      <MemberSignature Language="ILAsm" Value=".field public valuetype System.Nullable`1&lt;valuetype System.Security.Cryptography.HashAlgorithmName&gt; Hash" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.Hash" />
      <MemberSignature Language="VB.NET" Value="Public Hash As Nullable(Of HashAlgorithmName) " />
      <MemberSignature Language="C++ CLI" Value="public: Nullable&lt;System::Security::Cryptography::HashAlgorithmName&gt; Hash;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Security.Cryptography.HashAlgorithmName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El nombre del algoritmo hash que se usó para generar los coeficientes de las curvas (<see cref="F:System.Security.Cryptography.ECCurve.A" /> y <see cref="F:System.Security.Cryptography.ECCurve.B" />) desde el elemento <see cref="F:System.Security.Cryptography.ECCurve.Seed" />, situado en el algoritmo de generación ANSI X9.62. Solo se aplica a curvas explícitas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCharacteristic2">
      <MemberSignature Language="C#" Value="public bool IsCharacteristic2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCharacteristic2" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECCurve.IsCharacteristic2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCharacteristic2 As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCharacteristic2 { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el tipo de curva indica una curva de característica 2 explícita.</summary>
        <value>
          <see langword="true" /> si la curva es una curva de característica 2 explícita; <see langword="false" /> si la curva es una curva implícita, de números primos o de característica 2 con nombre.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExplicit">
      <MemberSignature Language="C#" Value="public bool IsExplicit { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExplicit" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECCurve.IsExplicit" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExplicit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExplicit { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el tipo de curva indica una curva explícita (de números primos o de característica 2).</summary>
        <value>
          <see langword="true" /> si la curva es una curva explícita (de números primos o de característica 2); <see langword="false" /> si la curva es una curva con nombre o implícita.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamed">
      <MemberSignature Language="C#" Value="public bool IsNamed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamed" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECCurve.IsNamed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el tipo de curva indica una curva con nombre.</summary>
        <value>
          <see langword="true" /> si la curva es una curva con nombre; <see langword="false" /> si la curva es una curva implícita o explícita (de números primos o característica 2).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrime">
      <MemberSignature Language="C#" Value="public bool IsPrime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrime" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECCurve.IsPrime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrime As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrime { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si el tipo de curva indica una curva prime explícita.</summary>
        <value>
          <see langword="true" /> si la curva es una curva de números primos explícita; <see langword="false" /> si la curva es una curva implícita, de característica 2 o de números primos con nombre.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Oid">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid Oid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid Oid" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ECCurve.Oid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Oid As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ Oid { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador de una curva con nombre.</summary>
        <value>El identificador de una curva con nombre.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se puede establecer un valor para el <xref:System.Security.Cryptography.ECCurve.Oid%2A> propiedad directamente. En su lugar, para crear una curva con nombre, use la <xref:System.Security.Cryptography.ECCurve.CreateFromFriendlyName%2A>, <xref:System.Security.Cryptography.ECCurve.CreateFromOid%2A> , o <xref:System.Security.Cryptography.ECCurve.CreateFromValue%2A> métodos.  
  
 En algunos sistemas, el <xref:System.Security.Cryptography.Oid.Value%2A?displayProperty=nameWithType> propiedad es el identificador de referencia principal, mientras que en otras versiones es la <xref:System.Security.Cryptography.Oid.FriendlyName%2A?displayProperty=nameWithType> propiedad.  Crear manualmente un <xref:System.Security.Cryptography.Oid> objeto con valores no coincidentes puede producir resultados no deseados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public byte[] Order;" />
      <MemberSignature Language="ILAsm" Value=".field public unsigned int8[] Order" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.Order" />
      <MemberSignature Language="VB.NET" Value="Public Order As Byte() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Byte&gt; ^ Order;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El orden de la curva. Solo se aplica a curvas explícitas.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Security.Cryptography.ECCurve.Order> campo representa el orden del grupo generado mediante la letra G = (x, y).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Polynomial">
      <MemberSignature Language="C#" Value="public byte[] Polynomial;" />
      <MemberSignature Language="ILAsm" Value=".field public unsigned int8[] Polynomial" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.Polynomial" />
      <MemberSignature Language="VB.NET" Value="Public Polynomial As Byte() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Byte&gt; ^ Polynomial;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La curva polinomial. Solo se aplica a las curvas de característica 2.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Prime">
      <MemberSignature Language="C#" Value="public byte[] Prime;" />
      <MemberSignature Language="ILAsm" Value=".field public unsigned int8[] Prime" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.Prime" />
      <MemberSignature Language="VB.NET" Value="Public Prime As Byte() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Byte&gt; ^ Prime;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El primo que especifica el campo base. Solo se aplica a las curvas prime.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Seed">
      <MemberSignature Language="C#" Value="public byte[] Seed;" />
      <MemberSignature Language="ILAsm" Value=".field public unsigned int8[] Seed" />
      <MemberSignature Language="DocId" Value="F:System.Security.Cryptography.ECCurve.Seed" />
      <MemberSignature Language="VB.NET" Value="Public Seed As Byte() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Byte&gt; ^ Seed;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El valor de inicialización para la generación de coeficientes en el algoritmo de generación ANSI X9.62. Solo se aplica a curvas explícitas.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Validate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ECCurve.Validate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Validate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Validate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Valida la integridad de la curva actual. Inicia una excepción de <see cref="T:System.Security.Cryptography.CryptographicException" /> si la estructura no es válida.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Los parámetros de curva no son válidos para el tipo de curva actual.</exception>
      </Docs>
    </Member>
  </Members>
</Type>