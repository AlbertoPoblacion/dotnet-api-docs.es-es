<Type Name="CngProperty" FullName="System.Security.Cryptography.CngProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5619bd8c0b9627382534466bc7a9629d948fa90e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39960309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CngProperty : IEquatable&lt;System.Security.Cryptography.CngProperty&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CngProperty extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Security.Cryptography.CngProperty&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.CngProperty" />
  <TypeSignature Language="VB.NET" Value="Public Structure CngProperty&#xA;Implements IEquatable(Of CngProperty)" />
  <TypeSignature Language="C++ CLI" Value="public value class CngProperty : IEquatable&lt;System::Security::Cryptography::CngProperty&gt;" />
  <TypeSignature Language="F#" Value="type CngProperty = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Security.Cryptography.CngProperty&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Encapsula una propiedad de proveedor o clave de Cryptography Next Generation (CNG).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase encapsula un nombre de propiedad (una cadena), un valor (matriz de bytes), un <xref:System.Security.Cryptography.CngPropertyOptions> marca, las propiedades de descriptor de acceso y comparación y las funciones hash.  
  
 Esta clase se utiliza con el <xref:System.Security.Cryptography.CngKey.SetProperty%2A> y <xref:System.Security.Cryptography.CngKey.GetProperty%2A> métodos.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CngProperty (string name, byte[] value, System.Security.Cryptography.CngPropertyOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, unsigned int8[] value, valuetype System.Security.Cryptography.CngPropertyOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.#ctor(System.String,System.Byte[],System.Security.Cryptography.CngPropertyOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, value As Byte(), options As CngPropertyOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CngProperty(System::String ^ name, cli::array &lt;System::Byte&gt; ^ value, System::Security::Cryptography::CngPropertyOptions options);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.CngProperty : string * byte[] * System.Security.Cryptography.CngPropertyOptions -&gt; System.Security.Cryptography.CngProperty" Usage="new System.Security.Cryptography.CngProperty (name, value, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
        <Parameter Name="options" Type="System.Security.Cryptography.CngPropertyOptions" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de propiedad que se va a inicializar.</param>
        <param name="value">Valor de propiedad que se va a inicializar.</param>
        <param name="options">Combinación bit a bit de los valores de enumeración que especifican cómo se almacena la propiedad.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las propiedades que se almacenan con un conjunto específico de <xref:System.Security.Cryptography.CngPropertyOptions> marcas requieren el mismo conjunto de marcadores cuando se recuperan.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Compara dos objetos <see cref="T:System.Security.Cryptography.CngProperty" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CngProperty> los objetos se consideran iguales si sus nombres, valores y las opciones son equivalentes. Comparación de nombres se realiza de manera distingue mayúsculas de minúsculas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cngProperty.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</param>
        <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> especificado con el objeto  actual.</summary>
        <returns>
          <see langword="true" /> si el parámetro <paramref name="obj" /> es un objeto <see cref="T:System.Security.Cryptography.CngProperty" /> que especifica la misma propiedad que el objeto actual; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CngProperty> los objetos se consideran iguales si sus nombres, valores y las opciones son equivalentes. Comparación de nombres se realiza de manera distingue mayúsculas de minúsculas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Security.Cryptography.CngProperty other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Security.Cryptography.CngProperty other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.Equals(System.Security.Cryptography.CngProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As CngProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Security::Cryptography::CngProperty other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Security.Cryptography.CngProperty -&gt; bool" Usage="cngProperty.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Cryptography.CngProperty" />
      </Parameters>
      <Docs>
        <param name="other">Objeto que se va a comparar con el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</param>
        <summary>Compara el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> especificado con el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</summary>
        <returns>
          <see langword="true" /> si el parámetro <paramref name="other" /> representa la misma propiedad que el objeto actual; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CngProperty> los objetos se consideran iguales si sus nombres, valores y las opciones son equivalentes. Comparación de nombres se realiza de manera distingue mayúsculas de minúsculas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="cngProperty.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Genera un valor hash para el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</summary>
        <returns>Valor hash del objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public byte[] GetValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.GetValue" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetValue();" />
      <MemberSignature Language="F#" Value="member this.GetValue : unit -&gt; byte[]" Usage="cngProperty.GetValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el valor de propiedad que el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual especifica.</summary>
        <returns>Matriz que representa el valor almacenado en la propiedad.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Security.Cryptography.CngProperty.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de propiedad que el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual especifica.</summary>
        <value>Nombre de propiedad que se establece en el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Security.Cryptography.CngProperty left, valuetype System.Security.Cryptography.CngProperty right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.op_Equality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CngProperty, right As CngProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Security::Cryptography::CngProperty left, System::Security::Cryptography::CngProperty right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Security.Cryptography.CngProperty * System.Security.Cryptography.CngProperty -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngProperty" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProperty" />
      </Parameters>
      <Docs>
        <param name="left">Objeto que especifica una propiedad de clave o proveedor CNG (Cryptography Next Generation).</param>
        <param name="right">Segundo objeto, que se va a comparar con el objeto identificado por el parámetro <c>left</c>.</param>
        <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngProperty" /> especifican el mismo nombre de propiedad, valor y opciones.</summary>
        <returns>
          <see langword="true" /> si los dos objetos especifican la misma propiedad; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CngProperty> los objetos se consideran iguales si sus nombres, valores y las opciones son equivalentes. Comparación de nombres se realiza de manera distingue mayúsculas de minúsculas.  
  
 El método equivalente para este operador es <xref:System.Security.Cryptography.CngProperty.Equals%28System.Security.Cryptography.CngProperty%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Security.Cryptography.CngProperty left, System.Security.Cryptography.CngProperty right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Security.Cryptography.CngProperty left, valuetype System.Security.Cryptography.CngProperty right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.CngProperty.op_Inequality(System.Security.Cryptography.CngProperty,System.Security.Cryptography.CngProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CngProperty, right As CngProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Security::Cryptography::CngProperty left, System::Security::Cryptography::CngProperty right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Security.Cryptography.CngProperty * System.Security.Cryptography.CngProperty -&gt; bool" Usage="System.Security.Cryptography.CngProperty.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Security.Cryptography.CngProperty" />
        <Parameter Name="right" Type="System.Security.Cryptography.CngProperty" />
      </Parameters>
      <Docs>
        <param name="left">Objeto que especifica una propiedad de clave o proveedor CNG (Cryptography Next Generation).</param>
        <param name="right">Segundo objeto, que se va a comparar con el objeto identificado por el parámetro <c>left</c>.</param>
        <summary>Determina si dos objetos <see cref="T:System.Security.Cryptography.CngProperty" /> no especifican el mismo nombre de propiedad, valor y opciones.</summary>
        <returns>
          <see langword="true" /> si los dos objetos no especifican la misma propiedad; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CngProperty> los objetos se consideran iguales si sus nombres, valores y las opciones son equivalentes. Comparación de nombres se realiza de manera distingue mayúsculas de minúsculas.  
  
 El método equivalente para este operador es <xref:System.Security.Cryptography.CngProperty.Equals%28System.Security.Cryptography.CngProperty%29?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CngPropertyOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.CngPropertyOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.CngProperty.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As CngPropertyOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CngPropertyOptions Options { System::Security::Cryptography::CngPropertyOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.Security.Cryptography.CngPropertyOptions" Usage="System.Security.Cryptography.CngProperty.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Cng</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CngPropertyOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene las opciones de propiedad que el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual especifica.</summary>
        <value>Objeto que especifica las opciones que se establecen en el objeto <see cref="T:System.Security.Cryptography.CngProperty" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.Cryptography.CngKey> los objetos contienen <xref:System.Security.Cryptography.CngProperty> objetos, que contienen el <xref:System.Security.Cryptography.CngPropertyOptions> almacenada con la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>