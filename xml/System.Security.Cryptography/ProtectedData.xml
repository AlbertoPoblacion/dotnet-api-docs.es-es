<Type Name="ProtectedData" FullName="System.Security.Cryptography.ProtectedData">
  <Metadata><Meta Name="ms.openlocfilehash" Value="38eb090e97e5972009f0065e48a5b55765ceee17" /><Meta Name="ms.sourcegitcommit" Value="3575d47a0ba065e8986f03d99279f478811907b8" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/20/2019" /><Meta Name="ms.locfileid" Value="65922697" /></Metadata><TypeSignature Language="C#" Value="public sealed class ProtectedData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ProtectedData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ProtectedData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ProtectedData" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProtectedData sealed" />
  <TypeSignature Language="F#" Value="type ProtectedData = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
    <AssemblyVersion>4.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona los métodos para cifrar y descifrar los datos. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Esta clase proporciona acceso a la API de protección de datos (DPAPI) disponible en sistemas operativos de Windows. Se trata de un servicio proporcionado por el sistema operativo y no se requieren otras bibliotecas. Proporciona protección mediante las credenciales de usuario o equipo para cifrar o descifrar datos.

> [!IMPORTANT]
> Porque depende de DPAPI, el `ProtectedData` clase es compatible con la plataforma de Windows únicamente. Su uso en .NET Core en plataformas distintas de Windows inicia un <xref:System.PlatformNotSupportedException>.
  
La clase consta de dos contenedores para la DPAPI no administrada, <xref:System.Security.Cryptography.ProtectedData.Protect%2A> y <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A>. Estos dos métodos pueden usarse para cifrar y descifrar los datos como contraseñas, claves y cadenas de conexión.  
  
Si usa estos métodos durante la suplantación, recibirá el error siguiente: "Clave no válida para su uso en el estado especificado." Esto ocurre porque la DPAPI almacena los datos claves en los perfiles de usuario. Si no se carga el perfil, DPAPI no podrá realizar el descifrado. Para evitar este error, carga el perfil del usuario que desee suplantar antes de llamar a cualquiera de estos métodos. Mediante DPAPI con suplantación puede ocasionar complicaciones importantes y requiere las opciones de diseño cuidado.  

## Examples  
 El ejemplo siguiente muestra cómo usar la protección de datos.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Protect">
      <MemberSignature Language="C#" Value="public static byte[] Protect (byte[] userData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Protect(unsigned int8[] userData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Protect (userData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Protect(cli::array &lt;System::Byte&gt; ^ userData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Protect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Protect (userData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="userData">Matriz de bytes que contiene datos que se va a cifrar.</param>
        <param name="optionalEntropy">Una matriz de bytes adicional opcional usada para aumentar la complejidad del cifrado o <see langword="null" /> para que no haya complejidad adicional.</param>
        <param name="scope">Uno de los valores de enumeración que especifica el ámbito de cifrado.</param>
        <summary>Cifra los datos de una matriz de bytes especificada y devuelve una matriz de bytes que contiene los datos cifrados.</summary>
        <returns>Matriz de bytes que representa los datos cifrados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método puede utilizarse para cifrar los datos como contraseñas, claves o cadenas de conexión. El `optionalEntropy` parámetro le permite agregar datos para aumentar la complejidad del cifrado; especifique `null` para que no haya complejidad adicional. Si se proporciona, esta información también se debe usar al descifrar los datos mediante el <xref:System.Security.Cryptography.ProtectedData.Unprotect%2A> método.  
  
> [!NOTE]
>  Si utiliza este método durante la suplantación, recibirá el error siguiente: "Clave no válida para su uso en el estado especificado." Para evitar este error, carga el perfil del usuario que desee suplantar antes de llamar al método.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo usar la protección de datos.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="userData" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Error en el cifrado.</exception>
        <exception cref="T:System.NotSupportedException">El sistema operativo no admite este método.</exception>
        <exception cref="T:System.OutOfMemoryException">El sistema se quedó sin memoria al cifrar los datos.</exception>
        <exception cref="T:System.PlatformNotSupportedException">Solo .NET Core: Las llamadas a la <c>proteger</c> método se admiten en sólo para sistemas operativos Windows.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">con el asociado <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.ProtectData" /> marca para poder proteger los datos.</permission>
      </Docs>
    </Member>
    <Member MemberName="Unprotect">
      <MemberSignature Language="C#" Value="public static byte[] Unprotect (byte[] encryptedData, byte[] optionalEntropy, System.Security.Cryptography.DataProtectionScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] Unprotect(unsigned int8[] encryptedData, unsigned int8[] optionalEntropy, valuetype System.Security.Cryptography.DataProtectionScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ProtectedData.Unprotect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Unprotect (encryptedData As Byte(), optionalEntropy As Byte(), scope As DataProtectionScope) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Byte&gt; ^ Unprotect(cli::array &lt;System::Byte&gt; ^ encryptedData, cli::array &lt;System::Byte&gt; ^ optionalEntropy, System::Security::Cryptography::DataProtectionScope scope);" />
      <MemberSignature Language="F#" Value="static member Unprotect : byte[] * byte[] * System.Security.Cryptography.DataProtectionScope -&gt; byte[]" Usage="System.Security.Cryptography.ProtectedData.Unprotect (encryptedData, optionalEntropy, scope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.ProtectedData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
        <AssemblyVersion>4.0.4.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedData" Type="System.Byte[]" />
        <Parameter Name="optionalEntropy" Type="System.Byte[]" />
        <Parameter Name="scope" Type="System.Security.Cryptography.DataProtectionScope" />
      </Parameters>
      <Docs>
        <param name="encryptedData">Una matriz de bytes que contiene datos cifrados mediante el <see cref="M:System.Security.Cryptography.ProtectedData.Protect(System.Byte[],System.Byte[],System.Security.Cryptography.DataProtectionScope)" /> método.</param>
        <param name="optionalEntropy">Una matriz de bytes adicional opcional que se usó para cifrar los datos, o <see langword="null" /> si no se ha usado la matriz de bytes adicional.</param>
        <param name="scope">Uno de los valores de enumeración que especifica el ámbito de protección de datos que se usó para cifrar los datos.</param>
        <summary>Descifra los datos de una matriz de bytes especificada y devuelve una matriz de bytes que contiene los datos descifrados.</summary>
        <returns>Matriz de bytes que representa los datos descifrados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se puede utilizar para desproteger los datos que se cifran mediante el <xref:System.Security.Cryptography.ProtectedData.Protect%2A> método. Si el `optionalEntropy` parámetro se utiliza durante el cifrado, se debe proporcionar para descifrar los datos.  
  
> [!NOTE]
>  Si utiliza este método durante la suplantación, recibirá el error siguiente: "Clave no válida para su uso en el estado especificado." Para evitar este error, carga el perfil del usuario que desee suplantar antes de llamar al método.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo usar la protección de datos.  
  
 [!code-cpp[Cryptography.DataProtectionSample#1](~/samples/snippets/cpp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CPP/dataprotectionsample.cpp#1)]
 [!code-csharp[Cryptography.DataProtectionSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.DataProtectionSample/CS/dataprotectionsample.cs#1)]
 [!code-vb[Cryptography.DataProtectionSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.DataProtectionSample/vb/dataprotectionsample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="encryptedData" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">Error en el descifrado.</exception>
        <exception cref="T:System.NotSupportedException">El sistema operativo no admite este método.</exception>
        <exception cref="T:System.OutOfMemoryException">Memoria insuficiente</exception>
        <exception cref="T:System.PlatformNotSupportedException">Solo .NET Core: Las llamadas a la <c>Unprotect</c> método se admiten en sólo para sistemas operativos Windows.</exception>
        <permission cref="T:System.Security.Permissions.DataProtectionPermission">con el asociado <see cref="P:System.Security.Permissions.DataProtectionPermissionAttribute.UnprotectData" /> marca para poder desproteger los datos.</permission>
      </Docs>
    </Member>
  </Members>
</Type>