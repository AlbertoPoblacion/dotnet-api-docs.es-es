<Type Name="DSACryptoServiceProvider" FullName="System.Security.Cryptography.DSACryptoServiceProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="33512625a99610ed0fa15f42e883b445c06c47e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DSACryptoServiceProvider : System.Security.Cryptography.DSA, System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DSACryptoServiceProvider extends System.Security.Cryptography.DSA implements class System.Security.Cryptography.ICspAsymmetricAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.DSACryptoServiceProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DSACryptoServiceProvider&#xA;Inherits DSA&#xA;Implements ICspAsymmetricAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class DSACryptoServiceProvider sealed : System::Security::Cryptography::DSA, System::Security::Cryptography::ICspAsymmetricAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DSA</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICspAsymmetricAlgorithm</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a9f60-101">Define un objeto contenedor para obtener acceso a la implementación del proveedor de servicios criptográficos (CSP) del algoritmo <see cref="T:System.Security.Cryptography.DSA" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9f60-101">Defines a wrapper object to access the cryptographic service provider (CSP) implementation of the <see cref="T:System.Security.Cryptography.DSA" /> algorithm.</span>
      </span>
      <span data-ttu-id="a9f60-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a9f60-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-103">Puede usar el <xref:System.Security.Cryptography.DSACryptoServiceProvider> clase para crear firmas digitales y proteger la integridad de los datos.</span><span class="sxs-lookup"><span data-stu-id="a9f60-103">You can use the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class to create digital signatures and protect the integrity of your data.</span></span>  
  
 <span data-ttu-id="a9f60-104">Para usar un sistema de clave pública para firmar digitalmente un mensaje, el remitente aplica primero una función hash al mensaje para crear una síntesis del mensaje.</span><span class="sxs-lookup"><span data-stu-id="a9f60-104">To use a public-key system to digitally sign a message, the sender first applies a hash function to the message to create a message digest.</span></span> <span data-ttu-id="a9f60-105">A continuación, el remitente cifra la síntesis del mensaje con la clave privada del remitente crear firma personal del remitente.</span><span class="sxs-lookup"><span data-stu-id="a9f60-105">The sender then encrypts the message digest with the sender's private key to create the sender's personal signature.</span></span> <span data-ttu-id="a9f60-106">Al recibir el mensaje y la firma, el destinatario descifra la firma mediante la clave pública del remitente para recuperar la síntesis del mensaje y el mensaje con el mismo algoritmo hash que el remitente ha utilizado.</span><span class="sxs-lookup"><span data-stu-id="a9f60-106">Upon receiving the message and signature, the receiver decrypts the signature using the sender's public key to recover the message digest and hashes the message using the same hash algorithm that the sender used.</span></span> <span data-ttu-id="a9f60-107">Si la síntesis del mensaje calculada por el receptor coincide exactamente con la síntesis del mensaje recibido del remitente, el receptor puede estar seguro de que el mensaje no se alteró mientras están en tránsito.</span><span class="sxs-lookup"><span data-stu-id="a9f60-107">If the message digest that the receiver computes exactly matches the message digest received from the sender, the receiver can be sure that the message was not altered while in transit.</span></span> <span data-ttu-id="a9f60-108">Tenga en cuenta que se puede comprobar una firma cualquiera, porque la clave pública del remitente es de dominio público.</span><span class="sxs-lookup"><span data-stu-id="a9f60-108">Note that a signature can be verified by anyone, because the sender's public key is common knowledge.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a9f60-109">Los algoritmos asimétricos más recientes están disponibles.</span><span class="sxs-lookup"><span data-stu-id="a9f60-109">Newer asymmetric algorithms are available.</span></span> <span data-ttu-id="a9f60-110">Considere el uso de la <xref:System.Security.Cryptography.RSACryptoServiceProvider> clase en lugar de la <xref:System.Security.Cryptography.DSACryptoServiceProvider> clase.</span><span class="sxs-lookup"><span data-stu-id="a9f60-110">Consider using the <xref:System.Security.Cryptography.RSACryptoServiceProvider> class instead of the <xref:System.Security.Cryptography.DSACryptoServiceProvider> class.</span></span> <span data-ttu-id="a9f60-111">Use <xref:System.Security.Cryptography.DSACryptoServiceProvider> únicamente por compatibilidad con aplicaciones heredadas y los datos.</span><span class="sxs-lookup"><span data-stu-id="a9f60-111">Use <xref:System.Security.Cryptography.DSACryptoServiceProvider> only for compatibility with legacy applications and data.</span></span>  
  
 <span data-ttu-id="a9f60-112">Este algoritmo admite longitudes de clave de 512 bits a 1024 bits en incrementos de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="a9f60-112">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-113">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-114">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-114">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9f60-115">Para poder llamar a código no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-115">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="a9f60-116">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-116">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="a9f60-117">Tamaño de la clave para el algoritmo asimétrico en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-117">The size of the key for the asymmetric algorithm in bits.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-118">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> con el tamaño de clave especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-118">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9f60-119">Para poder llamar a código no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-119">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="a9f60-120">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-120">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="a9f60-121">Parámetros del CSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-121">The parameters for the CSP.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-122">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> con los parámetros especificados del proveedor de servicios criptográficos (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-122">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified parameters for the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9f60-123">Para poder llamar a código no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-123">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="a9f60-124">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DSACryptoServiceProvider (int dwKeySize, System.Security.Cryptography.CspParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 dwKeySize, class System.Security.Cryptography.CspParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.#ctor(System.Int32,System.Security.Cryptography.CspParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dwKeySize As Integer, parameters As CspParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DSACryptoServiceProvider(int dwKeySize, System::Security::Cryptography::CspParameters ^ parameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dwKeySize" Type="System.Int32" />
        <Parameter Name="parameters" Type="System.Security.Cryptography.CspParameters" />
      </Parameters>
      <Docs>
        <param name="dwKeySize">
          <span data-ttu-id="a9f60-125">Tamaño de la clave para el algoritmo criptográfico en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-125">The size of the key for the cryptographic algorithm in bits.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="a9f60-126">Parámetros del CSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-126">The parameters for the CSP.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-127">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> con el tamaño de la clave y los parámetros especificados del proveedor de servicios criptográficos (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-127">Initializes a new instance of the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> class with the specified key size and parameters for the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="a9f60-128">No se puede adquirir el CSP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-128">The CSP cannot be acquired.</span>
          </span>
          <span data-ttu-id="a9f60-129">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-129">-or-</span>
          </span>
          <span data-ttu-id="a9f60-130">La clave no se puede crear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-130">The key cannot be created.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a9f60-131">
            <paramref name="dwKeySize" /> está fuera del intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-131">
              <paramref name="dwKeySize" /> is out of range.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="a9f60-132">Para poder llamar a código no administrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-132">for the ability to call unmanaged code.</span>
          </span>
          <span data-ttu-id="a9f60-133">Enumeración asociada: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-133">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CreateSignature">
      <MemberSignature Language="C#" Value="public override byte[] CreateSignature (byte[] rgbHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] CreateSignature(unsigned int8[] rgbHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.CreateSignature(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateSignature (rgbHash As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ CreateSignature(cli::array &lt;System::Byte&gt; ^ rgbHash);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="a9f60-134">Datos que van a firmar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-134">The data to be signed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-135">Crea la firma <see cref="T:System.Security.Cryptography.DSA" /> de los datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-135">Creates the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-136">La firma digital de los datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-136">The digital signature for the specified data.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CspKeyContainerInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CspKeyContainerInfo CspKeyContainerInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CspKeyContainerInfo As CspKeyContainerInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CspKeyContainerInfo ^ CspKeyContainerInfo { System::Security::Cryptography::CspKeyContainerInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICspAsymmetricAlgorithm.CspKeyContainerInfo</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CspKeyContainerInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-137">Obtiene un objeto <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> que describe la información adicional sobre un par de claves criptográficas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-137">Gets a <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f60-138">Objeto <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> que describe información adicional sobre un par de claves criptográficas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-138">A <see cref="T:System.Security.Cryptography.CspKeyContainerInfo" /> object that describes additional information about a cryptographic key pair.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-139">Use la <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propiedad que se va a recuperar información adicional sobre un par de claves criptográficas.</span><span class="sxs-lookup"><span data-stu-id="a9f60-139">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property to retrieve additional information about a cryptographic key pair.</span></span>  <span data-ttu-id="a9f60-140">El valor devuelto <xref:System.Security.Cryptography.CspKeyContainerInfo> objeto describe si la clave es exportable y especifica el nombre de contenedor de claves, información sobre el proveedor y otra información.</span><span class="sxs-lookup"><span data-stu-id="a9f60-140">The returned <xref:System.Security.Cryptography.CspKeyContainerInfo> object describes whether the key is exportable, and specifies the key container name, information about the provider, and other information.</span></span>  
  
 <span data-ttu-id="a9f60-141">En casos donde se genera una clave aleatoria, no se creará un contenedor de claves hasta que llame a un método que utiliza la clave.</span><span class="sxs-lookup"><span data-stu-id="a9f60-141">In cases where a random key is generated, a key container will not be created until you call a method that uses the key.</span></span>  <span data-ttu-id="a9f60-142">Algunas propiedades de la <xref:System.Security.Cryptography.CspKeyContainerInfo> objeto devuelto por la <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propiedad producirá una <xref:System.Security.Cryptography.CryptographicException> si no se ha creado un contenedor de claves.</span><span class="sxs-lookup"><span data-stu-id="a9f60-142">Some properties of the <xref:System.Security.Cryptography.CspKeyContainerInfo> object returned by the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property will throw a <xref:System.Security.Cryptography.CryptographicException> if a key container has not been created.</span></span>  <span data-ttu-id="a9f60-143">Para asegurarse de que se ha creado un contenedor de claves, llamar a un método como <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>, y así sucesivamente, antes de llamar a la <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a9f60-143">To make sure that a key container has been created, call a method such as <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A>, <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A>, and so on, before you call the <xref:System.Security.Cryptography.DSACryptoServiceProvider.CspKeyContainerInfo%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportCspBlob">
      <MemberSignature Language="C#" Value="public byte[] ExportCspBlob (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ExportCspBlob(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExportCspBlob (includePrivateParameters As Boolean) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ ExportCspBlob(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ExportCspBlob(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="a9f60-144">
            <see langword="true" /> para incluir la clave privada; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-144">
              <see langword="true" /> to include the private key; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-145">Exporta un objeto binario que contiene la información de clave asociada a un objeto <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-145">Exports a blob containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-146">Exporta una matriz de bytes que contiene la información de clave asociada a un objeto <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-146">A byte array containing the key information associated with a <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-147">El <xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> método devuelve un blob que contiene información de la clave que es compatible con la API criptográfica de Microsoft (CAPI) no administrada.</span><span class="sxs-lookup"><span data-stu-id="a9f60-147">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ExportCspBlob%2A> method returns a blob containing key information that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="a9f60-148">Para obtener permiso tener acceso a un contenedor de claves al exportar una clave privada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-148">for permission to access a key container when exporting a private key.</span>
          </span>
          <span data-ttu-id="a9f60-149">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-149">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="a9f60-150">Enumeración asociada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-150">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ExportParameters">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.DSAParameters ExportParameters (bool includePrivateParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Security.Cryptography.DSAParameters ExportParameters(bool includePrivateParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ExportParameters(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ExportParameters (includePrivateParameters As Boolean) As DSAParameters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Security::Cryptography::DSAParameters ExportParameters(bool includePrivateParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.DSAParameters</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includePrivateParameters" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="includePrivateParameters">
          <span data-ttu-id="a9f60-151">Es <see langword="true" /> si se van a incluir parámetros privados; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-151">
              <see langword="true" /> to include private parameters; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-152">Exporta los <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-152">Exports the <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-153">Parámetros de <see cref="T:System.Security.Cryptography.DSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-153">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="a9f60-154">La clave no se puede exportar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-154">The key cannot be exported.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="a9f60-155">Para obtener permiso exportar una clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-155">for permission to export a key.</span>
          </span>
          <span data-ttu-id="a9f60-156">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-156">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="a9f60-157">Enumeración asociada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-157">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Export" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DSACryptoServiceProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DSACryptoServiceProvider ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (System.IO.Stream data, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(class System.IO.Stream data, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.IO.Stream,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Stream, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(System::IO::Stream ^ data, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.IO.Stream" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashData">
      <MemberSignature Language="C#" Value="protected override byte[] HashData (byte[] data, int offset, int count, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashData(unsigned int8[] data, int32 offset, int32 count, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.HashData(System.Byte[],System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashData (data As Byte(), offset As Integer, count As Integer, hashAlgorithm As HashAlgorithmName) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashData(cli::array &lt;System::Byte&gt; ^ data, int offset, int count, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="data">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="count">To be added.</param>
        <param name="hashAlgorithm">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportCspBlob">
      <MemberSignature Language="C#" Value="public void ImportCspBlob (byte[] keyBlob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportCspBlob(unsigned int8[] keyBlob) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportCspBlob (keyBlob As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ImportCspBlob(cli::array &lt;System::Byte&gt; ^ keyBlob);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICspAsymmetricAlgorithm.ImportCspBlob(System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyBlob" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyBlob">
          <span data-ttu-id="a9f60-158">Una matriz de bytes que representa un objeto binario de clave DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-158">A byte array that represents a DSA key blob.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-159">Importa un objeto binario que representa la información de clave DSA.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-159">Imports a blob that represents DSA key information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-160">El <xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> método inicializa los datos de clave de un <xref:System.Security.Cryptography.DSACryptoServiceProvider> objeto mediante un blob que es compatible con la API criptográfica de Microsoft (CAPI) no administrada.</span><span class="sxs-lookup"><span data-stu-id="a9f60-160">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.ImportCspBlob%2A> method initializes the key data of a <xref:System.Security.Cryptography.DSACryptoServiceProvider> object using a blob that is compatible with the unmanaged Microsoft Cryptographic API (CAPI).</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="a9f60-161">Para obtener permiso tener acceso a un contenedor de claves al importar una clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-161">for permission to access a key container when importing a key.</span>
          </span>
          <span data-ttu-id="a9f60-162">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-162">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="a9f60-163">Enumeración asociada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-163">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ImportParameters">
      <MemberSignature Language="C#" Value="public override void ImportParameters (System.Security.Cryptography.DSAParameters parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ImportParameters(valuetype System.Security.Cryptography.DSAParameters parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.ImportParameters(System.Security.Cryptography.DSAParameters)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ImportParameters (parameters As DSAParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ImportParameters(System::Security::Cryptography::DSAParameters parameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
      </Parameters>
      <Docs>
        <param name="parameters">
          <span data-ttu-id="a9f60-164">Parámetros de <see cref="T:System.Security.Cryptography.DSA" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-164">The parameters for <see cref="T:System.Security.Cryptography.DSA" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-165">Importa el elemento <see cref="T:System.Security.Cryptography.DSAParameters" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-165">Imports the specified <see cref="T:System.Security.Cryptography.DSAParameters" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="a9f60-166">No se puede adquirir el proveedor de servicios criptográficos (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-166">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="a9f60-167">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-167">-or-</span>
          </span>
          <span data-ttu-id="a9f60-168">Faltan campos del parámetro <paramref name="parameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-168">The <paramref name="parameters" /> parameter has missing fields.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="a9f60-169">Para obtener permiso importar una clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-169">for permission to import a key.</span>
          </span>
          <span data-ttu-id="a9f60-170">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-170">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="a9f60-171">Enumeración asociada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-171">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Import" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="KeyExchangeAlgorithm">
      <MemberSignature Language="C#" Value="public override string KeyExchangeAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string KeyExchangeAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeyExchangeAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeyExchangeAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ KeyExchangeAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-172">Obtiene el nombre del algoritmo de intercambio de claves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-172">Gets the name of the key exchange algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f60-173">Nombre del algoritmo de intercambio de claves.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-173">The name of the key exchange algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeySize">
      <MemberSignature Language="C#" Value="public override int KeySize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 KeySize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.KeySize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property KeySize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int KeySize { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-174">Obtiene el tamaño de la clave que utiliza el algoritmo asimétrico en bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-174">Gets the size of the key used by the asymmetric algorithm in bits.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f60-175">Tamaño de la clave que utiliza el algoritmo asimétrico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-175">The size of the key used by the asymmetric algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-176">Este algoritmo admite longitudes de clave de 512 bits a 1024 bits en incrementos de 64 bits.</span><span class="sxs-lookup"><span data-stu-id="a9f60-176">This algorithm supports key lengths from 512 bits to 1024 bits in increments of 64 bits.</span></span>  
  
 <span data-ttu-id="a9f60-177">El <xref:System.Security.Cryptography.DSACryptoServiceProvider> clase no le permiten cambiar tamaños de clave mediante la <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a9f60-177">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class does not allow you to change key sizes using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.KeySize%2A> property.</span></span>  <span data-ttu-id="a9f60-178">Cualquier valor que ha escrito para esta propiedad se producirá un error al actualizar la propiedad sin errores.</span><span class="sxs-lookup"><span data-stu-id="a9f60-178">Any value written to this property will fail to update the property without error.</span></span>  <span data-ttu-id="a9f60-179">Para cambiar el tamaño de clave, use una de las sobrecargas del constructor.</span><span class="sxs-lookup"><span data-stu-id="a9f60-179">To change the key size, use one of the constructor overloads.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegalKeySizes">
      <MemberSignature Language="C#" Value="public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.KeySizes[] LegalKeySizes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.LegalKeySizes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LegalKeySizes As KeySizes()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ LegalKeySizes { cli::array &lt;System::Security::Cryptography::KeySizes ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.KeySizes[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistKeyInCsp">
      <MemberSignature Language="C#" Value="public bool PersistKeyInCsp { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistKeyInCsp" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PersistKeyInCsp" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistKeyInCsp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistKeyInCsp { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-180">Obtiene o establece un valor que indica si la clave debe conservarse en el proveedor de servicios criptográficos (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-180">Gets or sets a value indicating whether the key should be persisted in the cryptographic service provider (CSP).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f60-181">
            <see langword="true" /> si la clave debe conservarse en el CSP; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-181">
              <see langword="true" /> if the key should be persisted in the CSP; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-182">Utilice esta propiedad si desea conservar una clave en un contenedor de claves.</span><span class="sxs-lookup"><span data-stu-id="a9f60-182">Use this property when you want to persist a key in a key container.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntry">
          <span data-ttu-id="a9f60-183">Para obtener permiso Eliminar una clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-183">for permission to delete a key.</span>
          </span>
          <span data-ttu-id="a9f60-184">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-184">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="a9f60-185">Enumeración asociada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-185">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Delete" /></span>
          </span>
          <span data-ttu-id="a9f60-186">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-186">-or-</span>
          </span>
          <span data-ttu-id="a9f60-187">Para obtener permiso Crear una clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-187">for permission to create a key.</span>
          </span>
          <span data-ttu-id="a9f60-188">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-188">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="a9f60-189">Enumeración asociada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-189">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Create" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="PublicOnly">
      <MemberSignature Language="C#" Value="public bool PublicOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PublicOnly" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PublicOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-190">Obtiene un valor que indica si el objeto <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> contiene solo una clave pública.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-190">Gets a value that indicates whether the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f60-191">
            <see langword="true" />, si el objeto <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> contiene solo una clave pública; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-191">
              <see langword="true" /> if the <see cref="T:System.Security.Cryptography.DSACryptoServiceProvider" /> object contains only a public key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-192">La <xref:System.Security.Cryptography.DSACryptoServiceProvider> clase puede ser clave inicializada con una clave pública sola o con públicas y privada.</span><span class="sxs-lookup"><span data-stu-id="a9f60-192">The <xref:System.Security.Cryptography.DSACryptoServiceProvider> class can be initialized either with a public key only or with both a public and private key.</span></span>  <span data-ttu-id="a9f60-193">Use la <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> propiedad para determinar si la instancia actual contiene sólo una clave pública o una clave pública y privada.</span><span class="sxs-lookup"><span data-stu-id="a9f60-193">Use the <xref:System.Security.Cryptography.DSACryptoServiceProvider.PublicOnly%2A> property to determine whether the current instance contains only a public key or both a public and private key.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public override string SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SignatureAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SignatureAlgorithm { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-194">Obtiene el nombre del algoritmo de firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-194">Gets the name of the signature algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f60-195">Nombre del algoritmo de firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-195">The name of the signature algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-196">Calcula el valor hash de los datos especificados y lo firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-196">Computes the hash value of the specified data and signs it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a9f60-197">Datos de entrada para los que se va a calcular el hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-197">The input data for which to compute the hash.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-198">Calcula el valor hash de la matriz de bytes especificada y firma el valor hash resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-198">Computes the hash value of the specified byte array and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-199">Firma <see cref="T:System.Security.Cryptography.DSA" /> de los datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-199">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-200">Este método crea una firma digital que se comprueba mediante la <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9f60-200">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="a9f60-201"><xref:System.Security.Cryptography.DSA> usa el <xref:System.Security.Cryptography.SHA1> algoritmo hash.</span><span class="sxs-lookup"><span data-stu-id="a9f60-201"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (System.IO.Stream inputStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(class System.IO.Stream inputStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (inputStream As Stream) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(System::IO::Stream ^ inputStream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="inputStream">
          <span data-ttu-id="a9f60-202">Datos de entrada para los que se va a calcular el hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-202">The input data for which to compute the hash.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-203">Calcula el valor hash del flujo de entrada especificado y firma el valor hash resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-203">Computes the hash value of the specified input stream and signs the resulting hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-204">Firma <see cref="T:System.Security.Cryptography.DSA" /> de los datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-204">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-205"><xref:System.Security.Cryptography.DSA> usa el <xref:System.Security.Cryptography.SHA1> algoritmo hash.</span><span class="sxs-lookup"><span data-stu-id="a9f60-205"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignData">
      <MemberSignature Language="C#" Value="public byte[] SignData (byte[] buffer, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignData(unsigned int8[] buffer, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignData(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignData (buffer As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignData(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="a9f60-206">Los datos de entrada que se van a firmar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-206">The input data to sign.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="a9f60-207">Desplazamiento en la matriz a partir del cual se van a empezar a usar los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-207">The offset into the array from which to begin using data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="a9f60-208">Número de bytes de la matriz que se van a usar como datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-208">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-209">Firma una matriz de bytes del punto inicial especificado al punto final especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-209">Signs a byte array from the specified start point to the specified end point.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-210">Firma <see cref="T:System.Security.Cryptography.DSA" /> de los datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-210">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-211">Este método crea una firma digital que se comprueba mediante la <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9f60-211">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData%2A> method.</span></span>  
  
 <span data-ttu-id="a9f60-212"><xref:System.Security.Cryptography.DSA> usa el <xref:System.Security.Cryptography.SHA1> algoritmo hash.</span><span class="sxs-lookup"><span data-stu-id="a9f60-212"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignHash">
      <MemberSignature Language="C#" Value="public byte[] SignHash (byte[] rgbHash, string str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] SignHash(unsigned int8[] rgbHash, string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.SignHash(System.Byte[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignHash (rgbHash As Byte(), str As String) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ SignHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="a9f60-213">Valor hash de los datos que se van a firmar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-213">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="a9f60-214">Nombre del algoritmo hash usado para crear el valor hash de los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-214">The name of the hash algorithm used to create the hash value of the data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-215">Calcula la firma del valor hash especificado cifrándolo con la clave privada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-215">Computes the signature for the specified hash value by encrypting it with the private key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-216">Firma <see cref="T:System.Security.Cryptography.DSA" /> del valor hash especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-216">The <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified hash value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-217">Este método crea una firma digital que se comprueba mediante la <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a9f60-217">This method creates a digital signature that is verified using the <xref:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash%2A> method.</span></span>  
  
 <span data-ttu-id="a9f60-218"><xref:System.Security.Cryptography.DSA> usa el <xref:System.Security.Cryptography.SHA1> algoritmo hash.</span><span class="sxs-lookup"><span data-stu-id="a9f60-218"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9f60-219">El parámetro <paramref name="rgbHash" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-219">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="a9f60-220">No se puede adquirir el proveedor de servicios criptográficos (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-220">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="a9f60-221">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-221">-or-</span>
          </span>
          <span data-ttu-id="a9f60-222">No hay ninguna clave privada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-222">There is no private key.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
          <span data-ttu-id="a9f60-223">Para obtener permiso firmar un archivo mediante la clave.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-223">for permission to sign a file using the key.</span>
          </span>
          <span data-ttu-id="a9f60-224">Acción de seguridad: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-224">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span>
          </span>
          <span data-ttu-id="a9f60-225">Enumeración asociada: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-225">Associated enumeration: <see cref="F:System.Security.Permissions.KeyContainerPermissionFlags.Sign" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="UseMachineKeyStore">
      <MemberSignature Language="C#" Value="public static bool UseMachineKeyStore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool UseMachineKeyStore" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property UseMachineKeyStore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool UseMachineKeyStore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-226">Obtiene o establece un valor que indica si la clave debe conservarse en el almacén de claves del equipo en lugar del almacén de perfiles del usuario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-226">Gets or sets a value indicating whether the key should be persisted in the computer's key store instead of the user profile store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="a9f60-227">
            <see langword="true" /> si la clave debe conservarse en el almacén de claves del equipo; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-227">
              <see langword="true" /> if the key should be persisted in the computer key store; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-228">Al establecer esta propiedad en true equivale a pasar el <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> indicador en un <xref:System.Security.Cryptography.CspParameters> objeto.</span><span class="sxs-lookup"><span data-stu-id="a9f60-228">Setting this property to true is equivalent to passing the <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> flag to a <xref:System.Security.Cryptography.CspParameters> object.</span></span> <span data-ttu-id="a9f60-229">El <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> propiedad se aplica a todo el código en el dominio de aplicación actual, mientras que la <xref:System.Security.Cryptography.CspParameters> objeto solo se aplica a las clases que hacer referencia explícitamente a él.</span><span class="sxs-lookup"><span data-stu-id="a9f60-229">The <xref:System.Security.Cryptography.DSACryptoServiceProvider.UseMachineKeyStore%2A> property applies to all code in the current application domain, while the <xref:System.Security.Cryptography.CspParameters> object applies only to classes that explicitly reference it.</span></span> <span data-ttu-id="a9f60-230">Estas opciones son útiles al suplantar o ejecutar bajo una cuenta cuyo perfil de usuario no está cargado.</span><span class="sxs-lookup"><span data-stu-id="a9f60-230">These settings are useful when impersonating or running under an account whose user profile is not loaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="VerifyData">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a9f60-231">Comprueba que una firma digital sea válida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-231">Verifies that a digital signature is valid.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="VerifyData">
      <MemberSignature Language="C#" Value="public bool VerifyData (byte[] rgbData, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyData(unsigned int8[] rgbData, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyData(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyData (rgbData As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyData(cli::array &lt;System::Byte&gt; ^ rgbData, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbData" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbData">
          <span data-ttu-id="a9f60-232">Los datos que se firmaron.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-232">The data that was signed.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="a9f60-233">Datos de la firma que se van a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-233">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-234">Comprueba los datos de la firma especificados comparándolos con la firma calculada para los datos establecidos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-234">Verifies the specified signature data by comparing it to the signature computed for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-235">Es <see langword="true" /> si se comprueba que la firma es válida; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-235">
              <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-236">Este método comprueba el <xref:System.Security.Cryptography.DSA> firma digital generada por <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9f60-236">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignData%2A>.</span></span>  
  
 <span data-ttu-id="a9f60-237"><xref:System.Security.Cryptography.DSA> usa el <xref:System.Security.Cryptography.SHA1> algoritmo hash.</span><span class="sxs-lookup"><span data-stu-id="a9f60-237"><xref:System.Security.Cryptography.DSA> uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyHash">
      <MemberSignature Language="C#" Value="public bool VerifyHash (byte[] rgbHash, string str, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool VerifyHash(unsigned int8[] rgbHash, string str, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifyHash(System.Byte[],System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function VerifyHash (rgbHash As Byte(), str As String, rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool VerifyHash(cli::array &lt;System::Byte&gt; ^ rgbHash, System::String ^ str, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="a9f60-238">Valor hash de los datos que se van a firmar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-238">The hash value of the data to be signed.</span>
          </span>
        </param>
        <param name="str">
          <span data-ttu-id="a9f60-239">Nombre del algoritmo hash usado para crear el valor hash de los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-239">The name of the hash algorithm used to create the hash value of the data.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="a9f60-240">Datos de la firma que se van a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-240">The signature data to be verified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-241">Comprueba los datos de la firma especificados comparándolos con la firma calculada para el valor hash establecido.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-241">Verifies the specified signature data by comparing it to the signature computed for the specified hash value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-242">Es <see langword="true" /> si se comprueba que la firma es válida; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-242">
              <see langword="true" /> if the signature verifies as valid; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9f60-243">Este método comprueba el <xref:System.Security.Cryptography.DSA> firma digital generada por <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span><span class="sxs-lookup"><span data-stu-id="a9f60-243">This method verifies the <xref:System.Security.Cryptography.DSA> digital signature produced by <xref:System.Security.Cryptography.DSACryptoServiceProvider.SignHash%2A>.</span></span>  
  
 <span data-ttu-id="a9f60-244">Si el `str` parámetro es `null`, se utiliza el algoritmo de hash predeterminado (SHA1).</span><span class="sxs-lookup"><span data-stu-id="a9f60-244">If the `str` parameter is `null`, the default hash algorithm (SHA1) is used.</span></span> <span data-ttu-id="a9f60-245">Los algoritmos hash válidos es <xref:System.Security.Cryptography.SHA1>.</span><span class="sxs-lookup"><span data-stu-id="a9f60-245">The valid hash algorithms is <xref:System.Security.Cryptography.SHA1>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a9f60-246">El parámetro <paramref name="rgbHash" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-246">The <paramref name="rgbHash" /> parameter is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="a9f60-247">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-247">-or-</span>
          </span>
          <span data-ttu-id="a9f60-248">El parámetro <paramref name="rgbSignature" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-248">The <paramref name="rgbSignature" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="a9f60-249">No se puede adquirir el proveedor de servicios criptográficos (CSP).</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-249">The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="a9f60-250">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-250">-or-</span>
          </span>
          <span data-ttu-id="a9f60-251">No se puede comprobar la firma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-251">The signature cannot be verified.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="VerifySignature">
      <MemberSignature Language="C#" Value="public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool VerifySignature(unsigned int8[] rgbHash, unsigned int8[] rgbSignature) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.DSACryptoServiceProvider.VerifySignature(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function VerifySignature (rgbHash As Byte(), rgbSignature As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool VerifySignature(cli::array &lt;System::Byte&gt; ^ rgbHash, cli::array &lt;System::Byte&gt; ^ rgbSignature);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Csp</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgbHash" Type="System.Byte[]" />
        <Parameter Name="rgbSignature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rgbHash">
          <span data-ttu-id="a9f60-252">Datos firmados con <c>rgbSignature</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-252">The data signed with <c>rgbSignature</c>.</span>
          </span>
        </param>
        <param name="rgbSignature">
          <span data-ttu-id="a9f60-253">Firma que se va a comprobar para <c>rgbData</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-253">The signature to be verified for <c>rgbData</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a9f60-254">Comprueba la firma <see cref="T:System.Security.Cryptography.DSA" /> de los datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-254">Verifies the <see cref="T:System.Security.Cryptography.DSA" /> signature for the specified data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a9f60-255">
            <see langword="true" />, si <paramref name="rgbSignature" /> coincide con la firma calculada utilizando el algoritmo hash y la clave especificados en <paramref name="rgbHash" />; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a9f60-255">
              <see langword="true" /> if <paramref name="rgbSignature" /> matches the signature computed using the specified hash algorithm and key on <paramref name="rgbHash" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>