<Type Name="StrongNameSignatureInformation" FullName="System.Security.Cryptography.StrongNameSignatureInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0fcb6dcf0b45efb380684030d164bb8b149f15c0" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64109895" /></Metadata><TypeSignature Language="C#" Value="public sealed class StrongNameSignatureInformation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StrongNameSignatureInformation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.StrongNameSignatureInformation" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StrongNameSignatureInformation" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrongNameSignatureInformation sealed" />
  <TypeSignature Language="F#" Value="type StrongNameSignatureInformation = class" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contiene información de la firma de nombre seguro para un manifiesto.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public string HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : string" Usage="System.Security.Cryptography.StrongNameSignatureInformation.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el algoritmo hash que se utiliza para calcular la firma de nombre seguro.</summary>
        <value>Nombre del algoritmo hash que se utiliza para calcular la firma de nombre seguro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HResult">
      <MemberSignature Language="C#" Value="public int HResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HResult" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.HResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HResult As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HResult { int get(); };" />
      <MemberSignature Language="F#" Value="member this.HResult : int" Usage="System.Security.Cryptography.StrongNameSignatureInformation.HResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor HRESULT del código de resultado.</summary>
        <value>Valor HRESULT del código de resultado.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Security.Cryptography.StrongNameSignatureInformation.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si la firma de nombre seguro es válida.</summary>
        <value><see langword="true" /> si la firma de nombre seguro es válida; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PublicKey">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.AsymmetricAlgorithm PublicKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.AsymmetricAlgorithm PublicKey" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.PublicKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PublicKey As AsymmetricAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::AsymmetricAlgorithm ^ PublicKey { System::Security::Cryptography::AsymmetricAlgorithm ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PublicKey : System.Security.Cryptography.AsymmetricAlgorithm" Usage="System.Security.Cryptography.StrongNameSignatureInformation.PublicKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.AsymmetricAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la clave pública que se utiliza para comprobar la firma.</summary>
        <value>Clave pública que se utiliza para comprobar la firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El único caso devuelve `null` es cuando <xref:System.Security.Cryptography.StrongNameSignatureInformation.IsValid%2A> es `false`.  Si la firma es válida, siempre habrá una clave.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerificationResult">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.SignatureVerificationResult VerificationResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.SignatureVerificationResult VerificationResult" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerificationResult As SignatureVerificationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::SignatureVerificationResult VerificationResult { System::Security::Cryptography::SignatureVerificationResult get(); };" />
      <MemberSignature Language="F#" Value="member this.VerificationResult : System.Security.Cryptography.SignatureVerificationResult" Usage="System.Security.Cryptography.StrongNameSignatureInformation.VerificationResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.SignatureVerificationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el resultado de la comprobación de la firma de nombre seguro.</summary>
        <value>Códigos de resultado para la comprobación de firmas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad y el <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> propiedad son dos maneras de determinar si se produjo un error durante la comprobación. Esta propiedad enumera los errores conocidos que pueden producirse. El <xref:System.Security.Cryptography.StrongNameSignatureInformation.HResult%2A> propiedad se puede comprobar si el error no está cubierto por la <xref:System.Security.Cryptography.SignatureVerificationResult> enumeración.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>