<Type Name="HMAC" FullName="System.Security.Cryptography.HMAC">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="97cf10d8b4cac473bf3b80f76800488975796d96" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36529825" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HMAC : System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HMAC extends System.Security.Cryptography.KeyedHashAlgorithm" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.HMAC" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HMAC&#xA;Inherits KeyedHashAlgorithm" />
  <TypeSignature Language="C++ CLI" Value="public ref class HMAC abstract : System::Security::Cryptography::KeyedHashAlgorithm" />
  <TypeSignature Language="F#" Value="type HMAC = class&#xA;    inherit KeyedHashAlgorithm" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.KeyedHashAlgorithm</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4db48-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4db48-101">Represents the abstract class from which all implementations of Hash-based Message Authentication Code (HMAC) must derive.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-102">Un código de autenticación de mensajes basado en Hash (HMAC) puede utilizarse para determinar si se ha manipulado un mensaje enviado a través de un canal no seguro, siempre que el remitente y el receptor compartan una clave secreta.</span><span class="sxs-lookup"><span data-stu-id="4db48-102">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="4db48-103">El remitente calcula el valor hash para los datos originales y envía los datos originales y el código HMAC como un solo mensaje.</span><span class="sxs-lookup"><span data-stu-id="4db48-103">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="4db48-104">El receptor vuelve a calcular el valor hash en el mensaje recibido y comprueba que el valor hash calculado coincide con el valor transmitido de hash.</span><span class="sxs-lookup"><span data-stu-id="4db48-104">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="4db48-105">HMAC se puede utilizar con cualquier función hash criptográfica iterativa, como MD5 o SHA-1, en combinación con una clave secreta compartida.</span><span class="sxs-lookup"><span data-stu-id="4db48-105">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="4db48-106">La solidez criptográfica de HMAC depende de las propiedades de la función hash subyacente.</span><span class="sxs-lookup"><span data-stu-id="4db48-106">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="4db48-107">Cualquier cambio en los datos o el valor hash se produce un error de coincidencia, porque se requieren conocimientos de la clave secreta para cambiar el mensaje y reproducir el valor hash correcto.</span><span class="sxs-lookup"><span data-stu-id="4db48-107">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="4db48-108">Por lo tanto, si los valores de hash original y el calculado coinciden, se autentica el mensaje.</span><span class="sxs-lookup"><span data-stu-id="4db48-108">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HMAC ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HMAC();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4db48-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-109">Initializes a new instance of the <see cref="T:System.Security.Cryptography.HMAC" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BlockSizeValue">
      <MemberSignature Language="C#" Value="protected int BlockSizeValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BlockSizeValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Property BlockSizeValue As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int BlockSizeValue { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BlockSizeValue : int with get, set" Usage="System.Security.Cryptography.HMAC.BlockSizeValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4db48-110">Gets or sets the block size to use in the hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-110">Gets or sets the block size to use in the hash value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4db48-111">Tamaño de bloque que se va a usar en el valor hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-111">The block size to use in the hash value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-112">Un código de autenticación de mensajes basado en Hash (HMAC) utiliza una función hash donde hash de los datos en la iteración de una función de compresión básica en bloques de datos.</span><span class="sxs-lookup"><span data-stu-id="4db48-112">A Hash-based Message Authentication Code (HMAC) uses a hash function where data is hashed by iterating a basic compression function on blocks of data.</span></span> <span data-ttu-id="4db48-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> es el tamaño en bytes de un bloque de este tipo.</span><span class="sxs-lookup"><span data-stu-id="4db48-113"><xref:System.Security.Cryptography.HMAC.BlockSizeValue%2A> is the byte size of such a block.</span></span> <span data-ttu-id="4db48-114">Su valor es de 64 bytes.</span><span class="sxs-lookup"><span data-stu-id="4db48-114">Its value is 64 bytes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Create">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4db48-115">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-115">Creates an instance of an implementation of a Hash-based Message Authentication Code (<see cref="T:System.Security.Cryptography.HMAC" />) .</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create () As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create();" />
      <MemberSignature Language="F#" Value="static member Create : unit -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4db48-116">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-116">Creates an instance of the default implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4db48-117">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-117">A new SHA-1 instance, unless the default settings have been changed by using the [&lt;cryptoClass&gt; element](~/docs/framework/configure-apps/file-schema/cryptography/cryptoclass-element.md).</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-118">De forma predeterminada, esta sobrecarga utiliza la implementación de SHA-1 de HMAC.</span><span class="sxs-lookup"><span data-stu-id="4db48-118">By default, this overload uses the SHA-1 implementation of HMAC.</span></span> <span data-ttu-id="4db48-119">Si desea especificar una implementación diferente, use el <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> sobrecarga, que le permite especificar un nombre de algoritmo, en su lugar.</span><span class="sxs-lookup"><span data-stu-id="4db48-119">If you want to specify a different implementation, use the <xref:System.Security.Cryptography.HMAC.Create%28System.String%29> overload, which lets you specify an algorithm name, instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Security.Cryptography.HMAC Create (string algorithmName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Security.Cryptography.HMAC Create(string algorithmName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Create(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (algorithmName As String) As HMAC" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Security::Cryptography::HMAC ^ Create(System::String ^ algorithmName);" />
      <MemberSignature Language="F#" Value="static member Create : string -&gt; System.Security.Cryptography.HMAC" Usage="System.Security.Cryptography.HMAC.Create algorithmName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HMAC</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algorithmName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="algorithmName">
          <span data-ttu-id="4db48-120">The HMAC implementation to use.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-120">The HMAC implementation to use.</span>
          </span>
          <span data-ttu-id="4db48-121">The following table shows the valid values for the <c>algorithmName</c> parameter and the algorithms they map to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-121">The following table shows the valid values for the <c>algorithmName</c> parameter and the algorithms they map to.</span>
          </span>
          <span data-ttu-id="4db48-122">
            <list type="table">
              <listheader>
                <term> Parameter value  </term>
                <description> Implements  </description>
              </listheader>
              <item>
                <term> System.Security.Cryptography.HMAC  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.KeyedHashAlgorithm  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> HMACMD5  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACMD5" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACMD5  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACMD5" />
                </description>
              </item>
              <item>
                <term> HMACRIPEMD160  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACRIPEMD160  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                </description>
              </item>
              <item>
                <term> HMACSHA1  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA1  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA1" />
                </description>
              </item>
              <item>
                <term> HMACSHA256  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA256" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA256  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA256" />
                </description>
              </item>
              <item>
                <term> HMACSHA384  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA384" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA384  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA384" />
                </description>
              </item>
              <item>
                <term> HMACSHA512  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA512" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.HMACSHA512  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.HMACSHA512" />
                </description>
              </item>
              <item>
                <term> MACTripleDES  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.MACTripleDES" />
                </description>
              </item>
              <item>
                <term> System.Security.Cryptography.MACTripleDES  </term>
                <description>
                  <see cref="T:System.Security.Cryptography.MACTripleDES" />
                </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-122">
              <list type="table">
                <listheader>
                  <term> Parameter value  </term>
                  <description> Implements  </description>
                </listheader>
                <item>
                  <term> System.Security.Cryptography.HMAC  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.KeyedHashAlgorithm  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> HMACMD5  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACMD5" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACMD5  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACMD5" />
                  </description>
                </item>
                <item>
                  <term> HMACRIPEMD160  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACRIPEMD160  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACRIPEMD160" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA1  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA1  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA1" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA256  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA256" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA256  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA256" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA384  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA384" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA384  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA384" />
                  </description>
                </item>
                <item>
                  <term> HMACSHA512  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA512" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.HMACSHA512  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.HMACSHA512" />
                  </description>
                </item>
                <item>
                  <term> MACTripleDES  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.MACTripleDES" />
                  </description>
                </item>
                <item>
                  <term> System.Security.Cryptography.MACTripleDES  </term>
                  <description>
                    <see cref="T:System.Security.Cryptography.MACTripleDES" />
                  </description>
                </item>
              </list>
            </span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4db48-123">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-123">Creates an instance of the specified implementation of a Hash-based Message Authentication Code (HMAC).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4db48-124">A new instance of the specified HMAC implementation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-124">A new instance of the specified HMAC implementation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-125">HMAC admite varios algoritmos de hash, como MD5, SHA-1, SHA-256 y RIPEMD160.</span><span class="sxs-lookup"><span data-stu-id="4db48-125">HMAC supports a number of hash algorithms, including MD5, SHA-1, SHA-256, and RIPEMD160.</span></span> <span data-ttu-id="4db48-126">Para obtener la lista completa, vea los valores admitidos para el `algorithmName` parámetro.</span><span class="sxs-lookup"><span data-stu-id="4db48-126">For the full list, see the supported values for the `algorithmName` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hMAC.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4db48-127">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-127">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4db48-128">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-128">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.HMAC" /> class when a key change is legitimate and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-129">Se llama a este método público `Dispose()` método y `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="4db48-129">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="4db48-130">`Dispose()` se invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="4db48-130">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="4db48-131">`Finalize` invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="4db48-131">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="4db48-132">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Security.Cryptography.HMAC> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="4db48-132">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.HMAC> references.</span></span> <span data-ttu-id="4db48-133">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="4db48-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4db48-134">
            <para>
              <see langword="Dispose" /> puede recibir varias llamadas de otros objetos. Al reemplazar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, vea [implementar un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obtener más información acerca de <see langword="Dispose" /> y <see langword="Finalize" />, consulte [limpieza seguridad Resources](~/docs/standard/garbage-collection/unmanaged.md) no administrado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-134">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (ReadOnlySpan&lt;byte&gt; source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.ReadOnlySpan{System.Byte})" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (source As ReadOnlySpan(Of Byte))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(ReadOnlySpan&lt;System::Byte&gt; source);" />
      <MemberSignature Language="F#" Value="override this.HashCore : ReadOnlySpan&lt;byte&gt; -&gt; unit" Usage="hMAC.HashCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ib, int cb);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ib, int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ib As Integer, cb As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ib, int cb);" />
      <MemberSignature Language="F#" Value="override this.HashCore : byte[] * int * int -&gt; unit" Usage="hMAC.HashCore (rgb, ib, cb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ib" Type="System.Int32" />
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">
          <span data-ttu-id="4db48-135">The input data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-135">The input data.</span>
          </span>
        </param>
        <param name="ib">
          <span data-ttu-id="4db48-136">The offset into the byte array from which to begin using data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-136">The offset into the byte array from which to begin using data.</span>
          </span>
        </param>
        <param name="cb">
          <span data-ttu-id="4db48-137">The number of bytes in the array to use as data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-137">The number of bytes in the array to use as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4db48-138">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-138">When overridden in a derived class, routes data written to the object into the default <see cref="T:System.Security.Cryptography.HMAC" /> hash algorithm for computing the hash value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-139">Código de la aplicación no llama a este método.</span><span class="sxs-lookup"><span data-stu-id="4db48-139">This method is not called by application code.</span></span>  
  
 <span data-ttu-id="4db48-140">Este método abstracto realiza el cálculo de hash.</span><span class="sxs-lookup"><span data-stu-id="4db48-140">This abstract method performs the hash computation.</span></span> <span data-ttu-id="4db48-141">Cada escritura en el objeto de secuencia criptográfico transmite los datos a través de este método.</span><span class="sxs-lookup"><span data-stu-id="4db48-141">Every write to the cryptographic stream object passes the data through this method.</span></span> <span data-ttu-id="4db48-142">Para cada bloque de datos, este método actualiza el estado del objeto hash para que se devuelva un valor hash correcto al final del flujo de datos.</span><span class="sxs-lookup"><span data-stu-id="4db48-142">For each block of data, this method updates the state of the hash object so that a correct hash value is returned at the end of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberSignature Language="F#" Value="override this.HashFinal : unit -&gt; byte[]" Usage="hMAC.HashFinal " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4db48-143">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-143">When overridden in a derived class, finalizes the hash computation after the last data is processed by the cryptographic stream object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4db48-144">The computed hash code in a byte array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-144">The computed hash code in a byte array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-145">Código de la aplicación no llama a este método.</span><span class="sxs-lookup"><span data-stu-id="4db48-145">This method is not called by application code.</span></span> <span data-ttu-id="4db48-146">Este método finaliza cualquier cálculo parcial y devuelve el valor de hash correcto del flujo de datos.</span><span class="sxs-lookup"><span data-stu-id="4db48-146">This method finalizes any partial computation and returns the correct hash value of the data stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.Security.Cryptography.HMAC.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4db48-147">Gets or sets the name of the hash algorithm to use for hashing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-147">Gets or sets the name of the hash algorithm to use for hashing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4db48-148">Nombre del algoritmo hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-148">The name of the hash algorithm.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4db48-149">The current hash algorithm cannot be changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-149">The current hash algorithm cannot be changed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberSignature Language="F#" Value="override this.Initialize : unit -&gt; unit" Usage="hMAC.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4db48-150">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-150">Initializes an instance of the default implementation of <see cref="T:System.Security.Cryptography.HMAC" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-151">Un código de autenticación de mensajes basado en Hash (HMAC) puede utilizarse para determinar si se ha manipulado un mensaje enviado a través de un canal no seguro, siempre que el remitente y el receptor compartan una clave secreta.</span><span class="sxs-lookup"><span data-stu-id="4db48-151">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="4db48-152">El remitente calcula el valor hash para los datos originales y envía los datos originales y el código HMAC como un solo mensaje.</span><span class="sxs-lookup"><span data-stu-id="4db48-152">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="4db48-153">El receptor vuelve a calcular el valor hash en el mensaje recibido y comprueba que el valor hash calculado coincide con el valor transmitido de hash.</span><span class="sxs-lookup"><span data-stu-id="4db48-153">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="4db48-154">HMAC se puede utilizar con cualquier función hash criptográfica iterativa, como MD5 o SHA-1, en combinación con una clave secreta compartida.</span><span class="sxs-lookup"><span data-stu-id="4db48-154">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="4db48-155">La solidez criptográfica de HMAC depende de las propiedades de la función hash subyacente.</span><span class="sxs-lookup"><span data-stu-id="4db48-155">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="4db48-156">Cualquier cambio en los datos o el valor hash producirá un error de coincidencia, porque se requieren conocimientos de la clave secreta para cambiar el mensaje y reproducir el valor hash correcto.</span><span class="sxs-lookup"><span data-stu-id="4db48-156">Any change to the data or the hash value will result in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="4db48-157">Por lo tanto, si los valores de hash original y el calculado coinciden, se autentica el mensaje.</span><span class="sxs-lookup"><span data-stu-id="4db48-157">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public override byte[] Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Key" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.HMAC.Key" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Key As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ Key { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Key : byte[] with get, set" Usage="System.Security.Cryptography.HMAC.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4db48-158">Gets or sets the key to use in the hash algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-158">Gets or sets the key to use in the hash algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4db48-159">Clave que se va a usar en el algoritmo hash.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-159">The key to use in the hash algorithm.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4db48-160">Esta propiedad es la clave para el algoritmo hash con clave.</span><span class="sxs-lookup"><span data-stu-id="4db48-160">This property is the key for the keyed hash algorithm.</span></span>  
  
 <span data-ttu-id="4db48-161">Un código de autenticación de mensajes basado en Hash (HMAC) puede utilizarse para determinar si se ha manipulado un mensaje enviado a través de un canal no seguro, siempre que el remitente y el receptor compartan una clave secreta.</span><span class="sxs-lookup"><span data-stu-id="4db48-161">A Hash-based Message Authentication Code (HMAC) can be used to determine whether a message sent over an insecure channel has been tampered with, provided that the sender and receiver share a secret key.</span></span> <span data-ttu-id="4db48-162">El remitente calcula el valor hash para los datos originales y envía los datos originales y el código HMAC como un solo mensaje.</span><span class="sxs-lookup"><span data-stu-id="4db48-162">The sender computes the hash value for the original data and sends both the original data and the HMAC as a single message.</span></span> <span data-ttu-id="4db48-163">El receptor vuelve a calcular el valor hash en el mensaje recibido y comprueba que el valor hash calculado coincide con el valor transmitido de hash.</span><span class="sxs-lookup"><span data-stu-id="4db48-163">The receiver recomputes the hash value on the received message and checks that the computed hash value matches the transmitted hash value.</span></span>  
  
 <span data-ttu-id="4db48-164">HMAC se puede utilizar con cualquier función hash criptográfica iterativa, como MD5 o SHA-1, en combinación con una clave secreta compartida.</span><span class="sxs-lookup"><span data-stu-id="4db48-164">HMAC can be used with any iterative cryptographic hash function, such as MD5 or SHA-1, in combination with a secret shared key.</span></span> <span data-ttu-id="4db48-165">La solidez criptográfica de HMAC depende de las propiedades de la función hash subyacente.</span><span class="sxs-lookup"><span data-stu-id="4db48-165">The cryptographic strength of HMAC depends on the properties of the underlying hash function.</span></span>  
  
 <span data-ttu-id="4db48-166">Cualquier cambio en los datos o el valor hash se produce un error de coincidencia, porque se requieren conocimientos de la clave secreta para cambiar el mensaje y reproducir el valor hash correcto.</span><span class="sxs-lookup"><span data-stu-id="4db48-166">Any change to the data or the hash value results in a mismatch, because knowledge of the secret key is required to change the message and reproduce the correct hash value.</span></span> <span data-ttu-id="4db48-167">Por lo tanto, si los valores de hash original y el calculado coinciden, se autentica el mensaje.</span><span class="sxs-lookup"><span data-stu-id="4db48-167">Therefore, if the original and computed hash values match, the message is authenticated.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4db48-168">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4db48-168">An attempt is made to change the <see cref="P:System.Security.Cryptography.HMAC.Key" /> property after hashing has begun.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryHashFinal">
      <MemberSignature Language="C#" Value="protected override bool TryHashFinal (Span&lt;byte&gt; destination, out int bytesWritten);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool TryHashFinal(valuetype System.Span`1&lt;unsigned int8&gt; destination, [out] int32&amp; bytesWritten) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.HMAC.TryHashFinal(System.Span{System.Byte},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function TryHashFinal (destination As Span(Of Byte), ByRef bytesWritten As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool TryHashFinal(Span&lt;System::Byte&gt; destination, [Runtime::InteropServices::Out] int % bytesWritten);" />
      <MemberSignature Language="F#" Value="override this.TryHashFinal : Span&lt;byte&gt; *  -&gt; bool" Usage="hMAC.TryHashFinal (destination, bytesWritten)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Byte&gt;" />
        <Parameter Name="bytesWritten" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="bytesWritten">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>