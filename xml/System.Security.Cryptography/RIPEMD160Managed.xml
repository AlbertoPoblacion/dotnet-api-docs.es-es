<Type Name="RIPEMD160Managed" FullName="System.Security.Cryptography.RIPEMD160Managed">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c50d0606da055a76511be516e99fdf836dcf255" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30496209" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RIPEMD160Managed : System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RIPEMD160Managed extends System.Security.Cryptography.RIPEMD160" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.RIPEMD160Managed" />
  <TypeSignature Language="VB.NET" Value="Public Class RIPEMD160Managed&#xA;Inherits RIPEMD160" />
  <TypeSignature Language="C++ CLI" Value="public ref class RIPEMD160Managed : System::Security::Cryptography::RIPEMD160" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.RIPEMD160</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Calcula el valor hash de <see cref="T:System.Security.Cryptography.RIPEMD160" /> de los datos de entrada utilizando la biblioteca administrada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RIPEMD-160 es una función hash criptográfica de 160 bits. Se está diseñado para su uso como reemplazo seguro para las funciones de hash de 128 bits MD4, MD5 y RIPEMD. RIPEMD se desarrolló en el marco de trabajo del proyecto europeo RIPE (RACE Integrity Primitives Evaluation, 1988-1992).  
  
> [!NOTE]
>  <xref:System.Security.Cryptography.RIPEMD160Managed> se ha sustituido por el Secure Hash los algoritmos SHA-256 y SHA-512 y sus clases derivadas. <xref:System.Security.Cryptography.SHA256Managed> y <xref:System.Security.Cryptography.SHA512Managed> ofrecen mayor seguridad y rendimiento que <xref:System.Security.Cryptography.RIPEMD160Managed>. Use <xref:System.Security.Cryptography.RIPEMD160Managed> únicamente por compatibilidad con aplicaciones heredadas y los datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo codificar un archivo mediante la <xref:System.Security.Cryptography.RIPEMD160Managed> clase y, a continuación, cómo descodificar el archivo.  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RIPEMD160Managed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RIPEMD160Managed();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.RIPEMD160" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El hash se utiliza como un valor único de tamaño fijo que representa una gran cantidad de datos. Los valores hash de dos conjuntos de datos deben coincidir con solo si los datos correspondientes también coinciden. Los pequeños cambios en el resultado de datos grandes cambios imprevisibles en el valor hash.  
  
 El tamaño del valor hash para el <xref:System.Security.Cryptography.RIPEMD160> algoritmo es de 160 bits.  
  
   
  
## Examples  
 El siguiente código de ejemplo calcula el <xref:System.Security.Cryptography.RIPEMD160Managed> clase hash para todos los archivos en un directorio.  
  
 [!code-cpp[RIPEMD160#1](~/samples/snippets/cpp/VS_Snippets_CLR/RIPEMD160/CPP/ripemd160.cpp#1)]
 [!code-csharp[RIPEMD160#1](~/samples/snippets/csharp/VS_Snippets_CLR/RIPEMD160/CS/ripemd160.cs#1)]
 [!code-vb[RIPEMD160#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/RIPEMD160/vb/ripemd160.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La directiva no es compatible con el algoritmo FIPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="HashCore">
      <MemberSignature Language="C#" Value="protected override void HashCore (byte[] rgb, int ibStart, int cbSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void HashCore(unsigned int8[] rgb, int32 ibStart, int32 cbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashCore(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub HashCore (rgb As Byte(), ibStart As Integer, cbSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void HashCore(cli::array &lt;System::Byte&gt; ^ rgb, int ibStart, int cbSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rgb" Type="System.Byte[]" />
        <Parameter Name="ibStart" Type="System.Int32" />
        <Parameter Name="cbSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rgb">Datos de entrada.</param>
        <param name="ibStart">Desplazamiento en la matriz de bytes a partir del cual se empezarán a usar los datos.</param>
        <param name="cbSize">Número de bytes de la matriz que se van a usar como datos.</param>
        <summary>Cuando se invalida en una clase derivada, enruta los datos escritos en el objeto al algoritmo hash <see cref="T:System.Security.Cryptography.RIPEMD160" /> para el cálculo del valor hash.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Código de la aplicación no llama a este método.  
  
 Este método abstracto realiza el cálculo de hash. Cada escritura en el objeto de secuencia criptográfico transmite los datos a través de este método. Para cada bloque de datos, este método actualiza el estado del objeto hash, por lo que se devuelve un valor de hash correcto al final del flujo de datos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Security.Cryptography.HashAlgorithm" />
      </Docs>
    </Member>
    <Member MemberName="HashFinal">
      <MemberSignature Language="C#" Value="protected override byte[] HashFinal ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance unsigned int8[] HashFinal() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.HashFinal" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HashFinal () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::Byte&gt; ^ HashFinal();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cuando se invalida en una clase derivada, finaliza el cálculo hash una vez que el objeto de secuencia criptográfico termina de procesar los últimos datos.</summary>
        <returns>Código hash calculado en una matriz de bytes.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Código de la aplicación no llama a este método. Este método finaliza cualquier cálculo parcial y devuelve el valor de hash correcto del flujo de datos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.RIPEMD160Managed.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicializa una instancia de la clase <see cref="T:System.Security.Cryptography.RIPEMD160Managed" /> utilizando la biblioteca administrada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 RIPEMD-160 es una función hash criptográfica de 160 bits. Se está diseñado para su uso como reemplazo seguro para las funciones de hash de 128 bits MD4, MD5 y RIPEMD. RIPEMD se desarrolló en el marco de trabajo del proyecto europeo RIPE (RACE Integrity Primitives Evaluation, 1988-1992).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>