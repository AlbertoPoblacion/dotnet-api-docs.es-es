<Type Name="Rfc2898DeriveBytes" FullName="System.Security.Cryptography.Rfc2898DeriveBytes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="597390917b804edf9f923f9907a94156a1a347fd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37630589" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Rfc2898DeriveBytes : System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Rfc2898DeriveBytes extends System.Security.Cryptography.DeriveBytes" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Rfc2898DeriveBytes" />
  <TypeSignature Language="VB.NET" Value="Public Class Rfc2898DeriveBytes&#xA;Inherits DeriveBytes" />
  <TypeSignature Language="C++ CLI" Value="public ref class Rfc2898DeriveBytes : System::Security::Cryptography::DeriveBytes" />
  <TypeSignature Language="F#" Value="type Rfc2898DeriveBytes = class&#xA;    inherit DeriveBytes" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.0.0</AssemblyVersion>
    <AssemblyVersion>4.3.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Cryptography.DeriveBytes</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="4b64a-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="4b64a-101">Implements password-based key derivation functionality, PBKDF2, by using a pseudo-random number generator based on <see cref="T:System.Security.Cryptography.HMACSHA1" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> toma un número de iteraciones, un valor "salt" y una contraseña y, a continuación, genera las claves mediante llamadas a la <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4b64a-102"><xref:System.Security.Cryptography.Rfc2898DeriveBytes> takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span>  
  
 <span data-ttu-id="4b64a-103">RFC 2898 incluye métodos para crear un vector de clave y la inicialización (IV) de una contraseña y un valor "salt".</span><span class="sxs-lookup"><span data-stu-id="4b64a-103">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="4b64a-104">PBKDF2, una función de derivación de claves basada en contraseña, puede usar para derivar claves mediante una función pseudoaleatoria que permite que las claves de longitud prácticamente ilimitada a generarse.</span><span class="sxs-lookup"><span data-stu-id="4b64a-104">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="4b64a-105">La <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase puede usarse para generar una clave derivada de una clave base y otros parámetros.</span><span class="sxs-lookup"><span data-stu-id="4b64a-105">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="4b64a-106">En una función de derivación de claves basada en contraseña, la clave base es una contraseña y los demás parámetros son un valor "salt" y un número de iteraciones.</span><span class="sxs-lookup"><span data-stu-id="4b64a-106">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="4b64a-107">Para obtener más información acerca de PBKDF2, vea RFC 2898, "PKCS #5: especificación de criptografía basada en contraseña versión 2.0," disponible en el [sitio Web de comentarios de solicitud de](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="4b64a-107">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="4b64a-108">Vea la sección 5.2, "PBKDF2", para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="4b64a-108">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b64a-109">Nunca codifique de forma rígida una contraseña en su código fuente.</span><span class="sxs-lookup"><span data-stu-id="4b64a-109">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4b64a-110">Las contraseñas codificadas de forma rígida se pueden recuperar desde un ensamblado mediante la [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), con un editor hexadecimal o, sencillamente, abriendo el ensamblado en un editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4b64a-110">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b64a-111">El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase para crear dos idénticas claves para el <xref:System.Security.Cryptography.TripleDES> clase.</span><span class="sxs-lookup"><span data-stu-id="4b64a-111">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="4b64a-112">A continuación, cifra y descifra algunos datos utilizando las claves.</span><span class="sxs-lookup"><span data-stu-id="4b64a-112">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4b64a-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-113">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-114">The password used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-114">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4b64a-115">The key salt used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-115">The key salt used to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-116">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password and salt to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-117">El tamaño del valor salt debe ser de 8 bytes o superior.</span><span class="sxs-lookup"><span data-stu-id="4b64a-117">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="4b64a-118">RFC 2898 incluye métodos para crear un vector de clave y la inicialización (IV) de una contraseña y un valor "salt".</span><span class="sxs-lookup"><span data-stu-id="4b64a-118">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="4b64a-119">PBKDF2, una función de derivación de claves basada en contraseña, puede usar para derivar claves mediante una función pseudoaleatoria que permite que las claves de longitud prácticamente ilimitada a generarse.</span><span class="sxs-lookup"><span data-stu-id="4b64a-119">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="4b64a-120">La <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase puede usarse para generar una clave derivada de una clave base y otros parámetros.</span><span class="sxs-lookup"><span data-stu-id="4b64a-120">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="4b64a-121">En una función de derivación de claves basada en contraseña, la clave base es una contraseña y los demás parámetros son un valor "salt" y un número de iteraciones.</span><span class="sxs-lookup"><span data-stu-id="4b64a-121">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="4b64a-122">Para obtener más información acerca de PBKDF2, vea RFC 2898, "PKCS #5: especificación de criptografía basada en contraseña versión 2.0," disponible en el [sitio Web de comentarios de solicitud de](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="4b64a-122">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="4b64a-123">Vea la sección 5.2, "PBKDF2", para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="4b64a-123">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b64a-124">Nunca codifique de forma rígida una contraseña en su código fuente.</span><span class="sxs-lookup"><span data-stu-id="4b64a-124">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4b64a-125">Las contraseñas codificadas de forma rígida se pueden recuperar desde un ensamblado mediante la [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), con un editor hexadecimal o, sencillamente, abriendo el ensamblado en un editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4b64a-125">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b64a-126">El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase para crear dos idénticas claves para el <xref:System.Security.Cryptography.TripleDES> clase.</span><span class="sxs-lookup"><span data-stu-id="4b64a-126">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="4b64a-127">A continuación, cifra y descifra algunos datos utilizando las claves.</span><span class="sxs-lookup"><span data-stu-id="4b64a-127">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-128">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-128">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b64a-129">The password or salt is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-129">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-130">The password used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-130">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="4b64a-131">The size of the random salt that you want the class to generate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-131">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-132">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the password and salt size to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-133">El tamaño del valor salt debe ser de 8 bytes o superior.</span><span class="sxs-lookup"><span data-stu-id="4b64a-133">The salt size must be 8 bytes or larger.</span></span>  
  
 <span data-ttu-id="4b64a-134">RFC 2898 incluye métodos para crear un vector de clave y la inicialización (IV) de una contraseña y un valor "salt".</span><span class="sxs-lookup"><span data-stu-id="4b64a-134">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="4b64a-135">PBKDF2, una función de derivación de claves basada en contraseña, puede usar para derivar claves mediante una función pseudoaleatoria que permite que las claves de longitud prácticamente ilimitada a generarse.</span><span class="sxs-lookup"><span data-stu-id="4b64a-135">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="4b64a-136">La <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase puede usarse para generar una clave derivada de una clave base y otros parámetros.</span><span class="sxs-lookup"><span data-stu-id="4b64a-136">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="4b64a-137">En una función de derivación de claves basada en contraseña, la clave base es una contraseña y los demás parámetros son un valor "salt" y un número de iteraciones.</span><span class="sxs-lookup"><span data-stu-id="4b64a-137">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="4b64a-138">Para obtener más información acerca de PBKDF2, vea RFC 2898, "PKCS #5: especificación de criptografía basada en contraseña versión 2.0," disponible en el [sitio Web de comentarios de solicitud de](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="4b64a-138">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="4b64a-139">Vea la sección 5.2, "PBKDF2", para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="4b64a-139">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b64a-140">Nunca codifique de forma rígida una contraseña en su código fuente.</span><span class="sxs-lookup"><span data-stu-id="4b64a-140">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4b64a-141">Las contraseñas codificadas de forma rígida se pueden recuperar desde un ensamblado mediante la [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), con un editor hexadecimal o, sencillamente, abriendo el ensamblado en un editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4b64a-141">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-142">The specified salt size is smaller than 8 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-142">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b64a-143">The password or salt is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-143">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-144">The password used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-144">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4b64a-145">The key salt used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-145">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4b64a-146">The number of iterations for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-146">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-147">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-148">El tamaño del valor salt debe ser de 8 bytes o superior y el número de iteraciones debe ser mayor que cero.</span><span class="sxs-lookup"><span data-stu-id="4b64a-148">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="4b64a-149">El número mínimo recomendado de iteraciones es 1000.</span><span class="sxs-lookup"><span data-stu-id="4b64a-149">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="4b64a-150">RFC 2898 incluye métodos para crear un vector de clave y la inicialización (IV) de una contraseña y un valor "salt".</span><span class="sxs-lookup"><span data-stu-id="4b64a-150">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="4b64a-151">PBKDF2, una función de derivación de claves basada en contraseña, puede usar para derivar claves mediante una función pseudoaleatoria que permite que las claves de longitud prácticamente ilimitada a generarse.</span><span class="sxs-lookup"><span data-stu-id="4b64a-151">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="4b64a-152">La <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase puede usarse para generar una clave derivada de una clave base y otros parámetros.</span><span class="sxs-lookup"><span data-stu-id="4b64a-152">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="4b64a-153">En una función de derivación de claves basada en contraseña, la clave base es una contraseña y los demás parámetros son un valor "salt" y un número de iteraciones.</span><span class="sxs-lookup"><span data-stu-id="4b64a-153">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="4b64a-154">Para obtener más información acerca de PBKDF2, vea RFC 2898, "PKCS #5: especificación de criptografía basada en contraseña versión 2.0," disponible en el [sitio Web de comentarios de solicitud de](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="4b64a-154">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="4b64a-155">Vea la sección 5.2, "PBKDF2", para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="4b64a-155">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b64a-156">Nunca codifique de forma rígida una contraseña en su código fuente.</span><span class="sxs-lookup"><span data-stu-id="4b64a-156">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4b64a-157">Las contraseñas codificadas de forma rígida se pueden recuperar desde un ensamblado mediante la [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), con un editor hexadecimal o, sencillamente, abriendo el ensamblado en un editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4b64a-157">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-158">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-158">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b64a-159">The password or salt is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-159">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-160">The password used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-160">The password used to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4b64a-161">The key salt used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-161">The key salt used to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4b64a-162">The number of iterations for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-162">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-163">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-163">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-164">El tamaño del valor salt debe ser de 8 bytes o superior y el número de iteraciones debe ser mayor que cero.</span><span class="sxs-lookup"><span data-stu-id="4b64a-164">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="4b64a-165">El número mínimo recomendado de iteraciones es 1000.</span><span class="sxs-lookup"><span data-stu-id="4b64a-165">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="4b64a-166">RFC 2898 incluye métodos para crear un vector de clave y la inicialización (IV) de una contraseña y un valor "salt".</span><span class="sxs-lookup"><span data-stu-id="4b64a-166">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="4b64a-167">PBKDF2, una función de derivación de claves basada en contraseña, puede usar para derivar claves mediante una función pseudoaleatoria que permite que las claves de longitud prácticamente ilimitada a generarse.</span><span class="sxs-lookup"><span data-stu-id="4b64a-167">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="4b64a-168">La <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase puede usarse para generar una clave derivada de una clave base y otros parámetros.</span><span class="sxs-lookup"><span data-stu-id="4b64a-168">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="4b64a-169">En una función de derivación de claves basada en contraseña, la clave base es una contraseña y los demás parámetros son un valor "salt" y un número de iteraciones.</span><span class="sxs-lookup"><span data-stu-id="4b64a-169">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="4b64a-170">Para obtener más información acerca de PBKDF2, vea RFC 2898, "PKCS #5: especificación de criptografía basada en contraseña versión 2.0," disponible en el [sitio Web de comentarios de solicitud de](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="4b64a-170">For more information about PBKDF2, see RFC 2898, "PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="4b64a-171">Vea la sección 5.2, "PBKDF2", para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="4b64a-171">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b64a-172">Nunca codifique de forma rígida una contraseña en su código fuente.</span><span class="sxs-lookup"><span data-stu-id="4b64a-172">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4b64a-173">Las contraseñas codificadas de forma rígida se pueden recuperar desde un ensamblado mediante la [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), con un editor hexadecimal o, sencillamente, abriendo el ensamblado en un editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4b64a-173">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b64a-174">El siguiente ejemplo de código utiliza el <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase para crear dos idénticas claves para el <xref:System.Security.Cryptography.TripleDES> clase.</span><span class="sxs-lookup"><span data-stu-id="4b64a-174">The following code example uses the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class to create two identical keys for the <xref:System.Security.Cryptography.TripleDES> class.</span></span>  <span data-ttu-id="4b64a-175">A continuación, cifra y descifra algunos datos utilizando las claves.</span><span class="sxs-lookup"><span data-stu-id="4b64a-175">It then encrypts and decrypts some data using the keys.</span></span>  
  
 [!code-cpp[rfc28981#1](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#1)]
 [!code-csharp[rfc28981#1](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#1)]
 [!code-vb[rfc28981#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-176">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-176">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b64a-177">The password or salt is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-177">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-178">The password used to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-178">The password used to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="4b64a-179">The size of the random salt that you want the class to generate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-179">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4b64a-180">The number of iterations for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-180">The number of iterations for the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-181">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-181">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using a password, a salt size, and number of iterations to derive the key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-182">El tamaño del valor salt debe ser de 8 bytes o superior y el número de iteraciones debe ser mayor que cero.</span><span class="sxs-lookup"><span data-stu-id="4b64a-182">The salt size must be 8 bytes or larger and the iteration count must be greater than zero.</span></span> <span data-ttu-id="4b64a-183">El número mínimo recomendado de iteraciones es 1000.</span><span class="sxs-lookup"><span data-stu-id="4b64a-183">The minimum recommended number of iterations is 1000.</span></span>  
  
 <span data-ttu-id="4b64a-184">RFC 2898 incluye métodos para crear un vector de clave y la inicialización (IV) de una contraseña y un valor "salt".</span><span class="sxs-lookup"><span data-stu-id="4b64a-184">RFC 2898 includes methods for creating a key and initialization vector (IV) from a password and salt.</span></span> <span data-ttu-id="4b64a-185">PBKDF2, una función de derivación de claves basada en contraseña, puede usar para derivar claves mediante una función pseudoaleatoria que permite que las claves de longitud prácticamente ilimitada a generarse.</span><span class="sxs-lookup"><span data-stu-id="4b64a-185">You can use PBKDF2, a password-based key derivation function, to derive keys using a pseudo-random function that allows keys of virtually unlimited length to be generated.</span></span> <span data-ttu-id="4b64a-186">La <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase puede usarse para generar una clave derivada de una clave base y otros parámetros.</span><span class="sxs-lookup"><span data-stu-id="4b64a-186">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class can be used to produce a derived key from a base key and other parameters.</span></span> <span data-ttu-id="4b64a-187">En una función de derivación de claves basada en contraseña, la clave base es una contraseña y los demás parámetros son un valor "salt" y un número de iteraciones.</span><span class="sxs-lookup"><span data-stu-id="4b64a-187">In a password-based key derivation function, the base key is a password and the other parameters are a salt value and an iteration count.</span></span>  
  
 <span data-ttu-id="4b64a-188">Para obtener más información sobre PBKDF2, vea RFC 2898, "PKCS nº 5: especificación de criptografía basada en contraseña versión 2.0," disponible en el [sitio Web de comentarios de solicitud de](http://go.microsoft.com/fwlink/?LinkID=37119).</span><span class="sxs-lookup"><span data-stu-id="4b64a-188">For more information on PBKDF2, see RFC 2898,"PKCS #5: Password-Based Cryptography Specification Version 2.0," available on the [Request for Comments Web site](http://go.microsoft.com/fwlink/?LinkID=37119).</span></span> <span data-ttu-id="4b64a-189">Vea la sección 5.2, "PBKDF2", para obtener información detallada.</span><span class="sxs-lookup"><span data-stu-id="4b64a-189">See section 5.2, "PBKDF2," for complete details.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4b64a-190">Nunca codifique de forma rígida una contraseña en su código fuente.</span><span class="sxs-lookup"><span data-stu-id="4b64a-190">Never hard-code a password within your source code.</span></span>  <span data-ttu-id="4b64a-191">Las contraseñas codificadas de forma rígida se pueden recuperar desde un ensamblado mediante la [Ildasm.exe (Desensamblador de IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), con un editor hexadecimal o, sencillamente, abriendo el ensamblado en un editor de texto como Notepad.exe.</span><span class="sxs-lookup"><span data-stu-id="4b64a-191">Hard-coded passwords can be retrieved from an assembly by using the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md), by using a hexadecimal editor, or by simply opening up the assembly in a text editor such as Notepad.exe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-192">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-192">The specified salt size is smaller than 8 bytes or the iteration count is less than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b64a-193">The password or salt is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-193">The password or salt is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b64a-194">
            <paramref name="iterations" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-194">
              <paramref name="iterations" /> is out of range.</span>
          </span>
          <span data-ttu-id="4b64a-195">This parameter requires a non-negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-195">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (byte[] password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.Byte[],System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As Byte(), salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(cli::array &lt;System::Byte&gt; ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : byte[] * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.Byte[]" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-196">The password to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-196">The password to use to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4b64a-197">The key salt to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-197">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4b64a-198">The number of iterations for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-198">The number of iterations for the operation.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="4b64a-199">The hash algorithm to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-199">The hash algorithm to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-200">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-200">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b64a-201">
            <paramref name="saltSize" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-201">
              <paramref name="saltSize" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-202">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-202">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4b64a-203">Hash algorithm name is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-203">Hash algorithm name is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, byte[] salt, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, unsigned int8[] salt, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Byte[],System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, salt As Byte(), iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, cli::array &lt;System::Byte&gt; ^ salt, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * byte[] * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, salt, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="salt" Type="System.Byte[]" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-204">The password to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-204">The password to use to derive the key.</span>
          </span>
        </param>
        <param name="salt">
          <span data-ttu-id="4b64a-205">The key salt to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-205">The key salt to use to derive the key.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4b64a-206">The number of iterations for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-206">The number of iterations for the operation.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="4b64a-207">The hash algorithm to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-207">The hash algorithm to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-208">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-208">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt, number of iterations and the hash algorithm name to derive the key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-209">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-209">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4b64a-210">Hash algorithm name is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-210">Hash algorithm name is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Rfc2898DeriveBytes (string password, int saltSize, int iterations, System.Security.Cryptography.HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string password, int32 saltSize, int32 iterations, valuetype System.Security.Cryptography.HashAlgorithmName hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.#ctor(System.String,System.Int32,System.Int32,System.Security.Cryptography.HashAlgorithmName)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (password As String, saltSize As Integer, iterations As Integer, hashAlgorithm As HashAlgorithmName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Rfc2898DeriveBytes(System::String ^ password, int saltSize, int iterations, System::Security::Cryptography::HashAlgorithmName hashAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.Security.Cryptography.Rfc2898DeriveBytes : string * int * int * System.Security.Cryptography.HashAlgorithmName -&gt; System.Security.Cryptography.Rfc2898DeriveBytes" Usage="new System.Security.Cryptography.Rfc2898DeriveBytes (password, saltSize, iterations, hashAlgorithm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="saltSize" Type="System.Int32" />
        <Parameter Name="iterations" Type="System.Int32" />
        <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
      </Parameters>
      <Docs>
        <param name="password">
          <span data-ttu-id="4b64a-211">The password to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-211">The password to use to derive the key.</span>
          </span>
        </param>
        <param name="saltSize">
          <span data-ttu-id="4b64a-212">The size of the random salt that you want the class to generate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-212">The size of the random salt that you want the class to generate.</span>
          </span>
        </param>
        <param name="iterations">
          <span data-ttu-id="4b64a-213">The number of iterations for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-213">The number of iterations for the operation.</span>
          </span>
        </param>
        <param name="hashAlgorithm">
          <span data-ttu-id="4b64a-214">The hash algorithm to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-214">The hash algorithm to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-215">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt size, number of iterations and the hash algorithm name to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-215">Initializes a new instance of the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class using the specified password, salt size, number of iterations and the hash algorithm name to derive the key.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b64a-216">
            <paramref name="saltSize" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-216">
              <paramref name="saltSize" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-217">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-217">The <see cref="P:System.Security.Cryptography.HashAlgorithmName.Name" /> property of <paramref name="hashAlgorithm" /> is either <see langword="null" /> or <see cref="F:System.String.Empty" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4b64a-218">Hash algorithm name is invalid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-218">Hash algorithm name is invalid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CryptDeriveKey">
      <MemberSignature Language="C#" Value="public byte[] CryptDeriveKey (string algname, string alghashname, int keySize, byte[] rgbIV);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] CryptDeriveKey(string algname, string alghashname, int32 keySize, unsigned int8[] rgbIV) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.CryptDeriveKey(System.String,System.String,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function CryptDeriveKey (algname As String, alghashname As String, keySize As Integer, rgbIV As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ CryptDeriveKey(System::String ^ algname, System::String ^ alghashname, int keySize, cli::array &lt;System::Byte&gt; ^ rgbIV);" />
      <MemberSignature Language="F#" Value="member this.CryptDeriveKey : string * string * int * byte[] -&gt; byte[]" Usage="rfc2898DeriveBytes.CryptDeriveKey (algname, alghashname, keySize, rgbIV)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="algname" Type="System.String" />
        <Parameter Name="alghashname" Type="System.String" />
        <Parameter Name="keySize" Type="System.Int32" />
        <Parameter Name="rgbIV" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="algname">
          <span data-ttu-id="4b64a-219">The algorithm name for which to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-219">The algorithm name for which to derive the key.</span>
          </span>
        </param>
        <param name="alghashname">
          <span data-ttu-id="4b64a-220">The hash algorithm name to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-220">The hash algorithm name to use to derive the key.</span>
          </span>
        </param>
        <param name="keySize">
          <span data-ttu-id="4b64a-221">The size of the key, in bits, to derive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-221">The size of the key, in bits, to derive.</span>
          </span>
        </param>
        <param name="rgbIV">
          <span data-ttu-id="4b64a-222">The initialization vector (IV) to use to derive the key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-222">The initialization vector (IV) to use to derive the key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-223">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-223">Derives a cryptographic key from the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b64a-224">The derived key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-224">The derived key.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-225">Esta función es un contenedor para la función de la API Crypto CryptDeriveKey() y está diseñada para ofrecer interoperabilidad con las aplicaciones que usan la API de criptografía.</span><span class="sxs-lookup"><span data-stu-id="4b64a-225">This function is a wrapper for the Crypto API function CryptDeriveKey(), and is intended to offer interoperability with applications using the Crypto API.</span></span>  
  
 <span data-ttu-id="4b64a-226">Si el `keySize` parámetro se establece en 0 bits, se utiliza el tamaño de clave predeterminado para el algoritmo especificado.</span><span class="sxs-lookup"><span data-stu-id="4b64a-226">If the `keySize` parameter is set to 0 bits, the default key size for the specified algorithm is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">
          <span data-ttu-id="4b64a-227">The <paramref name="keySize" /> parameter is incorrect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-227">The <paramref name="keySize" /> parameter is incorrect.</span>
          </span>
          <span data-ttu-id="4b64a-228">-or-  The cryptographic service provider (CSP) cannot be acquired.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-228">-or-  The cryptographic service provider (CSP) cannot be acquired.</span>
          </span>
          <span data-ttu-id="4b64a-229">-or-  The <paramref name="algname" /> parameter is not a valid algorithm name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-229">-or-  The <paramref name="algname" /> parameter is not a valid algorithm name.</span>
          </span>
          <span data-ttu-id="4b64a-230">-or-  The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-230">-or-  The <paramref name="alghashname" /> parameter is not a valid hash algorithm name.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="rfc2898DeriveBytes.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="4b64a-231">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-231">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-232">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-232">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.Rfc2898DeriveBytes" /> class and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-233">Este método se llama por el público `Dispose()` método y el `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="4b64a-233">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="4b64a-234">`Dispose()` invoca el protegido `Dispose(Boolean)` método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="4b64a-234">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="4b64a-235">`Finalize` invoca `Dispose` con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="4b64a-235">`Finalize` invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="4b64a-236">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Security.Cryptography.Rfc2898DeriveBytes> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="4b64a-236">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.Rfc2898DeriveBytes> references.</span></span> <span data-ttu-id="4b64a-237">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="4b64a-237">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="4b64a-238">
            <para>
              <see langword="Dispose" /> puede llamarse varias veces por otros objetos. Cuando se reemplaza <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, vea [implementar un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obtener más información acerca de <see langword="Dispose" /> y <see langword="Finalize" />, consulte [limpieza de Resources](~/docs/standard/garbage-collection/unmanaged.md) no administrado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-238">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetBytes">
      <MemberSignature Language="C#" Value="public override byte[] GetBytes (int cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetBytes(int32 cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetBytes (cb As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ GetBytes(int cb);" />
      <MemberSignature Language="F#" Value="override this.GetBytes : int -&gt; byte[]" Usage="rfc2898DeriveBytes.GetBytes cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cb">
          <span data-ttu-id="4b64a-239">The number of pseudo-random key bytes to generate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-239">The number of pseudo-random key bytes to generate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4b64a-240">Returns the pseudo-random key for this object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-240">Returns the pseudo-random key for this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4b64a-241">A byte array filled with pseudo-random key bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-241">A byte array filled with pseudo-random key bytes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-242">El <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase implementa la función PBKDF2 utilizando un generador de números pseudoaleatorio basado en <xref:System.Security.Cryptography.HMACSHA1>.</span><span class="sxs-lookup"><span data-stu-id="4b64a-242">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class implements PBKDF2 functionality by using a pseudorandom number generator based on <xref:System.Security.Cryptography.HMACSHA1>.</span></span> <span data-ttu-id="4b64a-243">El <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase toma un número de iteraciones, un valor "salt" y una contraseña y, a continuación, genera las claves mediante llamadas a la <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método.</span><span class="sxs-lookup"><span data-stu-id="4b64a-243">The <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class takes a password, a salt, and an iteration count, and then generates keys through calls to the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method.</span></span> <span data-ttu-id="4b64a-244">Las llamadas repetidas a este método no generará la misma clave; en su lugar, anexar dos llamadas de la <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método con un `cb` valor del parámetro de `20` equivale a llamar a la <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método una vez con un `cb` valor del parámetro de `40`.</span><span class="sxs-lookup"><span data-stu-id="4b64a-244">Repeated calls to this method will not generate the same key; instead, appending two calls of the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method with a `cb` parameter value of `20` is the equivalent of calling the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method once with a `cb` parameter value of `40`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b64a-245">El ejemplo siguiente muestra cómo usar el <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> método para obtener la clave de una instancia de <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span><span class="sxs-lookup"><span data-stu-id="4b64a-245">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.GetBytes%2A> method to get the key for an instance of <xref:System.Security.Cryptography.Rfc2898DeriveBytes>.</span></span> <span data-ttu-id="4b64a-246">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase.</span><span class="sxs-lookup"><span data-stu-id="4b64a-246">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#2](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#2)]
 [!code-csharp[rfc28981#2](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#2)]
 [!code-vb[rfc28981#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b64a-247">
            <paramref name="cb" /> is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-247">
              <paramref name="cb" /> is out of range.</span>
          </span>
          <span data-ttu-id="4b64a-248">This parameter requires a non-negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-248">This parameter requires a non-negative number.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.HashAlgorithmName HashAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Cryptography.HashAlgorithmName HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HashAlgorithm As HashAlgorithmName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::HashAlgorithmName HashAlgorithm { System::Security::Cryptography::HashAlgorithmName get(); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Security.Cryptography.HashAlgorithmName" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.HashAlgorithmName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IterationCount">
      <MemberSignature Language="C#" Value="public int IterationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IterationCount" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property IterationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IterationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IterationCount : int with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b64a-249">Gets or sets the number of iterations for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-249">Gets or sets the number of iterations for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b64a-250">Número de iteraciones de la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-250">The number of iterations for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-251">Número de iteraciones es el número de veces que se realiza una operación.</span><span class="sxs-lookup"><span data-stu-id="4b64a-251">Iteration count is the number of times an operation is performed.</span></span> <span data-ttu-id="4b64a-252">Para este método, el número debe ser mayor que cero.</span><span class="sxs-lookup"><span data-stu-id="4b64a-252">For this method, the count should be greater than zero.</span></span> <span data-ttu-id="4b64a-253">El número mínimo recomendado de iteraciones es 1000.</span><span class="sxs-lookup"><span data-stu-id="4b64a-253">The minimum recommended number of iterations is 1000.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b64a-254">El ejemplo siguiente muestra cómo usar el <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> propiedad para mostrar el número de iteraciones usadas en la generación de la clave.</span><span class="sxs-lookup"><span data-stu-id="4b64a-254">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.IterationCount%2A> property to display the number of iterations used in the generation of the key.</span></span> <span data-ttu-id="4b64a-255">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase.</span><span class="sxs-lookup"><span data-stu-id="4b64a-255">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#3](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#3)]
 [!code-csharp[rfc28981#3](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#3)]
 [!code-vb[rfc28981#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="4b64a-256">The number of iterations is less than 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-256">The number of iterations is less than 1.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public override void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Rfc2898DeriveBytes.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Reset();" />
      <MemberSignature Language="F#" Value="override this.Reset : unit -&gt; unit" Usage="rfc2898DeriveBytes.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4b64a-257">Resets the state of the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-257">Resets the state of the operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-258">Este método se llama automáticamente si se modifica el número de iteración o el valor "salt".</span><span class="sxs-lookup"><span data-stu-id="4b64a-258">This method is automatically called if the salt or iteration count is modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4b64a-259">En el siguiente ejemplo, se muestra cómo utilizar el método <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="4b64a-259">The following example shows how to use the <xref:System.Security.Cryptography.Rfc2898DeriveBytes.Reset%2A> method.</span></span> <span data-ttu-id="4b64a-260">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.Security.Cryptography.Rfc2898DeriveBytes> clase.</span><span class="sxs-lookup"><span data-stu-id="4b64a-260">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.Rfc2898DeriveBytes> class.</span></span>  
  
 [!code-cpp[rfc28981#5](~/samples/snippets/cpp/VS_Snippets_CLR/rfc28981/CPP/rfc28981.cpp#5)]
 [!code-csharp[rfc28981#5](~/samples/snippets/csharp/VS_Snippets_CLR/rfc28981/CS/rfc28981.cs#5)]
 [!code-vb[rfc28981#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/rfc28981/vb/rfc28981.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Salt">
      <MemberSignature Language="C#" Value="public byte[] Salt { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] Salt" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberSignature Language="VB.NET" Value="Public Property Salt As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ Salt { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Salt : byte[] with get, set" Usage="System.Security.Cryptography.Rfc2898DeriveBytes.Salt" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Algorithms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.0.0</AssemblyVersion>
        <AssemblyVersion>4.3.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4b64a-261">Gets or sets the key salt value for the operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-261">Gets or sets the key salt value for the operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4b64a-262">Valor de clave "salt" de clave de la operación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-262">The key salt value for the operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4b64a-263">Valor "salt", un conjunto aleatorio de bytes, se utiliza para realizar el descifrado no autorizado de un mensaje más difícil.</span><span class="sxs-lookup"><span data-stu-id="4b64a-263">Salt, a random set of bytes, is used to make unauthorized decrypting of a message more difficult.</span></span> <span data-ttu-id="4b64a-264">Un ataque de diccionario es un ataque en el que el atacante intenta descifrar un mensaje cifrado comparando el valor cifrado con los valores cifrados calculados previamente para las claves más probables.</span><span class="sxs-lookup"><span data-stu-id="4b64a-264">A dictionary attack is an attack in which the attacker attempts to decrypt an encrypted message by comparing the encrypted value with previously computed encrypted values for the most likely keys.</span></span> <span data-ttu-id="4b64a-265">Este ataque se hace mucho más difícil la introducción de valor "salt", o bytes aleatorios, al final de la contraseña antes de la derivación de claves.</span><span class="sxs-lookup"><span data-stu-id="4b64a-265">This attack is made much more difficult by the introduction of salt, or random bytes, at the end of the password before the key derivation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4b64a-266">The specified salt size is smaller than 8 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-266">The specified salt size is smaller than 8 bytes.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4b64a-267">The salt is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4b64a-267">The salt is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>