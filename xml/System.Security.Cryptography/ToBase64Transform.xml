<Type Name="ToBase64Transform" FullName="System.Security.Cryptography.ToBase64Transform">
  <TypeSignature Language="C#" Value="public class ToBase64Transform : System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ToBase64Transform extends System.Object implements class System.IDisposable, class System.Security.Cryptography.ICryptoTransform" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.ToBase64Transform" />
  <TypeSignature Language="VB.NET" Value="Public Class ToBase64Transform&#xA;Implements ICryptoTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToBase64Transform : System::Security::Cryptography::ICryptoTransform" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Cryptography.ICryptoTransform</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="1e224-101">Convierte <see cref="T:System.Security.Cryptography.CryptoStream" /> a base 64.</span><span class="sxs-lookup"><span data-stu-id="1e224-101">Converts a <see cref="T:System.Security.Cryptography.CryptoStream" /> to base 64.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-102">Codificación de transferencia de contenido de base 64 representa secuencias de bits arbitrarias en una forma que no sea usuarios legible.</span><span class="sxs-lookup"><span data-stu-id="1e224-102">Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e224-103">En el ejemplo de código siguiente se muestra cómo utilizar los miembros de la <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-103">The following code example demonstrates how to use members of the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#1)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#1)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToBase64Transform();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e224-104">Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-104">Initializes a new instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanReuseTransform">
      <MemberSignature Language="C#" Value="public virtual bool CanReuseTransform { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanReuseTransform" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanReuseTransform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanReuseTransform As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanReuseTransform { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e224-105">Obtiene un valor que indica si la transformación actual puede volver a usarse.</span><span class="sxs-lookup"><span data-stu-id="1e224-105">Gets a value indicating whether the current transform can be reused.</span></span></summary>
        <value><span data-ttu-id="1e224-106">Siempre es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-106">Always <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e224-107">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> propiedad para determinar si se puede reutilizar la transformación actual.</span><span class="sxs-lookup"><span data-stu-id="1e224-107">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanReuseTransform%2A> property to determine if the current transform can be reused.</span></span> <span data-ttu-id="1e224-108">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-108">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#3)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#3)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanTransformMultipleBlocks">
      <MemberSignature Language="C#" Value="public bool CanTransformMultipleBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanTransformMultipleBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanTransformMultipleBlocks As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanTransformMultipleBlocks { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e224-109">Obtiene un valor que indica si se pueden transformar varios bloques.</span><span class="sxs-lookup"><span data-stu-id="1e224-109">Gets a value that indicates whether multiple blocks can be transformed.</span></span></summary>
        <value><span data-ttu-id="1e224-110">Siempre es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-110">Always <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-111">En la implementación actual, solo un bloque puede transformarse a la vez, por lo que esta propiedad es siempre `false`.</span><span class="sxs-lookup"><span data-stu-id="1e224-111">In the current implementation, only one block can be transformed at a time, so this property is always `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e224-112">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> método para comprobar que se pueden transformar varios bloques.</span><span class="sxs-lookup"><span data-stu-id="1e224-112">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.CanTransformMultipleBlocks%2A> method to verify that multiple blocks can be transformed.</span></span> <span data-ttu-id="1e224-113">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-113">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#4)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#4)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e224-114">Libera todos los recursos que usa <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-114">Releases all resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-115">Este método es una simple llamada a <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="1e224-115">This method is a simple call to <xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="1e224-116">Al llamar a `Dispose` permite que los recursos utilizados por el <xref:System.Security.Cryptography.ToBase64Transform> se reasignen para otros fines.</span><span class="sxs-lookup"><span data-stu-id="1e224-116">Calling `Dispose` allows the resources used by the <xref:System.Security.Cryptography.ToBase64Transform> to be reallocated for other purposes.</span></span> <span data-ttu-id="1e224-117">Para obtener más información acerca de `Dispose`, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="1e224-117">For more information about `Dispose`, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e224-118">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> método para liberar los recursos no utilizados por la transformación actual.</span><span class="sxs-lookup"><span data-stu-id="1e224-118">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.Clear%2A> method to free up unused resources by the current transform.</span></span> <span data-ttu-id="1e224-119">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-119">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#7)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#7)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1e224-120">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-120">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e224-121">Libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-121">Releases all resources used by the current instance of the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-122">Llame a `Dispose` cuando haya terminado de usar <xref:System.Security.Cryptography.ToBase64Transform>.</span><span class="sxs-lookup"><span data-stu-id="1e224-122">Call `Dispose` when you are finished using the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="1e224-123">El método `Dispose` deja el <xref:System.Security.Cryptography.ToBase64Transform> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="1e224-123">The `Dispose` method leaves the <xref:System.Security.Cryptography.ToBase64Transform> in an unusable state.</span></span> <span data-ttu-id="1e224-124">Después de llamar a `Dispose`, debe liberar todas las referencias a la <xref:System.Security.Cryptography.ToBase64Transform> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Security.Cryptography.ToBase64Transform> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="1e224-124">After calling `Dispose`, you must release all references to the <xref:System.Security.Cryptography.ToBase64Transform> so the garbage collector can reclaim the memory that the <xref:System.Security.Cryptography.ToBase64Transform> was occupying.</span></span>  
  
 <span data-ttu-id="1e224-125">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="1e224-125">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1e224-126">Realice siempre una llamada a `Dispose` antes de liberar la última referencia al objeto <xref:System.Security.Cryptography.ToBase64Transform>.</span><span class="sxs-lookup"><span data-stu-id="1e224-126">Always call `Dispose` before you release your last reference to the <xref:System.Security.Cryptography.ToBase64Transform>.</span></span> <span data-ttu-id="1e224-127">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Security.Cryptography.ToBase64Transform> del objeto `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="1e224-127">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Security.Cryptography.ToBase64Transform> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1e224-128">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="1e224-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="1e224-129">Libera los recursos no administrados que usa <see cref="T:System.Security.Cryptography.ToBase64Transform" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="1e224-129">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-130">Se llama a este método público `Dispose()` método y `Finalize` método.</span><span class="sxs-lookup"><span data-stu-id="1e224-130">This method is called by the public `Dispose()` method and the `Finalize` method.</span></span> <span data-ttu-id="1e224-131">`Dispose()` se invoca el protegido `Dispose(Boolean)` método con el parámetro va a eliminar establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="1e224-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the disposing parameter set to `true`.</span></span> <span data-ttu-id="1e224-132">`Finalize` invoca `Dispose` con desechar establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="1e224-132">`Finalize` invokes `Dispose` with disposing set to `false`.</span></span>  
  
 <span data-ttu-id="1e224-133">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Security.Cryptography.ToBase64Transform> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="1e224-133">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Security.Cryptography.ToBase64Transform> references.</span></span> <span data-ttu-id="1e224-134">Este método invoca al método `Dispose()` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="1e224-134">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="1e224-135"><see langword="Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="1e224-135"><see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="1e224-136">Al reemplazar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-136">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="1e224-137">Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="1e224-137">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="1e224-138">Para obtener más información acerca de <see langword="Dispose" /> y <see langword="Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="1e224-138">For more information about <see langword="Dispose" /> and <see langword="Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~ToBase64Transform ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!ToBase64Transform ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1e224-139">Libera los recursos no administrados que usa <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-139">Releases the unmanaged resources used by the <see cref="T:System.Security.Cryptography.ToBase64Transform" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBlockSize">
      <MemberSignature Language="C#" Value="public int InputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.InputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.InputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e224-140">Obtiene el tamaño del bloque de entrada.</span><span class="sxs-lookup"><span data-stu-id="1e224-140">Gets the input block size.</span></span></summary>
        <value><span data-ttu-id="1e224-141">Tamaño de los bloques de datos de entrada en bytes.</span><span class="sxs-lookup"><span data-stu-id="1e224-141">The size of the input data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-142">El tamaño de bloque de entrada para esta transformación es de 3 bytes.</span><span class="sxs-lookup"><span data-stu-id="1e224-142">The input block size for this transformation is 3 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e224-143">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> propiedad que se va a recuperar el tamaño de bloque de entrada de la transformación actual.</span><span class="sxs-lookup"><span data-stu-id="1e224-143">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.InputBlockSize%2A> property to retrieve the input block size of the current transform.</span></span> <span data-ttu-id="1e224-144">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-144">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#5)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#5)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OutputBlockSize">
      <MemberSignature Language="C#" Value="public int OutputBlockSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OutputBlockSize" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.ToBase64Transform.OutputBlockSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputBlockSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int OutputBlockSize { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1e224-145">Obtiene el tamaño del bloque de salida.</span><span class="sxs-lookup"><span data-stu-id="1e224-145">Gets the output block size.</span></span></summary>
        <value><span data-ttu-id="1e224-146">Tamaño de los bloques de datos de salida en bytes.</span><span class="sxs-lookup"><span data-stu-id="1e224-146">The size of the output data blocks in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-147">El tamaño de bloque de salida para esta transformación es de 4 bytes.</span><span class="sxs-lookup"><span data-stu-id="1e224-147">The output block size for this transformation is 4 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e224-148">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> propiedad que se va a crear una nueva matriz de bytes con el tamaño del tamaño del bloque de salida.</span><span class="sxs-lookup"><span data-stu-id="1e224-148">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.OutputBlockSize%2A> property to create a new byte array with the size of the output block size.</span></span> <span data-ttu-id="1e224-149">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-149">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#6)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#6)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransformBlock">
      <MemberSignature Language="C#" Value="public int TransformBlock (byte[] inputBuffer, int inputOffset, int inputCount, byte[] outputBuffer, int outputOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 TransformBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount, unsigned int8[] outputBuffer, int32 outputOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer, outputBuffer As Byte(), outputOffset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int TransformBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount, cli::array &lt;System::Byte&gt; ^ outputBuffer, int outputOffset);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
        <Parameter Name="outputBuffer" Type="System.Byte[]" />
        <Parameter Name="outputOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="1e224-150">Entrada para calcular en base 64.</span><span class="sxs-lookup"><span data-stu-id="1e224-150">The input to compute to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="1e224-151">Desplazamiento en la matriz de bytes de entrada a partir del cual se van a empezar a usar los datos.</span><span class="sxs-lookup"><span data-stu-id="1e224-151">The offset into the input byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="1e224-152">Número de bytes de la matriz de bytes de entrada que se van a usar como datos.</span><span class="sxs-lookup"><span data-stu-id="1e224-152">The number of bytes in the input byte array to use as data.</span></span></param>
        <param name="outputBuffer"><span data-ttu-id="1e224-153">Salida en la que se escribe el resultado.</span><span class="sxs-lookup"><span data-stu-id="1e224-153">The output to which to write the result.</span></span></param>
        <param name="outputOffset"><span data-ttu-id="1e224-154">Desplazamiento en la matriz de bytes de salida a partir del cual se van a empezar a escribir los datos.</span><span class="sxs-lookup"><span data-stu-id="1e224-154">The offset into the output byte array from which to begin writing data.</span></span></param>
        <summary><span data-ttu-id="1e224-155">Convierte la región especificada de la matriz de bytes de entrada a base 64 y copia el resultado en la región especificada de la matriz de bytes de salida.</span><span class="sxs-lookup"><span data-stu-id="1e224-155">Converts the specified region of the input byte array to base 64 and copies the result to the specified region of the output byte array.</span></span></summary>
        <returns><span data-ttu-id="1e224-156">Número de bytes escritos.</span><span class="sxs-lookup"><span data-stu-id="1e224-156">The number of bytes written.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1e224-157">La <xref:System.Security.Cryptography.ToBase64Transform> clase es un algoritmo de bloque que procesa bloques de entrada de 3 bytes y crea bloques de salida de 4 bytes.</span><span class="sxs-lookup"><span data-stu-id="1e224-157">The <xref:System.Security.Cryptography.ToBase64Transform> class is a block algorithm that processes input blocks of 3 bytes and creates output blocks of 4 bytes.</span></span>  <span data-ttu-id="1e224-158">El <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> método transforma un bloque de entrada de 24 bits en 32 bits de datos de caracteres.</span><span class="sxs-lookup"><span data-stu-id="1e224-158">The <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method transforms an input block of 24 bits into 32 bits of character data.</span></span>  <span data-ttu-id="1e224-159">Debe mantener los límites de entrada de 3 bytes a los límites de salida de 4 bytes para que coincida con la transformación del bloque.</span><span class="sxs-lookup"><span data-stu-id="1e224-159">You must maintain 3 byte input boundaries to 4 byte output boundaries in order to match the block transform.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1e224-160">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> método para recorrer en iteración `inputBytes` transformar por `blockSize`.</span><span class="sxs-lookup"><span data-stu-id="1e224-160">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformBlock%2A> method to iterate through `inputBytes` transforming by `blockSize`.</span></span> <span data-ttu-id="1e224-161">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-161">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#8)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#8)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1e224-162">El objeto <see cref="T:System.Security.Cryptography.ToBase64Transform" /> actual ya se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="1e224-162">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException"><span data-ttu-id="1e224-163">El tamaño de los datos no es válido.</span><span class="sxs-lookup"><span data-stu-id="1e224-163">The data size is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e224-164">El parámetro <paramref name="inputBuffer" /> contiene una longitud de desplazamiento no válida.</span><span class="sxs-lookup"><span data-stu-id="1e224-164">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
 <span data-ttu-id="1e224-165">O bien</span><span class="sxs-lookup"><span data-stu-id="1e224-165">-or-</span></span>  
  
 <span data-ttu-id="1e224-166">El parámetro <paramref name="inputCount" /> contiene un valor que no es válido.</span><span class="sxs-lookup"><span data-stu-id="1e224-166">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e224-167">El parámetro <paramref name="inputBuffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-167">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e224-168">El parámetro <paramref name="inputBuffer" /> requiere un número no negativo.</span><span class="sxs-lookup"><span data-stu-id="1e224-168">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransformFinalBlock">
      <MemberSignature Language="C#" Value="public byte[] TransformFinalBlock (byte[] inputBuffer, int inputOffset, int inputCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] TransformFinalBlock(unsigned int8[] inputBuffer, int32 inputOffset, int32 inputCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TransformFinalBlock (inputBuffer As Byte(), inputOffset As Integer, inputCount As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ TransformFinalBlock(cli::array &lt;System::Byte&gt; ^ inputBuffer, int inputOffset, int inputCount);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Encoding</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputBuffer" Type="System.Byte[]" />
        <Parameter Name="inputOffset" Type="System.Int32" />
        <Parameter Name="inputCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="inputBuffer"><span data-ttu-id="1e224-169">Entrada que se va a convertir a base 64.</span><span class="sxs-lookup"><span data-stu-id="1e224-169">The input to convert to base 64.</span></span></param>
        <param name="inputOffset"><span data-ttu-id="1e224-170">Desplazamiento en la matriz de bytes a partir del cual se empezarán a usar los datos.</span><span class="sxs-lookup"><span data-stu-id="1e224-170">The offset into the byte array from which to begin using data.</span></span></param>
        <param name="inputCount"><span data-ttu-id="1e224-171">Número de bytes de la matriz de bytes que se van a usar como datos.</span><span class="sxs-lookup"><span data-stu-id="1e224-171">The number of bytes in the byte array to use as data.</span></span></param>
        <summary><span data-ttu-id="1e224-172">Convierte la región especificada de la matriz de bytes establecida a base 64.</span><span class="sxs-lookup"><span data-stu-id="1e224-172">Converts the specified region of the specified byte array to base 64.</span></span></summary>
        <returns><span data-ttu-id="1e224-173">Conversión a base 64 calculada.</span><span class="sxs-lookup"><span data-stu-id="1e224-173">The computed base 64 conversion.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1e224-174">En el ejemplo de código siguiente se muestra cómo llamar a la <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> método para transformar el bloque final de los datos.</span><span class="sxs-lookup"><span data-stu-id="1e224-174">The following code example demonstrates how to call the <xref:System.Security.Cryptography.ToBase64Transform.TransformFinalBlock%2A> method to transform the final block of data.</span></span> <span data-ttu-id="1e224-175">Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Security.Cryptography.ToBase64Transform> clase.</span><span class="sxs-lookup"><span data-stu-id="1e224-175">This code example is part of a larger example provided for the <xref:System.Security.Cryptography.ToBase64Transform> class.</span></span>  
  
 [!code-cpp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CPP/members.cpp#9)]
 [!code-csharp[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/CS/members.cs#9)]
 [!code-vb[System.Security.Cryptography.ToBase64Transform#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.ToBase64Transform/VB/members.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="1e224-176">El objeto <see cref="T:System.Security.Cryptography.ToBase64Transform" /> actual ya se ha desechado.</span><span class="sxs-lookup"><span data-stu-id="1e224-176">The current <see cref="T:System.Security.Cryptography.ToBase64Transform" /> object has already been disposed.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1e224-177">El parámetro <paramref name="inputBuffer" /> contiene una longitud de desplazamiento no válida.</span><span class="sxs-lookup"><span data-stu-id="1e224-177">The <paramref name="inputBuffer" /> parameter contains an invalid offset length.</span></span>  
  
 <span data-ttu-id="1e224-178">O bien</span><span class="sxs-lookup"><span data-stu-id="1e224-178">-or-</span></span>  
  
 <span data-ttu-id="1e224-179">El parámetro <paramref name="inputCount" /> contiene un valor que no es válido.</span><span class="sxs-lookup"><span data-stu-id="1e224-179">The <paramref name="inputCount" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1e224-180">El parámetro <paramref name="inputBuffer" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="1e224-180">The <paramref name="inputBuffer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="1e224-181">El parámetro <paramref name="inputBuffer" /> requiere un número no negativo.</span><span class="sxs-lookup"><span data-stu-id="1e224-181">The <paramref name="inputBuffer" /> parameter requires a non-negative number.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>