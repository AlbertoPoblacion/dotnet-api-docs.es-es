<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FromBase64Transform.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51fa1860ed9e6a3808138df2efa8db8760f0dbf46.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1fa1860ed9e6a3808138df2efa8db8760f0dbf46</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.FromBase64Transform">
          <source>Converts a <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> from base 64.</source>
          <target state="translated">Convierte un <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.CryptoStream" /&gt;</ph> desde la base 64.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.FromBase64Transform">
          <source>Base 64 Content-Transfer-Encoding represents arbitrary bit sequences in a form that is not human readable.</source>
          <target state="translated">Codificación de transferencia de contenido de base 64 representa secuencias de bits arbitrarias en una forma que no sea usuarios legible.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.FromBase64Transform">
          <source>The following example decodes a base 64-encoded file to an output text file.</source>
          <target state="translated">En el ejemplo siguiente, se descodifica un archivo cifrado de base64 base en un archivo de texto de salida.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.FromBase64Transform">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.#ctor">
          <source>In the default configuration, white spaces are ignored.</source>
          <target state="translated">En la configuración predeterminada, se omiten los espacios en blanco.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.#ctor">
          <source>See <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64TransformMode&gt;</ph> for more details.</source>
          <target state="translated">Vea <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64TransformMode&gt;</ph> para obtener más información.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> class with the specified transformation mode.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> con el modo de transformación especificado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.#ctor(System.Security.Cryptography.FromBase64TransformMode)">
          <source>The following example decodes a base 64-encoded file to an output text file.</source>
          <target state="translated">En el ejemplo siguiente, se descodifica un archivo cifrado de base64 base en un archivo de texto de salida.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.FromBase64Transform.CanReuseTransform">
          <source>Gets a value indicating whether the current transform can be reused.</source>
          <target state="translated">Obtiene un valor que indica si la transformación actual puede volver a usarse.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.FromBase64Transform.CanReuseTransform">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Siempre es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks">
          <source>Gets a value that indicates whether multiple blocks can be transformed.</source>
          <target state="translated">Obtiene un valor que indica si se pueden transformar varios bloques.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks">
          <source>Always <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Siempre es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.FromBase64Transform.CanTransformMultipleBlocks">
          <source>In the current implementation, only one block can be transformed at a time, so this property is always <ph id="ph1">`false`</ph>.</source>
          <target state="translated">En la implementación actual, solo un bloque puede transformarse a la vez, por lo que esta propiedad es siempre <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.Clear">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</source>
          <target state="translated">Libera todos los recursos que usa <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Clear">
          <source>This method is a simple call to <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método es una simple llamada a <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Clear">
          <source>Calling <ph id="ph1">`Dispose`</ph> allows the resources used by the <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Al llamar a <ph id="ph1">`Dispose`</ph> permite que los recursos utilizados por el <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> se reasignen para otros fines.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Clear">
          <source>For more information about <ph id="ph1">`Dispose`</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">`Dispose`</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.FromBase64Transform">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Libera todos los recursos usados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> class.</source>
          <target state="translated">Libera todos los recursos usados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph>.</source>
          <target state="translated">Llame a <ph id="ph1">`Dispose`</ph> cuando haya terminado de usar <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> in an unusable state.</source>
          <target state="translated">El método <ph id="ph1">`Dispose`</ph> deja el <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> en un estado no utilizable.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> was occupying.</source>
          <target state="translated">Después de llamar a <ph id="ph1">`Dispose`</ph>, debe liberar todas las referencias a la <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <ph id="ph3">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> estaba ocupando.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>implementa un método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph>.</source>
          <target state="translated">Realice siempre una llamada a <ph id="ph1">`Dispose`</ph> antes de liberar la última referencia al objeto <ph id="ph2">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <ph id="ph1">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> del objeto <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">`Dispose()`</ph> método y <ph id="ph2">`Finalize`</ph> método.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the disposing parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> se invoca el protegido <ph id="ph2">`Dispose(Boolean)`</ph> método con el parámetro va a eliminar establecido en <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">`Finalize`</ph> invokes <ph id="ph2">`Dispose`</ph> with disposing set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">`Finalize`</ph> invoca <ph id="ph2">`Dispose`</ph> con desechar establecido en <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> references.</source>
          <target state="translated">Cuando el parámetro <ph id="ph1">`disposing`</ph> es <ph id="ph2">`true`</ph>, este método libera todos los recursos retenidos por los objetos administrados a los que el control <ph id="ph3">&lt;xref:System.Security.Cryptography.FromBase64Transform&gt;</ph> hace referencia.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">`Dispose()`</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see langword="Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.Finalize">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.FromBase64Transform.InputBlockSize">
          <source>Gets the input block size.</source>
          <target state="translated">Obtiene el tamaño del bloque de entrada.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.FromBase64Transform.InputBlockSize">
          <source>The size of the input data blocks in bytes.</source>
          <target state="translated">Tamaño de los bloques de datos de entrada en bytes.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.FromBase64Transform.InputBlockSize">
          <source>The input block size for this transformation is one byte.</source>
          <target state="translated">El tamaño de bloque de entrada para esta transformación es un byte.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.FromBase64Transform.OutputBlockSize">
          <source>Gets the output block size.</source>
          <target state="translated">Obtiene el tamaño del bloque de salida.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.FromBase64Transform.OutputBlockSize">
          <source>The size of the output data blocks in bytes.</source>
          <target state="translated">Tamaño de los bloques de datos de salida en bytes.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.FromBase64Transform.OutputBlockSize">
          <source>The output block size for this transformation is 3 bytes.</source>
          <target state="translated">El tamaño de bloque de salida para esta transformación es de 3 bytes.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The input to compute from base 64.</source>
          <target state="translated">Entrada para calcular desde la base 64.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the input byte array from which to begin using data.</source>
          <target state="translated">Desplazamiento en la matriz de bytes de entrada a partir del cual se van a empezar a usar los datos.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes in the input byte array to use as data.</source>
          <target state="translated">Número de bytes de la matriz de bytes de entrada que se van a usar como datos.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The output to which to write the result.</source>
          <target state="translated">Salida en la que se escribe el resultado.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The offset into the output byte array from which to begin writing data.</source>
          <target state="translated">Desplazamiento en la matriz de bytes de salida a partir del cual se van a empezar a escribir los datos.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>Converts the specified region of the input byte array from base 64 and copies the result to the specified region of the output byte array.</source>
          <target state="translated">Convierte la región especificada de la matriz de bytes de entrada desde base 64 y copia el resultado en la región especificada de la matriz de bytes de salida.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The number of bytes written.</source>
          <target state="translated">Número de bytes escritos.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The following example decrypts a base 64-encoded file to an output text file.</source>
          <target state="translated">En el ejemplo siguiente se descifra un archivo cifrado de base64 base en un archivo de texto de salida.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> object has already been disposed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> actual ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> uses an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> utiliza un valor no válido.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> has an invalid offset length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> tiene una longitud de desplazamiento no válida.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> está fuera del intervalo.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Este parámetro requiere un número no negativo.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The input to convert from base 64.</source>
          <target state="translated">Entrada para convertir desde la base 64.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The offset into the byte array from which to begin using data.</source>
          <target state="translated">Desplazamiento en la matriz de bytes a partir del cual se empezarán a usar los datos.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The number of bytes in the byte array to use as data.</source>
          <target state="translated">Número de bytes de la matriz de bytes que se van a usar como datos.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>Converts the specified region of the specified byte array from base 64.</source>
          <target state="translated">Convierte la región especificada de la matriz de bytes indicada desde la base 64.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The computed conversion.</source>
          <target state="translated">Conversión calculada.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The following example decrypts a base 64-encoded file to an output text file.</source>
          <target state="translated">En el ejemplo siguiente se descifra un archivo cifrado de base64 base en un archivo de texto de salida.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> object has already been disposed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.FromBase64Transform" /&gt;</ph> actual ya se ha desechado.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> has an invalid offset length.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> tiene una longitud de desplazamiento no válida.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> has an invalid value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputCount" /&gt;</ph> tiene un valor no válido.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> is out of range.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputOffset" /&gt;</ph> está fuera del intervalo.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source>This parameter requires a non-negative number.</source>
          <target state="translated">Este parámetro requiere un número no negativo.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.FromBase64Transform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="inputBuffer" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>