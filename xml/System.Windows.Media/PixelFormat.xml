<Type Name="PixelFormat" FullName="System.Windows.Media.PixelFormat">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33ff20d87161963dbd9623ab33d485f8237592e8" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52346451" /></Metadata><TypeSignature Language="C#" Value="public struct PixelFormat : IEquatable&lt;System.Windows.Media.PixelFormat&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit PixelFormat extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.PixelFormat&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.PixelFormat" />
  <TypeSignature Language="VB.NET" Value="Public Structure PixelFormat&#xA;Implements IEquatable(Of PixelFormat)" />
  <TypeSignature Language="C++ CLI" Value="public value class PixelFormat : IEquatable&lt;System::Windows::Media::PixelFormat&gt;" />
  <TypeSignature Language="F#" Value="type PixelFormat = struct" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.PixelFormat&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Media.PixelFormatConverter))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define un formato de píxel para las imágenes y las superficies basadas en píxeles.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_PixelFormat"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="pixelFormat"/>  
```  
  
<a name="xamlValues_PixelFormat"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *pixelFormat*  
 Uno de los formatos de píxel predefinidos definidos por el <xref:System.Windows.Media.PixelFormats> clase.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo crear un <xref:System.Windows.Media.PixelFormat> y busque el valor de sus propiedades.  
  
 [!code-csharp[ImagingSnippetGallery_procedural_snip#PixelFormatExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ImagingSnippetGallery_procedural_snip/CSharp/PixelFormatsExample.cs#pixelformatexample1)]
 [!code-vb[ImagingSnippetGallery_procedural_snip#PixelFormatExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImagingSnippetGallery_procedural_snip/VB/PixelFormatsExample.vb#pixelformatexample1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PixelFormats" />
  </Docs>
  <Members>
    <Member MemberName="BitsPerPixel">
      <MemberSignature Language="C#" Value="public int BitsPerPixel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BitsPerPixel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PixelFormat.BitsPerPixel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BitsPerPixel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BitsPerPixel { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BitsPerPixel : int" Usage="System.Windows.Media.PixelFormat.BitsPerPixel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el número de bits por píxel (bpp) para este objeto <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
        <value>El número de bits por píxel (bpp) para este objeto <see cref="T:System.Windows.Media.PixelFormat" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Media.PixelFormat.BitsPerPixel%2A> propiedad para buscar el número de bits por píxel de un formato de píxel.  
  
 [!code-csharp[ImagingSnippetGallery_procedural_snip#PixelFormatExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ImagingSnippetGallery_procedural_snip/CSharp/PixelFormatsExample.cs#pixelformatexample1)]
 [!code-vb[ImagingSnippetGallery_procedural_snip#PixelFormatExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImagingSnippetGallery_procedural_snip/VB/PixelFormatsExample.vb#pixelformatexample1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si los dos objetos <see cref="T:System.Windows.Media.PixelFormat" /> son iguales.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PixelFormat.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="pixelFormat.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objeto que se va a comparar con el objeto actual.</param>
        <summary>Determina si el objeto especificado es igual al objeto actual.</summary>
        <returns><see langword="true" /> si <see cref="T:System.Windows.Media.PixelFormat" /> es igual a <paramref name="obj" />; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.PixelFormat pixelFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.PixelFormat pixelFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PixelFormat.Equals(System.Windows.Media.PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::PixelFormat pixelFormat);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.Media.PixelFormat -&gt; bool" Usage="pixelFormat.Equals pixelFormat" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pixelFormat" Type="System.Windows.Media.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="pixelFormat">El formato de píxel que se va a comparar.</param>
        <summary>Determina si el formato de píxel es igual al objeto <see cref="T:System.Windows.Media.PixelFormat" /> dado.</summary>
        <returns><see langword="true" /> si los formatos de píxel son iguales; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (System.Windows.Media.PixelFormat left, System.Windows.Media.PixelFormat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(valuetype System.Windows.Media.PixelFormat left, valuetype System.Windows.Media.PixelFormat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PixelFormat.Equals(System.Windows.Media.PixelFormat,System.Windows.Media.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (left As PixelFormat, right As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Windows::Media::PixelFormat left, System::Windows::Media::PixelFormat right);" />
      <MemberSignature Language="F#" Value="static member Equals : System.Windows.Media.PixelFormat * System.Windows.Media.PixelFormat -&gt; bool" Usage="System.Windows.Media.PixelFormat.Equals (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.PixelFormat" />
        <Parameter Name="right" Type="System.Windows.Media.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="left">Primer objeto <see cref="T:System.Windows.Media.PixelFormat" /> cuya igualdad se va a comparar.</param>
        <param name="right">Segundo objeto <see cref="T:System.Windows.Media.PixelFormat" /> cuya igualdad se va a comparar.</param>
        <summary>Determina si las instancias de <see cref="T:System.Windows.Media.PixelFormat" /> especificadas se consideran iguales.</summary>
        <returns><see langword="true" /> si los dos parámetros son iguales; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PixelFormat.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="pixelFormat.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un código hash a partir del valor de <see cref="P:System.Windows.Media.PixelFormat.Masks" /> de este formato de píxel.</summary>
        <returns>El código hash del formato de píxel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Masks">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Windows.Media.PixelFormatChannelMask&gt; Masks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Media.PixelFormatChannelMask&gt; Masks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.PixelFormat.Masks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Masks As IList(Of PixelFormatChannelMask)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Windows::Media::PixelFormatChannelMask&gt; ^ Masks { System::Collections::Generic::IList&lt;System::Windows::Media::PixelFormatChannelMask&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Masks : System.Collections.Generic.IList&lt;System.Windows.Media.PixelFormatChannelMask&gt;" Usage="System.Windows.Media.PixelFormat.Masks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Media.PixelFormatChannelMask&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de máscaras de bits asociadas al objeto <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
        <value>La colección de máscaras de bits y los cambios asociados al objeto <see cref="T:System.Windows.Media.PixelFormat" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente muestra cómo usar el <xref:System.Windows.Media.PixelFormat.Masks%2A> propiedad va a obtener las máscaras de bits asociadas con el formato de píxel.  
  
 [!code-csharp[ImagingSnippetGallery_procedural_snip#PixelFormatExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ImagingSnippetGallery_procedural_snip/CSharp/PixelFormatsExample.cs#pixelformatexample1)]
 [!code-vb[ImagingSnippetGallery_procedural_snip#PixelFormatExample1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ImagingSnippetGallery_procedural_snip/VB/PixelFormatsExample.vb#pixelformatexample1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.PixelFormat left, System.Windows.Media.PixelFormat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.PixelFormat left, valuetype System.Windows.Media.PixelFormat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PixelFormat.op_Equality(System.Windows.Media.PixelFormat,System.Windows.Media.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As PixelFormat, right As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::PixelFormat left, System::Windows::Media::PixelFormat right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.Media.PixelFormat * System.Windows.Media.PixelFormat -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.PixelFormat" />
        <Parameter Name="right" Type="System.Windows.Media.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="left">Primer objeto <see cref="T:System.Windows.Media.PixelFormat" /> que se va a comparar.</param>
        <param name="right">Segundo objeto <see cref="T:System.Windows.Media.PixelFormat" /> que se va a comparar.</param>
        <summary>Compara dos instancias de <see cref="T:System.Windows.Media.PixelFormat" /> para determinar si sus valores son iguales.</summary>
        <returns>Es <see langword="true" /> si los dos objetos <see cref="T:System.Windows.Media.PixelFormat" /> son iguales; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.PixelFormat left, System.Windows.Media.PixelFormat right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.PixelFormat left, valuetype System.Windows.Media.PixelFormat right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PixelFormat.op_Inequality(System.Windows.Media.PixelFormat,System.Windows.Media.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As PixelFormat, right As PixelFormat) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::PixelFormat left, System::Windows::Media::PixelFormat right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.Media.PixelFormat * System.Windows.Media.PixelFormat -&gt; bool" Usage="System.Windows.Media.PixelFormat.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.PixelFormat" />
        <Parameter Name="right" Type="System.Windows.Media.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="left">Primer objeto <see cref="T:System.Windows.Media.PixelFormat" /> que se va a comparar.</param>
        <param name="right">Segundo objeto <see cref="T:System.Windows.Media.PixelFormat" /> que se va a comparar.</param>
        <summary>Compara dos instancias de <see cref="T:System.Windows.Media.PixelFormat" /> para determinar si no son iguales.</summary>
        <returns>Es <see langword="true" /> si los objetos <see cref="T:System.Windows.Media.PixelFormat" /> no son iguales; en caso contrario, es <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.PixelFormat.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="pixelFormat.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una representación de cadena de este objeto <see cref="T:System.Windows.Media.PixelFormat" />.</summary>
        <returns><see cref="T:System.String" /> que contiene una representación del objeto <see cref="T:System.Windows.Media.PixelFormat" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>