<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="VisualTreeHelper.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e915853b0ae47964f34415a9dd0c35719396302.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e915853b0ae47964f34415a9dd0c35719396302</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Provides utility methods that perform common tasks involving nodes in a visual tree.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Nodes in the visual tree can be either <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> objects.</source>
          <target state="translated">Nodos en el árbol visual pueden ser <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Methods that are specific to a type of visual object are typed as either <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>.</source>
          <target state="translated">Métodos que son específicas de un tipo de objeto visual se escriben como <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>However, some methods in the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph> class can accept a <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> value that represents either type of visual object.</source>
          <target state="translated">Sin embargo, algunos métodos en la <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper&gt;</ph> clase puede aceptar un <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> valor que representa cualquier tipo de objeto visual.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> supports programmatic access to several different tree structures of objects.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> admite el acceso mediante programación a varias diferentes estructuras de árbol de objetos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Primarily, this is exposed as a visual tree and a logical tree.</source>
          <target state="translated">Principalmente, esto se expone como un árbol visual y un árbol lógico.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>In some cases, the logical tree is a more useful representation of the elements in a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> application, but conceptually the logical tree is implemented at a level beyond the <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> class.</source>
          <target state="translated">En algunos casos, el árbol lógico es una representación más útil de los elementos de un <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> aplicación, pero conceptualmente el árbol lógico se implementa en un nivel más allá de la <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Unlike the visual tree, the logical tree can represent nonvisual data objects, such as <ph id="ph1">&lt;xref:System.Windows.Documents.ListItem&gt;</ph>.</source>
          <target state="translated">A diferencia del árbol visual, el árbol lógico puede representar objetos de datos no visuales, como <ph id="ph1">&lt;xref:System.Windows.Documents.ListItem&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>For more information on the logical tree, see <bpt id="p1">[</bpt>Trees in WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</source>
          <target state="translated">Para más información acerca del árbol lógico, consulte <bpt id="p1">[</bpt>Árboles en WPF<ept id="p1">](~/docs/framework/wpf/advanced/trees-in-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>The logical tree also is supported by a similar utility method class, <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph>.</source>
          <target state="translated">El árbol lógico también es compatible con una clase de método de utilidad similar, <ph id="ph1">&lt;xref:System.Windows.LogicalTreeHelper&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>The following example shows how to enumerate all the descendants of a visual object, which is a technique you might want to use if you were interested in serializing all the rendering information of a visual object hierarchy.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo enumerar todos los descendientes de un objeto visual, que es una técnica que se puede utilizar si se desea serializar toda la información de representación de una jerarquía de objetos visuales.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that contains the bitmap effect.</source>
          
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> value for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffect" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> that contains the bitmap effect input value.</source>
          
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> value for the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetBitmapEffectInput(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.BitmapEffectInput" /&gt;</ph> for this <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to get the <ph id="ph2">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph> for.</source>
          
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)">
          <source>Retrieves the cached representation of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetCacheMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.CacheMode" /&gt;</ph> for <ph id="ph2">&lt;paramref name="reference" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The parent visual, referenced as a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The index that represents the child visual that is contained by <bpt id="p1">&lt;c&gt;</bpt>reference<ept id="p1">&lt;/c&gt;</ept>.</source>
          
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>Returns the child visual object from the specified collection index within a specified parent.</source>
          
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The index value of the child visual object.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A&gt;</ph> method to determine the total number of child elements of a parent visual.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChildrenCount%2A&gt;</ph> método para determinar el número total de elementos secundarios de un elemento primario visual.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The value of <ph id="ph1">`reference`</ph> can represent either a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> object, which is why the common base type <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> is used here as a parameter type.</source>
          <target state="translated">El valor de <ph id="ph1">`reference`</ph> puede representar un <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> objeto, motivo por el que el tipo base común <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> se utiliza aquí como un tipo de parámetro.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>The following example shows how to enumerate all the descendants of a visual object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo enumerar a todos los descendientes de un objeto visual.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChild(System.Windows.DependencyObject,System.Int32)">
          <source>This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.</source>
          <target state="translated">Se trata de una técnica que se puede usar si está interesado en la serialización de toda la información de representación de una jerarquía de objetos visuales o lleva a cabo análisis o representación alternativa.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The parent visual that is referenced as a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>Returns the number of children that the specified visual object contains.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The number of child visuals that the parent visual contains.</source>
          
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChild%2A&gt;</ph> method to retrieve a specified child of a parent visual.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetChild%2A&gt;</ph> método para recuperar un elemento secundario especificado de un elemento primario visual.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The value of <ph id="ph1">`reference`</ph> can represent either a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> object, which is why the common base type <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> is used here as a parameter type.</source>
          <target state="translated">El valor de <ph id="ph1">`reference`</ph> puede representar un <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> objeto, motivo por el que el tipo base común <ph id="ph4">&lt;xref:System.Windows.DependencyObject&gt;</ph> se utiliza aquí como un tipo de parámetro.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>The following example shows how to enumerate all the descendants of a visual object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo enumerar a todos los descendientes de un objeto visual.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetChildrenCount(System.Windows.DependencyObject)">
          <source>This is a technique you might use if you are interested in serializing all the rendering information of a visual object hierarchy or are performing analysis or alternative rendering.</source>
          <target state="translated">Se trata de una técnica que se puede usar si está interesado en la serialización de toda la información de representación de una jerarquía de objetos visuales o lleva a cabo análisis o representación alternativa.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose clip region value is returned.</source>
          
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
          <source>Return the clip region of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetClip(System.Windows.Media.Visual)">
          <source>The clip region value of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> returned as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.Geometry" /&gt;</ph> type.</source>
          
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Returns the cached bounding box rectangle for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>The 3D visual whose bounding box value is computed.</source>
          
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Returns the cached bounding box rectangle for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>The bounding box 3D rectangle for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph> method to return the union of all the content bounding boxes for all the descendants of a 3D visual object, which includes the <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> itself.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph> método para devolver la unión de todo el contenido de cuadros de límite para todos los descendientes de un objeto visual 3D, que incluye el <ph id="ph2">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> propio.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose bounding box value is computed.</source>
          
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>Returns the cached bounding box rectangle for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>The bounding box rectangle for the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph> method to return the union of all the content bounding boxes for all the descendants of a visual object, which includes the <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> itself.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDescendantBounds%2A&gt;</ph> método para devolver la unión de todo el contenido de cuadros de límite para todos los descendientes de un objeto visual, que incluye el <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> propio.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetContentBounds(System.Windows.Media.Visual)">
          <source>The following example shows how to retrieve the bounding rectangle of a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> object.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo recuperar el rectángulo delimitador de un <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Returns the union of all the content bounding boxes for all the descendants of the visual object, which includes the content bounding box of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>The 3D visual whose bounding box value for all descendants is computed.</source>
          
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Returns the union of all the content bounding boxes for all the descendants of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>, which includes the content bounding box of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Returns the bounding box 3D rectangle for the 3D visual.</source>
          
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Media3D.Visual3D)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph> method to return the cached bounding box rectangle for a 3D visual object.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph> método para devolver el rectángulo delimitador de cuadro en caché para un objeto visual 3D.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose bounding box value for all descendants is computed.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>Returns the union of all the content bounding boxes for all the descendants of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, which includes the content bounding box of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>The bounding box rectangle for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>Call the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph> method to return the cached bounding box rectangle for a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetContentBounds%2A&gt;</ph> método para devolver el rectángulo delimitador de cuadro en caché para un <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDescendantBounds(System.Windows.Media.Visual)">
          <source>The following example shows how to retrieve the union of bounding rectangles for the descendants of a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo recuperar la unión de rectángulos delimitadores de los descendientes de un <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)">
          <source>The Visual target object.</source>
          
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)">
          <source>Gets the DPI information at which this Visual is measured and rendered.</source>
          
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDpi(System.Windows.Media.Visual)">
          <source>A DPIScale value.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose drawing content is returned.</source>
          
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>Returns the drawing content of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>The drawing content of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> returned as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.DrawingGroup" /&gt;</ph> type.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>The following example shows how to retrieve the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> from a visual object by using the <ph id="ph2">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo recuperar el <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> desde un objeto visual utilizando el <ph id="ph2">&lt;xref:System.Windows.Media.VisualTreeHelper.GetDrawing%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetDrawing(System.Windows.Media.Visual)">
          <source>A hit test is then performed on the geometry of each drawing in the <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> to determine which geometry was hit.</source>
          <target state="translated">A continuación, se realiza una prueba de posicionamiento en la geometría de cada dibujo el <ph id="ph1">&lt;xref:System.Windows.Media.DrawingGroup&gt;</ph> para determinar qué geometría se obtuvo acceso.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose edge mode value is returned.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Returns the edge mode of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> as an <ph id="ph2">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> value.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.EdgeMode" /&gt;</ph> value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>The edge mode value determines how the edges of non-text primitives are rendered.</source>
          <target state="translated">El valor del modo de borde determina cómo se representan los bordes de los tipos primitivos no son de texto.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Edge mode value</source>
          <target state="translated">Valor del modo de borde</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Description</source>
          <target state="translated">Descripción</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Render edges of non-text primitives as aliased edges.</source>
          <target state="translated">Representa los bordes de los elementos primitivos no son de texto como bordes sin suavizado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>No edge mode is specified.</source>
          <target state="translated">No se especifica ningún modo de borde.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetEdgeMode(System.Windows.Media.Visual)">
          <source>Do not change the current edge mode that is applied to non-text primitives.</source>
          <target state="translated">No cambie el modo de borde actual que se aplica a tipos primitivos no son de texto.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to get the bitmap effect for.</source>
          
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
          <source>Gets the bitmap effect for the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetEffect(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Effects.Effect" /&gt;</ph> applied to <ph id="ph2">&lt;paramref name="reference" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose offset is returned.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>Returns the offset of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Vector" /&gt;</ph> that represents the offset value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The returned offset value is relative to the parent of the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">El valor de desplazamiento devuelto es relativo al elemento primario de la <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>If you want to return an offset value that is not relative to the parent of a <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method.</source>
          <target state="translated">Si desea devolver un valor de desplazamiento que no es relativo al elemento primario de un <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>, use el <ph id="ph2">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The following markup example shows a <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> that is defined with <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> value of 4.</source>
          <target state="translated">El ejemplo de marcado siguiente se muestra un <ph id="ph1">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph> que se define con <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> valor 4.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A&gt;</ph> method to retrieve the offset of the <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetOffset%2A&gt;</ph> método para recuperar el desplazamiento de la <ph id="ph2">&lt;xref:System.Windows.Controls.TextBlock&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The offset values are contained within the returned <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> value.</source>
          <target state="translated">Los valores de desplazamiento se encuentran en el valor devuelto <ph id="ph1">&lt;xref:System.Windows.Vector&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>The offset takes into account the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> value.</source>
          <target state="translated">El desplazamiento tiene en cuenta el <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Margin%2A&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOffset(System.Windows.Media.Visual)">
          <source>In this case, <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> is 4, and <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> is 4.</source>
          <target state="translated">En este caso, <ph id="ph1">&lt;xref:System.Windows.Vector.X%2A&gt;</ph> es 4, y <ph id="ph2">&lt;xref:System.Windows.Vector.Y%2A&gt;</ph> es 4.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose opacity value is returned.</source>
          
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>Returns the opacity of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> that represents the opacity value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>The value of the opacity is expressed as a value between 0 and 1.</source>
          <target state="translated">El valor de la opacidad se expresa como un valor entre 0 y 1.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>A value of 0 indicates that the element is completely transparent, while a value of 1 indicates that the element is completely opaque.</source>
          <target state="translated">Un valor de 0 indica que el elemento es completamente transparente, mientras que un valor de 1 indica que el elemento es completamente opaco.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>A value of 0.5 indicates that the element is 50 percent opaque.</source>
          <target state="translated">Un valor de 0,5 indica que el elemento es opaco en un 50 por ciento.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacity(System.Windows.Media.Visual)">
          <source>Values less than 0 are treated as 0, and values greater than 1 are treated as 1.</source>
          <target state="translated">Los valores menores que 0 se tratan como 0 y los valores mayores que 1 se tratan como 1.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose opacity mask value is returned.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> value that represents the opacity mask of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>A value of type <ph id="ph1">&lt;see cref="T:System.Windows.Media.Brush" /&gt;</ph> that represents the opacity mask value of the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetOpacityMask(System.Windows.Media.Visual)">
          <source>The opacity mask is a <ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph> that is applied to any alpha-channel masking for the rendered content of this <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">La máscara de opacidad es un <ph id="ph1">&lt;xref:System.Windows.Media.Brush&gt;</ph> que se aplica a cualquier máscara de canal alfa para el contenido representado de este <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The visual whose parent is returned.</source>
          
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> value that represents the parent of the visual object.</source>
          
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The parent of the visual.</source>
          
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetParent(System.Windows.DependencyObject)">
          <source>The value of <ph id="ph1">`reference`</ph> can represent either a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> object.</source>
          <target state="translated">El valor de <ph id="ph1">`reference`</ph> puede representar un <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> o <ph id="ph3">&lt;xref:System.Windows.Media.Media3D.Visual3D&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose transform value is returned.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Media.Transform" /&gt;</ph> value for the <ph id="ph2">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The transform value of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="reference" /&gt;</ph> does not have a transform defined.</source>
          
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>Alternatively, you can use the <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method to return a transform value for the ancestor of a <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">Como alternativa, puede usar el <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> método debe devolver un valor de la transformación para el antecesor de un <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>This method always returns a valid transform.</source>
          <target state="translated">Este método siempre devuelve una transformación válida.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The following code example shows how to use <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar <ph id="ph1">&lt;xref:System.Windows.Media.Visual.TransformToAncestor%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetTransform%2A&gt;</ph> method to retrieve the transform for the specified visual object.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.GetTransform%2A&gt;</ph> método para recuperar la transformación para el objeto visual especificado.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>Your code should test for <ph id="ph1">`null`</ph> before using the returned value.</source>
          <target state="translated">Debe probar el código de <ph id="ph1">`null`</ph> antes de usar el valor devuelto.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>To return the offset of the returned transform, use the <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform.Transform%2A&gt;</ph> method.</source>
          <target state="translated">Para devolver el desplazamiento de la transformación devuelta, utilice el <ph id="ph1">&lt;xref:System.Windows.Media.GeneralTransform.Transform%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetTransform(System.Windows.Media.Visual)">
          <source>The offset value is relative to the parent of the <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">El valor de desplazamiento es relativo al elemento primario de la <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose X-coordinate guideline collection is returned.</source>
          
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Returns an X-coordinate (vertical) guideline collection.</source>
          
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The X-coordinate guideline collection of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">Ajuste de píxeles es el proceso en el que se corrige el diseño de contenido para que los bordes de los objetos se representan en píxeles específicos del dispositivo.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated">El sistema de gráficos de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usa unidades independientes del dispositivo para habilitar la resolución y la independencia del dispositivo.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">Cada píxel independiente del dispositivo se escala automáticamente con el sistema <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> configuración.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">Esto proporciona a las aplicaciones de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> un escalado adecuado para diferentes configuraciones de <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> y hace que la aplicación detecte el valor de <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> automáticamente.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">Sin embargo, esto <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independencia puede crear la representación de bordes irregulares debido a la función de suavizado.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">Estos artefactos, suelen aparecer como bordes borrosos o "soft", pueden producirse cuando un borde se encuentra en medio de un píxel de dispositivo en lugar de hacerlo entre píxeles de dispositivo.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetXSnappingGuidelines(System.Windows.Media.Visual)">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">Para resolver este problema, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> proporciona una manera de bordes de los objetos de un árbol visual para "ajuste" con los píxeles del dispositivo a través de ajuste de píxeles, lo que elimina los bordes suaves generados por suavizado.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> whose Y-coordinate guideline collection is returned.</source>
          
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Returns a Y-coordinate (horizontal) guideline collection.</source>
          
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The Y-coordinate guideline collection of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Pixel snapping is the process in which content layout is fixed so that object edges are rendered on device-specific pixels.</source>
          <target state="translated">Ajuste de píxeles es el proceso en el que se corrige el diseño de contenido para que los bordes de los objetos se representan en píxeles específicos del dispositivo.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> graphics system uses device-independent units to enable resolution and device independence.</source>
          <target state="translated">El sistema de gráficos de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> usa unidades independientes del dispositivo para habilitar la resolución y la independencia del dispositivo.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>Each device independent pixel automatically scales with the system's <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> setting.</source>
          <target state="translated">Cada píxel independiente del dispositivo se escala automáticamente con el sistema <ph id="ph1">[!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)]</ph> configuración.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>This provides <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> applications proper scaling for different <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> settings and makes the application automatically <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph>-aware.</source>
          <target state="translated">Esto proporciona a las aplicaciones de <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> un escalado adecuado para diferentes configuraciones de <ph id="ph2">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> y hace que la aplicación detecte el valor de <ph id="ph3">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> automáticamente.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>However, this <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independence can create irregular edge rendering due to anti-aliasing.</source>
          <target state="translated">Sin embargo, esto <ph id="ph1">[!INCLUDE[TLA2#tla_dpi](~/includes/tla2sharptla-dpi-md.md)]</ph> independencia puede crear la representación de bordes irregulares debido a la función de suavizado.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>These artifacts, commonly seen as blurry, or "soft" edges, can occur when the location of an edge falls in the middle of a device pixel rather than between device pixels.</source>
          <target state="translated">Estos artefactos, suelen aparecer como bordes borrosos o "soft", pueden producirse cuando un borde se encuentra en medio de un píxel de dispositivo en lugar de hacerlo entre píxeles de dispositivo.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.GetYSnappingGuidelines(System.Windows.Media.Visual)">
          <source>To address this issue, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> provides a way for object edges in a visual tree to "snap" to device pixels through pixel snapping, eliminating the soft edges produced by anti-aliasing.</source>
          <target state="translated">Para resolver este problema, <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> proporciona una manera de bordes de los objetos de un árbol visual para "ajuste" con los píxeles del dispositivo a través de ajuste de píxeles, lo que elimina los bordes suaves generados por suavizado.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Returns the topmost <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object of a hit test.</source>
          
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>The overloaded methods that take <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResultCallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph> as parameters provide additional functionality during hit testing:</source>
          <target state="translated">Los métodos sobrecargados que toman <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResultCallback&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.Media.HitTestFilterCallback&gt;</ph> como parámetros proporcionan funcionalidad adicional durante la prueba de posicionamiento:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Allow you to participate in controlling the visual tree traversal during hit testing.</source>
          <target state="translated">Le permiten participar en el control del recorrido del árbol visual durante la prueba de posicionamiento.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Media.VisualTreeHelper">
          <source>Allow you to retrieve all of the visuals under the point or geometry, not just the topmost one.</source>
          <target state="translated">Le permiten recuperar todos los objetos visuales en el punto o geometría, no sólo a aquél superior.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to hit test.</source>
          
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The point value to hit test against.</source>
          
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>Returns the topmost <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> object of a hit test by specifying a <ph id="ph2">&lt;see cref="T:System.Windows.Point" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The hit test result of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, returned as a <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestResult" /&gt;</ph> type.</source>
          
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph> property of the return value represents the <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> object that was hit.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.Media.HitTestResult.VisualHit%2A&gt;</ph> propiedad del valor devuelto representa el <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph> objeto que se alcanzó.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>It is possible for a hit test that starts in a 2D visual tree to return <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, which is a 3D hit test result object.</source>
          <target state="translated">Es posible que una prueba de posicionamiento que se inicia en un árbol visual 2D para devolver <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, que es un objeto de resultado de la prueba de posicionamiento 3D.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</source>
          <target state="translated">La prueba de posicionamiento que se inicia en un árbol visual 2D se extienden sin problemas en cualquier árbol visual 3D definido.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Point)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method to hit test the objects within a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> método presione probar los objetos dentro de un <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph> to hit test.</source>
          
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The method that represents the hit test filter callback value.</source>
          
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The method that represents the hit test result callback value.</source>
          
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The 3D parameter value to hit test against.</source>
          
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>Initiates a hit test on the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Media3D.Visual3D" /&gt;</ph>, with caller-defined <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> methods.</source>
          
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>The <ph id="ph1">`filterCallback`</ph> parameter can be <ph id="ph2">`null`</ph>, in which case, it is ignored.</source>
          <target state="translated">El <ph id="ph1">`filterCallback`</ph> parámetro puede ser <ph id="ph2">`null`</ph>, en cuyo caso se omite.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>If <ph id="ph1">`filterCallback`</ph> is not <ph id="ph2">`null`</ph>, it is invoked before <ph id="ph3">`resultCallback`</ph>.</source>
          <target state="translated">Si <ph id="ph1">`filterCallback`</ph> no <ph id="ph2">`null`</ph>, se invoca antes de <ph id="ph3">`resultCallback`</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source><ph id="ph1">`resultCallback`</ph> cannot be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">`resultCallback`</ph> no puede ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>It is possible for a hit test that starts in a 2D visual tree to return <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, which is a 3D hit test result object.</source>
          <target state="translated">Es posible que una prueba de posicionamiento que se inicia en un árbol visual 2D para devolver <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, que es un objeto de resultado de la prueba de posicionamiento 3D.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Media3D.Visual3D,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.Media3D.HitTestParameters3D)">
          <source>Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</source>
          <target state="translated">La prueba de posicionamiento que se inicia en un árbol visual 2D se extienden sin problemas en cualquier árbol visual 3D definido.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to hit test.</source>
          
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The method that represents the hit test filter callback value.</source>
          
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The method that represents the hit test result callback value.</source>
          
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The parameter value to hit test against.</source>
          
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>Initiates a hit test on the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>, with caller-defined <ph id="ph2">&lt;see cref="T:System.Windows.Media.HitTestFilterCallback" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Windows.Media.HitTestResultCallback" /&gt;</ph> methods.</source>
          
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The <ph id="ph1">`filterCallback`</ph> parameter can be <ph id="ph2">`null`</ph>, in which case it is ignored.</source>
          <target state="translated">El <ph id="ph1">`filterCallback`</ph> parámetro puede ser <ph id="ph2">`null`</ph>, en cuyo caso se omite.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>If <ph id="ph1">`filterCallback`</ph> is not <ph id="ph2">`null`</ph>, it is invoked before <ph id="ph3">`resultCallback`</ph>.</source>
          <target state="translated">Si <ph id="ph1">`filterCallback`</ph> no <ph id="ph2">`null`</ph>, se invoca antes de <ph id="ph3">`resultCallback`</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source><ph id="ph1">`resultCallback`</ph> cannot be <ph id="ph2">`null`</ph>.</source>
          <target state="translated">El valor de <ph id="ph1">`resultCallback`</ph> no puede ser <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>It is possible for a hit test that starts in a 2D visual tree to return <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, which is a 3D hit test result object.</source>
          <target state="translated">Es posible que una prueba de posicionamiento que se inicia en un árbol visual 2D para devolver <ph id="ph1">&lt;xref:System.Windows.Media.Media3D.RayHitTestResult&gt;</ph>, que es un objeto de resultado de la prueba de posicionamiento 3D.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>Hit testing that starts in a 2D visual tree seamlessly extends into any defined 3D visual tree.</source>
          <target state="translated">La prueba de posicionamiento que se inicia en un árbol visual 2D se extienden sin problemas en cualquier árbol visual 3D definido.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.VisualTreeHelper.HitTest(System.Windows.Media.Visual,System.Windows.Media.HitTestFilterCallback,System.Windows.Media.HitTestResultCallback,System.Windows.Media.HitTestParameters)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> method to hit test the objects within a <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Windows.Media.VisualTreeHelper.HitTest%2A&gt;</ph> método presione probar los objetos dentro de un <ph id="ph2">&lt;xref:System.Windows.Controls.Canvas&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>A Visual object target.</source>
          
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>DPI information for the target Visual.</source>
          
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>Updates the DPI information of a Visual.</source>
          
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.VisualTreeHelper.SetRootDpi(System.Windows.Media.Visual,System.Windows.DpiScale)">
          <source>It can only be called on a Visual without a parent.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>