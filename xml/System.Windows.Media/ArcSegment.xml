<Type Name="ArcSegment" FullName="System.Windows.Media.ArcSegment">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e590a9fac00879723d7b34096185be6614841545" /><Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/01/2018" /><Meta Name="ms.locfileid" Value="52733205" /></Metadata><TypeSignature Language="C#" Value="public sealed class ArcSegment : System.Windows.Media.PathSegment" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ArcSegment extends System.Windows.Media.PathSegment" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.ArcSegment" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ArcSegment&#xA;Inherits PathSegment" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArcSegment sealed : System::Windows::Media::PathSegment" />
  <TypeSignature Language="F#" Value="type ArcSegment = class&#xA;    inherit PathSegment" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.PathSegment</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa un arco elíptico entre dos puntos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use un <xref:System.Windows.Media.PathFigure> objeto para almacenar <xref:System.Windows.Media.ArcSegment> objetos y otros segmentos.  
  
 Un arco elíptico se define por su puntos inicial y final, radios x e y, del eje x rotación factor en un valor que indica si el arco debe ser mayor de 180 grados y un valor que describe la dirección en la que se dibuja el arco. La <xref:System.Windows.Media.ArcSegment> clase no tiene una propiedad para el punto inicial del arco; únicamente define el punto de destino del arco que representa. El punto inicial del arco es el punto actual de la <xref:System.Windows.Media.PathFigure> a la que el <xref:System.Windows.Media.ArcSegment> se agrega.  
  
 Las ilustraciones siguientes muestran el punto de conexión distinto, <xref:System.Windows.Media.ArcSegment.Size%2A>, y <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> configuración.  
  
 ![ArcSegments con distintos valores de punto](~/add/media/arcsegment-point.png "ArcSegments con distintos valores de punto")  
  
 ![ArcSegments con distintos valores de tamaño](~/add/media/arcsegment-size.png "ArcSegments con distintos valores de tamaño")  
  
 ![ArcSegments con distintos valores de RotationAngle](~/add/media/arcsegment-rotationangle.png "ArcSegments con distintos valores de RotationAngle")  
  
## <a name="islargearc-and-sweepdirection"></a>IsLargeArc y SweepDirection  
 Para la mayoría de los arcos una posición concreta, el tamaño y rotación, existen cuatro arcos que se pueden dibujar; el <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> y <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propiedades indican qué arco se utilizará.  
  
 De los recorridos del arco cuatro candidato, dos representan arcos grandes con recorridos de 180 grados o más, y dos arcos menores con recorridos de 180 grados o menos. Si <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> es `true`, a continuación, uno de los recorridos del arco mayor dos está seleccionado; en caso contrario, si es `false`, uno de los pequeños se elige recorridos. Los restantes dos candidatos de arcos se dibujan en una dirección diferente: <xref:System.Windows.Media.SweepDirection.Counterclockwise> o <xref:System.Windows.Media.SweepDirection.Clockwise>. El <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propiedad especifica cuál desea usar.  
  
 Las ilustraciones siguientes muestran diferentes <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> y <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> configuración.  
  
 ![ArcSegments con distintos valores de IsLargeArc](~/add/media/arcsegment-islargearc.png "ArcSegments con distintos valores de IsLargeArc")  
Objetos ArcSegment con distintos valores de IsLargeArc  
  
 ![ArcSegments con distintos valores de SweepDirection](~/add/media/arcsegment-sweepdirection.png "ArcSegments con distintos valores de SweepDirection")  
Objetos ArcSegment con distintos valores de SweepDirection  
  
## <a name="freezable-features"></a>Características de los objetos Freezable  
 Un <xref:System.Windows.Media.ArcSegment> es un tipo de <xref:System.Windows.Freezable> objeto. Para obtener información acerca de <xref:System.Windows.Freezable> características, como la inmovilización y la clonación, consulte el [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.PathFigure" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Media.ArcSegment> clase define solo el punto de destino del arco que representa; el punto inicial del arco es el punto actual de la <xref:System.Windows.Media.PathFigure>, hasta que el <xref:System.Windows.Media.ArcSegment> se agrega.  
  
 Arcos elípticos más de una posición concreta, el tamaño y rotación, hay cuatro arcos que se pueden dibujar; el `largeArc` y `sweepDirection` parámetros indican qué arco se utilizará.  
  
 De los recorridos del arco cuatro candidato, dos representan arcos grandes con recorridos de 180 grados o más, y dos arcos menores con recorridos de 180 grados o menos. Si `largeArc` es `true`, a continuación, uno de los recorridos del arco mayor dos está seleccionado; en caso contrario, si `largeArc` es `false`, uno de los pequeños se elige recorridos.  
  
 Si `sweepDirection` es <xref:System.Windows.Media.SweepDirection.Clockwise>, se dibuja el arco en una dirección con ángulo positivo. Si `sweepDirection` es <xref:System.Windows.Media.SweepDirection.Counterclockwise>, se dibuja el arco en una dirección angular negativa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Media.ArcSegment> clase define solo el punto de destino del arco que representa; el punto inicial del arco es el punto actual de la <xref:System.Windows.Media.PathFigure>, hasta que el <xref:System.Windows.Media.ArcSegment> se agrega.  
  
 Arcos elípticos más de una posición concreta, el tamaño y rotación, hay cuatro arcos que se pueden dibujar; el `largeArc` y `sweepDirection` parámetros indican qué arco se utilizará.  
  
 De los recorridos del arco cuatro candidato, dos representan arcos grandes con recorridos de 180 grados o más, y dos arcos menores con recorridos de 180 grados o menos. Si `largeArc` es `true`, a continuación, uno de los recorridos del arco mayor dos está seleccionado; en caso contrario, si `largeArc` es `false`, uno de los pequeños se elige recorridos.  
  
 Si `sweepDirection` es <xref:System.Windows.Media.SweepDirection.Clockwise>, se dibuja el arco en una dirección con ángulo positivo. Si `sweepDirection` es <xref:System.Windows.Media.SweepDirection.Counterclockwise>, se dibuja el arco en una dirección angular negativa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArcSegment (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.#ctor(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArcSegment(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked);" />
      <MemberSignature Language="F#" Value="new System.Windows.Media.ArcSegment : System.Windows.Point * System.Windows.Size * double * bool * System.Windows.Media.SweepDirection * bool -&gt; System.Windows.Media.ArcSegment" Usage="new System.Windows.Media.ArcSegment (point, size, rotationAngle, isLargeArc, sweepDirection, isStroked)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point">El punto de destino del arco; el punto inicial del arco se define como el punto actual de <see cref="T:System.Windows.Media.PathFigure" /> donde se agrega <see cref="T:System.Windows.Media.ArcSegment" />.</param>
        <param name="size">Los radios X e Y del arco. Especifica el radio x y el <see cref="T:System.Windows.Size" /> la estructura <see cref="P:System.Windows.Size.Width" /> propiedad y el radio y se especifica mediante la <see cref="T:System.Windows.Size" /> la estructura <see cref="P:System.Windows.Size.Height" /> propiedad.</param>
        <param name="rotationAngle">Giro del eje X de la elipse.</param>
        <param name="isLargeArc">Si el arco debe ser mayor de 180 grados.</param>
        <param name="sweepDirection">Establezca en <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> para dibujar el arco en una dirección de ángulo positivo; establezca en <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> para dibujar el arco en una dirección angular negativa.</param>
        <param name="isStroked">Se establece en <c>true</c> para trazar el arco si se usa un elemento <see cref="T:System.Windows.Media.Pen" /> para representar el segmento; de lo contrario, en <c>false</c>.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.ArcSegment" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Media.ArcSegment> clase define solo el punto de destino del arco que representa; el punto inicial del arco es el punto actual de la <xref:System.Windows.Media.PathFigure>, hasta que el <xref:System.Windows.Media.ArcSegment> se agrega.  
  
 Arcos elípticos más de una posición concreta, el tamaño y rotación, hay cuatro arcos que se pueden dibujar; el `largeArc` y `sweepDirection` parámetros indican qué arco se utilizará.  
  
 De los recorridos del arco cuatro candidato, dos representan arcos grandes con recorridos de 180 grados o más, y dos arcos menores con recorridos de 180 grados o menos. Si `largeArc` es `true`, a continuación, uno de los recorridos del arco mayor dos está seleccionado; en caso contrario, si `largeArc` es `false`, uno de los pequeños se elige recorridos.  
  
 Si `sweepDirection` es <xref:System.Windows.Media.SweepDirection.Clockwise>, se dibuja el arco en una dirección con ángulo positivo. Si `sweepDirection` es <xref:System.Windows.Media.SweepDirection.Counterclockwise>, se dibuja el arco en una dirección angular negativa.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de <see cref="T:System.Windows.Media.ArcSegment" /> y hace copias de los valores de este objeto. Cuando se copian propiedades de dependencia, este método copia las referencias de recursos y enlaces de datos (aunque podrían no resolverse), pero no copia las animaciones ni sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ArcSegment CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.ArcSegment CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As ArcSegment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::ArcSegment ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValue : unit -&gt; System.Windows.Media.ArcSegment" Usage="arcSegment.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ArcSegment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea un clon modificable de este objeto <see cref="T:System.Windows.Media.ArcSegment" /> y hace copias en profundidad de sus valores actuales. Las referencias de recursos, los enlaces de datos y las animaciones no se copian, pero sí sus valores actuales.</summary>
        <returns>Clon modificable del objeto actual. La propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del objeto clonado es <see langword="false" /> aunque la propiedad <see cref="P:System.Windows.Freezable.IsFrozen" /> del origen sea <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se usa para producir copias modificables de inmovilizado <xref:System.Windows.Freezable> objetos (o cualquier <xref:System.Windows.Freezable> objeto). Para mayor comodidad, este método prevalece sobre la versión heredada con una implementación fuertemente tipada.  
  
 Para obtener más información, vea <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.ArcSegment.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="arcSegment.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArc">
      <MemberSignature Language="C#" Value="public bool IsLargeArc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLargeArc" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberSignature Language="VB.NET" Value="Public Property IsLargeArc As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLargeArc { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsLargeArc : bool with get, set" Usage="System.Windows.Media.ArcSegment.IsLargeArc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el arco debe ser mayor de 180 grados.</summary>
        <value><see langword="true" /> Si el arco debe ser mayor de 180 grados; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para la mayoría de los arcos una posición concreta, el tamaño y rotación, existen cuatro arcos que se pueden dibujar; el <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> y <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propiedades indican qué arco se utilizará.  
  
 De los recorridos del arco cuatro candidato, dos representan arcos grandes con recorridos de 180 grados o más, y dos arcos menores con recorridos de 180 grados o menos. Si <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> es `true`, a continuación, uno de los recorridos del arco mayor dos está seleccionado; en caso contrario, si es `false`, uno de los pequeños se elige recorridos. Los restantes dos candidatos de arcos se dibujan en una dirección diferente: <xref:System.Windows.Media.SweepDirection.Counterclockwise> o <xref:System.Windows.Media.SweepDirection.Clockwise>. El <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propiedad especifica cuál desea usar.  
  
 La siguiente ilustración muestra dos arcos elípticos que son idénticos salvo sus <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> configuración.  
  
 ![ArcSegments con distintos valores de IsLargeArc](~/add/media/arcsegment-islargearc.png "ArcSegments con distintos valores de IsLargeArc")  
Objetos ArcSegment con distintos valores de IsLargeArc  
  
<a name="dependencyPropertyInfo_IsLargeArc"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.IsLargeArcProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLargeArcProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsLargeArcProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsLargeArcProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsLargeArcProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsLargeArcProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsLargeArcProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.IsLargeArcProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.ArcSegment.IsLargeArc" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Point">
      <MemberSignature Language="C#" Value="public System.Windows.Point Point { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point Point" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Point" />
      <MemberSignature Language="VB.NET" Value="Public Property Point As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point Point { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Point : System.Windows.Point with get, set" Usage="System.Windows.Media.ArcSegment.Point" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el punto de conexión del arco elíptico.</summary>
        <value>Punto en el que está dibujado el arco. El valor predeterminado es (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Media.ArcSegment> clase define solo el punto de destino del arco que representa; el punto inicial del arco es el punto actual de la <xref:System.Windows.Media.PathFigure> a la que el <xref:System.Windows.Media.ArcSegment> se agrega.  
  
 Si el punto inicial y final del segmento de arco son iguales, no se dibuja ningún arco.  
  
 Para la mayoría de los arcos una posición concreta, el tamaño y rotación, existen cuatro arcos que se pueden dibujar; el <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> y <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propiedades indican qué arco se utilizará.  
  
 De los recorridos del arco cuatro candidato, dos representan arcos grandes con recorridos de 180 grados o más, y dos arcos menores con recorridos de 180 grados o menos. Si <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> es `true`, a continuación, uno de los recorridos del arco mayor dos está seleccionado; en caso contrario, si es `false`, uno de los pequeños se elige recorridos. Los restantes dos candidatos de arcos se dibujan en una dirección diferente: <xref:System.Windows.Media.SweepDirection.Counterclockwise> o <xref:System.Windows.Media.SweepDirection.Clockwise>. El <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> propiedad especifica cuál desea usar.  
  
 La ilustración siguiente muestra varios arcos elípticos que son idénticos salvo sus <xref:System.Windows.Media.ArcSegment.Point%2A> configuración.  
  
 ![ArcSegments con distintos valores de punto](~/add/media/arcsegment-point.png "ArcSegments con distintos valores de punto")  
Varios objetos ArcSegment con distintos valores de Point  
  
<a name="dependencyPropertyInfo_Point"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.PointProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PointProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PointProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.PointProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PointProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PointProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable PointProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.PointProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.ArcSegment.Point" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngle">
      <MemberSignature Language="C#" Value="public double RotationAngle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 RotationAngle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberSignature Language="VB.NET" Value="Public Property RotationAngle As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double RotationAngle { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.RotationAngle : double with get, set" Usage="System.Windows.Media.ArcSegment.RotationAngle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la cantidad (en grados) que la elipse gira sobre el eje x.</summary>
        <value>Cantidad (en grados) que la elipse gira sobre el eje x. El valor predeterminado es 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ilustración siguiente muestra varios arcos elípticos que son idénticos salvo sus <xref:System.Windows.Media.ArcSegment.RotationAngle%2A> configuración.  
  
 ![ArcSegments con distintos valores de RotationAngle](~/add/media/arcsegment-rotationangle.png "ArcSegments con distintos valores de RotationAngle")  
Varios objetos con distintos valores de RotationAngle de ArcSegment  
  
 Tenga en cuenta que, si el arco ancho y alto son los mismos, establecer esta propiedad no tiene ningún efecto.  
  
<a name="dependencyPropertyInfo_RotationAngle"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.RotationAngleProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RotationAngleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RotationAngleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RotationAngleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RotationAngleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RotationAngleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable RotationAngleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.RotationAngleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.ArcSegment.RotationAngle" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public System.Windows.Size Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size Size" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size Size { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberSignature Language="F#" Value="member this.Size : System.Windows.Size with get, set" Usage="System.Windows.Media.ArcSegment.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece los radios "x" e "y" del arco como una estructura <see cref="T:System.Windows.Size" />.</summary>
        <value>Estructura <see cref="T:System.Windows.Size" /> que describe los radios "x" e "y" del arco elíptico. El <see cref="T:System.Windows.Size" /> la estructura <see cref="P:System.Windows.Size.Width" /> propiedad especifica el radio x del arco; su <see cref="P:System.Windows.Size.Height" /> propiedad especifica el radio "y" del arco. El valor predeterminado es 0,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La ilustración siguiente muestra varios arcos elípticos que son idénticos salvo sus <xref:System.Windows.Media.ArcSegment.Size%2A> configuración.  
  
 ![ArcSegments con distintos valores de tamaño](~/add/media/arcsegment-size.png "ArcSegments con distintos valores de tamaño")  
Varios objetos ArcSegment con diferentes valores de tamaño  
  
<a name="dependencyPropertyInfo_Size"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.SizeProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SizeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.ArcSegment.Size" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Media.SweepDirection SweepDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Media.SweepDirection SweepDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property SweepDirection As SweepDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::SweepDirection SweepDirection { System::Windows::Media::SweepDirection get(); void set(System::Windows::Media::SweepDirection value); };" />
      <MemberSignature Language="F#" Value="member this.SweepDirection : System.Windows.Media.SweepDirection with get, set" Usage="System.Windows.Media.ArcSegment.SweepDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.SweepDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si el arco se dibuja en el sentido <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> o <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</summary>
        <value>Valor que especifica el sentido en el que se dibuja el arco. El valor predeterminado es <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para un <xref:System.Windows.Media.ArcSegment> con un determinado <xref:System.Windows.Media.ArcSegment.Size%2A>, <xref:System.Windows.Media.ArcSegment.RotationAngle%2A>, punto de inicio y finalización <xref:System.Windows.Media.ArcSegment.Point%2A>, cuatro arcos son posibles. Especificar el <xref:System.Windows.Media.ArcSegment.IsLargeArc%2A> propiedad reduce el número de posibles arcos a dos: un arco dibujado desde el punto de inicio al final <xref:System.Windows.Media.ArcSegment.Point%2A> en un <xref:System.Windows.Media.SweepDirection.Clockwise> dirección y un arco dibujado desde el punto inicial para el punto final en un <xref:System.Windows.Media.SweepDirection.Counterclockwise> dirección.  
  
 La siguiente ilustración muestra dos arcos elípticos que son idénticos salvo sus <xref:System.Windows.Media.ArcSegment.SweepDirection%2A> configuración.  
  
 ![ArcSegments con distintos valores de SweepDirection](~/add/media/arcsegment-sweepdirection.png "ArcSegments con distintos valores de SweepDirection")  
Objetos ArcSegment con distintos valores de SweepDirection  
  
<a name="dependencyPropertyInfo_SweepDirection"></a>   
## <a name="dependency-property-information"></a>Información sobre propiedades de dependencia  
  
|||  
|-|-|  
|Campo de identificador|<xref:System.Windows.Media.ArcSegment.SweepDirectionProperty>|  
|Establecen las propiedades de metadatos en `true`|None|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SweepDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SweepDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SweepDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SweepDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SweepDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SweepDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Media.ArcSegment.SweepDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifica la propiedad de dependencia <see cref="P:System.Windows.Media.ArcSegment.SweepDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>