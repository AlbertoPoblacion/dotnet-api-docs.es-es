<Type Name="PeerContact" FullName="System.Net.PeerToPeer.Collaboration.PeerContact">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0f450555e73998ea3a90079c7a03ed9b289ff8bc" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52373309" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PeerContact : System.Net.PeerToPeer.Collaboration.Peer, IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable PeerContact extends System.Net.PeerToPeer.Collaboration.Peer implements class System.IEquatable`1&lt;class System.Net.PeerToPeer.Collaboration.PeerContact&gt;, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerContact&#xA;Inherits Peer&#xA;Implements IEquatable(Of PeerContact), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerContact : System::Net::PeerToPeer::Collaboration::Peer, IEquatable&lt;System::Net::PeerToPeer::Collaboration::PeerContact ^&gt;, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type PeerContact = class&#xA;    inherit Peer&#xA;    interface IEquatable&lt;PeerContact&gt;&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.PeerToPeer.Collaboration.Peer</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Net.PeerToPeer.Collaboration.PeerContact&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un elemento del mismo nivel para el que un usuario ha recuperado la información extendida.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contacto representa a un punto de confianza. Un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> debe crearse el objeto de un interlocutor remoto o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe> para un usuario a colaborar con el interlocutor remoto cuando está fuera del ámbito "People Near Me". Un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> puede existir como una aplicación que se ejecuta en un equipo remoto o el usuario de un equipo remoto. Una instancia de esta clase puede agregarse a la <xref:System.Net.PeerToPeer.Collaboration.ContactManager> que almacena la información de contacto de manera persistente.  
  
 Una invitación de aplicación desde un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> se autentica y se cifran.  El cuadro de diálogo de interfaz de usuario para aceptar o rechazar la invitación de un contacto del mismo nivel también indica que es confianza invitador.  
  
 Suscribirse a un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto significa un interlocutor remoto puede ver sus aplicaciones registradas, objetos e información de presencia. Para suscribirse a un <xref:System.Net.PeerToPeer.Collaboration.PeerContact>, el llamador debe iniciar sesión la infraestructura de colaboración del mismo nivel a través de <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> o ha iniciado sesión a través de la interfaz de usuario de Windows.  Todas las demás operaciones no requieren inicio de sesión.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
    <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PeerContact (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext streamingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo serializationInfo, valuetype System.Runtime.Serialization.StreamingContext streamingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PeerContact(System::Runtime::Serialization::SerializationInfo ^ serializationInfo, System::Runtime::Serialization::StreamingContext streamingContext);" />
      <MemberSignature Language="F#" Value="new System.Net.PeerToPeer.Collaboration.PeerContact : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="new System.Net.PeerToPeer.Collaboration.PeerContact (serializationInfo, streamingContext)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="serializationInfo">Objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> asociado a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="streamingContext">El destino de la serialización relacionado con <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>No hay ningún constructor público definido en esta clase.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se puede obtener una instancia de este objeto desde el <xref:System.Net.PeerToPeer.Collaboration.ContactManager.GetContact%2A> <xref:System.Net.PeerToPeer.Collaboration.ContactManager.CreateContact%2A> o <xref:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml%2A> métodos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
      </Docs>
    </Member>
    <Member MemberName="ApplicationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; ApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ ApplicationChanged;" />
      <MemberSignature Language="F#" Value="member this.ApplicationChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " Usage="member this.ApplicationChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se provoca este evento cuando cambia una aplicación asociada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Credentials As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Credentials { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Security.Cryptography.X509Certificates.X509Certificate2" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece X509Certificate (la clave pública) para el elemento del mismo nivel identificado por esta instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>X509Certificate (clave pública) para el elemento del mismo nivel identificado por esta instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.PeerName" />
        <altmember cref="N:System.Security.Permissions" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena que representa el nombre para mostrar de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> que representa el nombre para mostrar de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. A menos que se especifique explícitamente, el valor predeterminado de todas las propiedades es <see langword="null" /> para los tipos de referencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nombre para mostrar puede utilizarse para diferenciar los contactos en un <xref:System.Net.PeerToPeer.Collaboration.ContactManager> en casos donde un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> puede tener varias direcciones de correo electrónico, o si hay varios elementos del mismo nivel con el mismo nombre para mostrar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="peerContact.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Es <see langword="True" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no administrados y, opcionalmente, los recursos administrados que usa el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> deja una sesión de colaboración, ya no se requieren ciertos objetos.  Si este contacto hubiera colaborado con cualquier otro extremo registrado no directamente con el host del mismo nivel y el host espera continuar colaborar con ellos, el host debe registrar esos puntos de conexión dentro de una aplicación o dentro su <xref:System.Net.PeerToPeer.Collaboration.ContactManager> antes eliminación de este <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EmailAddress">
      <MemberSignature Language="C#" Value="public System.Net.Mail.MailAddress EmailAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Mail.MailAddress EmailAddress" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property EmailAddress As MailAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Mail::MailAddress ^ EmailAddress { System::Net::Mail::MailAddress ^ get(); void set(System::Net::Mail::MailAddress ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmailAddress : System.Net.Mail.MailAddress with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.EmailAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Mail.MailAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la dirección de correo electrónico asociada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>Objeto <see cref="T:System.Net.Mail.MailAddress" /> que contiene la dirección de correo electrónico asociada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Net.Mail.MailAddress> objeto se usa para representar la dirección de correo electrónico.  El Administrador de contactos permite varias direcciones de correo electrónico dentro de una instancia. El valor predeterminado de esta propiedad es `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si el <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" /> del objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> es equivalente al nombre de otro objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Devuelve `true` si especificado <xref:System.Object> tiene el mismo <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> como la instancia actual, en caso contrario `false`. Este método también devuelve `false` si son parámetros pasados `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.Peer" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Net.PeerToPeer.Collaboration.PeerContact other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Net.PeerToPeer.Collaboration.PeerContact other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Net.PeerToPeer.Collaboration.PeerContact)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As PeerContact) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Net::PeerToPeer::Collaboration::PeerContact ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Net.PeerToPeer.Collaboration.PeerContact -&gt; bool" Usage="peerContact.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Parameters>
      <Docs>
        <param name="other">Instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> cuya igualdad se va a comprobar.</param>
        <summary>Compara la colección <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> con la instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> especificada.</summary>
        <returns>Devuelve <see langword="true" /> si la instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> proporcionada tiene datos coincidentes; de lo contrario, devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se produce la normalización en las cadenas antes de la comparación.  Toda la normalización debe se completaron antes de construir, o bien el <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="peerContact.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Compara la instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> con el objeto especificado.</param>
        <summary>Compara la instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> con el objeto especificado.</summary>
        <returns>Devuelve <see langword="true" /> si la instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> proporcionada tiene datos coincidentes; de lo contrario, devuelve <see langword="false" />. Este método también devuelve <see langword="false" /> si el parámetro pasado es <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Otros objetos que se pueden comparar con <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos incluyen los nombres del mismo nivel relativos, nombres de host del mismo nivel y desencapsula los nombres de otros <xref:System.Net.PeerToPeer> objetos.  
  
 No se produce la normalización en las cadenas antes de la comparación.  Toda la normalización debe se completaron antes de construir, o bien el <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (object objA, object objB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(object objA, object objB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Equals(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (objA As Object, objB As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::Object ^ objA, System::Object ^ objB);" />
      <MemberSignature Language="F#" Value="static member Equals : obj * obj -&gt; bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Equals (objA, objB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objA" Type="System.Object" />
        <Parameter Name="objB" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="objA">Primer objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> que se va a comparar.</param>
        <param name="objB">Segundo objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> que se va a comparar.</param>
        <summary>Determina si las instancias de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> especificadas se consideran iguales.</summary>
        <returns>Devuelve <see langword="true" /> si las instancias de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> proporcionadas tienen datos coincidentes; de lo contrario, devuelve <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto puede usarse para determinar si un <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName%2A> está en uso simultáneo de dos pares remotos diferentes.  
  
 Otros objetos que se pueden comparar con <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos incluyen los nombres del mismo nivel relativos, nombres de host del mismo nivel y desencapsula los nombres de otros <xref:System.Net.PeerToPeer> objetos.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />
      </Docs>
    </Member>
    <Member MemberName="FromXml">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerContact FromXml (string peerContactXml);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerContact FromXml(string peerContactXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromXml (peerContactXml As String) As PeerContact" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerContact ^ FromXml(System::String ^ peerContactXml);" />
      <MemberSignature Language="F#" Value="static member FromXml : string -&gt; System.Net.PeerToPeer.Collaboration.PeerContact" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.FromXml peerContactXml" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerContact</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerContactXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="peerContactXml">Codificación XML utilizada para reconstruir <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Crea una instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> basada en los datos XML proporcionados.</summary>
        <returns>Cadena que representa el modelo de objetos XML para codificar la instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La cadena debe pasar como el parámetro debe obtenerse de <xref:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml%2A>.  
  
 Esta clase está diseñada para ser una implementación ligera de un modelo de objetos XML simple para su uso dentro de la infraestructura de colaboración y no para su uso como un modelo de objetos XML general.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro no puede ser <see langword="null." /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />. 
-   El parámetro no es un objeto <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaborationPermission.FromXml(System.Security.SecurityElement)" /> válido.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recupera los objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> que el elemento remoto del mismo nivel registró en la memoria caché local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta funcionalidad se expone solo en el <xref:System.Net.PeerToPeer.Collaboration.PeerContact> clase.  Esta funcionalidad no se expone en cualquier otro tipo de elemento del mismo nivel por motivos de seguridad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications();" />
      <MemberSignature Language="F#" Value="member this.GetApplications : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera los objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> que el elemento remoto del mismo nivel registró en la memoria caché local.</summary>
        <returns>Objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> de la caché local. Si no se encuentran aplicaciones asociadas para <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está suscrito el mismo nivel que realiza la llamada a la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> asociados con los valores especificados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> el <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> debe llamar al método antes de llamar a este método.  
  
 Mientras que el llamador no es necesario para iniciar sesión en la infraestructura de colaboración para este método se complete correctamente, una llamada correcta al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno de los <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos deben haberse realizados mientras que el llamador ya estaba firmado.  
  
 Esta funcionalidad se expone solo en el <xref:System.Net.PeerToPeer.Collaboration.PeerContact> clase.  Esta funcionalidad no se expone en cualquier otro tipo de elemento del mismo nivel por motivos de seguridad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   El elemento de llamada del mismo nivel no se ha suscrito a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   El elemento de llamada del mismo nivel aún no ha llamado al método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetApplications (applicationId As Guid) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications applicationId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="applicationId">
          <see cref="T:System.Guid" /> de la aplicación del mismo nivel que se va a recuperar.</param>
        <summary>Recibe la colección de objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> con el <see cref="T:System.Guid" /> especificado de la caché local.</summary>
        <returns>Objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> de la caché local. Si no se encuentra ninguna aplicación con el <paramref name="applicationId" />especificado, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está suscrito el mismo nivel que realiza la llamada a la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> asociados con los valores especificados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> el <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> debe llamar al método antes de llamar a este método.  
  
 Mientras que el llamador no es necesario para iniciar sesión en la infraestructura de colaboración para este método se complete correctamente, una llamada correcta al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno de los <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos deben haberse realizados mientras que el llamador ya estaba firmado.  
  
 Esta funcionalidad se expone solo en el <xref:System.Net.PeerToPeer.Collaboration.PeerContact> clase.  Esta funcionalidad no se expone en cualquier otro tipo de elemento del mismo nivel por motivos de seguridad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">-   El elemento de llamada del mismo nivel no se ha suscrito a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   El elemento de llamada del mismo nivel aún no ha llamado al método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Contiene la información de extremo asociada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Obtiene el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> asociado al <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> asociado al <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado. Si las aplicaciones no están asociadas al <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />especificado, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está suscrito el mismo nivel que realiza la llamada a la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> asociados con los valores especificados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> el <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> debe llamar al método antes de llamar a este método.  
  
 Mientras que el llamador no es necesario para iniciar sesión en la infraestructura de colaboración para este método se complete correctamente, una llamada correcta al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno de los <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos deben haberse realizados mientras que el llamador ya estaba firmado.  
  
 Esta funcionalidad se expone solo en el <xref:System.Net.PeerToPeer.Collaboration.PeerContact> clase.  Esta funcionalidad no se expone en cualquier otro tipo de elemento del mismo nivel por motivos de seguridad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   El elemento de llamada del mismo nivel no se ha suscrito a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   El elemento de llamada del mismo nivel aún no ha llamado al método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="GetApplications">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetApplications(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid applicationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetApplications(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid applicationId);" />
      <MemberSignature Language="F#" Value="member this.GetApplications : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" Usage="peerContact.GetApplications (peerEndPoint, applicationId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Extremo asociado a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" />.</param>
        <param name="applicationId">Contiene la información de la aplicación asociada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Obtiene el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> asociado al <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado.</summary>
        <returns>La colección de objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> asociada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
Si no se encuentran las aplicaciones identificadas por el identificador de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />o si el identificador del extremo es <see langword="null" /> o no es válido, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está suscrito el mismo nivel que realiza la llamada a la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> asociados con los valores especificados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> el <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> debe llamar al método antes de llamar a este método.  
  
 Mientras que el llamador no es necesario para iniciar sesión en la infraestructura de colaboración para este método se complete correctamente, una llamada correcta al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno de los <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos deben haberse realizados mientras que el llamador ya estaba firmado.  
  
 Esta funcionalidad se expone solo en el <xref:System.Net.PeerToPeer.Collaboration.PeerContact> clase.  Esta funcionalidad no se expone en cualquier otro tipo de elemento del mismo nivel por motivos de seguridad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   El elemento de llamada del mismo nivel no se ha suscrito a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   El elemento de llamada del mismo nivel aún no ha llamado al método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.Peer.Invite" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="peerContact.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el código hash de una instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <returns>Código hash de un entero de 32 bits con signo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este valor de código hash se utiliza para comparar instancias de este tipo de mediante programación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.Equals" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContactCollection.InsertItem(System.Int32,System.Net.PeerToPeer.Collaboration.PeerContact)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="peerContact.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contiene los datos serializados asociados al objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="context">Contiene el destino del flujo serializado asociado al objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Rellena un objeto <see cref="T:System.Runtime.Serialization.SerializationInfo" /> con los datos necesarios para serializar el <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tipo derivado debe llamar a la <xref:System.Net.PeerToPeer.Collaboration.Peer.GetObjectData%2A> método del tipo base.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjects">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Recibe la colección de objetos del mismo nivel de una caché local.</summary>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerContactCollection" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Extremo del que se recuperan objetos.</param>
        <summary>Obtiene el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> registrado por el <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado y almacenado en la caché local.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> asociado al <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado. Si no hay ninguna aplicación asociada al extremo, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está suscrito el mismo nivel que realiza la llamada a la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> asociados con los valores especificados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> el <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> debe llamar al método antes de llamar a este método.  
  
 Mientras que el llamador no es necesario para iniciar sesión en la infraestructura de colaboración para este método se complete correctamente, una llamada correcta al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno de los <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos deben haberse realizados mientras que el llamador ya estaba firmado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   El elemento de llamada del mismo nivel no se ha suscrito al <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> asociado a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   El elemento de llamada del mismo nivel aún no ha llamado al método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />.</exception>
        <block subset="none" type="usage">
          <para>Las sobrecargas adicionales se definen en el <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> clase en lugar de las subclases <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <Member MemberName="GetObjects">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, Guid objectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetObjects(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, valuetype System.Guid objectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetObjects(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, Guid objectId);" />
      <MemberSignature Language="F#" Value="override this.GetObjects : System.Net.PeerToPeer.Collaboration.PeerEndPoint * Guid -&gt; System.Net.PeerToPeer.Collaboration.PeerObjectCollection" Usage="peerContact.GetObjects (peerEndPoint, objectId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="objectId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Extremo del que se recuperan objetos.</param>
        <param name="objectId">No se pudo recuperar el <see cref="T:System.Guid" /> de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</param>
        <summary>Obtiene la colección de objetos del mismo nivel registrada por el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado y registrada en el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> identificado por el <see cref="T:System.Guid" /> especificado.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> asociado al <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> especificado. Si no hay ninguna aplicación asociada al extremo, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está suscrito el mismo nivel que realiza la llamada a la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> asociados con los valores especificados <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> el <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> debe llamar al método antes de llamar a este método.  
  
 Mientras que el llamador no es necesario para iniciar sesión en la infraestructura de colaboración para este método se complete correctamente, una llamada correcta al <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData%2A> o uno de los <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> métodos deben haberse realizados mientras que el llamador ya estaba firmado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">-   El elemento de llamada del mismo nivel no se ha suscrito a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.  
  
-   El elemento de llamada del mismo nivel aún no ha llamado al método <see cref="M:System.Net.PeerToPeer.Collaboration.PeerNearMe.RefreshData" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects" />.</exception>
        <block subset="none" type="usage">
          <para>Las sobrecargas adicionales se definen en el <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> clase en lugar de las subclases <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerChangeType" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invite">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envía una invitación para unirse a una actividad de colaboración del mismo nivel patrocinada por el remitente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite () As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite();" />
      <MemberSignature Language="F#" Value="override this.Invite : unit -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Envía una invitación para unirse a una colaboración del mismo nivel patrocinada por el remitente.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> del elemento del mismo nivel que recibió la invitación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> para la aplicación actual no existe.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite peerEndPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">Extremo que recibe la invitación.</param>
        <summary>Envía una invitación a un extremo concreto para unirse a la colaboración del mismo nivel con el remitente de la invitación.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> del extremo del mismo nivel que recibió la invitación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite" />.  
  
-   La aplicación que está actualmente en ejecución no se ha registrado con la infraestructura de colaboración del mismo nivel.  
  El objeto 
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.EndPoint" /> especificado por el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no es válido.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Invite (applicationToInvite As PeerApplication, message As String, invitationData As Byte()) As PeerInvitationResponse" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> para la que se envió la invitación.</param>
        <param name="message">Un mensaje para enviar al interlocutor remoto junto con la invitación de la aplicación.</param>
        <param name="invitationData">Un blob de datos definidos por el usuario para asociar a la invitación.  Su tamaño no puede ser mayor de 16 384 bytes.</param>
        <summary>Envía la invitación especificada para unirse al objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> patrocinado por el remitente.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> del elemento del mismo nivel que recibió la invitación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> para la aplicación actual no existe o está vacío.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="Invite">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.PeerToPeer.Collaboration.PeerInvitationResponse Invite(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Invite(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::PeerToPeer::Collaboration::PeerInvitationResponse ^ Invite(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData);" />
      <MemberSignature Language="F#" Value="override this.Invite : System.Net.PeerToPeer.Collaboration.PeerEndPoint * System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] -&gt; System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" Usage="peerContact.Invite (peerEndPoint, applicationToInvite, message, invitationData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerInvitationResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">El punto de conexión o elemento del mismo nivel remoto al que se va a enviar la invitación.</param>
        <param name="applicationToInvite">La aplicación para la que se envió la invitación.</param>
        <param name="message">Un mensaje para enviar al interlocutor remoto junto con la invitación de la aplicación.  El mensaje no puede tener más de 255 caracteres Unicode.</param>
        <param name="invitationData">Un blob de datos definidos por el usuario para asociar a la invitación.  Su tamaño no puede ser mayor de 16 384 bytes.</param>
        <summary>Envía la invitación especificada al objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> para unirse a la aplicación de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> patrocinada por el remitente.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse" /> del elemento del mismo nivel que recibió la invitación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El punto de conexión de <paramref name="PeerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">El objeto -   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> no puede estar vacío.  
  Los objetos 
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no pueden ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> para la aplicación actual no existe o está vacío.</exception>
        <block subset="none" type="usage">
          <para>Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <MemberGroup MemberName="InviteAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comienza una operación de invitación asincrónica para que un punto de conexión se una a una aplicación <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> patrocinada por el remitente de la invitación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>Las sobrecargas adicionales se definen en el <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> clase en lugar de las subclases <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : obj -&gt; unit" Usage="peerContact.InviteAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">Objeto definido por el usuario para pasar a la devolución de llamada de la operación asincrónica. También se utiliza para identificar la operación asincrónica de cancelación. Se debe especificar este parámetro y es único en todas las operaciones de invitación asincrónicas en curso.</param>
        <summary>Comienza una operación de invitación asincrónica para que un punto de conexión se una a una aplicación <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> patrocinada por el remitente de la invitación. La invitación se identifica mediante el <see cref="T:System.Object" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="UserToken" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> para la aplicación actual no existe o está vacío.  
  
-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> no puede ser <see langword="null." />.</exception>
        <block subset="none" type="usage">
          <para>Las sobrecargas adicionales se definen en el <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> clase en lugar de las subclases <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.Peer.InviteCompleted" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">El punto de conexión o elemento del mismo nivel remoto al que se va a enviar la invitación.</param>
        <param name="userToken">Objeto definido por el usuario para pasar a la devolución de llamada de la operación asincrónica. También se utiliza para identificar la operación asincrónica de cancelación. Se debe especificar este parámetro y es único en todas las operaciones de invitación asincrónicas en curso.</param>
        <summary>Comienza una operación de invitación asincrónica para que un punto de conexión del mismo nivel especificado se una a una aplicación <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> patrocinada por el remitente de la invitación. La invitación se identifica mediante el <see cref="T:System.Object" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> no puede ser <see langword="null." />.  
  
-   El punto de conexión de <paramref name="peerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">El objeto <paramref name="peerEndPoint" /> no puede ser <see langword="null." />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="T:System.Guid" /> para la aplicación actual no existe o está vacío.</exception>
        <block subset="none" type="usage">
          <para>Las sobrecargas adicionales se definen en el <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> clase en lugar de las subclases <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public override void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, byte[] invitationData, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, string message, unsigned int8[] invitationData, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerApplication,System.String,System.Byte[],System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InviteAsync (applicationToInvite As PeerApplication, message As String, invitationData As Byte(), userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerApplication * string * byte[] * obj -&gt; unit" Usage="peerContact.InviteAsync (applicationToInvite, message, invitationData, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="applicationToInvite">La aplicación para la que se envió la invitación.</param>
        <param name="message">Un mensaje para enviar al interlocutor remoto junto con la invitación de la aplicación.  El mensaje no puede tener más de 255 caracteres Unicode.</param>
        <param name="invitationData">Un blob de datos definidos por el usuario para asociar a la invitación.  Su tamaño no puede ser mayor de 16 384 bytes.</param>
        <param name="userToken">Objeto definido por el usuario para pasar a la devolución de llamada de la operación asincrónica. También se utiliza para identificar la operación asincrónica de cancelación. Se debe especificar este parámetro y es único en todas las operaciones de invitación asincrónicas en curso.</param>
        <summary>Comienza una operación de invitación asincrónica para que los puntos de conexión del mismo nivel especificados se unan a la colaboración especificada <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> patrocinada por el remitente de la invitación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor de <paramref name="UserToken" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> no puede ser <see langword="null." />.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Guid" /> para la aplicación actual no existe o está vacío.  
  
-   La colección de puntos de conexión está vacía o <see langword="null." /></exception>
        <block subset="none" type="usage">
          <para>Las sobrecargas adicionales se definen en el <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> clase en lugar de las subclases <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="InviteAsync">
      <MemberSignature Language="C#" Value="public void InviteAsync (System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, byte[] invitationData, System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InviteAsync(class System.Net.PeerToPeer.Collaboration.PeerEndPoint peerEndPoint, string message, unsigned int8[] invitationData, class System.Net.PeerToPeer.Collaboration.PeerApplication applicationToInvite, object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.InviteAsync(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.String,System.Byte[],System.Net.PeerToPeer.Collaboration.PeerApplication,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InviteAsync(System::Net::PeerToPeer::Collaboration::PeerEndPoint ^ peerEndPoint, System::String ^ message, cli::array &lt;System::Byte&gt; ^ invitationData, System::Net::PeerToPeer::Collaboration::PeerApplication ^ applicationToInvite, System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="override this.InviteAsync : System.Net.PeerToPeer.Collaboration.PeerEndPoint * string * byte[] * System.Net.PeerToPeer.Collaboration.PeerApplication * obj -&gt; unit" Usage="peerContact.InviteAsync (peerEndPoint, message, invitationData, applicationToInvite, userToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerEndPoint" Type="System.Net.PeerToPeer.Collaboration.PeerEndPoint" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="invitationData" Type="System.Byte[]" />
        <Parameter Name="applicationToInvite" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="peerEndPoint">El punto de conexión o elemento del mismo nivel remoto al que se va a enviar la invitación.</param>
        <param name="message">Un mensaje para enviar al interlocutor remoto junto con la invitación de la aplicación.  El mensaje no puede tener más de 255 caracteres Unicode.</param>
        <param name="invitationData">Un blob de datos definidos por el usuario para asociar a la invitación.  Su tamaño no puede ser mayor de 16 384 bytes.</param>
        <param name="applicationToInvite">La aplicación para la que se envió la invitación.</param>
        <param name="userToken">Objeto definido por el usuario para pasar a la devolución de llamada de la operación asincrónica. También se utiliza para identificar la operación asincrónica de cancelación. Se debe especificar este parámetro y es único en todas las operaciones de invitación asincrónicas en curso.</param>
        <summary>Comienza una operación de invitación asincrónica para que el <paramref name="peerEndPoint" /> especificado se una a la colaboración especificada <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> patrocinada por el remitente de la invitación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador no es necesario para iniciar sesión en el <xref:System.Net.PeerToPeer.Collaboration> infraestructura para este método se completa correctamente. Un <xref:System.Net.PeerToPeer.Collaboration.PeerInvitationResponse> desde el invitado no es igual que el invitado Aceptar la invitación para colaborar. Si se envía una invitación a un compañero remoto que no se ha instalado la aplicación, se rechaza automáticamente la invitación.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   <paramref name="UserToken" /> no puede ser NULL.  
  
-   El punto de conexión especificado por <paramref name="peerEndPoint" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentNullException">Los objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> no pueden ser <see langword="null." /></exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">
          <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> para la aplicación actual no existe o está vacío.</exception>
        <block subset="none" type="usage">
          <para>Las sobrecargas adicionales se definen en el <see cref="T:System.Net.PeerToPeer.Collaboration.Peer" /> clase en lugar de las subclases <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />.  
  
Llamar a este método requiere un <see cref="T:System.Security.Permissions.PermissionState" /> de <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.InviteAsyncCancel(System.Object)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.Peer.OnInviteCompleted(System.Net.PeerToPeer.Collaboration.InviteCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      </Docs>
    </Member>
    <Member MemberName="IsSubscribed">
      <MemberSignature Language="C#" Value="public bool IsSubscribed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSubscribed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSubscribed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSubscribed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSubscribed : bool" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> actual se suscribe o cancela la suscripción a un extremo. Opcionalmente, esta propiedad obtiene o establece un valor que especifica si el host actual del mismo nivel o la aplicación host se ha suscrito o ha cancelado la suscripción a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see langword="True" /> si <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se suscribe a este extremo; <see langword="false" /> si el contacto no se ha suscrito o ha cancelado la suscripción.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En muchos casos, un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> no es igual que un host del mismo nivel. Un host del mismo nivel tiene una instancia dentro de la <xref:System.Net.PeerToPeer.Collaboration.ContactManager> del mismo nivel remoto, y la relación es que ha invitado a del mismo nivel para colaborar.  Un punto de conexión tiene un "" dentro de su propio administrador de contactos y el host del mismo nivel de instancia, pero no se especifica la relación.  
  
 Si el host del mismo nivel está en el <xref:System.Net.PeerToPeer.Collaboration.ContactManager>, y el contacto del mismo nivel no elige <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A>, sus <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType> puede tener un valor de bloqueado, en lugar de eliminar su entrada desde el host, póngase en contacto con el administrador.  
  
 Hay una relación de varios a varios entre los elementos del mismo nivel locales, elementos del mismo nivel remotos, los hosts del mismo nivel y suscripciones.  Las suscripciones son por usuario, en lugar de por proceso, por aplicación o por dominio. Por lo tanto, las suscripciones asociadas con un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objetos son la lista de contactos a la que ha suscrito y desde el que espera que las actualizaciones.  Esos contactos han actualizado sus propias aplicaciones, el objeto y la información de presencia o han actualizado la información relativa a los contactos en el <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
 Esta propiedad siempre devuelve `true` si el objeto es un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> que representa el equipo local o "Me" contacto, ya que un contacto siempre se suscribe a sí mismo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="Nickname">
      <MemberSignature Language="C#" Value="public string Nickname { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Nickname" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberSignature Language="VB.NET" Value="Public Property Nickname As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Nickname { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Nickname : string with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.Nickname" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una cadena que representa el <paramref name="Nickname" /> de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> que representa el alias de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se puede usar un alias para un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> en caso de que hay varios elementos del mismo nivel con el mismo nombre para mostrar de objeto.  Una sesión de colaboración también puede utilizar el alias para designar equipos del mismo nivel remotos suelen usadas en los esfuerzos de colaboración más grandes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
      </Docs>
    </Member>
    <Member MemberName="ObjectChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; ObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ ObjectChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " Usage="member this.ObjectChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Este evento se señala cada vez que cambia un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> asociado a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.GetObjects(System.Net.PeerToPeer.Collaboration.PeerEndPoint,System.Guid)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnApplicationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnApplicationChanged (System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnApplicationChanged(class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs appChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnApplicationChanged (appChangedArgs As ApplicationChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnApplicationChanged(System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^ appChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit&#xA;override this.OnApplicationChanged : System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs -&gt; unit" Usage="peerContact.OnApplicationChanged appChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="appChangedArgs">Objeto <see cref="T:System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs" /> que se va a pasar a los delegados asociados al evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />.</param>
        <summary>Genera el evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ApplicationChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cambios en la aplicación se producen cuando una aplicación se inicia, registrar o anular el registro de la infraestructura de colaboración.  También se producen cuando los equipos del mismo nivel unirán o abandonar una sesión de colaboración o cambian las ubicaciones de punto de conexión de red.  Cambios en el ámbito del mismo nivel también pueden realizar un cambio en una aplicación.  
  
 Las clases que heredan de esta clase pueden invalidar este método para realizar tareas adicionales cuando se produce el evento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>En una clase derivada, asegúrese de llamar a la implementación de este método de clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnObjectChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnObjectChanged (System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnObjectChanged(class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs objChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnObjectChanged (objChangedArgs As ObjectChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnObjectChanged(System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^ objChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit&#xA;override this.OnObjectChanged : System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs -&gt; unit" Usage="peerContact.OnObjectChanged objChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objChangedArgs" Type="System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="objChangedArgs">Tipo de cambio de objeto especificado por <see cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />.</param>
        <summary>Genera el evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.ObjectChanged" /> cuando un equipo remoto del mismo nivel agrega, actualiza o quita <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.SynchronizingObject" />
      </Docs>
    </Member>
    <Member MemberName="OnPresenceChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPresenceChanged (System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPresenceChanged(class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs presenceChangedArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPresenceChanged (presenceChangedArgs As PresenceChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPresenceChanged(System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^ presenceChangedArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit&#xA;override this.OnPresenceChanged : System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs -&gt; unit" Usage="peerContact.OnPresenceChanged presenceChangedArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presenceChangedArgs" Type="System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="presenceChangedArgs">Objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs" /> que se va a pasar a los delegados asociados al evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />.</param>
        <summary>Genera el evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" /> cuando el <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> tiene un elemento del mismo nivel que ha cambiado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se producen cambios de presencia cuando un signos de punto fuera de una aplicación, una aplicación se registra o se elimina del registro de la infraestructura de colaboración o un elemento del mismo nivel cancela la suscripción desde una <xref:System.Net.PeerToPeer.Collaboration.PeerContact> o <xref:System.Net.PeerToPeer.Collaboration.PeerNearMe>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSubscribeCompleted">
      <MemberSignature Language="C#" Value="protected void OnSubscribeCompleted (System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnSubscribeCompleted(class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnSubscribeCompleted (e As SubscribeCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnSubscribeCompleted(System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.OnSubscribeCompleted : System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs -&gt; unit" Usage="peerContact.OnSubscribeCompleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objeto <see cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" /> o <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionListChangedEventArgs" /> asociado al evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />.</param>
        <summary>Genera el evento <see cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las clases que heredan de esta clase pueden invalidar este método para realizar más tareas cuando el <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> se produce el evento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Una clase derivada debe llamar a la implementación de este método de clase base para que los delegados registrados reciban el evento.</para>
        </block>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PeerEndPoints">
      <MemberSignature Language="C#" Value="public override System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.Collaboration.PeerEndPointCollection PeerEndPoints" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PeerEndPoints As PeerEndPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ PeerEndPoints { System::Net::PeerToPeer::Collaboration::PeerEndPointCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerEndPoints : System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerEndPointCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" /> asociado a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>Colección <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> asociada a este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> es un elemento del mismo nivel local, remoto del mismo nivel o host de mismo nivel para el contacto del mismo nivel representado por esta instancia no es relevante para la presencia de la <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> en cualquier punto de conexión de la <xref:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection> o <xref:System.Net.PeerToPeer.Collaboration.ContactManager>.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso correcto de la <xref:System.Net.PeerToPeer.Collaboration.PeerContact.PeerEndPoints%2A> propiedad:  
  
 [!code-csharp[NCLPNRPContacts#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPointCollection" />
      </Docs>
    </Member>
    <Member MemberName="PeerName">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.PeerName PeerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.PeerToPeer.PeerName PeerName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PeerName As PeerName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::PeerName ^ PeerName { System::Net::PeerToPeer::PeerName ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PeerName : System.Net.PeerToPeer.PeerName" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.PeerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.PeerName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la clase <see cref="T:System.Net.PeerToPeer.PeerName" /> asociada a la clase <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>
          <see cref="T:System.String" /> que representa el <see cref="T:System.Net.PeerToPeer.PeerName" /> de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />. A menos que se especifique explícitamente, el valor predeterminado de todas las propiedades es <see langword="null" /> para los tipos de referencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No hay dos contactos en la libreta de direcciones pueden tener el mismo <xref:System.Net.PeerToPeer.PeerName>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.NameChangedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PresenceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; PresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ PresenceChanged;" />
      <MemberSignature Language="F#" Value="member this.PresenceChanged : EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " Usage="member this.PresenceChanged : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se provoca este evento cuando <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> cambia su estado de presencia.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Subscribe">
      <MemberSignature Language="C#" Value="public virtual void Subscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Subscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Subscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Subscribe();" />
      <MemberSignature Language="F#" Value="abstract member Subscribe : unit -&gt; unit&#xA;override this.Subscribe : unit -&gt; unit" Usage="peerContact.Subscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Suscribe el elemento del mismo nivel que realiza la llamada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y, como resultado, el elemento del mismo nivel recibe cualquier evento <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> futuro asociado a la <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Net.PeerToPeer.Collaboration.PeerContact> las actualizaciones se producen de forma asincrónica después el <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> método se ha realizado correctamente. Como resultado, es posible que un <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint> que se agregarán a la colección de un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> antes asociado <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name%2A> se proporciona.  
  
 Para supervisar estos cambios, se recomienda que el usuario se suscribe a los eventos pertinentes; Por ejemplo, <xref:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged>.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El elemento del mismo nivel de llamada no ha iniciado sesión en Equipos a mi alrededor.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe" />. El error puede ser debido a la incapacidad de establecer una conexión TCP con el elemento del mismo nivel.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAllowed">
      <MemberSignature Language="C#" Value="public System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.PeerToPeer.Collaboration.SubscriptionType SubscribeAllowed" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberSignature Language="VB.NET" Value="Public Property SubscribeAllowed As SubscriptionType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::PeerToPeer::Collaboration::SubscriptionType SubscribeAllowed { System::Net::PeerToPeer::Collaboration::SubscriptionType get(); void set(System::Net::PeerToPeer::Collaboration::SubscriptionType value); };" />
      <MemberSignature Language="F#" Value="member this.SubscribeAllowed : System.Net.PeerToPeer.Collaboration.SubscriptionType with get, set" Usage="System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.SubscriptionType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que especifica si <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se expone a los eventos de colaboración asociados al elemento del mismo nivel o aplicación que posee el <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> en el que reside el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <value>Valor de enumeración <see cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" /> que especifica si <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se expone a los eventos de colaboración que pertenecen al host del mismo nivel o la aplicación host. A menos que se especifique explícitamente, el valor predeterminado de todas las propiedades es <see langword="null" /> para los tipos de referencia.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Establecer esta propiedad en <xref:System.Net.PeerToPeer.Collaboration.SubscriptionType.Allowed> significa el interlocutor remoto especificado por este <xref:System.Net.PeerToPeer.Collaboration.PeerContact> puede ver las aplicaciones registradas, objetos y la información de presencia para el usuario o aplicación que posee el <xref:System.Net.PeerToPeer.Collaboration.ContactManager> en el que <xref:System.Net.PeerToPeer.Collaboration.PeerContact> objeto se encuentra.  
  
 Esta propiedad no tiene ningún efecto sobre un <xref:System.Net.PeerToPeer.Collaboration.PeerContact> instancia que representa el equipo local o "Me" contacto, ya que un contacto siempre se suscribe a sí mismo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Este objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.  
  
se ha eliminado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeAsync">
      <MemberSignature Language="C#" Value="public virtual void SubscribeAsync (object userToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SubscribeAsync(object userToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SubscribeAsync (userToken As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SubscribeAsync(System::Object ^ userToken);" />
      <MemberSignature Language="F#" Value="abstract member SubscribeAsync : obj -&gt; unit&#xA;override this.SubscribeAsync : obj -&gt; unit" Usage="peerContact.SubscribeAsync userToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userToken" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="userToken">
          <see cref="T:System.Object" /> definido por el usuario que contiene información sobre la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />.</param>
        <summary>Suscribe de forma asincrónica el elemento del mismo nivel que realiza la llamada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y, como resultado, el elemento del mismo nivel recibe cualquier evento <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> futuro asociado a la <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted> evento se desencadena cuando se complete esta operación. Si las actividades de colaboración no tienen que ser asincrónico, el <xref:System.Net.PeerToPeer.Collaboration.PeerContact.Subscribe%2A> método se debe utilizar en su lugar.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="UserToken" /> no puede ser <see langword="null." />.</exception>
        <exception cref="T:System.InvalidOperationException">El elemento del mismo nivel de llamada no ha iniciado sesión en Equipos a mi alrededor.</exception>
        <exception cref="T:System.ObjectDisposedException">Se eliminó el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Identificador <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" /> duplicado.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      </Docs>
    </Member>
    <Member MemberName="SubscribeCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; SubscribeCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SubscribeCompleted As EventHandler(Of SubscribeCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Net::PeerToPeer::Collaboration::SubscribeCompletedEventArgs ^&gt; ^ SubscribeCompleted;" />
      <MemberSignature Language="F#" Value="member this.SubscribeCompleted : EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " Usage="member this.SubscribeCompleted : System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se provoca cuando se ha completado una operación de suscripción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se provoca este evento, la propiedad de error en la <xref:System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs> objeto debe examinarse para determinar si el <xref:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync%2A> proceso se completó correctamente.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAsync(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contiene los datos serializados asociados al objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <param name="context">Contiene el destino del flujo serializado asociado al objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</param>
        <summary>Implementa la interfaz de <see cref="T:System.Runtime.Serialization.ISerializable" /> y devuelve los datos necesarios para serializar la instancia de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="peerContact.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una representación <see cref="T:System.String" /> de la propiedad <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" /> asociada a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <returns>Representación <see cref="T:System.String" /> de <see cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.DisplayName" />
      </Docs>
    </Member>
    <Member MemberName="ToXml">
      <MemberSignature Language="C#" Value="public string ToXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />
      <MemberSignature Language="VB.NET" Value="Public Function ToXml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToXml();" />
      <MemberSignature Language="F#" Value="member this.ToXml : unit -&gt; string" Usage="peerContact.ToXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Serializa <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> en una cadena XML para el almacenamiento persistente o la transferencia de red.</summary>
        <returns>Codificación XML de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToXml" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.FromXml(System.String)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.ToString" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="Unsubscribe">
      <MemberSignature Language="C#" Value="public virtual void Unsubscribe ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Unsubscribe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerContact.Unsubscribe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Unsubscribe ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Unsubscribe();" />
      <MemberSignature Language="F#" Value="abstract member Unsubscribe : unit -&gt; unit&#xA;override this.Unsubscribe : unit -&gt; unit" Usage="peerContact.Unsubscribe " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Quita una suscripción a la <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> y como resultado el elemento del mismo nivel que realiza la llamada ya no recibe eventos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> asociados a <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si no está suscrito el mismo nivel que realiza la llamada a la <xref:System.Net.PeerToPeer.Collaboration.PeerContact> especifica el resultado es una operación inefectiva. Un punto que realiza la llamada puede comprobar si está suscrito a eventos para el mismo nivel identificado por esta instancia con el <xref:System.Net.PeerToPeer.Collaboration.PeerContact.IsSubscribed%2A> propiedad.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> se ha eliminado.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnSubscribeCompleted(System.Net.PeerToPeer.Collaboration.SubscribeCompletedEventArgs)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerContact.SubscribeAllowed" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.SubscriptionType" />
      </Docs>
    </Member>
  </Members>
</Type>