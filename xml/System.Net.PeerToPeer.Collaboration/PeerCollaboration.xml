<Type Name="PeerCollaboration" FullName="System.Net.PeerToPeer.Collaboration.PeerCollaboration">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c02d30bfc13f75c16ee640921540b00e501a2c34" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30460829" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PeerCollaboration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PeerCollaboration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />
  <TypeSignature Language="VB.NET" Value="Public Class PeerCollaboration" />
  <TypeSignature Language="C++ CLI" Value="public ref class PeerCollaboration abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Interactúa con la infraestructura de colaboración del mismo nivel. Muchos de los escenarios de colaboración básicos comienzan con esta clase.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase es una clase estática, ya que abstracto, está sellada y no tiene un constructor público. Sirve para contener y administrar aplicaciones, el objeto y la información de presencia para equipos del mismo nivel que han aceptado invitaciones a una sesión de colaboración. En cuanto a los equipos del mismo nivel, objetos y las aplicaciones, la clase PeerCollaboration proporciona tres descriptores de acceso, uno para cada colección, como una interfaz o un punto de conectividad para lo que sucede en el equipo.  Esta clase no puede heredarse; Si se especifica esta clase sellada como clase base, se producirá un error de tiempo de compilación.  
  
 Métodos y propiedades de esta clase pueden utilizarse para:  
  
-   Iniciar y administrar aplicaciones de colaboración  
  
-   Registrar y eliminar aplicaciones y objetos de colaboración (como certificados, imágenes, avatares y descripciones de texto)  
  
-   Invitar a compañeros a las sesiones de colaboración, incluidos los elementos como el ámbito y objetos que se identificarán a través de Internet  
  
-   Permitir que los equipos del mismo nivel en <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> y <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut%2A> de la infraestructura de colaboración, administrar listas de contactos, o publicar su presencia entre sí  
  
-   Utilizar <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject%2A> propiedades y eventos para coordinar la comunicación asincrónica de aplicación, especialmente para los cambios de nombre, presencia, aplicación u otros objetos.  
  
 "En la nube local de vínculo", "del mismo nivel de subred de la llamada a" y "Ámbito equipos próximos" son términos sinónimos. "Ámbito de Internet" y "sin servidor presencia" son sinónimos. El sitio local <xref:System.Net.PeerToPeer.PnrpScope> no tiene ningún equivalente en el espacio de nombres de colaboración.  
  
 El uso de cada método o propiedad en esta clase requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando se inicia la sesión de colaboración del mismo nivel.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ApplicationLaunchInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo ApplicationLaunchInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ApplicationLaunchInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ApplicationLaunchInfo As PeerApplicationLaunchInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ ApplicationLaunchInfo { System::Net::PeerToPeer::Collaboration::PeerApplicationLaunchInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" />, que contiene la información necesaria cuando se inicia una aplicación debido a una solicitud de colaboración de un elemento remoto del mismo nivel.</summary>
        <value>Si la aplicación se inició debido a una invitación, un objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo" /> que contiene información sobre el elemento del mismo nivel que envió la invitación de la aplicación y se devuelve la propia invitación; de lo contrario, se devuelve <see langword="null" />.  El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es que va a usar una colaboración compatible con <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> después de iniciarse para determinar si se inició debido a una solicitud de colaboración de remoto del mismo nivel de instancia.  La aplicación que realiza la llamada debe inspeccionar el <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Data%2A> y <xref:System.Net.PeerToPeer.Collaboration.PeerApplicationLaunchInfo.Message%2A> propiedades para obtener más información sobre la solicitud de invitación.  
  
 El acceso a esta propiedad requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <Member MemberName="ContactManager">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.ContactManager ContactManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.ContactManager ContactManager" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.ContactManager" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ContactManager As ContactManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::ContactManager ^ ContactManager { System::Net::PeerToPeer::Collaboration::ContactManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.ContactManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el almacén persistente que contiene todos los objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerContact" /> para los elementos remotos del mismo nivel.</summary>
        <value>
          Objeto <see cref="T:System.Net.PeerToPeer.Collaboration.ContactManager" /> que contiene todos los objetos de contacto del mismo nivel para los elementos remotos del mismo nivel. El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="DeleteObject">
      <MemberSignature Language="C#" Value="public static void DeleteObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DeleteObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DeleteObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> cuyo registro se va a anular.</param>
        <summary>Anula el registro de un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> asociado al elemento del mismo nivel que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Objetos del mismo nivel se elimina automáticamente (quita) de la infraestructura de colaboración del mismo nivel cuando una referencia al objeto ya no es válida.  Si un llamador no mantiene una referencia al objeto, está registrado en la infraestructura de colaboración del mismo nivel.  Como alternativa, un objeto puede ser manualmente anula el registro mediante el uso de este método.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="peerObject" /> no puede ser <see langword="null" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.DeleteObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalRegisteredApplications">
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> registrados en el equipo local.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador tiene que iniciar sesión en la infraestructura de colaboración del mismo nivel a través de la <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> método o antes de que el uso de este método.  
  
 El acceso a esta propiedad requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
   
  
## Examples  
 Ejemplo de código siguiente muestra cómo recuperar una colección de aplicaciones registradas con la infraestructura de colaboración:  
  
 [!code-csharp[NCLPNRPContacts#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications () As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene todos los objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> registrados en el equipo local.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> que contiene todas las aplicaciones registradas en el equipo local. Si no se encuentra una aplicación, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador tiene que iniciar sesión en la infraestructura de colaboración del mismo nivel a través de la <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> método antes del uso de este método.  
  
 El acceso a esta propiedad requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Se devolvió un valor no válido cuando este método intentó enumerar la aplicación registrada en este elemento del mismo nivel. Asegúrese de que todas las aplicaciones tienen valores del Registro válidos.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalRegisteredApplications">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications (System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerApplicationCollection GetLocalRegisteredApplications(valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications(System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalRegisteredApplications (type As PeerApplicationRegistrationType) As PeerApplicationCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerApplicationCollection ^ GetLocalRegisteredApplications(System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerApplicationCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> que se devuelve para la aplicación especificada.</param>
        <summary>Obtiene una colección de todos los objetos <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> que se registran en el equipo local para el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" /> especificado.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> que contiene todas las aplicaciones del <paramref name="type" /> especificado registradas en el equipo local. Si no se encuentra una aplicación, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El llamador tiene que iniciar sesión en la infraestructura de colaboración punto a través de la <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> método antes del uso de este método.  
  
 El acceso a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="type" /> no está establecido en un valor conocido en la enumeración <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Se devolvió un valor no válido cuando este método intentó enumerar la aplicación registrada en este elemento del mismo nivel. Asegúrese de que todas las aplicaciones tienen valores del Registro válidos.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerContact.GetApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalSetObjects">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerObjectCollection GetLocalSetObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalSetObjects () As PeerObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerObjectCollection ^ GetLocalSetObjects();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene todas las instancias <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> registradas por el elemento del mismo nivel de la llamada con la infraestructura <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> en este equipo.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> que contiene todas las instancias de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> registradas por el elemento del mismo nivel de la llamada con la infraestructura <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> en el equipo local.  
  
 Si las instancias de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> registradas no se detectan en el equipo local, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El acceso a esta propiedad requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Se devolvió un valor no válido cuando este método intentó enumerar todas las instancias de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> disponibles.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      </Docs>
    </Member>
    <Member MemberName="GetPeersNearMe">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.PeerToPeer.Collaboration.PeerNearMeCollection GetPeersNearMe() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPeersNearMe () As PeerNearMeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::PeerToPeer::Collaboration::PeerNearMeCollection ^ GetPeersNearMe();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerNearMeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una colección de todos los extremos de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> que han iniciado sesión actualmente en la subred del elemento del mismo nivel de la llamada.</summary>
        <returns>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection" /> que contiene todos los extremos de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" /> que han iniciado sesión actualmente en el ámbito 'Equipos próximos'.  
  
 Si no se detectan elementos del mismo nivel en la subred, se devuelve una colección de tamaño cero (0).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La devolución de totalmente relleno <xref:System.Net.PeerToPeer.Collaboration.PeerNearMeCollection> a través de este método puede requerir un período indeterminado de tiempo tras el inicio de sesión en función de la topología de red y la latencia.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo recuperar PeersNearMe como PeerNearMeCollection:  
  
 [!code-csharp[NCLPNRPContacts#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El elemento del mismo nivel no ha iniciado sesión en el ámbito 'Equipos próximos'.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">Se devolvió un valor no válido cuando este método intentó enumerar todos los extremos Equipos a mi alrededor conocidos.</exception>
      </Docs>
    </Member>
    <Member MemberName="LocalApplicationChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt; LocalApplicationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalApplicationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalApplicationChanged As EventHandler(Of ApplicationChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ApplicationChangedEventArgs ^&gt; ^ LocalApplicationChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia un objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationCollection" /> para el elemento local del mismo nivel en el host local.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerApplication.OnApplicationChanged(System.Net.PeerToPeer.Collaboration.ApplicationChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalEndPointName">
      <MemberSignature Language="C#" Value="public static string LocalEndPointName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string LocalEndPointName" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalEndPointName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LocalEndPointName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> asociado al elemento del mismo nivel de la llamada.</summary>
        <value>
          <see cref="T:System.String" /> que contiene el nombre asociado al extremo del elemento del mismo nivel de la llamada (proporcionado como propiedad <see cref="P:System.Net.PeerToPeer.Collaboration.PeerEndPoint.Name" />). El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El acceso a esta propiedad requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede establecer <see cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName" />.</exception>
        <altmember cref="M:System.Net.PeerToPeer.PnrpPermission.IsUnrestricted" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerNearMe" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpPermission" />
      </Docs>
    </Member>
    <Member MemberName="LocalNameChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt; LocalNameChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalNameChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalNameChanged As EventHandler(Of NameChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::NameChangedEventArgs ^&gt; ^ LocalNameChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.NameChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando cambia el nombre de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerEndPoint" /> en el host local para el elemento local del mismo nivel.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerEndPoint.NameChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerEndPoint.OnNameChanged(System.Net.PeerToPeer.Collaboration.NameChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalObjectChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt; LocalObjectChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalObjectChanged As EventHandler(Of ObjectChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::ObjectChangedEventArgs ^&gt; ^ LocalObjectChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Un objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObjectCollection" /> para el elemento local del mismo nivel en el host local ha cambiado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerObject.ObjectChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerObject.OnObjectChanged(System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceChanged">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt; LocalPresenceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event LocalPresenceChanged As EventHandler(Of PresenceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Net::PeerToPeer::Collaboration::PresenceChangedEventArgs ^&gt; ^ LocalPresenceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>add: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>remove: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> del elemento local del mismo nivel en el host local ha cambiado.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerContact.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="LocalPresenceInfo">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Net.PeerToPeer.Collaboration.PeerPresenceInfo LocalPresenceInfo" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property LocalPresenceInfo As PeerPresenceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ LocalPresenceInfo { System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ get(); void set(System::Net::PeerToPeer::Collaboration::PeerPresenceInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerPresenceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la presencia del elemento del mismo nivel de la llamada dentro de la infraestructura <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />.</summary>
        <value>
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> que contiene información de presencia del elemento del mismo nivel de la llamada que se ha registrado para una sesión de <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /> no puede especificar <see langword="null" /></exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" /> es sin conexión  
  
-   No se puede establecer <see cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceInfo" /></exception>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceChanged" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerContact.OnPresenceChanged(System.Net.PeerToPeer.Collaboration.PresenceChangedEventArgs)" />
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.ContactManager.PresenceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RegisterApplication">
      <MemberSignature Language="C#" Value="public static void RegisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> para el que se va a registrar el elemento del mismo nivel de llamada dentro del ámbito asociado (global, local y local de vínculo).</param>
        <param name="type">Tipo de registro que se va a realizar.  La aplicación se puede registrar para llamar simplemente al elemento del mismo nivel o a todos los elementos del mismo nivel que usan el equipo.</param>
        <summary>Registra el <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> especificado para una sesión de colaboración con el elemento del mismo nivel que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La llamada del mismo nivel es necesario para iniciar sesión en la infraestructura de colaboración del mismo nivel con el <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn%2A> método antes de llamar a este método.  
  
 El acceso a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo registrar una aplicación con la infraestructura de colaboración:  
  
 [!code-csharp[NCLPNRPContacts#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">-   La propiedad <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Path" /> en el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> pasado a <paramref name="application" /> es <see langword="null." />  
  
-   La instancia de aplicación del mismo nivel proporcionada tiene el mismo <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> único global que una aplicación que ya está registrada.  Debe estar anulado el registro del registro existente antes de que una nueva aplicación se pueda registrar con el identificador proporcionado.</exception>
        <exception cref="T:System.ArgumentNullException">Los parámetros <paramref name="application" /> y <paramref name="type" /> no pueden ser <see langword="null" />.  Ambos parámetros deben especificarse.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro de tipo no se establece en un valor conocido en la enumeración <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">La operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" /> no se puede completar hasta que el autor de la llamada haya iniciado sesión en la infraestructura.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetObject">
      <MemberSignature Language="C#" Value="public static void SetObject (System.Net.PeerToPeer.Collaboration.PeerObject peerObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetObject(class System.Net.PeerToPeer.Collaboration.PeerObject peerObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetObject(System::Net::PeerToPeer::Collaboration::PeerObject ^ peerObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerObject" Type="System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Parameters>
      <Docs>
        <param name="peerObject">La clase <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> que se va a registrar.</param>
        <summary>Registra un <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> asociado al elemento del mismo nivel que realiza la llamada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método permite que el objeto que se va a ser consultadas por pares remotos que participan en el ámbito en el que se registró el objeto. Si el objeto se registró anteriormente, este método actualiza su registro. Si un objeto registrado queda fuera del ámbito, se puede recuperar a través de la <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects%2A> método.  
  
 El tamaño de la parte de datos de la <xref:System.Net.PeerToPeer.Collaboration.PeerObject> debe ser menor o igual que 16.384 bytes.  
  
 El acceso a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Objeto ya registrado</exception>
        <exception cref="T:System.ArgumentNullException">-   <see cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" /> no puede ser <see langword="null." />.  
  
-   <see cref="P:System.Net.PeerToPeer.Collaboration.PeerObject.Id" /> no puede ser <see langword="null." />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SetObject(System.Net.PeerToPeer.Collaboration.PeerObject)" />.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalSetObjects" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetPeersNearMe" />
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public static void SignIn (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignIn(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignIn(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">El ámbito que está usando el elemento del mismo nivel para unir la actividad <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />.</param>
        <summary>Firma el elemento del mismo nivel en la infraestructura de colaboración con el <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los nombres para mostrar no son necesariamente exclusivos. Los usuarios deben comprobar la identidad de la persona que usa el nombre para mostrar por correo electrónico, teléfono, o en persona antes de aceptar una invitación de colaboración.  
  
 Esta función firma los usuarios en la infraestructura de colaboración.  
  
 El acceso a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo firmar los usuarios en la infraestructura de colaboración.  
  
 [!code-csharp[NCLPNRPContacts#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLPNRPContacts/CS/NCLPNRPContacts.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          El valor de <paramref name="peerScope" /> está establecido en <see cref="F:System.Net.PeerToPeer.Collaboration.PeerScope.None" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="peerScope" /> contiene un valor de enumeración no válido.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignInScope">
      <MemberSignature Language="C#" Value="public static System.Net.PeerToPeer.Collaboration.PeerScope SignInScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Net.PeerToPeer.Collaboration.PeerScope SignInScope" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SignInScope As PeerScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Net::PeerToPeer::Collaboration::PeerScope SignInScope { System::Net::PeerToPeer::Collaboration::PeerScope get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.PeerToPeer.Collaboration.PeerScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> para el que el elemento del mismo nivel de la llamada puede publicar información de presencia, capacidad y objeto.</summary>
        <value>
          Objeto <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" /> que especifica el ámbito en el que participará el elemento del mismo nivel de la llamada. El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El host del mismo nivel o la aplicación host puede limitar o diferenciar la participación del mismo nivel en las actividades de colaboración utilizando ámbitos independientes.  
  
 El elemento del mismo nivel que realiza la llamada debe inspeccionar el valor devuelto de este método para determinar qué otras acciones que puede realizar correctamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerPresenceStatus" />
        <altmember cref="T:System.Net.PeerToPeer.PnrpScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut (System.Net.PeerToPeer.Collaboration.PeerScope peerScope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut(valuetype System.Net.PeerToPeer.Collaboration.PeerScope peerScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut(System::Net::PeerToPeer::Collaboration::PeerScope peerScope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="peerScope" Type="System.Net.PeerToPeer.Collaboration.PeerScope" />
      </Parameters>
      <Docs>
        <param name="peerScope">Ámbito de la enumeración especificado por <see cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />.</param>
        <summary>Firma el elemento del mismo nivel en el ámbito especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no es una operación específica de la aplicación y cierre de sesión puede afectar a otras aplicaciones que se estén ejecutando actualmente. Si el usuario no se ha iniciado en la llamada de ámbito especificado, que este método provoca una operación inefectiva.  
  
 Cuando un usuario cierra sesión en equipos a mi alrededor, su información publicada se elimina de la <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> conjunto de objetos de punto de conexión.  Esto incluye <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalEndPointName%2A> y <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalPresenceInfo%2A>, además de cualquier identificar objetos registrados por el nodo que realiza la llamada en la infraestructura de colaboración. Dado que esta información se elimina, ya no está disponible para los pares remotos o en un host del mismo nivel para la colaboración. Desde la perspectiva de la <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> (clase), otro uso compartido de la misma información con contactos de confianza no es relevante; el uso de la <xref:System.Net.PeerToPeer.Collaboration.PeerCollaboration> clase no afecta a otros objetos en la que esta información se conserva, como un homólogo remoto <xref:System.Net.PeerToPeer.Collaboration.ContactManager> objeto. Del mismo modo, al eliminar un punto de la <xref:System.Net.PeerToPeer.Collaboration.ContactManager> no afecta a su presencia en una aplicación de colaboración; otros contactos son todavía puede ver su presencia y colaborar con él.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="peerScope" /> contiene un valor de enumeración no válido.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignOut(System.Net.PeerToPeer.Collaboration.PeerScope)" />.</exception>
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerScope" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignIn(System.Net.PeerToPeer.Collaboration.PeerScope)" />
        <altmember cref="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SignInScope" />
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public static System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.Net.PeerToPeer.Collaboration.PeerCollaboration.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Description("SynchronizingObject")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto de devolución de llamada de controlador de eventos para todos los controladores de eventos.</summary>
        <value>Objeto con <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> implementado que se va a usar para la sincronización de subprocesos de la aplicación.  
  
 El valor predeterminado de esta propiedad es <see langword="null" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Net.PeerToPeer.Collaboration.PeerCollaboration.LocalObjectChanged" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.ObjectChangedEventArgs" />
        <altmember cref="T:System.Net.PeerToPeer.Collaboration.PeerObject" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterApplication">
      <MemberSignature Language="C#" Value="public static void UnregisterApplication (System.Net.PeerToPeer.Collaboration.PeerApplication application, System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UnregisterApplication(class System.Net.PeerToPeer.Collaboration.PeerApplication application, valuetype System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UnregisterApplication (application As PeerApplication, type As PeerApplicationRegistrationType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UnregisterApplication(System::Net::PeerToPeer::Collaboration::PeerApplication ^ application, System::Net::PeerToPeer::Collaboration::PeerApplicationRegistrationType type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="application" Type="System.Net.PeerToPeer.Collaboration.PeerApplication" />
        <Parameter Name="type" Type="System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />
      </Parameters>
      <Docs>
        <param name="application">
          <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> cuyo registro se va a anular para el elemento del mismo nivel de llamada.</param>
        <param name="type">Tipo de anulación del registro para realizar el elemento del mismo nivel de llamada o para todos los elementos del mismo nivel que existen en el equipo.</param>
        <summary>Anula el registro del <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplication" /> especificado desde la infraestructura <see cref="T:System.Net.PeerToPeer.Collaboration.PeerCollaboration" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al anular el registro un <xref:System.Net.PeerToPeer.Collaboration.PeerApplication> detiene la llamada del mismo nivel de recibir invitaciones de colaboración para él. Si la aplicación que se anula el registro no se registró anteriormente, esta es una operación inefectiva.  
  
 Llamar a este método requiere un <xref:System.Security.Permissions.PermissionState> de <xref:System.Security.Permissions.PermissionState.Unrestricted>. Este estado se crea cuando el <xref:System.Net.PeerToPeer.Collaboration.Peer> inicia sesión de colaboración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El <see cref="P:System.Net.PeerToPeer.Collaboration.PeerApplication.Id" /> único global para la aplicación especificada no existe o está vacío.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="application" /> o <paramref name="type" /> debe establecerse en <see langword="null." /></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El parámetro <paramref name="type" /> no se establece en un valor conocido en <see cref="T:System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType" />.</exception>
        <exception cref="T:System.Net.PeerToPeer.PeerToPeerException">No se puede completar la operación <see cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.UnregisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />.</exception>
        <altmember cref="Overload:System.Net.PeerToPeer.Collaboration.PeerCollaboration.GetLocalRegisteredApplications" />
        <altmember cref="M:System.Net.PeerToPeer.Collaboration.PeerCollaboration.RegisterApplication(System.Net.PeerToPeer.Collaboration.PeerApplication,System.Net.PeerToPeer.Collaboration.PeerApplicationRegistrationType)" />
      </Docs>
    </Member>
  </Members>
</Type>