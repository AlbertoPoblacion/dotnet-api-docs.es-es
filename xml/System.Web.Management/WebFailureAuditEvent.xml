<Type Name="WebFailureAuditEvent" FullName="System.Web.Management.WebFailureAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bcefe2c77b36c45aa04a4880a157bf914314b61e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539959" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebFailureAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebFailureAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebFailureAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebFailureAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebFailureAuditEvent : System::Web::Management::WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona información sobre los errores de seguridad.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supervisión de estado ASP.NET permite personal de producción y las operaciones administrar las aplicaciones Web implementadas. El <xref:System.Web.Management?displayProperty=nameWithType> espacio de nombres contiene los tipos de evento de estado responsables de empaquetar los datos de estado de mantenimiento de la aplicación y los tipos de proveedor responsables de procesar estos datos. También contiene los tipos compatibles que ayudan a administrar los eventos de estado.  
  
 La <xref:System.Web.Management.WebFailureAuditEvent> clase se utiliza cuando se produce un error en una operación de seguridad. Un ejemplo de esto es un error de autorización de dirección URL para una solicitud Web.  
  
 De forma predeterminada, ASP.NET se ha configurado para generar el <xref:System.Web.Management.WebFailureAuditEvent> eventos para las siguientes características:  
  
-   Autorización de archivo. ASP.NET intenta la autorización de archivo sólo cuando una identidad de Windows está asociada a la solicitud. El código de auditoría de eventos relacionados es <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationFailure>.  
  
-   Autorización de dirección URL. Esto rige intentos no autorizados de acceso a un recurso de dirección URL. No se auditan los intentos con error por un usuario anónimo, porque la autenticación anónima incorrecta es aceptable en la mayoría de los casos. El código de auditoría de eventos relacionados es <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationFailure>.  
  
-   Genéricas o de seguridad no controlada por condiciones. La siguiente es una lista de los códigos de evento relacionados con estas condiciones:  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditInvalidViewStateFailure>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledSecurityException>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditUnhandledAccessException>  
  
 Cuando un <xref:System.Web.Management.WebFailureAuditEvent> evento se desencadena, supervisión de estado ASP.NET incrementa el contador de rendimiento de eventos de resultados negativos de auditoría provocados relacionado y, después, comprueba la `healthMonitoring` sección de configuración para determinar si algún proveedor se suscribe al evento. Si se suscriben proveedores al evento, ASP.NET envía el evento a ellos para su procesamiento.  
  
> [!NOTE]
>  Para ver el contador de rendimiento eventos de resultados negativos de auditoría provocados en el Monitor de sistema (PerfMon), en la **agregar contadores** ventana, seleccione **ASP.NET** desde el **objeto de rendimiento** lista desplegable, seleccione la **generan eventos de error de auditoría** contador de rendimiento y haga clic en el **agregar** botón. Para obtener más información, consulte [mediante el Monitor de sistema (PerfMon) con aplicaciones ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) en la documentación de IIS en MSDN.  
  
> [!NOTE]
>  En la mayoría de los casos podrá utilizar los tipos de supervisión de estado ASP.NET tal como se implementa y se controlará el sistema de supervisión de estado especificando valores en la `healthMonitoring` sección de configuración. También puede derivar de los tipos de supervisión de estado para crear sus propios eventos personalizados y los proveedores. Para obtener un ejemplo de cómo se deriva de la <xref:System.Web.Management.WebFailureAuditEvent> de clases, vea la sección ejemplo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo se deriva de la <xref:System.Web.Management.WebFailureAuditEvent> clase para crear un evento de auditoría personalizada.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#1)]  
  
 El siguiente fragmento de configuración muestra cómo habilitar ASP.NET usar el <xref:System.Web.Management.WebFailureAuditEvent> eventos.  
  
```  
<healthMonitoring   
enabled="true"  
heartBeatInterval="0">   
<providers>  
<add name="EventLogProvider"   
type="System.Web.Management.EventLogWebEventProvider,  
System.Web,Version=2.0.3600.0,Culture=neutral,  
PublicKeyToken=b03f5f7f11d50a3a"/>  
</providers>  
  
<eventMappings>  
<add  name="SampleWebFailureAuditEvent"   
type="SamplesAspNet.SampleWebFailureAuditEvent,  
webfailureauditevent,Version=1.0.1663.31140,   
Culture=neutral,   
PublicKeyToken=0d1fa0f69d94de96,   
processorArchitecture=MSIL"/>  
</eventMappings>  
  
<rules>  
<add name="Custom Failure Audit Default"  
eventName=" SampleWebFailureAuditEvent "  
provider="EventLogProvider"  
profile="Default"/>    
</rules>  
  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Al aplicar el formato de la información de eventos personalizados para su presentación, reemplace el <see cref="M:System.Web.Management.WebBaseEvent.FormatCustomEventDetails(System.Web.Management.WebEventFormatter)" /> método en lugar del <see cref="Overload:System.Web.Management.WebBaseEvent.ToString" /> método. Esto evitará la sobrescritura o alteración con información confidencial del sistema.</para>
    </block>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebSuccessAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WebFailureAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Descripción del evento.</param>
        <param name="eventSource">El objeto que es el origen del evento.</param>
        <param name="eventCode">Código asociado al evento. Cuando se implementa un evento personalizado, el código del evento debe ser mayor que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WebFailureAuditEvent" /> mediante los parámetros proporcionados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se usa internamente por el sistema de supervisión de estado ASP.NET. No utiliza nunca para crear una instancia de <xref:System.Web.Management.WebFailureAuditEvent>, pero se puede llamar a este constructor al implementar su propio tipo de evento que se hereda de esta clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este constructor en el `SampleWebFailureAuditEvent` clase. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.Management.WebFailureAuditEvent> general sobre la clase.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebFailureAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebFailureAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Descripción del evento.</param>
        <param name="eventSource">El objeto que es el origen del evento.</param>
        <param name="eventCode">Código asociado al evento. Cuando se implementa un evento personalizado, el código del evento debe ser mayor que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valor de <see cref="T:System.Web.Management.WebEventCodes" />, que especifica el identificador detallado del evento.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WebFailureAuditEvent" /> mediante los parámetros proporcionados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se usa internamente por el sistema de supervisión de estado ASP.NET. No utiliza nunca para crear una instancia de <xref:System.Web.Management.WebFailureAuditEvent>, pero se puede llamar a este constructor al implementar su propio tipo de evento que se hereda de esta clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este constructor en el `SampleWebFailureAuditEvent` clase. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.Management.WebFailureAuditEvent> general sobre la clase.  
  
 [!code-csharp[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/CS/webfailureauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebFailureAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebFailureAuditEvent/VB/webfailureauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebFailureAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Incrementa el contador de rendimiento Eventos de resultados negativos de auditoría provocados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contador de rendimiento genera eventos de error de auditoría hace un seguimiento del número de eventos de auditoría errores generados desde que se inició la aplicación. Este método también llama el elemento primario <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> método, que incrementa el contador de eventos provocados. Este contador realiza un seguimiento del número total de eventos generados.  
  
 Para ver estos contadores de rendimiento en el Monitor de sistema (PerfMon), en la **agregar contadores** ventana Seleccione **ASP.NET** desde el **objeto de rendimiento** lista desplegable, seleccione el contador de rendimiento que desea ver y haga clic en el **agregar** botón. Para obtener más información, consulte [mediante el Monitor de sistema (PerfMon) con aplicaciones ASP.NET](http://go.microsoft.com/fwlink/?linkid=36882) en la documentación de IIS en MSDN.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>