<Type Name="WebSuccessAuditEvent" FullName="System.Web.Management.WebSuccessAuditEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64c4a5e69789bc5c0515b2808af9ac7896d2f8b8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30539989" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebSuccessAuditEvent : System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebSuccessAuditEvent extends System.Web.Management.WebAuditEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebSuccessAuditEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebSuccessAuditEvent&#xA;Inherits WebAuditEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebSuccessAuditEvent : System::Web::Management::WebAuditEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebAuditEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona información de los eventos de seguridad correctos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supervisión de estado ASP.NET permite personal de producción y las operaciones administrar las aplicaciones Web implementadas. El <xref:System.Web.Management> espacio de nombres contiene los tipos de evento de estado responsables de empaquetar los datos de estado de mantenimiento de la aplicación y los tipos de proveedor responsables de procesar estos datos. También contiene los tipos compatibles que ayudan a administrar los eventos de estado.  
  
 La <xref:System.Web.Management.WebSuccessAuditEvent> clase se utiliza cuando se produce una operación correcta relacionadas con la seguridad. Un ejemplo de esto es una autorización de dirección URL correcta para una solicitud Web.  
  
 En la lista siguiente se describe las características de los eventos de tipo <xref:System.Web.Management.WebSuccessAuditEvent> generados por ASP.NET:  
  
-   Autorización de archivo. Se auditan las condiciones correctas. ASP.NET sólo intenta la autorización de archivo cuando una identidad de Windows está asociada a la solicitud. El código de auditoría de eventos relacionados es <xref:System.Web.Management.WebEventCodes.AuditFileAuthorizationSuccess>.  
  
-   Autorización de dirección URL. Eso significa que el acceso de un recurso de dirección URL para el que se le concede autorización. Se auditan las condiciones correctas. El código de auditoría de eventos relacionados es <xref:System.Web.Management.WebEventCodes.AuditUrlAuthorizationSuccess>.  
  
-   Otras condiciones de seguridad. La siguiente es una lista de los códigos de evento relacionados:  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditFormsAuthenticationSuccess>  
  
    -   <xref:System.Web.Management.WebEventCodes.AuditMembershipAuthenticationSuccess>  
  
 Cuando un <xref:System.Web.Management.WebSuccessAuditEvent> es genera, supervisión de estado ASP.NET incrementa el contador de rendimiento de eventos de resultados positivos de auditoría provocados relacionado y, después, comprueba el `healthMonitoring` configuración para determinar si algún proveedor se suscribe al evento. Si se suscriben proveedores al evento, ASP.NET envía el evento a ellos para su procesamiento.  
  
> [!NOTE]
>  Para ver el contador de rendimiento eventos de resultados positivos de auditoría provocados en el Monitor de sistema (PerfMon), en la **agregar contadores** ventana Seleccione **ASP.NET** desde el **objeto de rendimiento** lista desplegable, seleccione la **eventos de resultados positivos de auditoría provocados** contador de rendimiento y haga clic en el **agregar** botón. Para obtener más información, consulte [supervisar el rendimiento de aplicaciones de ASP.NET](http://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 Dado que las auditorías de aciertos representan una condición esperada, no puede suscribirse a ellas. Puede suscribirse a ellos con el fin de proporcionar acceso de auditoría para el sitio.  
  
> [!NOTE]
>  En la mayoría de los casos podrá utilizar los tipos de supervisión de estado ASP.NET tal como se implementa y se controlará el sistema de supervisión de estado especificando valores en la `healthMonitoring` sección de configuración. También puede derivar de los tipos de supervisión de estado para crear sus propios eventos personalizados y los proveedores. Para obtener un ejemplo de cómo se deriva de la <xref:System.Web.Management.WebSuccessAuditEvent> de clases, vea el ejemplo proporcionado en este tema.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo derivar desde la <xref:System.Web.Management.WebSuccessAuditEvent> clase para crear un evento de auditoría personalizada.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#1)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#1)]  
  
 El ejemplo siguiente es un extracto del archivo de configuración que habilita la supervisión para utilizar el evento de estado ASP.NET.  
  
```  
<healthMonitoring   
..enabled="true"  
..heartBeatInterval="0">   
  <providers>  
    <add name="EventLogProvider"   
    type="System.Web.Management.EventLogWebEventProvider,  
    System.Web,Version=2.0.3600.0,Culture=neutral,  
    PublicKeyToken=b03f5f7f11d50a3a"/>  
  </providers>  
  <eventMappings>  
    <add  name="SampleWebSuccessAuditEvent"   
      type="SamplesAspNet.SampleWebSuccessAuditEvent,  
      websuccessauditevent,Version=1.0.1663.31140,   
      Culture=neutral,   
      PublicKeyToken=0d1fa0f69d94de96,   
      processorArchitecture=MSIL"/>  
  </eventMappings>  
  <rules>  
    <add name="Custom Failure Audit Default"  
      eventName=" SampleWebFailureAuditEvent "  
      provider="EventLogProvider"  
      profile="Default"/>    
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Management.WebAuditEvent" />
    <altmember cref="T:System.Web.Management.WebFailureAuditEvent" />
    <altmember cref="T:System.Web.Management.WebEventCodes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WebSuccessAuditEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Descripción del evento.</param>
        <param name="eventSource">El objeto que es el origen del evento.</param>
        <param name="eventCode">Código asociado al evento. Cuando se implementa un evento personalizado, el código del evento debe ser mayor que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> mediante los parámetros proporcionados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se usa internamente por el sistema de supervisión de estado ASP.NET. No utiliza nunca para crear instancias de un <xref:System.Web.Management.WebSuccessAuditEvent> objeto, pero se puede llamar a este constructor cuando se implementa su propio tipo de evento que se hereda de esta clase.  
  
> [!NOTE]
>  El <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructor no está pensado para utilizarse directamente desde el código. Lo llama ASP.NET. Puede llamar a la <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructor al derivar desde la <xref:System.Web.Management.WebSuccessAuditEvent> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este constructor en el `SampleWebSuccessAuditEvent` clase. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.Management.WebSuccessAuditEvent> clase.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#2)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebSuccessAuditEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebSuccessAuditEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Descripción del evento.</param>
        <param name="eventSource">El objeto que es el origen del evento.</param>
        <param name="eventCode">Código asociado al evento. Cuando se implementa un evento personalizado, el código del evento debe ser mayor que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Valor de <see cref="T:System.Web.Management.WebEventCodes" />, que especifica el identificador detallado del evento.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WebSuccessAuditEvent" /> mediante los parámetros proporcionados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se usa internamente por el sistema de supervisión de estado ASP.NET. No utiliza nunca para crear instancias de un <xref:System.Web.Management.WebSuccessAuditEvent> objeto, pero se puede llamar a este constructor cuando se implementa su propio tipo de evento que se hereda de esta clase.  
  
> [!NOTE]
>  El <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructor no está pensado para utilizarse directamente desde el código. Lo llama ASP.NET. Puede llamar a la <xref:System.Web.Management.WebSuccessAuditEvent.%23ctor%2A> constructor al derivar desde la <xref:System.Web.Management.WebSuccessAuditEvent> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo llamar a este constructor en el `SampleWebSuccessAuditEvent` clase. Este ejemplo de código forma parte de un ejemplo mayor proporcionado para el <xref:System.Web.Management.WebSuccessAuditEvent> clase.  
  
 [!code-csharp[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/CS/websuccessauditevent.cs#3)]
 [!code-vb[System.Web.Management.WebSuccessAuditEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebSuccessAuditEvent/VB/websuccessauditevent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebSuccessAuditEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Incrementa el contador de rendimiento de Eventos de resultados positivos de auditoría provocados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El contador de rendimiento eventos de resultados positivos de auditoría provocados supervisa el número de eventos de auditoría correcta generados desde que se inició la aplicación. Este método también llama el elemento primario <xref:System.Web.Management.WebBaseEvent.IncrementPerfCounters%2A> método, que incrementa el contador de eventos provocados. Este contador realiza un seguimiento del número total de eventos generados.  
  
 Para ver estos contadores de rendimiento en el Monitor de sistema (PerfMon), en la **agregar contadores** ventana Seleccione **ASP.NET** desde el **objeto de rendimiento** lista desplegable, seleccione el contador de rendimiento que desea ver y haga clic en el **agregar** botón. Para obtener más información, consulte [supervisar el rendimiento de aplicaciones de ASP.NET](http://msdn.microsoft.com/library/c96da1d1-6077-48d3-88e2-d9127ed91cf5).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>