<Type Name="WebRequestEvent" FullName="System.Web.Management.WebRequestEvent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c5a0b8996bfaad9fbcd90e833cb3646ac4fbf15" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30538639" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebRequestEvent : System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebRequestEvent extends System.Web.Management.WebManagementEvent" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.WebRequestEvent" />
  <TypeSignature Language="VB.NET" Value="Public Class WebRequestEvent&#xA;Inherits WebManagementEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebRequestEvent : System::Web::Management::WebManagementEvent" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.WebManagementEvent</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define la clase base para los eventos que proporcionan información sobre solicitudes Web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.Management.WebRequestEvent> se produce en cada solicitud Web.  
  
 Usa el <xref:System.Web.Management.WebRequestInformation> clase para obtener información de la solicitud.  
  
> [!NOTE]
>  En la mayoría de los casos utilizará los tipos estándar de supervisión de estado ASP.NET y controlar su comportamiento estableciendo el `healthMonitoring` sección de configuración. También puede crear tipos personalizados, como se muestra en el ejemplo siguiente. Si se crea un tipo de evento personalizado y necesita agregar su propia información, personalizar el <xref:System.Web.Management.WebBaseEvent.FormatCustomEventDetails%2A> método. Esto evitará la sobrescritura o alteración con información confidencial del sistema.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo derivar desde la <xref:System.Web.Management.WebRequestEvent> clase para crear un evento personalizado.  
  
 [!code-csharp[System.Web.Management.WebRequestEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestEvent/CS/WebRequestEvent.cs#1)]
 [!code-vb[System.Web.Management.WebRequestEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestEvent/VB/WebRequestEvent.vb#1)]  
  
 El siguiente es un extracto del archivo de configuración que permite a ASP.NET utilizar el evento personalizado.  
  
```  
<healthMonitoring   
  enabled="true" heartBeatInterval="0">  
  <providers>  
    <!-- Define the custom provider that   
         processes custom Web request events. -->  
    <add name="SampleWebEventProvider"   
type="SamplesAspNet.SampleEventProvider,webeventprovider,Version=1.0.1573.18094, Culture=neutral, PublicKeyToken=b5a57a9a9d487cf4, processorArchitecture=MSIL"/>  
  </providers>  
  
  <eventMappings>  
    <!--  Define the event source that   
         issues custom events.   -->  
    <add  name="SampleWebRequestEvent"   
type="SamplesAspNet.SampleWebRequestEvent,webrequestevent,Version=1.0.1573.23947, Culture=neutral, PublicKeyToken=e717d983a78c8ddb, processorArchitecture=MSIL"/>  
    </eventMappings>  
  
  <rules>  
        <!-- Associate custom event with   
        related custom provider -->  
    <add   
      name="CustomWebRequestEvent"  
      eventName="SampleWebRequestEvent"   
      provider="SampleWebEventProvider"   
      profile="Critical"/>  
  </rules>  
</healthMonitoring>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.Management.WebRequestEvent" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebRequestEvent (string message, object eventSource, int eventCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebRequestEvent.#ctor(System.String,System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebRequestEvent(System::String ^ message, System::Object ^ eventSource, int eventCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje asociado al evento.</param>
        <param name="eventSource">El objeto que es el origen del evento.</param>
        <param name="eventCode">Código <see cref="T:System.Web.Management.WebEventCodes" /> asociado al evento. Debe ser mayor que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <summary>Inicializa la clase <see cref="T:System.Web.Management.WebRequestEvent" /> con parámetros de evento especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El constructor <xref:System.Web.Management.WebRequestEvent.%23ctor%2A> permite especificar el mensaje de evento, el origen del evento y el código o identificador asociado al evento.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo personalizar este constructor.  
  
> [!NOTE]
>  El valor que se usa para definir el código de evento o identificador debe ser mayor que <xref:System.Web.Management.WebEventCodes.WebExtendedBase>.  
  
 [!code-csharp[System.Web.Management.WebRequestEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestEvent/CS/WebRequestEvent.cs#2)]
 [!code-vb[System.Web.Management.WebRequestEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestEvent/VB/WebRequestEvent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal WebRequestEvent (string message, object eventSource, int eventCode, int eventDetailCode);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(string message, object eventSource, int32 eventCode, int32 eventDetailCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebRequestEvent.#ctor(System.String,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (message As String, eventSource As Object, eventCode As Integer, eventDetailCode As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; WebRequestEvent(System::String ^ message, System::Object ^ eventSource, int eventCode, int eventDetailCode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="eventSource" Type="System.Object" />
        <Parameter Name="eventCode" Type="System.Int32" />
        <Parameter Name="eventDetailCode" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">Mensaje asociado al evento.</param>
        <param name="eventSource">El objeto que es el origen del evento.</param>
        <param name="eventCode">Código <see cref="T:System.Web.Management.WebEventCodes" /> asociado al evento. Debe ser mayor que <see cref="F:System.Web.Management.WebEventCodes.WebExtendedBase" />.</param>
        <param name="eventDetailCode">Código de detalles <see cref="T:System.Web.Management.WebEventCodes" /> asociado al evento.</param>
        <summary>Inicializa la clase <see cref="T:System.Web.Management.WebRequestEvent" /> con parámetros de evento especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El constructor <xref:System.Web.Management.WebRequestEvent.%23ctor%2A> permite especificar el mensaje de evento, el origen de evento, el código o identificador asociado con el evento y el código detallado.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo personalizar este constructor.  
  
> [!NOTE]
>  El valor que se usa para definir el código de evento o identificador debe ser mayor que <xref:System.Web.Management.WebEventCodes.WebExtendedBase>  
  
 [!code-csharp[System.Web.Management.WebRequestEvent#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Management.WebRequestEvent/CS/WebRequestEvent.cs#3)]
 [!code-vb[System.Web.Management.WebRequestEvent#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Management.WebRequestEvent/VB/WebRequestEvent.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncrementPerfCounters">
      <MemberSignature Language="C#" Value="protected internal override void IncrementPerfCounters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void IncrementPerfCounters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.WebRequestEvent.IncrementPerfCounters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub IncrementPerfCounters ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void IncrementPerfCounters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Se utiliza internamente para incrementar los contadores de rendimiento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestInformation">
      <MemberSignature Language="C#" Value="public System.Web.Management.WebRequestInformation RequestInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Management.WebRequestInformation RequestInformation" />
      <MemberSignature Language="DocId" Value="P:System.Web.Management.WebRequestEvent.RequestInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RequestInformation As WebRequestInformation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Management::WebRequestInformation ^ RequestInformation { System::Web::Management::WebRequestInformation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Management.WebRequestInformation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información asociada a la solicitud de la aplicación Web.</summary>
        <value>Información asociada a la solicitud de la aplicación Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La información de solicitud estándar se define mediante la <xref:System.Web.Management.WebRequestInformation> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo obtener la información de solicitud Web.  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Management.WebRequestInformation" />
      </Docs>
    </Member>
  </Members>
</Type>