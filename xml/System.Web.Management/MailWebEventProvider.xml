<Type Name="MailWebEventProvider" FullName="System.Web.Management.MailWebEventProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="feefb096d874ac5384eef5f62fd608fadcd272e5" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37605795" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MailWebEventProvider : System.Web.Management.BufferedWebEventProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MailWebEventProvider extends System.Web.Management.BufferedWebEventProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Management.MailWebEventProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MailWebEventProvider&#xA;Inherits BufferedWebEventProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class MailWebEventProvider abstract : System::Web::Management::BufferedWebEventProvider" />
  <TypeSignature Language="F#" Value="type MailWebEventProvider = class&#xA;    inherit BufferedWebEventProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Management.BufferedWebEventProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Especifica la función básica para crear proveedores de eventos que envían correo electrónico.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supervisión de estado ASP.NET permite al personal de producción y las operaciones administrar aplicaciones Web implementadas. El <xref:System.Web.Management> espacio de nombres contiene los tipos de evento de mantenimiento responsables de empaquetar datos de estado de la aplicación y los tipos de proveedor responsables de procesar estos datos. También contiene los tipos compatibles que ayudan a administrar los eventos de estado.  
  
 La <xref:System.Web.Management.MailWebEventProvider> clase es una clase base para la creación de proveedores que controlan eventos Web y enviar correo electrónico para los eventos seleccionados. Esta clase admite la infraestructura de .NET Framework y no está destinada a se hereda o utilizarse directamente desde su código.  
  
> [!NOTE]
>  En la mayoría de los casos podrá utilizar los tipos de supervisión de estado ASP.NET, tal como está implementado y controlará el sistema de supervisión de estado mediante la especificación de valores en la `<healthMonitoring>` sección de configuración. También se puede derivar de los tipos de supervisión de estado para crear sus propios eventos personalizados y proveedores. Para obtener un ejemplo de creación de un proveedor personalizado, vea [Cómo: implementar el estado de supervisión personalizada proveedor ejemplo](http://msdn.microsoft.com/library/bbb1c959-e6e4-42b2-be62-49b7ca5ab72c).  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:System.Web.Management.WebEventProvider" />
    <altmember cref="T:System.Web.Configuration.HealthMonitoringSection" />
  </Docs>
  <Members>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.MailWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="mailWebEventProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">El nombre utilizado en el archivo de configuración para identificar a este proveedor.</param>
        <param name="config">Colección <see cref="T:System.Collections.Specialized.NameValueCollection" /> que especifica los atributos asignados a este proveedor en el archivo de configuración.</param>
        <summary>Establece los valores iniciales para este objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama para inicializar el <xref:System.Web.Management.EventLogWebEventProvider> con la configuración y el nombre especificado en el archivo de configuración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException">No se ha asignado ningún destinatario en <paramref name="config" />.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessEvent">
      <MemberSignature Language="C#" Value="public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEvent(class System.Web.Management.WebBaseEvent eventRaised) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.MailWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEvent (eventRaised As WebBaseEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEvent(System::Web::Management::WebBaseEvent ^ eventRaised);" />
      <MemberSignature Language="F#" Value="override this.ProcessEvent : System.Web.Management.WebBaseEvent -&gt; unit" Usage="mailWebEventProvider.ProcessEvent eventRaised" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventRaised" Type="System.Web.Management.WebBaseEvent" />
      </Parameters>
      <Docs>
        <param name="eventRaised">Objeto <see cref="T:System.Web.Management.WebBaseEvent" /> que se va a procesar.</param>
        <summary>Procesa el evento pasado al proveedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este es el método que llama la supervisión de estado ASP.NET para iniciar el procesamiento del evento.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si está habilitado el almacenamiento en búfer, debe controlar la adición de eventos en el búfer.</para>
        </block>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessEventFlush">
      <MemberSignature Language="C#" Value="public override void ProcessEventFlush (System.Web.Management.WebEventBufferFlushInfo flushInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ProcessEventFlush(class System.Web.Management.WebEventBufferFlushInfo flushInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.MailWebEventProvider.ProcessEventFlush(System.Web.Management.WebEventBufferFlushInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ProcessEventFlush (flushInfo As WebEventBufferFlushInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ProcessEventFlush(System::Web::Management::WebEventBufferFlushInfo ^ flushInfo);" />
      <MemberSignature Language="F#" Value="override this.ProcessEventFlush : System.Web.Management.WebEventBufferFlushInfo -&gt; unit" Usage="mailWebEventProvider.ProcessEventFlush flushInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flushInfo" Type="System.Web.Management.WebEventBufferFlushInfo" />
      </Parameters>
      <Docs>
        <param name="flushInfo">
          <see cref="T:System.Web.Management.WebEventBufferFlushInfo" /> que contiene el recuento de eventos que están en espera para enviar su notificación.</param>
        <summary>Quita todos los eventos del búfer del proveedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método se llama por el sistema de supervisión de estado cuando se requiere un vaciado de búfer de eventos.  
  
 Cuando se vacía el búfer de eventos, se produce una notificación y el búfer de eventos completo se envía a los destinatarios en el menor número de mensajes como sea posible, independientemente de la longitud de tiempo transcurrido desde la última notificación.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Management.MailWebEventProvider.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="mailWebEventProvider.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza tareas asociadas al cierre del proveedor.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET llama el <xref:System.Web.Management.EventLogWebEventProvider.Shutdown%2A> método cuando finaliza el dominio de aplicación que hospeda la aplicación Web. Se llama al método para llevar a cabo las tareas que permitirá que la aplicación al finalizar correctamente la conversación.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>