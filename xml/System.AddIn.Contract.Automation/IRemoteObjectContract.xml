<Type Name="IRemoteObjectContract" FullName="System.AddIn.Contract.Automation.IRemoteObjectContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b6589556a020e15a686acb1a793444ff0fe196df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30357749" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRemoteObjectContract : System.AddIn.Contract.IContract" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRemoteObjectContract implements class System.AddIn.Contract.IContract" />
  <TypeSignature Language="DocId" Value="T:System.AddIn.Contract.Automation.IRemoteObjectContract" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRemoteObjectContract&#xA;Implements IContract" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRemoteObjectContract : System::AddIn::Contract::IContract" />
  <AssemblyInfo>
    <AssemblyName>System.AddIn.Contract</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.AddIn.Contract.IContract</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Define un contrato que los componentes pueden usar para tener acceso a un objeto entre los límites del dominio de aplicación y del proceso.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se implementa <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> en un tipo de componentes pueden usar el contrato para tener acceso a información de tipo de objetos del tipo. Componentes de acceso a la información de tipo mediante una llamada a la <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> método para obtener un <xref:System.AddIn.Contract.Automation.IRemoteTypeContract>. El <xref:System.AddIn.Contract.Automation.IRemoteTypeContract> interfaz define un contrato que componentes pueden usar para tener acceso a información de miembro y tipo específico y para invocar a miembros.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRemoteType">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AddIn.Contract.Automation.IRemoteTypeContract GetRemoteType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRemoteType () As IRemoteTypeContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::Automation::IRemoteTypeContract ^ GetRemoteType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.Automation.IRemoteTypeContract</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> que especifica el tipo de la interfaz <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> actual.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /> que especifica el tipo de la interfaz <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A> objeto del método para tener acceso a los miembros de la instancia remota que actual <xref:System.AddIn.Contract.Automation.IRemoteObjectContract> identifica.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteCast">
      <MemberSignature Language="C#" Value="public System.AddIn.Contract.RemoteArgument RemoteCast (string canonicalName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.AddIn.Contract.RemoteArgument RemoteCast(string canonicalName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoteCast (canonicalName As String) As RemoteArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::AddIn::Contract::RemoteArgument RemoteCast(System::String ^ canonicalName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.AddIn.Contract</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AddIn.Contract.RemoteArgument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="canonicalName">Nombre canónico del tipo al que se va a convertir el objeto.</param>
        <summary>Convierte el objeto identificado por la interfaz <see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /> actual a un tipo especificado.</summary>
        <returns>
          <see cref="T:System.AddIn.Contract.RemoteArgument" /> que representa el resultado de la operación de conversión.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un nombre canónico es un nombre único global, como un GUID. Cadenas con el formato \< *nombre de ensamblado*>, \< *nombre de tipo completo*> se recomiendan. Un ejemplo del formato recomendado de un nombre canónico es "ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".  
  
 El nombre canónico de un tipo no se puede cambiar una vez publicado un tipo en un componente. Cambiar el nombre canónico de un tipo en una versión futura de una componente se interrumpe la compatibilidad entre los componentes y los clientes que ya están usando el tipo.  
  
 Se recomienda que <xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A> implementaciones inician una <xref:System.InvalidCastException> si se produce un error en la operación de conversión.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>