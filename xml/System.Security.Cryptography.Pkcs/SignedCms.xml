<Type Name="SignedCms" FullName="System.Security.Cryptography.Pkcs.SignedCms">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b81e3bf5983d9ed46ce185ecdfdc77527146b7e4" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
    <Meta Name="ms.locfileid" Value="31780853" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SignedCms" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SignedCms extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.SignedCms" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignedCms" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignedCms sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> habilita la firma y comprobación de mensajes CMS o PKCS #7. </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La solicitud de cambio de sintaxis de mensajes criptográficos especifica los siguientes tipos MIME y extensiones de nombre de archivo para mensajes CMS/PKCS #7 con estos tipos de contenido.  
  
|Tipo de contenido|Tipo MIME|Extensión|  
|------------------|---------------|---------------|  
|envelopedData|aplicación/pkcs7-mime|. p7m|  
|signedData|aplicación/pkcs7-signature|. p7s.p7c|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.Cryptography.Pkcs.SignedCms> clase tiene los siguientes valores de propiedad predeterminados.  
  
|Propiedad.|Valor predeterminado|  
|--------------|-------------------|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>|1.2.840.113549.1.7.1 (datos) de longitud: cero|  
|<xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>|Estado desasociado: `false` el contenido que está firmado se incluye en el mensaje CMS/PKCS #7 junto con la información de firma.|  
  
 El valor predeterminado <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> para los firmantes es SubjectIdentifierType.IssuerAndSerialNumber.  
  
 Si el estado desasociado es `false` (valor predeterminado), el contenido firmado se incluye en el mensaje CMS/PKCS #7 junto con la información de firma. Si el estado desasociado es `true`, los clientes que no se pueden descodificar mensajes S/MIME aún pueden ver el contenido del mensaje si se envía por separado. Esto puede resultar útil en una aplicación de archivo que guarda el contenido del mensaje si se puede comprobar la autenticidad del remitente del mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signerIdentifierType As SubjectIdentifierType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">Miembro <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que especifica el tipo de identificador del sujeto predeterminado para los firmantes.</param>
        <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el tipo de identificador del sujeto especificado como tipo de identificador del sujeto predeterminado para los firmantes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los valores de propiedad predeterminados utilizados con este constructor, vea <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Si el estado desasociado es `false` (valor predeterminado), el contenido que está firmado se incluye en el mensaje CMS/PKCS #7 junto con la información de firma. Si el estado desasociado es `true`, los clientes que no se pueden descodificar mensajes S/MIME aún pueden ver el contenido del mensaje si se envía por separado. Esto podría ser útil en una aplicación de archivo que guarda el contenido del mensaje si se puede comprobar la autenticidad del remitente del mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo contentInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As ContentInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando la información de contenido especificada como contenido interno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los valores de propiedad predeterminados utilizados con este constructor, vea <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Si el estado desasociado es `false` (valor predeterminado), el contenido que está firmado se incluye en el mensaje CMS/PKCS #7 junto con la información de firma. Si el estado desasociado es `true`, los clientes que no se pueden descodificar mensajes S/MIME aún pueden ver el contenido del mensaje si se envía por separado. Esto podría ser útil en una aplicación de archivo que guarda el contenido del mensaje si se puede comprobar la autenticidad del remitente del mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (content As ContentInfo, detached As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::ContentInfo ^ content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="detached" Type="System.Boolean" Index="1" />
      </Parameters>
      <Docs>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <param name="detached">Valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada. Si <c>detached</c> es <see langword="true" />, la firma está desasociada. Si <c>detached</c> es <see langword="false" />, la firma no está desasociada.</param>
        <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el estado desasociado y la información de contenido especificada como contenido interno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los valores de propiedad predeterminados utilizados con este constructor, vea <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Si el estado desasociado es `false` (valor predeterminado), el contenido que está firmado se incluye en el mensaje CMS/PKCS #7 junto con la información de firma. Si el estado desasociado es `true`, los clientes que no se pueden descodificar mensajes S/MIME aún pueden ver el contenido del mensaje si se envía por separado. Esto podría ser útil en una aplicación de archivo que guarda el contenido del mensaje si se puede comprobar la autenticidad del remitente del mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo contentInfo) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signerIdentifierType As SubjectIdentifierType, content As ContentInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ content);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" Index="0" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">Miembro <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que especifica el tipo de identificador del sujeto predeterminado para los firmantes.</param>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el tipo de identificador del sujeto especificado como tipo de identificador del sujeto predeterminado para firmantes y la información de contenido como contenido interno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para los valores de propiedad predeterminados utilizados con este constructor, vea <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.  
  
 Si el estado desasociado es `false` (valor predeterminado), el contenido que está firmado se incluye en el mensaje CMS/PKCS #7 junto con la información de firma. Si el estado desasociado es `true`, los clientes que no se pueden descodificar mensajes S/MIME aún pueden ver el contenido del mensaje si se envía por separado. Esto podría ser útil en una aplicación de archivo que guarda el contenido del mensaje si se puede comprobar la autenticidad del remitente del mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ contentInfo, bool detached);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="C#" Value="public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, class System.Security.Cryptography.Pkcs.ContentInfo content, bool detached) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" FrameworkAlternate="xamarinmac-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (signerIdentifierType As SubjectIdentifierType, content As ContentInfo, detached As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SignedCms(System::Security::Cryptography::Pkcs::SubjectIdentifierType signerIdentifierType, System::Security::Cryptography::Pkcs::ContentInfo ^ content, bool detached);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="signerIdentifierType" Type="System.Security.Cryptography.Pkcs.SubjectIdentifierType" Index="0" />
        <Parameter Name="contentInfo" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2" />
        <Parameter Name="content" Type="System.Security.Cryptography.Pkcs.ContentInfo" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="detached" Type="System.Boolean" Index="2" />
      </Parameters>
      <Docs>
        <param name="signerIdentifierType">Miembro <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> que especifica el tipo de identificador del sujeto predeterminado para los firmantes.</param>
        <param name="contentInfo">To be added.</param>
        <param name="content">To be added.</param>
        <param name="detached">Valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada. Si <c>detached</c> es <see langword="true" />, la firma está desasociada. Si detached es <see langword="false" />, la firma no está desasociada.</param>
        <summary>El constructor <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)" /> crea una instancia de la clase <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> utilizando el tipo de identificador del sujeto especificado como tipo de identificador del sujeto predeterminado para firmantes y la información de contenido como contenido interno.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el estado desasociado es `false` (valor predeterminado), el contenido que está firmado se incluye en el mensaje CMS/PKCS #7 junto con la información de firma. Si el estado desasociado es `true`, los clientes que no se pueden descodificar mensajes S/MIME aún pueden ver el contenido del mensaje si se envía por separado. Esto puede resultar útil en una aplicación de archivo que guarda el contenido del mensaje si no se puede comprobar la autenticidad del remitente del mensaje.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
      </Docs>
    </Member>
    <Member MemberName="Certificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificates As X509Certificate2Collection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ Certificates { System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2Collection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" /> recupera los certificados asociados al mensaje CMS o PKCS #7 codificado.</summary>
        <value>Colección <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que representa el conjunto de certificados para el mensaje CMS o PKCS #7 codificado.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="CheckHash">
      <MemberSignature Language="C#" Value="public void CheckHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckHash ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckHash();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> comprueba la integridad de los datos del mensaje CMS/PKCS #7. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> es un método especializado utilizado en aplicaciones de infraestructura de seguridad concretas que solo desean comprobar el hash del mensaje de CMS, en lugar de realizar una comprobación de la firma digital completa. <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" /> no autentica el autor ni el remitente del mensaje porque este método no implica la comprobación de una firma digital. Para la comprobación de uso general de la integridad y autenticidad de un mensaje CMS o PKCS #7, utilice los métodos <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> o <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no proporciona autenticación del mensaje CMS/PKCS #7.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
        <altmember cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />
        <altmember cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comprueba las firmas digitales en el mensaje CMS o PKCS #7 firmado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifySignatureOnly">Valor <see cref="T:System.Boolean" /> que especifica si sólo se comprueban las firmas digitales sin los certificados de los firmantes que se están validando.  
  
 Si <c>verifySignatureOnly</c> es <see langword="true" />, solo se comprueban las firmas digitales. Si es <see langword="false" />, se comprueban las firmas digitales, se validan los certificados de los firmantes y se validan los propósitos de los certificados. Los propósitos de un certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firmas digitales o no rechazo.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> comprueba las firmas digitales en el mensaje CMS o PKCS #7 firmado y, opcionalmente, valida los certificados de los firmantes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba todas las firmas, incluso las contrafirmas, en el mensaje CMS/PKCS #7. Si no hay atributos firmados incluidos con el mensaje, también se comprueban estos atributos. Si elige la opción para validar los certificados, se valida toda la parte incluida de la cadena de certificados.  
  
 Este método produce una excepción si se produce un error en la comprobación de una firma digital o no se cumplen los requisitos de validación.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la posición de <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29> entre los pasos necesarios para comprobar las firmas en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje. En este ejemplo, no se separa el contenido del mensaje. El contenido del mensaje se incluye en el <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 En el ejemplo siguiente se muestra la posición de <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29> entre los pasos necesarios para comprobar las firmas en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje. En este ejemplo, se separa el contenido del mensaje, por lo que el contenido del mensaje debe comprobar independientemente de la <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (extraStore As X509Certificate2Collection, verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ extraStore, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraStore" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extraStore">Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que se puede utilizar para validar la cadena de certificados. Si no se van a utilizar certificados adicionales para validar la cadena de certificados, utilice <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)" /> en lugar de <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</param>
        <param name="verifySignatureOnly">Valor <see cref="T:System.Boolean" /> que especifica si sólo se comprueban las firmas digitales sin los certificados de los firmantes que se están validando.  
  
 Si <c>verifySignatureOnly</c> es <see langword="true" />, solo se comprueban las firmas digitales. Si es <see langword="false" />, se comprueban las firmas digitales, se validan los certificados de los firmantes y se validan los propósitos de los certificados. Los propósitos de un certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firmas digitales o no rechazo.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> comprueba las firmas digitales en el mensaje CMS o PKCS #7 firmado utilizando la colección especificada de certificados y, opcionalmente, valida los certificados de los firmantes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método comprueba todas las firmas, incluso las contrafirmas, en el mensaje CMS/PKCS #7. Si no hay atributos firmados incluidos con el mensaje, también se comprueban estos atributos. Si elige la opción para validar los certificados, se valida toda la parte incluida de la cadena de certificados.  
  
 Este método produce una excepción si se produce un error en la comprobación de una firma digital o no se cumplen los requisitos de validación.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la posición de <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29> entre los pasos necesarios para comprobar las firmas en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje. En este ejemplo, el contenido del mensaje no está desasociado, por lo que el contenido del mensaje se incluye en el <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 En el ejemplo siguiente se muestra la posición de <xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29> entre los pasos necesarios para comprobar las firmas en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje. En este ejemplo, se separa el contenido del mensaje, por lo que el contenido del mensaje se debe comprobar independientemente de la <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una firma y agrega la firma al mensaje CMS o PKCS #7.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature" /> pide al usuario que seleccione un certificado de firma, cree una firma y agregue la firma al mensaje CMS o PKCS #7.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método muestra una interfaz de usuario en el que se elige los firmantes para este mensaje. Esto requiere que el proceso actual se ejecuta *modo interactivo de usuario*, lo que significa que la <xref:System.Environment.UserInteractive%2A?displayProperty=nameWithType> propiedad está establecida en `true`. Normalmente, un proceso está en modo interactivo de usuario a menos que sea un proceso de servicio o se ejecute dentro de una aplicación Web.  
  
 En la lista se mostrará los firmantes cuyos certificados cumplen las condiciones siguientes:  
  
-   El certificado tiene una clave privada asociada.  
  
-   El certificado está dentro del período de validez.  
  
-   El certificado tiene ningún uso de claves o un uso de clave que admite firmas digitales o no rechazo.  
  
 Certificados de firmante se eligen en el almacén My.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Se requieren los permisos siguientes para mostrar la interfaz de usuario:  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=nameWithType>  
  
 Se requieren los siguientes permisos para tener acceso a la clave de firma:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra los pasos para calcular una firma en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje cuyo contenido no está desasociado. En este caso, el contenido del mensaje se incluye en el <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs_SignedCMS#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 En el ejemplo siguiente se muestra los pasos para calcular una firma en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje cuyo contenido está desasociado. En este caso, el contenido del mensaje se debe comprobar independientemente de la <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs_SignedCMS#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (signer As CmsSigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::Pkcs::CmsSigner ^ signer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
      </Parameters>
      <Docs>
        <param name="signer">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> que representa el firmante.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> crea una firma utilizando el firmante especificado y agrega la firma al mensaje CMS o PKCS #7.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Se requieren los siguientes permisos para tener acceso a la clave de firma:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra los pasos para calcular una firma en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje cuyo contenido no está desasociado. En este caso, el contenido del mensaje se incluye en el <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#3](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#3)]
 [!code-vb[mpkcs_SignedCMS#3](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#3)]  
  
 En el ejemplo siguiente se muestra los pasos para calcular una firma en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje cuyo contenido está desasociado. En este caso, el contenido del mensaje se debe comprobar independientemente de la <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#4](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#4)]
 [!code-vb[mpkcs_SignedCMS#4](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeSignature">
      <MemberSignature Language="C#" Value="public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeSignature (signer As CmsSigner, silent As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeSignature(System::Security::Cryptography::Pkcs::CmsSigner ^ signer, bool silent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
        <Parameter Name="silent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="signer">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> que representa el firmante.</param>
        <param name="silent">
          <see langword="false" /> para pedir al usuario que seleccione un certificado de firma.</param>
        <summary>Crea una firma utilizando el firmante especificado y agrega la firma al mensaje CMS o PKCS #7. Si el valor del parámetro silent es <see langword="false" /> y la propiedad <see cref="P:System.Security.Cryptography.Pkcs.CmsSigner.Certificate" /> del objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> especificado por el parámetro signer no se establece en un certificado válido, este método pide al usuario que seleccione un certificado de firma.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Se requieren los permisos siguientes para mostrar la interfaz de usuario:  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=nameWithType>  
  
 Se requieren los siguientes permisos para tener acceso a la clave de firma:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <exception cref="T:System.InvalidOperationException">El valor del parámetro <paramref name="silent" /> es <see langword="true" /> y no se especifica un certificado de firma.</exception>
      </Docs>
    </Member>
    <Member MemberName="ContentInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.ContentInfo ContentInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentInfo As ContentInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::ContentInfo ^ ContentInfo { System::Security::Cryptography::Pkcs::ContentInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.ContentInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" /> recupera el contenido interno del mensaje CMS o PKCS #7 codificado.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Pkcs.ContentInfo" /> que representa el contenido del mensaje CMS o PKCS #7 codificado.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public void Decode (byte[] encodedMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Decode(unsigned int8[] encodedMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub Decode (encodedMessage As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Decode(cli::array &lt;System::Byte&gt; ^ encodedMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encodedMessage" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encodedMessage">Matriz de valores de tipo byte que representa el mensaje CMS o PKCS #7 codificado que se va a descodificar.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> descodifica mensajes <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> codificados. En la descodificación correcta, la información descodificada se puede recuperar de las propiedades del objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método restablece todas las variables de miembro del objeto mediante el uso de la información obtenida de la descodificación correcta.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la posición de la <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A> método en el proceso de comprobar las firmas en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje. En este ejemplo, el contenido del mensaje no está desasociado, por lo que el contenido del mensaje se incluye en el <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#1](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#1)]
 [!code-vb[mpkcs_SignedCMS#1](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#1)]  
  
 En el ejemplo siguiente se muestra la posición de la <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode%2A> método en el proceso de comprobar las firmas en un <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje. En este ejemplo, se separa el contenido del mensaje, por lo que el contenido del mensaje se debe comprobar independientemente de la <xref:System.Security.Cryptography.Pkcs.SignedCms> mensaje.  
  
 [!code-csharp[mpkcs_SignedCMS#2](~/samples/snippets/csharp/VS_Snippets_WindowsServer/mpkcs_SignedCMS/cs/Program.cs#2)]
 [!code-vb[mpkcs_SignedCMS#2](~/samples/snippets/visualbasic/VS_Snippets_WindowsServer/mpkcs_SignedCMS/vb/Program.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      </Docs>
    </Member>
    <Member MemberName="Detached">
      <MemberSignature Language="C#" Value="public bool Detached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Detached" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Detached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Detached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" /> recupera un valor que indica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada.</summary>
        <value>Valor <see cref="T:System.Boolean" /> que especifica si el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> es para una firma desasociada. Si esta propiedad es <see langword="true" />, la firma está desasociada. Si esta propiedad es <see langword="false" />, la firma no está desasociada.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public byte[] Encode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" />
      <MemberSignature Language="VB.NET" Value="Public Function Encode () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Encode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Encode" /> codifica la información del objeto en un mensaje CMS o PKCS #7.</summary>
        <returns>Matriz de valores de tipo byte que representa el mensaje codificado. El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" /> puede descodificar el mensaje codificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quita la firma especificada de la colección <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSignature (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero de la firma que se va a quitar.</param>
        <summary>Quita la firma situada en el índice especificado de la colección <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Un mensaje CMS/PKCS #7 no está firmado e <paramref name="index" /> no es válido.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="index" /> es menor que cero.  
  
 O bien  
  
 <paramref name="index" /> es mayor que el recuento de la firma menos 1.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo quitar la firma.  
  
 O bien  
  
 Error criptográfico interno.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveSignature">
      <MemberSignature Language="C#" Value="public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveSignature(class System.Security.Cryptography.Pkcs.SignerInfo signerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveSignature(System::Security::Cryptography::Pkcs::SignerInfo ^ signerInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signerInfo" Type="System.Security.Cryptography.Pkcs.SignerInfo" />
      </Parameters>
      <Docs>
        <param name="signerInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> que representa la contrafirma que se va a quitar.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> quita la firma para el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignerInfos">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignerInfos As SignerInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::SignerInfoCollection ^ SignerInfos { System::Security::Cryptography::Pkcs::SignerInfoCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SignerInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" /> recupera la colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> asociada al mensaje CMS o PKCS #7.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> que representa la información del firmante para el mensaje CMS o PKCS #7.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignedCms.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignedCms.Version" /> recupera la versión del mensaje CMS o PKCS #7.</summary>
        <value>Valor int que representa la versión del mensaje CMS o PKCS #7.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La versión determina si el mensaje es un mensaje PKCS #7 o un mensaje de sintaxis de mensajes criptográficos (CMS). CMS es un superconjunto nuevo de PKCS #7.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Certificates" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.Detached" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos" />
      </Docs>
    </Member>
  </Members>
</Type>