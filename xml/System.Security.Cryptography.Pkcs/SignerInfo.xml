<Type Name="SignerInfo" FullName="System.Security.Cryptography.Pkcs.SignerInfo">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f6fc648b8beb2d43060279236f68aedd542afb1b" />
    <Meta Name="ms.sourcegitcommit" Value="e7865e39826e7aaf54da4c7042975153813a31c7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/16/2018" />
    <Meta Name="ms.locfileid" Value="31043792" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SignerInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SignerInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Pkcs.SignerInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignerInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignerInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>La clase <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> representa a un firmante asociado a un objeto <see cref="T:System.Security.Cryptography.Pkcs.SignedCms" /> que representa un mensaje CMS o PKCS #7.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las firmas representadas por la <xref:System.Security.Cryptography.Pkcs.SignerInfo> clase puede realizarse sobre el contenido del mensaje o una firma. El último tipo de firma se conoce como un *contrafirma*.  
  
 Esta implementación de CMS/PKCS #7 sólo admite un nivel de contrafirma.  Es decir, se puede firmar una firma, lo que constituye una contrafirma, pero ese contrafirma no se vuelve a estar firmada.  
  
 Esta clase no tiene un constructor público; por lo tanto, que no puede ser públicamente crean las instancias. Es una clase de sólo lectura accesible desde la <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos%2A?displayProperty=nameWithType> propiedad.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Certificate">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Certificate As X509Certificate2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509Certificate2 ^ Certificate { System::Security::Cryptography::X509Certificates::X509Certificate2 ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509Certificate2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" /> recupera el certificado de firma asociado a la información del firmante.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que representa el certificado de firma.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el certificado de firma no se incluye en la hora de la firma usando la <xref:System.Security.Cryptography.Pkcs.CmsSigner.IncludeOption%2A?displayProperty=nameWithType> propiedad y, a continuación, el certificado no se devolverán.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="CheckHash">
      <MemberSignature Language="C#" Value="public void CheckHash ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckHash() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckHash ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckHash();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> comprueba la integridad de los datos de la información del firmante del mensaje CMS/PKCS #7. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> es un método especializado que se emplea en determinadas aplicaciones de infraestructura de seguridad en las que el asunto usa el miembro **HashOnly** de la enumeración <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" /> al configurar un objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />. <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckHash" /> no autentica la información del firmante porque este método no implica la comprobación de una firma digital. Para la comprobación de uso general de la integridad y autenticidad de la información del firmante de un mensaje CMS o PKCS #7 y de las contrafirmas, utilice los métodos <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> o <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método no proporciona autenticación de la información del firmante de mensaje CMS/PKCS #7.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <altmember cref="T:System.Security.Cryptography.Pkcs.CmsSigner" />
        <altmember cref="M:System.Security.Cryptography.Pkcs.SignedCms.CheckHash" />
        <altmember cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifierType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CheckSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comprueba la firma digital del mensaje.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="verifySignatureOnly">Un valor booleano que especifica si sólo se comprueba la firma digital. Si <c>verifySignatureOnly</c> es <see langword="true" />, solo se comprueba la firma. Si <c>verifySignatureOnly</c> es <see langword="false" />, se comprueba la firma digital, se valida la cadena de certificados y se validan los propósitos de los certificados. Los propósitos del certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firma digital o no rechazo.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> comprueba la firma digital del mensaje y, opcionalmente, valida el certificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método produce una excepción si se produce un error en la comprobación de la firma digital o no se cumplen los requisitos de validación.  
  
 Si se requiere una validación más compleja, el llamador puede especificar que solo la firma se comprueba y, a continuación, utilizar un <xref:System.Security.Cryptography.X509Certificates.X509Chain> objeto que se va a realizar la validación personalizada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
      </Docs>
    </Member>
    <Member MemberName="CheckSignature">
      <MemberSignature Language="C#" Value="public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CheckSignature(class System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CheckSignature (extraStore As X509Certificate2Collection, verifySignatureOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CheckSignature(System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ extraStore, bool verifySignatureOnly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraStore" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
        <Parameter Name="verifySignatureOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="extraStore">Objeto <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que se puede utilizar para validar la cadena. Si no se van a utilizar certificados adicionales para validar la cadena, use <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Boolean)" /> en lugar de <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" />.</param>
        <param name="verifySignatureOnly">Un valor booleano que especifica si sólo se comprueba la firma digital. Si <c>verifySignatureOnly</c> es <see langword="true" />, solo se comprueba la firma. Si <c>verifySignatureOnly</c> es <see langword="false" />, se comprueba la firma digital, se valida la cadena de certificados y se validan los propósitos de los certificados. Los propósitos del certificado se consideran válidos si el certificado no presenta ningún uso de la clave o si el uso de la clave admite firma digital o no rechazo.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)" /> comprueba la firma digital del mensaje utilizando la colección especificada de certificados y, opcionalmente, valida el certificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método produce una excepción si se produce un error en la comprobación de la firma digital o no se cumplen los requisitos de validación.  
  
 Si se requiere una validación más compleja, el llamador puede especificar que solo la firma se comprueba y, a continuación, utilizar un <xref:System.Security.Cryptography.X509Certificates.X509Chain> objeto que se va a realizar la validación personalizada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
        <exception cref="T:System.InvalidOperationException">Llamada a método no válida para el estado actual del objeto.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ComputeCounterSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una contrafirma y agrega la firma al mensaje CMS o PKCS #7.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ComputeCounterSignature">
      <MemberSignature Language="C#" Value="public void ComputeCounterSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeCounterSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeCounterSignature ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeCounterSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature" /> pide al usuario que seleccione un certificado de firma, cree una contrafirma y agregue la firma al mensaje CMS o PKCS #7. Las contrafirmas se restringen a un nivel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación de CMS/PKCS #7 sólo admite un nivel de contrafirma.  Es decir, se puede firmar una firma, lo que constituye una contrafirma, pero ese contrafirma no se vuelve a estar firmada.  
  
 Este método muestra una interfaz de usuario en el que se elige los firmantes para este mensaje. Esto requiere que el proceso actual se ejecuta *modo interactivo de usuario*, lo que significa que la <xref:System.Environment.UserInteractive%2A?displayProperty=nameWithType> propiedad está establecida en `true`. Normalmente, un proceso está en modo interactivo de usuario a menos que sea un proceso de servicio o se ejecute dentro de una aplicación Web.  
  
 En la lista se mostrará los firmantes cuyos certificados cumplen las condiciones siguientes:  
  
-   El certificado tiene una clave privada asociada.  
  
-   El certificado está dentro del período de validez.  
  
-   El certificado tiene ningún uso de claves o un uso de clave que admite firmas digitales o no rechazo.  
  
 Certificados de firmante se eligen en el almacén My.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Se requieren los permisos siguientes para mostrar la interfaz de usuario:  
  
-   <xref:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows?displayProperty=nameWithType>  
  
 Se requieren los siguientes permisos para tener acceso a la clave de firma:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      </Docs>
    </Member>
    <Member MemberName="ComputeCounterSignature">
      <MemberSignature Language="C#" Value="public void ComputeCounterSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ComputeCounterSignature(class System.Security.Cryptography.Pkcs.CmsSigner signer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComputeCounterSignature (signer As CmsSigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComputeCounterSignature(System::Security::Cryptography::Pkcs::CmsSigner ^ signer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signer" Type="System.Security.Cryptography.Pkcs.CmsSigner" />
      </Parameters>
      <Docs>
        <param name="signer">Objeto <see cref="T:System.Security.Cryptography.Pkcs.CmsSigner" /> que representa el firmante de la contrafirma.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.ComputeCounterSignature(System.Security.Cryptography.Pkcs.CmsSigner)" /> crea una contrafirma utilizando el firmante especificado y agrega la firma al mensaje CMS o PKCS #7. Las contrafirmas se restringen a un nivel.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación de CMS/PKCS #7 sólo admite un nivel de contrafirma.  Es decir, se puede firmar una firma, lo que constituye una contrafirma, pero ese contrafirma no se vuelve a estar firmada.  
  
## <a name="net-framework-security"></a>Seguridad de .NET Framework  
 Se requieren los siguientes permisos para tener acceso a la clave de firma:  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Open?displayProperty=nameWithType>  
  
-   <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign?displayProperty=nameWithType>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      </Docs>
    </Member>
    <Member MemberName="CounterSignerInfos">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SignerInfoCollection CounterSignerInfos" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CounterSignerInfos As SignerInfoCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::SignerInfoCollection ^ CounterSignerInfos { System::Security::Cryptography::Pkcs::SignerInfoCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SignerInfoCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" /> recupera el conjunto de firmantes de contrafirma asociado a la información del firmante.</summary>
        <value>Colección <see cref="T:System.Security.Cryptography.Pkcs.SignerInfoCollection" /> que representa a los firmantes de contrafirma para la información del firmante. Si no existen firmantes de contrafirma, la propiedad es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación de CMS/PKCS #7 sólo admite un nivel de contrafirma. Es decir, se puede firmar una firma, lo que constituye una contrafirma, pero ese contrafirma no se vuelve a estar firmada.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="DigestAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid DigestAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid DigestAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DigestAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ DigestAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" /> recupera el objeto <see cref="T:System.Security.Cryptography.Oid" /> que representa el algoritmo hash utilizado en el cálculo de las firmas.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Oid" /> que representa el algoritmo hash utilizado con la firma.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera la firma del objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</summary>
        <returns>Firma del objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveCounterSignature">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Quita la contrafirma especificada de la colección <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveCounterSignature">
      <MemberSignature Language="C#" Value="public void RemoveCounterSignature (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCounterSignature(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCounterSignature (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCounterSignature(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Índice de base cero de la contrafirma que se va a quitar.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Int32)" /> quita la contrafirma correspondiente al índice especificado de la colección <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveCounterSignature">
      <MemberSignature Language="C#" Value="public void RemoveCounterSignature (System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveCounterSignature(class System.Security.Cryptography.Pkcs.SignerInfo counterSignerInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveCounterSignature (counterSignerInfo As SignerInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveCounterSignature(System::Security::Cryptography::Pkcs::SignerInfo ^ counterSignerInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="counterSignerInfo" Type="System.Security.Cryptography.Pkcs.SignerInfo" />
      </Parameters>
      <Docs>
        <param name="counterSignerInfo">Objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> que representa la contrafirma que se va a quitar.</param>
        <summary>El método <see cref="M:System.Security.Cryptography.Pkcs.SignerInfo.RemoveCounterSignature(System.Security.Cryptography.Pkcs.SignerInfo)" /> quita la contrafirma para el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> especificado.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Se ha pasado una referencia nula a un método que no la acepta como argumento válido.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">El valor de un argumento estaba fuera del intervalo de valores permitido definido por el método invocado.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">No se pudo finalizar una operación criptográfica.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignatureAlgorithm">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Oid SignatureAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Oid SignatureAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.SignatureAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignatureAlgorithm As Oid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Oid ^ SignatureAlgorithm { System::Security::Cryptography::Oid ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Oid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el identificador del algoritmo de firma usado por el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</summary>
        <value>Identificador del algoritmo de firma usado por el objeto <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" /> actual.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedAttributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection SignedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignedAttributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ SignedAttributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" /> recupera la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> de atributos firmados que está asociada a la información del firmante. Los atributos firmados se firman junto con el resto del contenido del mensaje.</summary>
        <value>Colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> que representa los atributos firmados. Si no existen atributos firmados, la propiedad es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un ejemplo de atributo firmado que podría incluirse en la <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> recuperar la colección por el <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> propiedad es el <xref:System.Security.Cryptography.Pkcs.Pkcs9SigningTime> firma de atributos de tiempo.  
  
 Los atributos firmados se firman junto con el resto de la <xref:System.Security.Cryptography.Pkcs.SignedCms> contenido del mensaje. Esto significa que una entidad que se comprueba correctamente la firma puede estar seguro de que el contenido de estos atributos es auténtico y no se han modificado.  
  
 A <xref:System.Security.Cryptography.Pkcs.Pkcs9ContentType> objeto y un <xref:System.Security.Cryptography.Pkcs.Pkcs9MessageDigest> objeto se genera automáticamente y se coloca en el <xref:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes%2A> propiedad cada vez que la <xref:System.Security.Cryptography.Pkcs.CmsSigner.SignedAttributes%2A?displayProperty=nameWithType> propiedad del firmante correspondiente no está vacía.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="T:System.Security.Cryptography.Pkcs.Pkcs9SigningTime" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="SignerIdentifier">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Pkcs.SubjectIdentifier SignerIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SignerIdentifier As SubjectIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Pkcs::SubjectIdentifier ^ SignerIdentifier { System::Security::Cryptography::Pkcs::SubjectIdentifier ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Pkcs.SubjectIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" /> recupera el identificador del certificado del firmante asociado a la información del firmante.</summary>
        <value>Objeto <see cref="T:System.Security.Cryptography.Pkcs.SubjectIdentifier" /> que identifica de forma única el certificado asociado a la información del firmante.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="UnsignedAttributes">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.CryptographicAttributeObjectCollection UnsignedAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnsignedAttributes As CryptographicAttributeObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::CryptographicAttributeObjectCollection ^ UnsignedAttributes { System::Security::Cryptography::CryptographicAttributeObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.CryptographicAttributeObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" /> recupera la colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> de atributos no firmados que está asociada a la información del contenido de <see cref="T:System.Security.Cryptography.Pkcs.SignerInfo" />. Los atributos no firmados se pueden modificar sin invalidar la firma.</summary>
        <value>Colección <see cref="T:System.Security.Cryptography.CryptographicAttributeObjectCollection" /> que representa los atributos no firmados. Si no existen atributos no firmados, la propiedad es una colección vacía.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Atributos no firmados no están firmados con el resto de la <xref:System.Security.Cryptography.Pkcs.SignedCms> contenido del mensaje. Aunque una entidad comprueba correctamente la firma, los atributos no firmados se han modificado y no deberían considerarse autenticidad e integridad.  
  
 Un ejemplo de un atributo sin signo que puede incluirse en la <xref:System.Security.Cryptography.CryptographicAttributeObjectCollection> recuperar la colección por el <xref:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes%2A> propiedad es una contrafirma.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propiedad <see cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Version" /> recupera la versión de la información del firmante.</summary>
        <value>Valor de tipo int que especifica la versión de la información del firmante.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La versión determina si el mensaje es un mensaje PKCS #7 o un mensaje de sintaxis de mensajes criptográficos (CMS). CMS es un superconjunto nuevo de PKCS #7.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.Certificate" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.CounterSignerInfos" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.DigestAlgorithm" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignedAttributes" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.SignerIdentifier" />
        <altmember cref="P:System.Security.Cryptography.Pkcs.SignerInfo.UnsignedAttributes" />
      </Docs>
    </Member>
  </Members>
</Type>