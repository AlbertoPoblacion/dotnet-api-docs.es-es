<Type Name="FileSystemWatcher" FullName="System.IO.FileSystemWatcher">
  <TypeSignature Language="C#" Value="public class FileSystemWatcher : System.ComponentModel.Component, System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileSystemWatcher extends System.ComponentModel.Component implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.IO.FileSystemWatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class FileSystemWatcher&#xA;Inherits Component&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSystemWatcher : System::ComponentModel::Component, System::ComponentModel::ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Changed")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.IO.IODescription("")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="02403-101">Escucha las notificaciones de cambio del sistema de archivos y genera eventos cuando cambia un directorio o un archivo de un directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-101">Listens to the file system change notifications and raises events when a directory, or file in a directory, changes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-102">Use <xref:System.IO.FileSystemWatcher> para inspeccionar los cambios en un directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="02403-102">Use <xref:System.IO.FileSystemWatcher> to watch for changes in a specified directory.</span></span> <span data-ttu-id="02403-103">También puede ver los cambios en archivos y subdirectorios del directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="02403-103">You can watch for changes in files and subdirectories of the specified directory.</span></span> <span data-ttu-id="02403-104">Puede crear un componente para inspeccionar archivos en un equipo local, una unidad de red o un equipo remoto.</span><span class="sxs-lookup"><span data-stu-id="02403-104">You can create a component to watch files on a local computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="02403-105">Para inspeccionar los cambios en todos los archivos, establezca la <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad en una cadena vacía ("") o usar caracteres comodín ("*.\*").</span><span class="sxs-lookup"><span data-stu-id="02403-105">To watch for changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("") or use wildcards ("*.\*").</span></span> <span data-ttu-id="02403-106">Para inspeccionar un archivo específico, establezca la <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad con el nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-106">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="02403-107">Por ejemplo, para ver los cambios en el archivo MyDoc.txt, establezca el <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad en "MyDoc.txt".</span><span class="sxs-lookup"><span data-stu-id="02403-107">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="02403-108">También puede ver los cambios en un determinado tipo de archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-108">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="02403-109">Por ejemplo, para inspeccionar cambios en archivos de texto, establezca la <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad a "\*.txt".</span><span class="sxs-lookup"><span data-stu-id="02403-109">For example, to watch for changes in text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span>  
  
 <span data-ttu-id="02403-110">Hay varios tipos de cambios que puede inspeccionar en un directorio o archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-110">There are several types of changes you can watch for in a directory or file.</span></span> <span data-ttu-id="02403-111">Por ejemplo, puede observar los cambios en `Attributes`, `LastWrite` fecha y hora, o la `Size` de archivos o directorios.</span><span class="sxs-lookup"><span data-stu-id="02403-111">For example, you can watch for changes in `Attributes`, the `LastWrite` date and time, or the `Size` of files or directories.</span></span> <span data-ttu-id="02403-112">Esto se hace estableciendo el <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> propiedad en uno de los <xref:System.IO.NotifyFilters> valores.</span><span class="sxs-lookup"><span data-stu-id="02403-112">This is done by setting the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to one of the <xref:System.IO.NotifyFilters> values.</span></span> <span data-ttu-id="02403-113">Para obtener más información sobre el tipo de cambios que puede ver, consulte <xref:System.IO.NotifyFilters>.</span><span class="sxs-lookup"><span data-stu-id="02403-113">For more information on the type of changes you can watch, see <xref:System.IO.NotifyFilters>.</span></span>  
  
 <span data-ttu-id="02403-114">Puede observar el cambio de nombre, eliminación o la creación de archivos o directorios.</span><span class="sxs-lookup"><span data-stu-id="02403-114">You can watch for renaming, deletion, or creation of files or directories.</span></span> <span data-ttu-id="02403-115">Por ejemplo, para inspeccionar el cambio de nombre de archivos de texto, establezca la <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad en "\*.txt" y llame a la <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> método con un <xref:System.IO.WatcherChangeTypes.Renamed> especificado para su parámetro.</span><span class="sxs-lookup"><span data-stu-id="02403-115">For example, to watch for renaming of text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt" and call the <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method with a <xref:System.IO.WatcherChangeTypes.Renamed> specified for its parameter.</span></span>  
  
 <span data-ttu-id="02403-116">El sistema operativo Windows notifica al componente los cambios de archivo en un búfer creado por el <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-116">The Windows operating system notifies your component of file changes in a buffer created by the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="02403-117">Si hay muchos cambios en poco tiempo, el búfer puede desbordarse.</span><span class="sxs-lookup"><span data-stu-id="02403-117">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="02403-118">Esto hace que el componente a perder el seguimiento de cambios en el directorio y sólo puede proporcionar una notificación general.</span><span class="sxs-lookup"><span data-stu-id="02403-118">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="02403-119">Aumentar el tamaño del búfer con el <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedad es costosa, ya que procede de memoria no paginada que no se puede intercambiar en el disco, por lo que mantener el búfer como pequeño aún grande lo suficiente como para no perder cualquier archivo de eventos de cambio.</span><span class="sxs-lookup"><span data-stu-id="02403-119">Increasing the size of the buffer with the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is expensive, as it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small yet large enough to not miss any file change events.</span></span> <span data-ttu-id="02403-120">Para evitar un desbordamiento de búfer, utilice el <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> y <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> las notificaciones de cambio de propiedades, por lo que se puede filtrar no deseados.</span><span class="sxs-lookup"><span data-stu-id="02403-120">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties so you can filter out unwanted change notifications.</span></span>  
  
 <span data-ttu-id="02403-121">Para obtener una lista de valores de propiedad iniciales para una instancia de <xref:System.IO.FileSystemWatcher>, consulte el <xref:System.IO.FileSystemWatcher.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="02403-121">For a list of initial property values for an instance of <xref:System.IO.FileSystemWatcher>, see the <xref:System.IO.FileSystemWatcher.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="02403-122">Tenga en cuenta lo siguiente cuando se usa el <xref:System.IO.FileSystemWatcher> clase.</span><span class="sxs-lookup"><span data-stu-id="02403-122">Please note the following when using the <xref:System.IO.FileSystemWatcher> class.</span></span>  
  
-   <span data-ttu-id="02403-123">Los archivos ocultos no se omiten.</span><span class="sxs-lookup"><span data-stu-id="02403-123">Hidden files are not ignored.</span></span>  
  
-   <span data-ttu-id="02403-124">En algunos sistemas, <xref:System.IO.FileSystemWatcher> informa de los cambios a los archivos con el formato de nombre corto de 8.3 archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-124">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="02403-125">Por ejemplo, un cambio en "longfilename.LongExtension", éste podría aparecer como "LongFil ~. LON".</span><span class="sxs-lookup"><span data-stu-id="02403-125">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFil~.Lon".</span></span>  
  
-   <span data-ttu-id="02403-126">Esta clase contiene una petición de vínculo y una petición de herencia en el nivel de clase que se aplica a todos los miembros.</span><span class="sxs-lookup"><span data-stu-id="02403-126">This class contains a link demand and an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="02403-127">Un <xref:System.Security.SecurityException> se produce cuando el llamador inmediato o la clase derivada no tiene permiso de plena confianza.</span><span class="sxs-lookup"><span data-stu-id="02403-127">A <xref:System.Security.SecurityException> is thrown when either the immediate caller or the derived class does not have full-trust permission.</span></span> <span data-ttu-id="02403-128">Para obtener más información acerca de las peticiones de seguridad, consulte [peticiones de vínculo](~/docs/framework/misc/link-demands.md).</span><span class="sxs-lookup"><span data-stu-id="02403-128">For details about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md).</span></span>  
  
-   <span data-ttu-id="02403-129">El tamaño máximo que puede establecer para el <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedad para supervisar un directorio a través de la red es 64 KB.</span><span class="sxs-lookup"><span data-stu-id="02403-129">The maximum size you can set for the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property for monitoring a directory over the network is 64 KB.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-130">Ejecuta <xref:System.IO.FileSystemWatcher> no se admite en Windows 98.</span><span class="sxs-lookup"><span data-stu-id="02403-130">Running <xref:System.IO.FileSystemWatcher> on Windows 98 is not supported.</span></span>  
  
## <a name="copying-and-moving-folders"></a><span data-ttu-id="02403-131">Copiar y mover carpetas</span><span class="sxs-lookup"><span data-stu-id="02403-131">Copying and moving folders</span></span>  
 <span data-ttu-id="02403-132">El sistema operativo y <xref:System.IO.FileSystemWatcher> objeto interpretar una acción de cortar y pegar o una acción para mover como una acción de cambio de nombre de una carpeta y su contenido.</span><span class="sxs-lookup"><span data-stu-id="02403-132">The operating system and <xref:System.IO.FileSystemWatcher> object interpret a cut-and-paste action or a move action as a rename action for a folder and its contents.</span></span> <span data-ttu-id="02403-133">Si cortar y pegar una carpeta con archivos en una carpeta que se está inspeccionada, el <xref:System.IO.FileSystemWatcher> objeto informa solo la carpeta como nueva, pero no su contenido, ya que básicamente son solo cambia.</span><span class="sxs-lookup"><span data-stu-id="02403-133">If you cut and paste a folder with files into a folder being watched, the <xref:System.IO.FileSystemWatcher> object reports only the folder as new, but not its contents because they are essentially only renamed.</span></span>  
  
 <span data-ttu-id="02403-134">Para recibir una notificación que el contenido de carpetas se han movido o copiado en una carpeta controlada, proporcionar <xref:System.IO.FileSystemWatcher.OnChanged%2A> y <xref:System.IO.FileSystemWatcher.OnRenamed%2A> métodos de controlador de eventos tal como se sugiere en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="02403-134">To be notified that the contents of folders have been moved or copied into a watched folder, provide <xref:System.IO.FileSystemWatcher.OnChanged%2A> and <xref:System.IO.FileSystemWatcher.OnRenamed%2A> event handler methods as suggested in the following table.</span></span>  
  
|<span data-ttu-id="02403-135">Controlador de eventos</span><span class="sxs-lookup"><span data-stu-id="02403-135">Event Handler</span></span>|<span data-ttu-id="02403-136">Eventos administrados</span><span class="sxs-lookup"><span data-stu-id="02403-136">Events Handled</span></span>|<span data-ttu-id="02403-137">Lleva a cabo</span><span class="sxs-lookup"><span data-stu-id="02403-137">Performs</span></span>|  
|-------------------|--------------------|--------------|  
|<xref:System.IO.FileSystemWatcher.OnChanged%2A>|<span data-ttu-id="02403-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span><span class="sxs-lookup"><span data-stu-id="02403-138"><xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted></span></span>|<span data-ttu-id="02403-139">Notificar los cambios en los atributos de archivo, los archivos creados y archivos eliminados.</span><span class="sxs-lookup"><span data-stu-id="02403-139">Report changes in file attributes, created files, and deleted files.</span></span>|  
|<xref:System.IO.FileSystemWatcher.OnRenamed%2A>|<xref:System.IO.FileSystemWatcher.Renamed>|<span data-ttu-id="02403-140">Enumerar las rutas de antiguas y nuevas de los archivos cuyo nombre ha cambiado y carpetas, expandiendo de forma recursiva si es necesario.</span><span class="sxs-lookup"><span data-stu-id="02403-140">List the old and new paths of renamed files and folders, expanding recursively if needed.</span></span>|  
  
## <a name="events-and-buffer-sizes"></a><span data-ttu-id="02403-141">Eventos y tamaños de búfer</span><span class="sxs-lookup"><span data-stu-id="02403-141">Events and Buffer Sizes</span></span>  
 <span data-ttu-id="02403-142">Tenga en cuenta que varios factores pueden afectar a los eventos de cambio de sistema de archivos que se generan, como se describe en la siguiente:</span><span class="sxs-lookup"><span data-stu-id="02403-142">Note that several factors can affect which file system change events are raised, as described by the following:</span></span>  
  
-   <span data-ttu-id="02403-143">Las operaciones comunes de sistema de archivos podrían generar más de un evento.</span><span class="sxs-lookup"><span data-stu-id="02403-143">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="02403-144">Por ejemplo, cuando se mueve un archivo de un directorio a otro, varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> y algunos <xref:System.IO.FileSystemWatcher.OnCreated%2A> y <xref:System.IO.FileSystemWatcher.OnDeleted%2A> es posible que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-144">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="02403-145">Mover que un archivo es una operación compleja que consta de varias operaciones sencillas, por lo tanto, cuando se genera varios eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-145">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="02403-146">De forma similar, algunas aplicaciones (por ejemplo, software antivirus) pueden provocar eventos del sistema de archivo adicionales que se detectan mediante <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-146">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
-   <span data-ttu-id="02403-147">La <xref:System.IO.FileSystemWatcher> puede inspeccionar discos siempre y cuando no se cambia o se quitan.</span><span class="sxs-lookup"><span data-stu-id="02403-147">The <xref:System.IO.FileSystemWatcher> can watch disks as long as they are not switched or removed.</span></span> <span data-ttu-id="02403-148">El <xref:System.IO.FileSystemWatcher> no genera eventos para CDs y DVDs, porque no se pueden cambiar las propiedades y marcas de tiempo.</span><span class="sxs-lookup"><span data-stu-id="02403-148">The <xref:System.IO.FileSystemWatcher> does not raise events for CDs and DVDs, because time stamps and properties cannot change.</span></span> <span data-ttu-id="02403-149">Equipos remotos deben tener una de las plataformas necesarias instaladas para que el componente funcione correctamente.</span><span class="sxs-lookup"><span data-stu-id="02403-149">Remote computers must have one of the required platforms installed for the component to function properly.</span></span>  
  
-   <span data-ttu-id="02403-150">Si hay varios <xref:System.IO.FileSystemWatcher> hay objetos inspeccionando la misma ruta de acceso UNC en Windows XP antes del Service Pack 1 o Service Pack 2 de Windows 2000 o versiones anterior, sólo uno de los objetos, se producirá un evento.</span><span class="sxs-lookup"><span data-stu-id="02403-150">If multiple <xref:System.IO.FileSystemWatcher> objects are watching the same UNC path in Windows XP prior to Service Pack 1, or Windows 2000 SP2 or earlier, then only one of the objects will raise an event.</span></span> <span data-ttu-id="02403-151">En equipos que ejecutan Windows XP SP1 y versiones más recientes, Windows 2000 SP3 o posterior o Windows Server 2003, todos los <xref:System.IO.FileSystemWatcher> objetos generará los eventos adecuados.</span><span class="sxs-lookup"><span data-stu-id="02403-151">On machines running Windows XP SP1 and newer, Windows 2000 SP3 or newer or Windows Server 2003, all <xref:System.IO.FileSystemWatcher> objects will raise the appropriate events.</span></span>  
  
 <span data-ttu-id="02403-152">Tenga en cuenta que un <xref:System.IO.FileSystemWatcher> puede perder un evento cuando se supera el tamaño de búfer.</span><span class="sxs-lookup"><span data-stu-id="02403-152">Note that a <xref:System.IO.FileSystemWatcher> may miss an event when the buffer size is exceeded.</span></span> <span data-ttu-id="02403-153">Para evitar eventos que faltan, siga estas instrucciones:</span><span class="sxs-lookup"><span data-stu-id="02403-153">To avoid missing events, follow these guidelines:</span></span>  
  
-   <span data-ttu-id="02403-154">Aumentar el tamaño del búfer estableciendo la <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="02403-154">Increase the buffer size by setting the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property.</span></span>  
  
-   <span data-ttu-id="02403-155">Evite inspeccionar archivos con nombres de archivo largos, dado que un nombre de archivo largo inciden en el búfer se llene.</span><span class="sxs-lookup"><span data-stu-id="02403-155">Avoid watching files with long file names, because a long file name contributes to filling up the buffer.</span></span> <span data-ttu-id="02403-156">Considere la posibilidad de cambiar el nombre de estos archivos con nombres más cortos.</span><span class="sxs-lookup"><span data-stu-id="02403-156">Consider renaming these files using shorter names.</span></span>  
  
-   <span data-ttu-id="02403-157">Mantener el código lo más corta posible de control de eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-157">Keep your event handling code as short as possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-158">En el ejemplo siguiente se crea un <xref:System.IO.FileSystemWatcher> para inspeccionar el directorio especificado en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-158">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="02403-159">El componente se establece para inspeccionar los cambios en `LastWrite` y `LastAccess` de tiempo, la creación, eliminación, o cambiar el nombre de archivos de texto en el directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-159">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="02403-160">Si se cambia, se crea o se elimina un archivo, la ruta de acceso al archivo se imprime en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-160">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="02403-161">Cuando se cambia el nombre de un archivo, las rutas de acceso antiguos y nuevos imprimen en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-161">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="02403-162">Use la <xref:System.Diagnostics> y <xref:System.IO> espacios de nombres para este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="02403-162">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="02403-163">para derivar de la <see cref="T:System.Diagnostics.ProcessStartInfo" /> clase.</span><span class="sxs-lookup"><span data-stu-id="02403-163">for deriving from the <see cref="T:System.Diagnostics.ProcessStartInfo" /> class.</span></span> <span data-ttu-id="02403-164">Valor de la petición: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Conjuntos con nombre de permiso: <see langword="FullTrust" />.</span><span class="sxs-lookup"><span data-stu-id="02403-164">Demand value: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; Named Permission Sets: <see langword="FullTrust" />.</span></span></permission>
    <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
    <altmember cref="T:System.IO.NotifyFilters" />
    <altmember cref="T:System.IO.FileSystemEventArgs" />
    <altmember cref="T:System.IO.FileSystemEventHandler" />
    <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
    <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
    <altmember cref="T:System.IO.InternalBufferOverflowException" />
    <altmember cref="T:System.IO.RenamedEventArgs" />
    <altmember cref="T:System.IO.RenamedEventHandler" />
    <altmember cref="T:System.IO.WaitForChangedResult" />
    <altmember cref="T:System.IO.WatcherChangeTypes" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02403-165">Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemWatcher" />.</span><span class="sxs-lookup"><span data-stu-id="02403-165">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02403-166">Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemWatcher" />.</span><span class="sxs-lookup"><span data-stu-id="02403-166">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-167">No se puede inspeccionar un equipo remoto que no tiene Windows NT o Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="02403-167">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="02403-168">No se puede inspeccionar un equipo remoto de Windows NT 4.0 desde un equipo de Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="02403-168">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 <span data-ttu-id="02403-169">La siguiente tabla muestra los valores de propiedad iniciales para una instancia de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-169">The following table shows initial property values for an instance of <xref:System.IO.FileSystemWatcher>.</span></span>  
  
|<span data-ttu-id="02403-170">Propiedad.</span><span class="sxs-lookup"><span data-stu-id="02403-170">Property</span></span>|<span data-ttu-id="02403-171">Valor inicial</span><span class="sxs-lookup"><span data-stu-id="02403-171">Initial Value</span></span>|  
|--------------|-------------------|  
|<xref:System.IO.FileSystemWatcher.NotifyFilter%2A>|<span data-ttu-id="02403-172">combinación OR bit a bit de `LastWrite`, `FileName`, y `DirectoryName`</span><span class="sxs-lookup"><span data-stu-id="02403-172">bitwise OR combination of `LastWrite`, `FileName`, and `DirectoryName`</span></span>|  
|<xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.Filter%2A>|<span data-ttu-id="02403-173">"*. \*"(Inspecciona todos los archivos.)</span><span class="sxs-lookup"><span data-stu-id="02403-173">"*.\*" (Watch all files.)</span></span>|  
|<xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>|`false`|  
|<xref:System.IO.FileSystemWatcher.InternalBufferSize%2A>|<span data-ttu-id="02403-174">8192</span><span class="sxs-lookup"><span data-stu-id="02403-174">8192</span></span>|  
|<xref:System.IO.FileSystemWatcher.Path%2A>|<span data-ttu-id="02403-175">Una cadena vacía ("")</span><span class="sxs-lookup"><span data-stu-id="02403-175">empty string ("")</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="02403-176">El componente no inspeccionará el directorio especificado hasta que la <xref:System.IO.FileSystemWatcher.Path%2A> está establecida, y <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="02403-176">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-177">En el ejemplo siguiente se crea un <xref:System.IO.FileSystemWatcher> objeto que se va a inspeccionar el directorio especificado en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-177">The following example creates a <xref:System.IO.FileSystemWatcher> object to watch the directory specified at run time.</span></span> <span data-ttu-id="02403-178">El <xref:System.IO.FileSystemWatcher> objeto inspecciona los cambios en `LastWrite` y `LastAccess` horas así como la creación, eliminación o cambio de nombre de texto de archivos en el directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-178">The <xref:System.IO.FileSystemWatcher> object watches for changes in `LastWrite` and `LastAccess` times, and for the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="02403-179">Si se cambia, se crea o se elimina un archivo, la ruta de acceso al archivo se muestra en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-179">If a file is changed, created, or deleted, the path to the file displays to the console.</span></span> <span data-ttu-id="02403-180">Cuando se cambia el nombre de un archivo, las rutas de acceso antiguos y nuevos se muestran en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-180">When a file is renamed, the old and new paths display to the console.</span></span>  
  
 <span data-ttu-id="02403-181">Este ejemplo se utiliza la <xref:System.Diagnostics> y <xref:System.IO> los espacios de nombres.</span><span class="sxs-lookup"><span data-stu-id="02403-181">This example uses the <xref:System.Diagnostics> and <xref:System.IO> namespaces.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="02403-182">De plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="02403-182">for full trust for the immediate caller.</span></span> <span data-ttu-id="02403-183">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="02403-183">This member cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="02403-184">El directorio que se va a supervisar, en notación de Convención de nomenclatura universal (Universal Naming Convention, UNC) o estándar.</span><span class="sxs-lookup"><span data-stu-id="02403-184">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span></span></param>
        <summary><span data-ttu-id="02403-185">Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemWatcher" />, dado el directorio especificado que se va a supervisar.</span><span class="sxs-lookup"><span data-stu-id="02403-185">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory to monitor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="02403-186">El componente no inspeccionará el directorio especificado hasta que la <xref:System.IO.FileSystemWatcher.Path%2A> está establecida, y <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="02403-186">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="02403-187">El componente puede inspeccionar archivos en el equipo, una unidad de red o un equipo remoto.</span><span class="sxs-lookup"><span data-stu-id="02403-187">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="02403-188">No se puede inspeccionar un equipo remoto que no tiene Windows NT o Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="02403-188">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="02403-189">No se puede inspeccionar un equipo remoto de Windows NT 4.0 desde un equipo de Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="02403-189">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span> <span data-ttu-id="02403-190">El <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad se establece de forma predeterminada para inspeccionar todos los archivos.</span><span class="sxs-lookup"><span data-stu-id="02403-190">The <xref:System.IO.FileSystemWatcher.Filter%2A> property is set by default to watch all files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02403-191">El parámetro <paramref name="path" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02403-191">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02403-192">El parámetro <paramref name="path" /> es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="02403-192">The <paramref name="path" /> parameter is an empty string ("").</span></span>  
  
 <span data-ttu-id="02403-193">O bien</span><span class="sxs-lookup"><span data-stu-id="02403-193">-or-</span></span>  
  
 <span data-ttu-id="02403-194">La ruta de acceso especificada mediante el parámetro <paramref name="path" /> no existe.</span><span class="sxs-lookup"><span data-stu-id="02403-194">The path specified through the <paramref name="path" /> parameter does not exist.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="02403-195"><paramref name="path" /> es demasiado largo.</span><span class="sxs-lookup"><span data-stu-id="02403-195"><paramref name="path" /> is too long.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="02403-196">De plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="02403-196">for full trust for the immediate caller.</span></span> <span data-ttu-id="02403-197">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="02403-197">This member cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSystemWatcher (string path, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSystemWatcher(System::String ^ path, System::String ^ filter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="02403-198">El directorio que se va a supervisar, en notación de Convención de nomenclatura universal (Universal Naming Convention, UNC) o estándar.</span><span class="sxs-lookup"><span data-stu-id="02403-198">The directory to monitor, in standard or Universal Naming Convention (UNC) notation.</span></span></param>
        <param name="filter"><span data-ttu-id="02403-199">El tipo de archivos que se van a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="02403-199">The type of files to watch.</span></span> <span data-ttu-id="02403-200">Por ejemplo, "\*.txt" inspecciona cambios en todos los archivos de texto.</span><span class="sxs-lookup"><span data-stu-id="02403-200">For example, "\*.txt" watches for changes to all text files.</span></span></param>
        <summary><span data-ttu-id="02403-201">Inicializa una nueva instancia de la clase <see cref="T:System.IO.FileSystemWatcher" />, dado el directorio especificado y el tipo de archivos que se van a supervisar.</span><span class="sxs-lookup"><span data-stu-id="02403-201">Initializes a new instance of the <see cref="T:System.IO.FileSystemWatcher" /> class, given the specified directory and type of files to monitor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="02403-202">El componente no inspeccionará el directorio especificado hasta que la <xref:System.IO.FileSystemWatcher.Path%2A> está establecida, y <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="02403-202">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> is set, and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="02403-203">El componente puede inspeccionar archivos en el equipo, una unidad de red o un equipo remoto.</span><span class="sxs-lookup"><span data-stu-id="02403-203">The component can watch files on your personal computer, a network drive, or a remote computer.</span></span>  
  
 <span data-ttu-id="02403-204">No se puede inspeccionar un equipo remoto que no tiene Windows NT o Windows 2000.</span><span class="sxs-lookup"><span data-stu-id="02403-204">You cannot watch a remote computer that does not have Windows NT or Windows 2000.</span></span> <span data-ttu-id="02403-205">No se puede inspeccionar un equipo remoto de Windows NT 4.0 desde un equipo de Windows NT 4.0.</span><span class="sxs-lookup"><span data-stu-id="02403-205">You cannot watch a remote Windows NT 4.0 computer from a Windows NT 4.0 computer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="02403-206">El parámetro <paramref name="path" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02403-206">The <paramref name="path" /> parameter is <see langword="null" />.</span></span>  
  
 <span data-ttu-id="02403-207">O bien</span><span class="sxs-lookup"><span data-stu-id="02403-207">-or-</span></span>  
  
 <span data-ttu-id="02403-208">El parámetro <paramref name="filter" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02403-208">The <paramref name="filter" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02403-209">El parámetro <paramref name="path" /> es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="02403-209">The <paramref name="path" /> parameter is an empty string ("").</span></span>  
  
 <span data-ttu-id="02403-210">O bien</span><span class="sxs-lookup"><span data-stu-id="02403-210">-or-</span></span>  
  
 <span data-ttu-id="02403-211">La ruta de acceso especificada mediante el parámetro <paramref name="path" /> no existe.</span><span class="sxs-lookup"><span data-stu-id="02403-211">The path specified through the <paramref name="path" /> parameter does not exist.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException">
          <span data-ttu-id="02403-212"><paramref name="path" /> es demasiado largo.</span><span class="sxs-lookup"><span data-stu-id="02403-212"><paramref name="path" /> is too long.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand"><span data-ttu-id="02403-213">De plena confianza para el llamador inmediato.</span><span class="sxs-lookup"><span data-stu-id="02403-213">for full trust for the immediate caller.</span></span> <span data-ttu-id="02403-214">Un código de confianza parcial no puede utilizar este miembro.</span><span class="sxs-lookup"><span data-stu-id="02403-214">This member cannot be used by partially trusted code.</span></span></permission>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
        <altmember cref="T:System.IO.WaitForChangedResult" />
        <altmember cref="T:System.IO.WatcherChangeTypes" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02403-215">Comienza la inicialización de un objeto <see cref="T:System.IO.FileSystemWatcher" /> empleado en un formulario o utilizado por otro componente.</span><span class="sxs-lookup"><span data-stu-id="02403-215">Begins the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span></span> <span data-ttu-id="02403-216">La inicialización se produce en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-216">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-217">El [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] diseño entorno usa este método para comenzar la inicialización de un componente utilizado en un formulario o por otro componente.</span><span class="sxs-lookup"><span data-stu-id="02403-217">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to start the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="02403-218">El <xref:System.IO.FileSystemWatcher.EndInit%2A> método termina la inicialización.</span><span class="sxs-lookup"><span data-stu-id="02403-218">The <xref:System.IO.FileSystemWatcher.EndInit%2A> method ends the initialization.</span></span> <span data-ttu-id="02403-219">Mediante el <xref:System.IO.FileSystemWatcher.BeginInit%2A> y <xref:System.IO.FileSystemWatcher.EndInit%2A> métodos impide que el control que se va a usar antes de que esté totalmente inicializado.</span><span class="sxs-lookup"><span data-stu-id="02403-219">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.EndInit" />
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Changed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory change matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-220">Se produce cuando cambia un archivo o un directorio en la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="02403-220">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-221">El <xref:System.IO.FileSystemWatcher.Changed> evento se desencadena cuando se realizan cambios en el tamaño, atributos del sistema, la última escritura hora, hora del último acceso o los permisos de seguridad de un archivo o directorio en el directorio que se está supervisando.</span><span class="sxs-lookup"><span data-stu-id="02403-221">The <xref:System.IO.FileSystemWatcher.Changed> event is raised when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-222">Las operaciones comunes de sistema de archivos podrían generar más de un evento.</span><span class="sxs-lookup"><span data-stu-id="02403-222">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="02403-223">Por ejemplo, cuando se mueve un archivo de un directorio a otro, varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> y algunos <xref:System.IO.FileSystemWatcher.OnCreated%2A> y <xref:System.IO.FileSystemWatcher.OnDeleted%2A> es posible que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-223">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="02403-224">Mover que un archivo es una operación compleja que consta de varias operaciones sencillas, por lo tanto, cuando se genera varios eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-224">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="02403-225">De forma similar, algunas aplicaciones (por ejemplo, software antivirus) pueden provocar eventos del sistema de archivo adicionales que se detectan mediante <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-225">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 <span data-ttu-id="02403-226">Use <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> para restringir el número de notificaciones generadas cuando se controla este evento.</span><span class="sxs-lookup"><span data-stu-id="02403-226">Use <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> to restrict the number of notifications raised when this event is handled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-227">El <xref:System.IO.FileSystemWatcher.Changed> evento se desencadena de forma inesperada cuando un archivo se cambia el nombre, pero no se produce cuando se cambia el nombre de un directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-227">The <xref:System.IO.FileSystemWatcher.Changed> event is raised unexpectedly when a file is renamed, but is not raised when a directory is renamed.</span></span> <span data-ttu-id="02403-228">Para inspeccionar el cambio de nombre, utilice el <xref:System.IO.FileSystemWatcher.Renamed> eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-228">To watch for renaming, use the <xref:System.IO.FileSystemWatcher.Renamed> event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-229">El orden en que el <xref:System.IO.FileSystemWatcher.Changed> evento se desencadena en relación con la otra <xref:System.IO.FileSystemWatcher> eventos pueden cambiar cuando el <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propiedad no es `null`.</span><span class="sxs-lookup"><span data-stu-id="02403-229">The order in which the <xref:System.IO.FileSystemWatcher.Changed> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-230">En el ejemplo siguiente se usa el <xref:System.IO.FileSystemWatcher.Changed> eventos para mostrar la ruta de acceso de archivo en la consola cuando se cambia el archivo inspeccionado.</span><span class="sxs-lookup"><span data-stu-id="02403-230">The following example uses the <xref:System.IO.FileSystemWatcher.Changed> event to display the file path to the console whenever the watched file is changed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Created">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Created;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Created" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Created" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Created As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Created;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory creation matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-231">Se produce cuando se crea un archivo o un directorio en la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="02403-231">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-232">Algunas repeticiones habituales, como copiar o mover un archivo o directorio, no se corresponden directamente a un evento, pero estas repeticiones hacen que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-232">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="02403-233">Al copiar un archivo o directorio, el sistema genera un <xref:System.IO.FileSystemWatcher.Created> eventos en el directorio a la que se copió el archivo, si se está inspeccionando ese directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-233">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="02403-234">Si el directorio desde el que se copió lo estuviera inspeccionando otra instancia de <xref:System.IO.FileSystemWatcher>, no se provocaría ningún evento.</span><span class="sxs-lookup"><span data-stu-id="02403-234">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="02403-235">Por ejemplo, cree dos instancias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-235">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="02403-236">FileSystemWatcher1 está establecido para inspeccionar "C:\My Documents" y FileSystemWatcher2 está establecido para inspeccionar "C:\Your Documents".</span><span class="sxs-lookup"><span data-stu-id="02403-236">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="02403-237">Si copia un archivo de "Mis documentos" en "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> se generará el evento FileSystemWatcher2, pero se genera ningún evento para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-237">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="02403-238">A diferencia de copiar, mover un archivo o directorio se generan dos eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-238">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="02403-239">En el ejemplo anterior, si mueve un archivo desde "My Documents" hasta "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> se provocaría el evento FileSystemWatcher2 y un <xref:System.IO.FileSystemWatcher.Deleted> se provocaría el evento FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-239">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-240">Las operaciones comunes de sistema de archivos podrían generar más de un evento.</span><span class="sxs-lookup"><span data-stu-id="02403-240">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="02403-241">Por ejemplo, cuando se mueve un archivo de un directorio a otro, varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> y algunos <xref:System.IO.FileSystemWatcher.OnCreated%2A> y <xref:System.IO.FileSystemWatcher.OnDeleted%2A> es posible que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-241">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="02403-242">Mover que un archivo es una operación compleja que consta de varias operaciones sencillas, por lo tanto, cuando se genera varios eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-242">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="02403-243">De forma similar, algunas aplicaciones (por ejemplo, software antivirus) pueden provocar eventos del sistema de archivo adicionales que se detectan mediante <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-243">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-244">El orden en que el <xref:System.IO.FileSystemWatcher.Created> evento se desencadena en relación con la otra <xref:System.IO.FileSystemWatcher> eventos pueden cambiar cuando el <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propiedad no es `null`.</span><span class="sxs-lookup"><span data-stu-id="02403-244">The order in which the <xref:System.IO.FileSystemWatcher.Created> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
 <span data-ttu-id="02403-245">El <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento se desencadena en cuanto se crea un archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-245">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="02403-246">Si un archivo se va a copiar o se transfiere a un directorio inspeccionado, la <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento se activará inmediatamente, seguido de uno o varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-246">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-247">En el ejemplo siguiente se usa el <xref:System.IO.FileSystemWatcher.Created> eventos para mostrar la ruta de acceso de archivo en la consola cuando se crea el archivo inspeccionado.</span><span class="sxs-lookup"><span data-stu-id="02403-247">The following example uses the <xref:System.IO.FileSystemWatcher.Created> event to display the file path to the console whenever the watched file is created.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.IO.FileSystemEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.FileSystemEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As FileSystemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::FileSystemEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory deletion matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.FileSystemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-248">Se produce cuando se elimina un archivo o un directorio en la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="02403-248">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is deleted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-249">Algunas repeticiones habituales, como copiar o mover un archivo o directorio, no se corresponden directamente a un evento, pero estas repeticiones hacen que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-249">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="02403-250">Al copiar un archivo o directorio, el sistema genera un <xref:System.IO.FileSystemWatcher.Created> eventos en el directorio a la que se copió el archivo, si se está inspeccionando ese directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-250">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="02403-251">Si el directorio desde el que se copió lo estuviera inspeccionando otra instancia de <xref:System.IO.FileSystemWatcher>, no se provocaría ningún evento.</span><span class="sxs-lookup"><span data-stu-id="02403-251">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="02403-252">Por ejemplo, cree dos instancias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-252">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="02403-253">FileSystemWatcher1 está establecido para inspeccionar "C:\My Documents" y FileSystemWatcher2 está establecido para inspeccionar "C:\Your Documents".</span><span class="sxs-lookup"><span data-stu-id="02403-253">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="02403-254">Si copia un archivo de "Mis documentos" en "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> se generará el evento FileSystemWatcher2, pero se genera ningún evento para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-254">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="02403-255">A diferencia de copiar, mover un archivo o directorio se generan dos eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-255">Unlike copying, moving a file or directory would raise two events.</span></span> <span data-ttu-id="02403-256">En el ejemplo anterior, si mueve un archivo desde "My Documents" hasta "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> se provocaría el evento FileSystemWatcher2 y un <xref:System.IO.FileSystemWatcher.Deleted> se provocaría el evento FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-256">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-257">Las operaciones comunes de sistema de archivos podrían generar más de un evento.</span><span class="sxs-lookup"><span data-stu-id="02403-257">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="02403-258">Por ejemplo, cuando se mueve un archivo de un directorio a otro, varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> y algunos <xref:System.IO.FileSystemWatcher.OnCreated%2A> y <xref:System.IO.FileSystemWatcher.OnDeleted%2A> es posible que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-258">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="02403-259">Mover que un archivo es una operación compleja que consta de varias operaciones sencillas, por lo tanto, cuando se genera varios eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-259">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="02403-260">De forma similar, algunas aplicaciones (por ejemplo, software antivirus) pueden provocar eventos del sistema de archivo adicionales que se detectan mediante <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-260">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-261">El orden en que el <xref:System.IO.FileSystemWatcher.Deleted> evento se desencadena en relación con la otra <xref:System.IO.FileSystemWatcher> eventos pueden cambiar cuando el <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propiedad no es `null`.</span><span class="sxs-lookup"><span data-stu-id="02403-261">The order in which the <xref:System.IO.FileSystemWatcher.Deleted> event is raised in relation to the other <xref:System.IO.FileSystemWatcher> events may change when the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property is not `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-262">En el ejemplo siguiente se usa el <xref:System.IO.FileSystemWatcher.Deleted> eventos para mostrar la ruta de acceso a la consola cada vez que se elimina el archivo inspeccionado.</span><span class="sxs-lookup"><span data-stu-id="02403-262">The following example uses the <xref:System.IO.FileSystemWatcher.Deleted> event to display the file path to the console whenever the watched file is deleted.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public virtual void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="02403-263">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="02403-263"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="02403-264">Libera los recursos no administrados que usa <see cref="T:System.IO.FileSystemWatcher" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="02403-264">Releases the unmanaged resources used by the <see cref="T:System.IO.FileSystemWatcher" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-265">Se llama a este método público <xref:System.ComponentModel.Component.Dispose%2A> método y <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="02403-265">This method is called by the public <xref:System.ComponentModel.Component.Dispose%2A> method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="02403-266"><xref:System.ComponentModel.Component.Dispose%2A> se invoca el protegido <xref:System.IO.FileSystemWatcher.Dispose%2A> método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="02403-266"><xref:System.ComponentModel.Component.Dispose%2A> invokes the protected <xref:System.IO.FileSystemWatcher.Dispose%2A> method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="02403-267"><xref:System.Object.Finalize%2A> invoca <xref:System.IO.FileSystemWatcher.Dispose%2A> con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="02403-267"><xref:System.Object.Finalize%2A> invokes <xref:System.IO.FileSystemWatcher.Dispose%2A> with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="02403-268">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.IO.Compression.DeflateStream> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="02403-268">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.Compression.DeflateStream> references.</span></span> <span data-ttu-id="02403-269">Este método invoca al método <xref:System.ComponentModel.Component.Dispose%2A> de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="02403-269">This method invokes the <xref:System.ComponentModel.Component.Dispose%2A> method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="02403-270"><see cref="M:System.ComponentModel.Component.Dispose" /> puede recibir varias llamadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="02403-270"><see cref="M:System.ComponentModel.Component.Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="02403-271">Al reemplazar <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see cref="M:System.ComponentModel.Component.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="02403-271">When overriding <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see cref="M:System.ComponentModel.Component.Dispose" />.</span></span> <span data-ttu-id="02403-272">Para obtener más información sobre cómo implementar <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, consulte [implementa un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="02403-272">For more information about how to implement <see cref="M:System.IO.FileSystemWatcher.Dispose(System.Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
 <span data-ttu-id="02403-273">Para obtener más información acerca de <see cref="M:System.ComponentModel.Component.Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md).</span><span class="sxs-lookup"><span data-stu-id="02403-273">For more information about <see cref="M:System.ComponentModel.Component.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EnableRaisingEvents">
      <MemberSignature Language="C#" Value="public bool EnableRaisingEvents { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableRaisingEvents" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.EnableRaisingEvents" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableRaisingEvents As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableRaisingEvents { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate if this instance is active")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-274">Obtiene o establece un valor que indica si el componente está habilitado.</span><span class="sxs-lookup"><span data-stu-id="02403-274">Gets or sets a value indicating whether the component is enabled.</span></span></summary>
        <value>
          <span data-ttu-id="02403-275">Es <see langword="true" /> si el componente está habilitado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02403-275"><see langword="true" /> if the component is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="02403-276">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02403-276">The default is <see langword="false" />.</span></span> <span data-ttu-id="02403-277">Si se utiliza el componente en un diseñador de [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], el valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="02403-277">If you are using the component on a designer in [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], the default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-278">El componente no provocará eventos a menos que establezca <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="02403-278">The component will not raise events unless you set <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-279">El componente no inspeccionará el directorio especificado hasta que la <xref:System.IO.FileSystemWatcher.Path%2A> se ha establecido la propiedad y <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="02403-279">The component will not watch the specified directory until the <xref:System.IO.FileSystemWatcher.Path%2A> property has been set and <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> is `true`.</span></span>  
  
 <span data-ttu-id="02403-280">El <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> método permite a los controladores de eventos que se debe invocar para responder a los cambios de archivo, incluso si esta propiedad se establece en `false`.</span><span class="sxs-lookup"><span data-stu-id="02403-280">The <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> method allows event handlers to be invoked to respond to file changes even if this property is set to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-281">En el ejemplo siguiente se crea un <xref:System.IO.FileSystemWatcher> para inspeccionar el directorio especificado en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-281">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="02403-282">El componente se establece para inspeccionar los cambios en `LastWrite` y `LastAccess` de tiempo, la creación, eliminación, o cambiar el nombre de archivos de texto en el directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-282">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="02403-283">Si se cambia, se crea o se elimina un archivo, la ruta de acceso al archivo se imprime en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-283">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="02403-284">Cuando se cambia el nombre de un archivo, las rutas de acceso antiguos y nuevos imprimen en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-284">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="02403-285">Use la <xref:System.Diagnostics> y <xref:System.IO> espacios de nombres para este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="02403-285">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="02403-286">Se eliminó el objeto <see cref="T:System.IO.FileSystemWatcher" />.</span><span class="sxs-lookup"><span data-stu-id="02403-286">The <see cref="T:System.IO.FileSystemWatcher" /> object has been disposed.</span></span></exception>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="02403-287">El sistema operativo actual no es Microsoft Windows NT o posterior.</span><span class="sxs-lookup"><span data-stu-id="02403-287">The current operating system is not Microsoft Windows NT or later.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="02403-288">No se encontró el directorio especificado en <see cref="P:System.IO.FileSystemWatcher.Path" />.</span><span class="sxs-lookup"><span data-stu-id="02403-288">The directory specified in <see cref="P:System.IO.FileSystemWatcher.Path" /> could not be found.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="02403-289"><see cref="P:System.IO.FileSystemWatcher.Path" /> no se ha establecido o no es válida.</span><span class="sxs-lookup"><span data-stu-id="02403-289"><see cref="P:System.IO.FileSystemWatcher.Path" /> has not been set or is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="02403-290">Termina la inicialización de un objeto <see cref="T:System.IO.FileSystemWatcher" /> empleado en un formulario o utilizado por otro componente.</span><span class="sxs-lookup"><span data-stu-id="02403-290">Ends the initialization of a <see cref="T:System.IO.FileSystemWatcher" /> used on a form or used by another component.</span></span> <span data-ttu-id="02403-291">La inicialización se produce en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-291">The initialization occurs at run time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-292">El [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] diseño entorno usa este método para finalizar la inicialización de un componente utilizado en un formulario o por otro componente.</span><span class="sxs-lookup"><span data-stu-id="02403-292">The [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] design environment uses this method to end the initialization of a component used on a form or used by another component.</span></span> <span data-ttu-id="02403-293">El <xref:System.IO.FileSystemWatcher.BeginInit%2A> método comienza la inicialización.</span><span class="sxs-lookup"><span data-stu-id="02403-293">The <xref:System.IO.FileSystemWatcher.BeginInit%2A> method starts the initialization.</span></span> <span data-ttu-id="02403-294">Mediante el <xref:System.IO.FileSystemWatcher.BeginInit%2A> y <xref:System.IO.FileSystemWatcher.EndInit%2A> métodos impide que el control que se va a usar antes de que esté totalmente inicializado.</span><span class="sxs-lookup"><span data-stu-id="02403-294">Using the <xref:System.IO.FileSystemWatcher.BeginInit%2A> and <xref:System.IO.FileSystemWatcher.EndInit%2A> methods prevents the control from being used before it is fully initialized.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.BeginInit" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event System.IO.ErrorEventHandler Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.ErrorEventHandler Error" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Error" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Error As ErrorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::ErrorEventHandler ^ Error;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.ErrorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-295">Se produce cuando la instancia de <see cref="T:System.IO.FileSystemWatcher" /> no puede continuar supervisando los cambios o cuando el búfer interno se desborda.</span><span class="sxs-lookup"><span data-stu-id="02403-295">Occurs when the instance of <see cref="T:System.IO.FileSystemWatcher" /> is unable to continue monitoring changes or when the internal buffer overflows.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-296">Este evento se desencadena cuando algo impide que la <xref:System.IO.FileSystemWatcher> objeto de supervisión de los cambios.</span><span class="sxs-lookup"><span data-stu-id="02403-296">This event is raised whenever something prevents the <xref:System.IO.FileSystemWatcher> object from monitoring changes.</span></span> <span data-ttu-id="02403-297">Por ejemplo, si el objeto es supervisar los cambios en un directorio remoto y se pierde la conexión a ese directorio, la <xref:System.IO.FileSystemWatcher.Error> evento se desencadena.</span><span class="sxs-lookup"><span data-stu-id="02403-297">For example, if the object is monitoring changes in a remote directory and the connection to that directory is lost, the <xref:System.IO.FileSystemWatcher.Error> event is raised.</span></span>  
  
 <span data-ttu-id="02403-298">El sistema le informa de los cambios de archivo y almacena esos cambios en un búfer que el componente crea y pasa a la API.</span><span class="sxs-lookup"><span data-stu-id="02403-298">The system notifies you of file changes, and it stores those changes in a buffer that the component creates and passes to the APIs.</span></span> <span data-ttu-id="02403-299">Si hay muchos cambios en poco tiempo, el búfer puede desbordarse.</span><span class="sxs-lookup"><span data-stu-id="02403-299">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="02403-300">Esto hace que el componente a perder el seguimiento de cambios en el directorio y sólo puede proporcionar una notificación general.</span><span class="sxs-lookup"><span data-stu-id="02403-300">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="02403-301">Aumentar el tamaño del búfer es costoso, porque se trata de no paginado de memoria que no es posible intercambiar en el disco, por lo que tenga el búfer tan pequeño como sea posible.</span><span class="sxs-lookup"><span data-stu-id="02403-301">Increasing the size of the buffer is expensive, because it comes from non paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="02403-302">Para evitar un desbordamiento de búfer, utilice el <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, y <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> las notificaciones de cambio de propiedades para filtrar no deseados.</span><span class="sxs-lookup"><span data-stu-id="02403-302">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.Filter%2A>, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-303">Las operaciones comunes de sistema de archivos podrían generar más de un evento.</span><span class="sxs-lookup"><span data-stu-id="02403-303">Common file system operations might raise more than one event.</span></span> <span data-ttu-id="02403-304">Por ejemplo, cuando se mueve un archivo de un directorio a otro, varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> y algunos <xref:System.IO.FileSystemWatcher.OnCreated%2A> y <xref:System.IO.FileSystemWatcher.OnDeleted%2A> es posible que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-304">For example, when a file is moved from one directory to another, several <xref:System.IO.FileSystemWatcher.OnChanged%2A> and some <xref:System.IO.FileSystemWatcher.OnCreated%2A> and <xref:System.IO.FileSystemWatcher.OnDeleted%2A> events might be raised.</span></span> <span data-ttu-id="02403-305">Mover que un archivo es una operación compleja que consta de varias operaciones sencillas, por lo tanto, cuando se genera varios eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-305">Moving a file is a complex operation that consists of multiple simple operations, therefore raising multiple events.</span></span> <span data-ttu-id="02403-306">De forma similar, algunas aplicaciones (por ejemplo, software antivirus) pueden provocar eventos del sistema de archivo adicionales que se detectan mediante <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-306">Likewise, some applications (for example, antivirus software) might cause additional file system events that are detected by <xref:System.IO.FileSystemWatcher>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("*.*")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("File name filter pattern")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-307">Obtiene o establece la cadena de filtro utilizada para determinar qué archivos se supervisan en un directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-307">Gets or sets the filter string used to determine what files are monitored in a directory.</span></span></summary>
        <value><span data-ttu-id="02403-308">La cadena de filtro.</span><span class="sxs-lookup"><span data-stu-id="02403-308">The filter string.</span></span> <span data-ttu-id="02403-309">El valor predeterminado es "*. \*"(Inspecciona todos los archivos.)</span><span class="sxs-lookup"><span data-stu-id="02403-309">The default is "*.\*" (Watches all files.)</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-310">Para inspeccionar cambios en todos los archivos, establezca la <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad en una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="02403-310">To watch changes in all files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to an empty string ("").</span></span> <span data-ttu-id="02403-311">Para inspeccionar un archivo específico, establezca la <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad con el nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-311">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span> <span data-ttu-id="02403-312">Por ejemplo, para ver los cambios en el archivo MyDoc.txt, establezca el <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad en "MyDoc.txt".</span><span class="sxs-lookup"><span data-stu-id="02403-312">For example, to watch for changes in the file MyDoc.txt, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "MyDoc.txt".</span></span> <span data-ttu-id="02403-313">También puede ver los cambios en un determinado tipo de archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-313">You can also watch for changes in a certain type of file.</span></span> <span data-ttu-id="02403-314">Por ejemplo, para ver si hay cambios en los archivos de texto, establezca la <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad como "\*.txt".</span><span class="sxs-lookup"><span data-stu-id="02403-314">For example, to watch for changes in any text files, set the <xref:System.IO.FileSystemWatcher.Filter%2A> property to "\*.txt".</span></span> <span data-ttu-id="02403-315">Uso de varios filtros, como "\*.txt&#124;\*.doc" no se admite.</span><span class="sxs-lookup"><span data-stu-id="02403-315">Use of multiple filters such as "\*.txt&#124;\*.doc" is not supported.</span></span>  
  
 <span data-ttu-id="02403-316">El <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad se puede cambiar después de la <xref:System.IO.FileSystemWatcher> objeto haya empezado a recibir eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-316">The <xref:System.IO.FileSystemWatcher.Filter%2A> property can be changed after the <xref:System.IO.FileSystemWatcher> object has started receiving events.</span></span>  
  
 <span data-ttu-id="02403-317">Para obtener más información acerca de cómo filtrar notificaciones no deseadas, vea el <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, y <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="02403-317">For more information about filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="02403-318"><xref:System.IO.FileSystemWatcher.Filter%2A> acepta caracteres comodín para encontrar archivos coincidentes, tal como se muestra en los ejemplos siguientes.</span><span class="sxs-lookup"><span data-stu-id="02403-318"><xref:System.IO.FileSystemWatcher.Filter%2A> accepts wildcards for matching files, as shown in the following examples.</span></span>  
  
|<span data-ttu-id="02403-319">Cadena de filtro</span><span class="sxs-lookup"><span data-stu-id="02403-319">Filter string</span></span>|<span data-ttu-id="02403-320">Supervisa los siguientes archivos</span><span class="sxs-lookup"><span data-stu-id="02403-320">Watches the following files</span></span>|  
|-------------------|---------------------------------|  
|<span data-ttu-id="02403-321">*.\*</span><span class="sxs-lookup"><span data-stu-id="02403-321">*.\*</span></span>|<span data-ttu-id="02403-322">Todos los archivos (valor predeterminado).</span><span class="sxs-lookup"><span data-stu-id="02403-322">All files (default).</span></span> <span data-ttu-id="02403-323">Una cadena vacía ("") también inspecciona todos los archivos.</span><span class="sxs-lookup"><span data-stu-id="02403-323">An empty string ("") also watches all files.</span></span>|  
|<span data-ttu-id="02403-324">\*.txt</span><span class="sxs-lookup"><span data-stu-id="02403-324">\*.txt</span></span>|<span data-ttu-id="02403-325">Todos los archivos con la extensión "txt".</span><span class="sxs-lookup"><span data-stu-id="02403-325">All files with a "txt" extension.</span></span>|  
|<span data-ttu-id="02403-326">\*recipe.doc</span><span class="sxs-lookup"><span data-stu-id="02403-326">\*recipe.doc</span></span>|<span data-ttu-id="02403-327">Todos los archivos que terminan en "receta" con una extensión "doc".</span><span class="sxs-lookup"><span data-stu-id="02403-327">All files ending in "recipe" with a "doc" extension.</span></span>|  
|<span data-ttu-id="02403-328">win\*.xml</span><span class="sxs-lookup"><span data-stu-id="02403-328">win\*.xml</span></span>|<span data-ttu-id="02403-329">Todos los archivos que comienzan por "win" con una extensión "xml".</span><span class="sxs-lookup"><span data-stu-id="02403-329">All files beginning with "win" with an "xml" extension.</span></span>|  
|<span data-ttu-id="02403-330">Ventas \* 200?. xls</span><span class="sxs-lookup"><span data-stu-id="02403-330">Sales\*200?.xls</span></span>|<span data-ttu-id="02403-331">Coincide con lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="02403-331">Matches the following:</span></span><br /><br /> <span data-ttu-id="02403-332">Julio de ventas 2001.xls agosto 2002.xls marzo 2004.xls</span><span class="sxs-lookup"><span data-stu-id="02403-332">Sales July 2001.xlsSales Aug 2002.xlsSales March 2004.xls</span></span><br /><br /> <span data-ttu-id="02403-333">pero no coincide con:</span><span class="sxs-lookup"><span data-stu-id="02403-333">but does not match:</span></span><br /><br /> <span data-ttu-id="02403-334">1999.xls de ventas de noviembre</span><span class="sxs-lookup"><span data-stu-id="02403-334">Sales Nov 1999.xls</span></span>|  
|<span data-ttu-id="02403-335">MyReport.Doc</span><span class="sxs-lookup"><span data-stu-id="02403-335">MyReport.Doc</span></span>|<span data-ttu-id="02403-336">Inspecciona sólo MyReport.doc</span><span class="sxs-lookup"><span data-stu-id="02403-336">Watches only MyReport.doc</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="02403-337">En el ejemplo siguiente se crea un <xref:System.IO.FileSystemWatcher> para inspeccionar el directorio especificado en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-337">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="02403-338">El componente se establece para inspeccionar los cambios en `LastWrite` y `LastAccess` de tiempo, la creación, eliminación, o cambiar el nombre de archivos de texto en el directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-338">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="02403-339">Si se cambia, se crea o se elimina un archivo, la ruta de acceso al archivo se imprime en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-339">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="02403-340">Cuando se cambia el nombre de un archivo, las rutas de acceso antiguos y nuevos imprimen en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-340">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="02403-341">Use la <xref:System.Diagnostics> y <xref:System.IO> espacios de nombres para este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="02403-341">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FileSystemWatcher ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FileSystemWatcher ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeSubdirectories">
      <MemberSignature Language="C#" Value="public bool IncludeSubdirectories { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeSubdirectories" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeSubdirectories As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeSubdirectories { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate we want to watch subdirectories")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-342">Obtiene o establece un valor que indica si se deben supervisar los subdirectorios de la ruta de acceso especificada.</span><span class="sxs-lookup"><span data-stu-id="02403-342">Gets or sets a value indicating whether subdirectories within the specified path should be monitored.</span></span></summary>
        <value>
          <span data-ttu-id="02403-343">Es <see langword="true" /> si desea supervisar subdirectorios; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02403-343"><see langword="true" /> if you want to monitor subdirectories; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="02403-344">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="02403-344">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-345">Establecer <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> a `true` cuando desee ver notificaciones de cambio de archivos y directorios contenidos dentro del directorio especificado a través de la <xref:System.IO.FileSystemWatcher.Path%2A> propiedad y sus subdirectorios.</span><span class="sxs-lookup"><span data-stu-id="02403-345">Set <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> to `true` when you want to watch for change notifications for files and directories contained within the directory specified through the <xref:System.IO.FileSystemWatcher.Path%2A> property, and its subdirectories.</span></span> <span data-ttu-id="02403-346">Establecer el <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> propiedad `false` ayuda a reduce el número de notificaciones enviadas al búfer interno.</span><span class="sxs-lookup"><span data-stu-id="02403-346">Setting the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property to `false` helps reduce the number of notifications sent to the internal buffer.</span></span> <span data-ttu-id="02403-347">Para obtener más información sobre cómo filtrar notificaciones no deseadas, vea el <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> y <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="02403-347">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
 <span data-ttu-id="02403-348">Cuando `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> es recursiva por todo el subárbol, no solamente en los directorios secundarios inmediatos.</span><span class="sxs-lookup"><span data-stu-id="02403-348">When `true`, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is recursive through the entire sub tree, not just the immediate child directories.</span></span> <span data-ttu-id="02403-349">Devuelve la ruta de acceso relativa a un archivo o directorio dentro del subárbol de la <xref:System.IO.FileSystemEventArgs.Name%2A> propiedad de <xref:System.IO.FileSystemEventArgs> y <xref:System.IO.RenamedEventArgs.OldName%2A> propiedad de <xref:System.IO.RenamedEventArgs>, en función de los cambios que está inspeccionando.</span><span class="sxs-lookup"><span data-stu-id="02403-349">The relative path to a file or directory within the sub tree returns in the <xref:System.IO.FileSystemEventArgs.Name%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldName%2A> property of <xref:System.IO.RenamedEventArgs>, depending on changes you are watching for.</span></span> <span data-ttu-id="02403-350">Puede obtener la ruta de acceso completa de la <xref:System.IO.FileSystemEventArgs.FullPath%2A> propiedad de <xref:System.IO.FileSystemEventArgs> y <xref:System.IO.RenamedEventArgs.OldFullPath%2A> propiedad de <xref:System.IO.RenamedEventArgs>, en función de los cambios que esté inspeccionando.</span><span class="sxs-lookup"><span data-stu-id="02403-350">You can get the fully qualified path from the <xref:System.IO.FileSystemEventArgs.FullPath%2A> property of <xref:System.IO.FileSystemEventArgs> and the <xref:System.IO.RenamedEventArgs.OldFullPath%2A> property of <xref:System.IO.RenamedEventArgs>, depending on the changes you are watching for.</span></span>  
  
 <span data-ttu-id="02403-351">Si se crea un directorio en el subárbol del directorio que está inspeccionando, y <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> es `true`, automáticamente se observarán ese directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-351">If a directory is created in the sub tree of the directory you are watching, and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> is `true`, that directory will automatically be watched.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemEventArgs.FullPath" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldFullPath" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
        <altmember cref="P:System.IO.FileSystemEventArgs.Name" />
        <altmember cref="P:System.IO.RenamedEventArgs.OldName" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="InternalBufferSize">
      <MemberSignature Language="C#" Value="public int InternalBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InternalBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property InternalBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InternalBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(8192)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-352">Obtiene o establece el tamaño (en bytes) del búfer interno.</span><span class="sxs-lookup"><span data-stu-id="02403-352">Gets or sets the size (in bytes) of the internal buffer.</span></span></summary>
        <value><span data-ttu-id="02403-353">Tamaño del búfer interno en bytes.</span><span class="sxs-lookup"><span data-stu-id="02403-353">The internal buffer size in bytes.</span></span> <span data-ttu-id="02403-354">El valor predeterminado es 8192 (8 KB).</span><span class="sxs-lookup"><span data-stu-id="02403-354">The default is 8192 (8 KB).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-355">Puede establecer el búfer de 4 KB o superior, pero no debe superar los 64 KB.</span><span class="sxs-lookup"><span data-stu-id="02403-355">You can set the buffer to 4 KB or larger, but it must not exceed 64 KB.</span></span> <span data-ttu-id="02403-356">Si se intenta establecer el <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedad a inferior a 4096 bytes, el valor se descarta y el <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedad está establecida en 4096 bytes.</span><span class="sxs-lookup"><span data-stu-id="02403-356">If you try to set the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property to less than 4096 bytes, your value is discarded and the <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> property is set to 4096 bytes.</span></span> <span data-ttu-id="02403-357">Para obtener el mejor rendimiento, use un múltiplo de 4 KB en equipos basados en Intel.</span><span class="sxs-lookup"><span data-stu-id="02403-357">For best performance, use a multiple of 4 KB on Intel-based computers.</span></span>  
  
 <span data-ttu-id="02403-358">El sistema notifica al componente de cambios del archivo y almacena esos cambios en un búfer que el componente crea y pasa a las API.</span><span class="sxs-lookup"><span data-stu-id="02403-358">The system notifies the component of file changes, and it stores those changes in a buffer the component creates and passes to the APIs.</span></span> <span data-ttu-id="02403-359">Cada evento puede utilizar hasta 16 bytes de memoria, sin incluir el nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-359">Each event can use up to 16 bytes of memory, not including the file name.</span></span> <span data-ttu-id="02403-360">Si hay muchos cambios en poco tiempo, el búfer puede desbordarse.</span><span class="sxs-lookup"><span data-stu-id="02403-360">If there are many changes in a short time, the buffer can overflow.</span></span> <span data-ttu-id="02403-361">Esto hace que el componente a perder el seguimiento de cambios en el directorio y sólo puede proporcionar una notificación general.</span><span class="sxs-lookup"><span data-stu-id="02403-361">This causes the component to lose track of changes in the directory, and it will only provide blanket notification.</span></span> <span data-ttu-id="02403-362">Aumentar el tamaño del búfer puede evitar que los eventos de cambio de la falta de sistema de archivos.</span><span class="sxs-lookup"><span data-stu-id="02403-362">Increasing the size of the buffer can prevent missing file system change events.</span></span> <span data-ttu-id="02403-363">Sin embargo, si aumenta el tamaño de búfer es caro, porque se trata de la memoria no paginada que no se puede intercambiar en el disco, por lo que mantener el búfer tan pequeño como sea posible.</span><span class="sxs-lookup"><span data-stu-id="02403-363">However, increasing buffer size is expensive, because it comes from non-paged memory that cannot be swapped out to disk, so keep the buffer as small as possible.</span></span> <span data-ttu-id="02403-364">Para evitar un desbordamiento de búfer, utilice el <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> y <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> las notificaciones de cambio de propiedades para filtrar no deseados.</span><span class="sxs-lookup"><span data-stu-id="02403-364">To avoid a buffer overflow, use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> and <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> properties to filter out unwanted change notifications.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="NotifyFilter">
      <MemberSignature Language="C#" Value="public System.IO.NotifyFilters NotifyFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.NotifyFilters NotifyFilter" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.NotifyFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyFilter As NotifyFilters" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::NotifyFilters NotifyFilter { System::IO::NotifyFilters get(); void set(System::IO::NotifyFilters value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("Flag to indicate which change event we want to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.NotifyFilters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-365">Obtiene o establece el tipo de cambios que se van a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="02403-365">Gets or sets the type of changes to watch for.</span></span></summary>
        <value><span data-ttu-id="02403-366">Uno de los valores de <see cref="T:System.IO.NotifyFilters" />.</span><span class="sxs-lookup"><span data-stu-id="02403-366">One of the <see cref="T:System.IO.NotifyFilters" /> values.</span></span> <span data-ttu-id="02403-367">El valor predeterminado es la combinación OR bit a bit de <see langword="LastWrite" />, <see langword="FileName" /> y <see langword="DirectoryName" />.</span><span class="sxs-lookup"><span data-stu-id="02403-367">The default is the bitwise OR combination of <see langword="LastWrite" />, <see langword="FileName" />, and <see langword="DirectoryName" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-368">Puede combinar los miembros de la <xref:System.IO.NotifyFilters> enumeración para inspeccionar más de un tipo de cambio a la vez.</span><span class="sxs-lookup"><span data-stu-id="02403-368">You can combine the members of the <xref:System.IO.NotifyFilters> enumeration to watch for more than one type of change at a time.</span></span> <span data-ttu-id="02403-369">Por ejemplo, puede observar los cambios en el tamaño de un archivo y cambios en las `LastWrite` tiempo.</span><span class="sxs-lookup"><span data-stu-id="02403-369">For example, you can watch for changes in size of a file, and for changes in the `LastWrite` time.</span></span> <span data-ttu-id="02403-370">Esto provoca un evento cada vez que hay un cambio de tamaño de archivo o una carpeta o un cambio en el `LastWrite` tiempo del archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="02403-370">This raises an event anytime there is a change in file or folder size, or a change in the `LastWrite` time of the file or folder.</span></span>  
  
 <span data-ttu-id="02403-371">Se trata de una manera de filtrar notificaciones no deseadas.</span><span class="sxs-lookup"><span data-stu-id="02403-371">This is one way to filter out unwanted notifications.</span></span> <span data-ttu-id="02403-372">Para obtener más información sobre cómo filtrar notificaciones no deseadas, vea el <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, y <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="02403-372">For more information on filtering out unwanted notifications, see the <xref:System.IO.FileSystemWatcher.Filter%2A>, <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A>, and <xref:System.IO.FileSystemWatcher.InternalBufferSize%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-373">En el ejemplo siguiente se crea un <xref:System.IO.FileSystemWatcher> para inspeccionar el directorio especificado en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-373">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="02403-374">El componente se establece para inspeccionar los cambios en `LastWrite` y `LastAccess` de tiempo, la creación, eliminación, o cambiar el nombre de archivos de texto en el directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-374">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="02403-375">Si se cambia, se crea o se elimina un archivo, la ruta de acceso al archivo se imprime en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-375">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="02403-376">Cuando se cambia el nombre de un archivo, las rutas de acceso antiguos y nuevos imprimen en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-376">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="02403-377">Use la <xref:System.Diagnostics> y <xref:System.IO> espacios de nombres para este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="02403-377">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02403-378">El valor no es una combinación OR bit a bit de los valores <see cref="T:System.IO.NotifyFilters" />.</span><span class="sxs-lookup"><span data-stu-id="02403-378">The value is not a valid bitwise OR combination of the <see cref="T:System.IO.NotifyFilters" /> values.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException"><span data-ttu-id="02403-379">El valor que se está estableciendo no es válido.</span><span class="sxs-lookup"><span data-stu-id="02403-379">The value that is being set is not valid.</span></span></exception>
        <altmember cref="T:System.IO.NotifyFilters" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
        <altmember cref="P:System.IO.FileSystemWatcher.IncludeSubdirectories" />
        <altmember cref="P:System.IO.FileSystemWatcher.InternalBufferSize" />
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected void OnChanged (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnChanged(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnChanged (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnChanged(System::IO::FileSystemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="02403-380">Objeto <see cref="T:System.IO.FileSystemEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="02403-380">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="02403-381">Genera el evento <see cref="E:System.IO.FileSystemWatcher.Changed" />.</span><span class="sxs-lookup"><span data-stu-id="02403-381">Raises the <see cref="E:System.IO.FileSystemWatcher.Changed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-382"><xref:System.IO.FileSystemWatcher.OnChanged%2A> se llama cuando se realizan cambios en el tamaño, los atributos del sistema, última hora de escritura, hora del último acceso o permisos de seguridad de un archivo o directorio en el directorio que se está supervisando.</span><span class="sxs-lookup"><span data-stu-id="02403-382"><xref:System.IO.FileSystemWatcher.OnChanged%2A> is called when changes are made to the size, system attributes, last write time, last access time, or security permissions of a file or directory in the directory being monitored.</span></span>  
  
 <span data-ttu-id="02403-383">Use la <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> propiedad para restringir el número de eventos genera cuando el <xref:System.IO.FileSystemWatcher.Changed> evento está controlado.</span><span class="sxs-lookup"><span data-stu-id="02403-383">Use the <xref:System.IO.FileSystemWatcher.NotifyFilter%2A> property to restrict the number of events raised when the <xref:System.IO.FileSystemWatcher.Changed> event is handled.</span></span>  
  
 <span data-ttu-id="02403-384">El <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento se desencadena en cuanto se crea un archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-384">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="02403-385">Si un archivo se va a copiar o se transfiere a un directorio inspeccionado, la <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento se activará inmediatamente, seguido de uno o varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-385">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="02403-386">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="02403-386">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="02403-387">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="02403-387">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02403-388">Al reemplazar <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="02403-388">When overriding <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnChanged(System.IO.FileSystemEventArgs)" /> method.</span></span></para>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Changed" />
        <altmember cref="P:System.IO.FileSystemWatcher.NotifyFilter" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnCreated">
      <MemberSignature Language="C#" Value="protected void OnCreated (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnCreated(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnCreated (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnCreated(System::IO::FileSystemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="02403-389">Objeto <see cref="T:System.IO.FileSystemEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="02403-389">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="02403-390">Genera el evento <see cref="E:System.IO.FileSystemWatcher.Created" />.</span><span class="sxs-lookup"><span data-stu-id="02403-390">Raises the <see cref="E:System.IO.FileSystemWatcher.Created" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-391"><xref:System.IO.FileSystemWatcher.OnCreated%2A> se llama cuando se crea un archivo o directorio en el directorio que se está supervisando.</span><span class="sxs-lookup"><span data-stu-id="02403-391"><xref:System.IO.FileSystemWatcher.OnCreated%2A> is called when a file or directory is created in the directory being monitored.</span></span>  
  
 <span data-ttu-id="02403-392">Algunas repeticiones habituales, como copiar o mover un archivo o directorio, no se corresponden directamente a un evento, pero estas repeticiones hacen que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-392">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="02403-393">Al copiar un archivo o directorio, el sistema genera un <xref:System.IO.FileSystemWatcher.Created> eventos en el directorio a la que se copió el archivo, si se está inspeccionando ese directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-393">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="02403-394">Si el directorio desde el que se copió lo estuviera inspeccionando otra instancia de <xref:System.IO.FileSystemWatcher>, no se provocaría ningún evento.</span><span class="sxs-lookup"><span data-stu-id="02403-394">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="02403-395">Por ejemplo, cree dos instancias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-395">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="02403-396">FileSystemWatcher1 está establecido para inspeccionar "C:\My Documents" y FileSystemWatcher2 está establecido para inspeccionar "C:\Your Documents".</span><span class="sxs-lookup"><span data-stu-id="02403-396">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="02403-397">Si se copia un archivo desde "Mis documentos" y se pega en "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> evento se activará en FileSystemWatcher2, pero se genera ningún evento para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-397">If you copy a file from "My Documents" and paste it into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised in FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="02403-398">A diferencia de copiar, mover un archivo o directorio genera dos eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-398">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="02403-399">En el ejemplo anterior, si mueve un archivo desde "My Documents" hasta "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> se provocaría el evento en FileSystemWatcher2 y un <xref:System.IO.FileSystemWatcher.Deleted> se provocaría el evento en FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-399">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised in FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised in FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="02403-400">El <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento se desencadena en cuanto se crea un archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-400">The <xref:System.IO.FileSystemWatcher.OnCreated%2A> event is raised as soon as a file is created.</span></span> <span data-ttu-id="02403-401">Si un archivo se va a copiar o se transfiere a un directorio inspeccionado, la <xref:System.IO.FileSystemWatcher.OnCreated%2A> evento se activará inmediatamente, seguido de uno o varios <xref:System.IO.FileSystemWatcher.OnChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-401">If a file is being copied or transferred into a watched directory, the <xref:System.IO.FileSystemWatcher.OnCreated%2A> event will be raised immediately, followed by one or more <xref:System.IO.FileSystemWatcher.OnChanged%2A> events.</span></span>  
  
 <span data-ttu-id="02403-402">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="02403-402">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="02403-403">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="02403-403">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02403-404">Al reemplazar <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="02403-404">When overriding <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnCreated(System.IO.FileSystemEventArgs)" /> method.</span></span></para>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected void OnDeleted (System.IO.FileSystemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnDeleted(class System.IO.FileSystemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnDeleted (e As FileSystemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnDeleted(System::IO::FileSystemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.FileSystemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="02403-405">Objeto <see cref="T:System.IO.FileSystemEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="02403-405">A <see cref="T:System.IO.FileSystemEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="02403-406">Genera el evento <see cref="E:System.IO.FileSystemWatcher.Deleted" />.</span><span class="sxs-lookup"><span data-stu-id="02403-406">Raises the <see cref="E:System.IO.FileSystemWatcher.Deleted" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-407"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> se llama cuando se elimina un archivo o directorio en el directorio que se está supervisando.</span><span class="sxs-lookup"><span data-stu-id="02403-407"><xref:System.IO.FileSystemWatcher.OnDeleted%2A> is called when a file or directory, within the directory being monitored, is deleted.</span></span>  
  
 <span data-ttu-id="02403-408">Algunas repeticiones habituales, como copiar o mover un archivo o directorio, no se corresponden directamente a un evento, pero estas repeticiones hacen que se generen eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-408">Some common occurrences, such as copying or moving a file or directory, do not correspond directly to an event, but these occurrences do cause events to be raised.</span></span> <span data-ttu-id="02403-409">Al copiar un archivo o directorio, el sistema genera un <xref:System.IO.FileSystemWatcher.Created> eventos en el directorio a la que se copió el archivo, si se está inspeccionando ese directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-409">When you copy a file or directory, the system raises a <xref:System.IO.FileSystemWatcher.Created> event in the directory to which the file was copied, if that directory is being watched.</span></span> <span data-ttu-id="02403-410">Si el directorio desde el que se copió lo estuviera inspeccionando otra instancia de <xref:System.IO.FileSystemWatcher>, no se provocaría ningún evento.</span><span class="sxs-lookup"><span data-stu-id="02403-410">If the directory from which you copied was being watched by another instance of <xref:System.IO.FileSystemWatcher>, no event would be raised.</span></span> <span data-ttu-id="02403-411">Por ejemplo, cree dos instancias de <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-411">For example, you create two instances of <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="02403-412">FileSystemWatcher1 está establecido para inspeccionar "C:\My Documents" y FileSystemWatcher2 está establecido para inspeccionar "C:\Your Documents".</span><span class="sxs-lookup"><span data-stu-id="02403-412">FileSystemWatcher1 is set to watch "C:\My Documents", and FileSystemWatcher2 is set to watch "C:\Your Documents".</span></span> <span data-ttu-id="02403-413">Si copia un archivo de "Mis documentos" en "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> se generará el evento FileSystemWatcher2, pero se genera ningún evento para FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-413">If you copy a file from "My Documents" into "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event will be raised by FileSystemWatcher2, but no event is raised for FileSystemWatcher1.</span></span> <span data-ttu-id="02403-414">A diferencia de copiar, mover un archivo o directorio genera dos eventos.</span><span class="sxs-lookup"><span data-stu-id="02403-414">Unlike copying, moving a file or directory raises two events.</span></span> <span data-ttu-id="02403-415">En el ejemplo anterior, si mueve un archivo desde "My Documents" hasta "Your Documents", un <xref:System.IO.FileSystemWatcher.Created> se provocaría el evento FileSystemWatcher2 y un <xref:System.IO.FileSystemWatcher.Deleted> se provocaría el evento FileSystemWatcher1.</span><span class="sxs-lookup"><span data-stu-id="02403-415">From the previous example, if you moved a file from "My Documents" to "Your Documents", a <xref:System.IO.FileSystemWatcher.Created> event would be raised by FileSystemWatcher2 and a <xref:System.IO.FileSystemWatcher.Deleted> event would be raised by FileSystemWatcher1.</span></span>  
  
 <span data-ttu-id="02403-416">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="02403-416">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="02403-417">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="02403-417">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02403-418">Al reemplazar <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="02403-418">When overriding <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnDeleted(System.IO.FileSystemEventArgs)" /> method.</span></span></para>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Created" />
        <altmember cref="E:System.IO.FileSystemWatcher.Deleted" />
        <altmember cref="T:System.IO.FileSystemEventArgs" />
        <altmember cref="T:System.IO.FileSystemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="protected void OnError (System.IO.ErrorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnError(class System.IO.ErrorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnError (e As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnError(System::IO::ErrorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="02403-419">Objeto <see cref="T:System.IO.ErrorEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="02403-419">An <see cref="T:System.IO.ErrorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="02403-420">Genera el evento <see cref="E:System.IO.FileSystemWatcher.Error" />.</span><span class="sxs-lookup"><span data-stu-id="02403-420">Raises the <see cref="E:System.IO.FileSystemWatcher.Error" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-421"><xref:System.IO.FileSystemWatcher.OnError%2A> se llama cuando se produce un error.</span><span class="sxs-lookup"><span data-stu-id="02403-421"><xref:System.IO.FileSystemWatcher.OnError%2A> is called when an error occurs.</span></span>  
  
 <span data-ttu-id="02403-422">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="02403-422">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="02403-423">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="02403-423">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02403-424">Al reemplazar <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="02403-424">When overriding <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnError(System.IO.ErrorEventArgs)" /> method.</span></span></para>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Error" />
        <altmember cref="T:System.IO.ErrorEventArgs" />
        <altmember cref="T:System.IO.ErrorEventHandler" />
        <altmember cref="T:System.IO.InternalBufferOverflowException" />
      </Docs>
    </Member>
    <Member MemberName="OnRenamed">
      <MemberSignature Language="C#" Value="protected void OnRenamed (System.IO.RenamedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnRenamed(class System.IO.RenamedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnRenamed (e As RenamedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnRenamed(System::IO::RenamedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IO.RenamedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="02403-425">Objeto <see cref="T:System.IO.RenamedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="02403-425">A <see cref="T:System.IO.RenamedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="02403-426">Genera el evento <see cref="E:System.IO.FileSystemWatcher.Renamed" />.</span><span class="sxs-lookup"><span data-stu-id="02403-426">Raises the <see cref="E:System.IO.FileSystemWatcher.Renamed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-427"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> se llama cuando se cambia el nombre de un archivo o directorio en el directorio que se está supervisando.</span><span class="sxs-lookup"><span data-stu-id="02403-427"><xref:System.IO.FileSystemWatcher.OnRenamed%2A> is called when a file or directory within the directory being monitored is renamed.</span></span> <span data-ttu-id="02403-428">Su <xref:System.IO.RenamedEventArgs> argumento contiene información sobre la operación de cambio de nombre, como el tipo de cambio, la ruta de acceso antiguo y nuevo y el nombre antiguo y nuevo.</span><span class="sxs-lookup"><span data-stu-id="02403-428">Its <xref:System.IO.RenamedEventArgs> argument contains information about the renaming operation, such as the type of change, the old and new path, and the old and new name.</span></span> <span data-ttu-id="02403-429">Tenga en cuenta que su <xref:System.IO.FileSystemEventArgs.Name> propiedad puede ser null para cambiar el nombre de eventos si el <xref:System.IO.FileSystemWatcher> no obtener encontrar coincidencias con nombre antiguos y nuevos eventos del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="02403-429">Note that its <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span> 
  
 <span data-ttu-id="02403-430">Cuando se genera un evento, se invoca el controlador de eventos a través de un delegado.</span><span class="sxs-lookup"><span data-stu-id="02403-430">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="02403-431">Para obtener más información, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="02403-431">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="02403-432">Al reemplazar <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> en una clase derivada, asegúrese de llamar a la clase base <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> método.</span><span class="sxs-lookup"><span data-stu-id="02403-432">When overriding <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" /> method.</span></span></para>
        </block>
        <altmember cref="E:System.IO.FileSystemWatcher.Renamed" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Diagnostics.Design.FSWPathEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RecommendedAsConfigurable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The directory to monitor")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-433">Obtiene o establece la ruta de acceso del directorio que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="02403-433">Gets or sets the path of the directory to watch.</span></span></summary>
        <value><span data-ttu-id="02403-434">La ruta de acceso que se va a supervisar.</span><span class="sxs-lookup"><span data-stu-id="02403-434">The path to monitor.</span></span> <span data-ttu-id="02403-435">El valor predeterminado es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="02403-435">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-436">Se trata de una ruta de acceso completa a un directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-436">This is a fully qualified path to a directory.</span></span> <span data-ttu-id="02403-437">Si el <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> propiedad es `true`, este directorio es la raíz en el que el sistema inspecciona los cambios; en caso contrario, es el único directorio inspeccionado.</span><span class="sxs-lookup"><span data-stu-id="02403-437">If the <xref:System.IO.FileSystemWatcher.IncludeSubdirectories%2A> property is `true`, this directory is the root at which the system watches for changes; otherwise it is the only directory watched.</span></span> <span data-ttu-id="02403-438">Para inspeccionar un archivo específico, establezca la <xref:System.IO.FileSystemWatcher.Path%2A> propiedad en el directorio completo, correcto y el <xref:System.IO.FileSystemWatcher.Filter%2A> propiedad con el nombre de archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-438">To watch a specific file, set the <xref:System.IO.FileSystemWatcher.Path%2A> property to the fully qualified, correct directory, and the <xref:System.IO.FileSystemWatcher.Filter%2A> property to the file name.</span></span>  
  
 <span data-ttu-id="02403-439">El <xref:System.IO.FileSystemWatcher.Path%2A> propiedad es compatible con las rutas de acceso de convención de nomenclatura universal (UNC, Universal Naming Convention).</span><span class="sxs-lookup"><span data-stu-id="02403-439">The <xref:System.IO.FileSystemWatcher.Path%2A> property supports Universal Naming Convention (UNC) paths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-440">Esta propiedad debe establecerse antes de que el componente puede ver los cambios.</span><span class="sxs-lookup"><span data-stu-id="02403-440">This property must be set before the component can watch for changes.</span></span>  
  
 <span data-ttu-id="02403-441">Cuando se cambia el nombre de un directorio, el <xref:System.IO.FileSystemWatcher> asocia de nuevo automáticamente al elemento cuyo nombre ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="02403-441">When a directory is renamed, the <xref:System.IO.FileSystemWatcher> automatically reattaches itself to the newly renamed item.</span></span> <span data-ttu-id="02403-442">Por ejemplo, si establece la <xref:System.IO.FileSystemWatcher.Path%2A> propiedad en "C:\My Documents" y, a continuación, cambie manualmente el nombre del directorio a "C:\Your Documents", el componente continúa escuchando notificaciones de cambio en el directorio cuyo nombre ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="02403-442">For example, if you set the <xref:System.IO.FileSystemWatcher.Path%2A> property to "C:\My Documents" and then manually rename the directory to "C:\Your Documents", the component continues listening for change notifications on the newly renamed directory.</span></span> <span data-ttu-id="02403-443">Sin embargo, cuando se le solicite el <xref:System.IO.FileSystemWatcher.Path%2A> propiedad, contiene la ruta de acceso anterior.</span><span class="sxs-lookup"><span data-stu-id="02403-443">However, when you ask for the <xref:System.IO.FileSystemWatcher.Path%2A> property, it contains the old path.</span></span> <span data-ttu-id="02403-444">Esto sucede porque el componente determina qué directorio inspecciona según el identificador, en lugar de con el nombre del directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-444">This happens because the component determines what directory watches based on the handle, rather than the name of the directory.</span></span> <span data-ttu-id="02403-445">Cambiar el nombre no afecta al identificador.</span><span class="sxs-lookup"><span data-stu-id="02403-445">Renaming does not affect the handle.</span></span> <span data-ttu-id="02403-446">Por lo tanto, si se destruye el componente y, a continuación, volver a crear sin actualizar la <xref:System.IO.FileSystemWatcher.Path%2A> propiedad, se producirá un error en la aplicación porque el directorio ya no existe.</span><span class="sxs-lookup"><span data-stu-id="02403-446">So, if you destroy the component, and then recreate it without updating the <xref:System.IO.FileSystemWatcher.Path%2A> property, your application will fail because the directory no longer exists.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-447">En el ejemplo siguiente se crea un <xref:System.IO.FileSystemWatcher> para inspeccionar el directorio especificado en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="02403-447">The following example creates a <xref:System.IO.FileSystemWatcher> to watch the directory specified at run time.</span></span> <span data-ttu-id="02403-448">El componente se establece para inspeccionar los cambios en `LastWrite` y `LastAccess` de tiempo, la creación, eliminación, o cambiar el nombre de archivos de texto en el directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-448">The component is set to watch for changes in `LastWrite` and `LastAccess` time, the creation, deletion, or renaming of text files in the directory.</span></span> <span data-ttu-id="02403-449">Si se cambia, se crea o se elimina un archivo, la ruta de acceso al archivo se imprime en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-449">If a file is changed, created, or deleted, the path to the file prints to the console.</span></span> <span data-ttu-id="02403-450">Cuando se cambia el nombre de un archivo, las rutas de acceso antiguos y nuevos imprimen en la consola.</span><span class="sxs-lookup"><span data-stu-id="02403-450">When a file is renamed, the old and new paths print to the console.</span></span>  
  
 <span data-ttu-id="02403-451">Use la <xref:System.Diagnostics> y <xref:System.IO> espacios de nombres para este ejemplo.</span><span class="sxs-lookup"><span data-stu-id="02403-451">Use the <xref:System.Diagnostics> and <xref:System.IO> namespaces for this example.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="02403-452">La ruta de acceso especificada no existe o no se encuentra.</span><span class="sxs-lookup"><span data-stu-id="02403-452">The specified path does not exist or could not be found.</span></span>  
  
 <span data-ttu-id="02403-453">O bien</span><span class="sxs-lookup"><span data-stu-id="02403-453">-or-</span></span>  
  
 <span data-ttu-id="02403-454">La ruta de acceso especificada contiene caracteres comodín.</span><span class="sxs-lookup"><span data-stu-id="02403-454">The specified path contains wildcard characters.</span></span>  
  
 <span data-ttu-id="02403-455">O bien</span><span class="sxs-lookup"><span data-stu-id="02403-455">-or-</span></span>  
  
 <span data-ttu-id="02403-456">La ruta de acceso especificada contiene caracteres de ruta de acceso no válidos.</span><span class="sxs-lookup"><span data-stu-id="02403-456">The specified path contains invalid path characters.</span></span></exception>
        <altmember cref="T:System.IO.FileSystemWatcher" />
        <altmember cref="P:System.IO.FileSystemWatcher.Filter" />
      </Docs>
    </Member>
    <Member MemberName="Renamed">
      <MemberSignature Language="C#" Value="public event System.IO.RenamedEventHandler Renamed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.IO.RenamedEventHandler Renamed" />
      <MemberSignature Language="DocId" Value="E:System.IO.FileSystemWatcher.Renamed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Renamed As RenamedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::IO::RenamedEventHandler ^ Renamed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.IO.IODescription("Occurs when a file/directory rename matches the filter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.RenamedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-457">Se produce cuando se cambia de nombre un archivo o un directorio de la ruta de acceso <see cref="P:System.IO.FileSystemWatcher.Path" /> especificada.</span><span class="sxs-lookup"><span data-stu-id="02403-457">Occurs when a file or directory in the specified <see cref="P:System.IO.FileSystemWatcher.Path" /> is renamed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-458">El `Renamed` evento es un <xref:System.IO.RenamedEventHandler> delegado que tiene la siguiente firma:</span><span class="sxs-lookup"><span data-stu-id="02403-458">The `Renamed` event is an <xref:System.IO.RenamedEventHandler> delegate that has the following signature:</span></span>

 ```csharp
public delegate void Renamed(object sender, RenamedEventArgs e);
 ```
 ```vb
Public Delegate Sub RenamedEventHandler(sender As Object, e As RenamedEventArgs)
 ```
 <span data-ttu-id="02403-459">El <xref:System.IO.RenamedEventArgs> proporciona información sobre la operación de cambio de nombre, como el tipo de cambiar el nombre de objeto (el <xref:System.IO.FileSystemEventArgs.ChangeType> propiedad), el nombre antiguo y nuevo y la ruta de acceso antiguo y nuevo.</span><span class="sxs-lookup"><span data-stu-id="02403-459">The <xref:System.IO.RenamedEventArgs> object provides information about the renaming operation, such as the type of the rename (the <xref:System.IO.FileSystemEventArgs.ChangeType> property), the old and new name, and the old and new path.</span></span> <span data-ttu-id="02403-460">Tenga en cuenta que la <xref:System.IO.FileSystemEventArgs.Name> propiedad puede ser null para cambiar el nombre de eventos si el <xref:System.IO.FileSystemWatcher> no obtener encontrar coincidencias con nombre antiguos y nuevos eventos del sistema operativo.</span><span class="sxs-lookup"><span data-stu-id="02403-460">Note that the <xref:System.IO.FileSystemEventArgs.Name> property may be null for renamed events if the <xref:System.IO.FileSystemWatcher> does not get matching old and new name events from the operating system.</span></span>

 <span data-ttu-id="02403-461">Cambiar el nombre del directorio que está inspeccionando no generará una notificación.</span><span class="sxs-lookup"><span data-stu-id="02403-461">Renaming the directory you are watching will not raise a notification.</span></span> <span data-ttu-id="02403-462">Solo se producen notificaciones para las entradas en el directorio que está inspeccionando.</span><span class="sxs-lookup"><span data-stu-id="02403-462">Notifications are only raised for entries inside the directory you are watching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="02403-463">En el ejemplo siguiente se usa el <xref:System.IO.FileSystemWatcher.Renamed> eventos para mostrar la ruta de acceso de archivo en la consola cuando se cambia el nombre del archivo inspeccionado.</span><span class="sxs-lookup"><span data-stu-id="02403-463">The following example uses the <xref:System.IO.FileSystemWatcher.Renamed> event to display the file path to the console whenever the watched file is renamed.</span></span>  
  
 [!code-cpp[Classic NotifyFilters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic NotifyFilters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic NotifyFilters Example/CS/source.cs#1)]
 [!code-vb[Classic NotifyFilters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic NotifyFilters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IO.FileSystemWatcher.OnRenamed(System.IO.RenamedEventArgs)" />
        <altmember cref="P:System.IO.FileSystemWatcher.SynchronizingObject" />
        <altmember cref="P:System.IO.FileSystemWatcher.Path" />
        <altmember cref="T:System.IO.RenamedEventArgs" />
        <altmember cref="T:System.IO.RenamedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.Site" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-464">Obtiene o establece una interfaz <see cref="T:System.ComponentModel.ISite" /> para el objeto <see cref="T:System.IO.FileSystemWatcher" />.</span><span class="sxs-lookup"><span data-stu-id="02403-464">Gets or sets an <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span></span></summary>
        <value><span data-ttu-id="02403-465">Estructura <see cref="T:System.ComponentModel.ISite" /> para la colección <see cref="T:System.IO.FileSystemWatcher" />.</span><span class="sxs-lookup"><span data-stu-id="02403-465">An <see cref="T:System.ComponentModel.ISite" /> for the <see cref="T:System.IO.FileSystemWatcher" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-466">Sitios de enlazan un <xref:System.ComponentModel.Component> a una <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> y habilitar la comunicación entre ellos, así como proporcionar una manera para que el contenedor administrar sus componentes.</span><span class="sxs-lookup"><span data-stu-id="02403-466">Sites bind a <xref:System.ComponentModel.Component> to a <xref:System.ComponentModel.Design.IDesignerHost.Container%2A> and enable communication between them, as well as provide a way for the container to manage its components.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SynchronizingObject">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISynchronizeInvoke SynchronizingObject { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISynchronizeInvoke SynchronizingObject" />
      <MemberSignature Language="DocId" Value="P:System.IO.FileSystemWatcher.SynchronizingObject" />
      <MemberSignature Language="VB.NET" Value="Public Property SynchronizingObject As ISynchronizeInvoke" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISynchronizeInvoke ^ SynchronizingObject { System::ComponentModel::ISynchronizeInvoke ^ get(); void set(System::ComponentModel::ISynchronizeInvoke ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.IO.IODescription("The object used to marshal the event handler calls resulting from a directory change")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISynchronizeInvoke</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="02403-467">Obtiene o establece el objeto utilizado para serializar de las llamadas del controlador de eventos emitidas como consecuencia de un cambio de directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-467">Gets or sets the object used to marshal the event handler calls issued as a result of a directory change.</span></span></summary>
        <value><span data-ttu-id="02403-468">Objeto <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> que representa el objeto utilizado para calcular las referencias de las llamadas del controlador de eventos emitidas como consecuencia de un cambio de directorio.</span><span class="sxs-lookup"><span data-stu-id="02403-468">The <see cref="T:System.ComponentModel.ISynchronizeInvoke" /> that represents the object used to marshal the event handler calls issued as a result of a directory change.</span></span> <span data-ttu-id="02403-469">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="02403-469">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-470">Cuando <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> es `null`, métodos que controlan la <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, y <xref:System.IO.FileSystemWatcher.Renamed> eventos se llaman en un subproceso del grupo de subprocesos del sistema.</span><span class="sxs-lookup"><span data-stu-id="02403-470">When <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> is `null`, methods handling the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are called on a thread from the system thread pool.</span></span> <span data-ttu-id="02403-471">Para obtener más información sobre grupos de subprocesos del sistema, consulte <xref:System.Threading.ThreadPool>.</span><span class="sxs-lookup"><span data-stu-id="02403-471">For more information on system thread pools, see <xref:System.Threading.ThreadPool>.</span></span>  
  
 <span data-ttu-id="02403-472">Cuando el <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, y <xref:System.IO.FileSystemWatcher.Renamed> eventos se controlan mediante un componente visual de formularios Windows Forms, como un <xref:System.Windows.Forms.Button>, acceso al componente en el grupo de subprocesos de sistema podrían no funcionar, o puede producir una excepción.</span><span class="sxs-lookup"><span data-stu-id="02403-472">When the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events are handled by a visual Windows Forms component, such as a <xref:System.Windows.Forms.Button>, accessing the component through the system thread pool might not work, or may result in an exception.</span></span> <span data-ttu-id="02403-473">Evitarlo estableciendo <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> a un componente de Windows Forms, lo que hace que los métodos que controlan la <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, y <xref:System.IO.FileSystemWatcher.Renamed> eventos que se llame en el mismo subproceso en el que se creó el componente.</span><span class="sxs-lookup"><span data-stu-id="02403-473">Avoid this by setting <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> to a Windows Forms component, which causes the methods that handle the <xref:System.IO.FileSystemWatcher.Changed>, <xref:System.IO.FileSystemWatcher.Created>, <xref:System.IO.FileSystemWatcher.Deleted>, and <xref:System.IO.FileSystemWatcher.Renamed> events to be called on the same thread on which the component was created.</span></span>  
  
 <span data-ttu-id="02403-474">Si el <xref:System.IO.FileSystemWatcher> se utiliza dentro de [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] en un diseñador de formularios Windows Forms, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> se establece automáticamente en el control que contiene el <xref:System.IO.FileSystemWatcher>.</span><span class="sxs-lookup"><span data-stu-id="02403-474">If the <xref:System.IO.FileSystemWatcher> is used inside [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)] in a Windows Forms designer, <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> automatically sets to the control that contains the <xref:System.IO.FileSystemWatcher>.</span></span> <span data-ttu-id="02403-475">Por ejemplo, si coloca un <xref:System.IO.FileSystemWatcher> en un diseñador de Form1 (que hereda de <xref:System.Windows.Forms.Form>) la <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> propiedad de <xref:System.IO.FileSystemWatcher> se establece en la instancia de Form1.</span><span class="sxs-lookup"><span data-stu-id="02403-475">For example, if you place a <xref:System.IO.FileSystemWatcher> on a designer for Form1 (which inherits from <xref:System.Windows.Forms.Form>) the <xref:System.IO.FileSystemWatcher.SynchronizingObject%2A> property of <xref:System.IO.FileSystemWatcher> is set to the instance of Form1.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ISynchronizeInvoke" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForChanged">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="02403-476">Método sincrónico que devuelve una estructura que contiene información específica acerca del cambio que se ha producido.</span><span class="sxs-lookup"><span data-stu-id="02403-476">A synchronous method that returns a structure that contains specific information on the change that occurred.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
      </Parameters>
      <Docs>
        <param name="changeType"><span data-ttu-id="02403-477">Objeto <see cref="T:System.IO.WatcherChangeTypes" /> que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="02403-477">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span></span></param>
        <summary><span data-ttu-id="02403-478">Un método sincrónico que devuelve una estructura que contiene información específica acerca del cambio que se ha producido, dado el tipo de cambio que desea supervisar.</span><span class="sxs-lookup"><span data-stu-id="02403-478">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor.</span></span></summary>
        <returns><span data-ttu-id="02403-479">Un objeto <see cref="T:System.IO.WaitForChangedResult" /> que contiene información específica acerca del cambio que se ha producido.</span><span class="sxs-lookup"><span data-stu-id="02403-479">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-480">Este método espera indefinidamente hasta que el primer cambio se produce y, a continuación, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="02403-480">This method waits indefinitely until the first change occurs and then returns.</span></span> <span data-ttu-id="02403-481">Esto es lo mismo que usar <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> con el `timeout` parámetro establecido en -1.</span><span class="sxs-lookup"><span data-stu-id="02403-481">This is the same as using <xref:System.IO.FileSystemWatcher.WaitForChanged%2A> with the `timeout` parameter set to -1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-482">Este método permite que un controlador de eventos que se debe invocar para responder a archivo cambios, aunque la <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> propiedad está establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="02403-482">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="02403-483">En algunos sistemas, <xref:System.IO.FileSystemWatcher> informa de los cambios a los archivos con el formato de nombre corto de 8.3 archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-483">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="02403-484">Por ejemplo, un cambio en "longfilename.LongExtension", éste podría aparecer como "LongFi ~. LON".</span><span class="sxs-lookup"><span data-stu-id="02403-484">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
    <Member MemberName="WaitForChanged">
      <MemberSignature Language="C#" Value="public System.IO.WaitForChangedResult WaitForChanged (System.IO.WatcherChangeTypes changeType, int timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.IO.WaitForChangedResult WaitForChanged(valuetype System.IO.WatcherChangeTypes changeType, int32 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.FileSystemWatcher.WaitForChanged(System.IO.WatcherChangeTypes,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForChanged (changeType As WatcherChangeTypes, timeout As Integer) As WaitForChangedResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::WaitForChangedResult WaitForChanged(System::IO::WatcherChangeTypes changeType, int timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.Watcher</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.WaitForChangedResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changeType" Type="System.IO.WatcherChangeTypes" />
        <Parameter Name="timeout" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="changeType"><span data-ttu-id="02403-485">Objeto <see cref="T:System.IO.WatcherChangeTypes" /> que se va a inspeccionar.</span><span class="sxs-lookup"><span data-stu-id="02403-485">The <see cref="T:System.IO.WatcherChangeTypes" /> to watch for.</span></span></param>
        <param name="timeout"><span data-ttu-id="02403-486">El tiempo (en milisegundos) que se va a esperar antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="02403-486">The time (in milliseconds) to wait before timing out.</span></span></param>
        <summary><span data-ttu-id="02403-487">Método sincrónico que devuelve una estructura que contiene información específica acerca del cambio que se ha producido, dado el tipo de cambio que desea supervisar y el tiempo (en milisegundos) que se va a esperar antes de que se agote el tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="02403-487">A synchronous method that returns a structure that contains specific information on the change that occurred, given the type of change you want to monitor and the time (in milliseconds) to wait before timing out.</span></span></summary>
        <returns><span data-ttu-id="02403-488">Un objeto <see cref="T:System.IO.WaitForChangedResult" /> que contiene información específica acerca del cambio que se ha producido.</span><span class="sxs-lookup"><span data-stu-id="02403-488">A <see cref="T:System.IO.WaitForChangedResult" /> that contains specific information on the change that occurred.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="02403-489">Este método espera hasta que se produce un cambio o ha agotado. Un valor de -1 para el `timeout` significa esperar indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="02403-489">This method waits until a change occurs or it has timed out. A value of -1 for the `timeout` parameter means wait indefinitely.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="02403-490">Este método permite que un controlador de eventos que se debe invocar para responder a archivo cambios, aunque la <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> propiedad está establecida en `false`.</span><span class="sxs-lookup"><span data-stu-id="02403-490">This method allows an event handler to be invoked to respond to file changes even if the <xref:System.IO.FileSystemWatcher.EnableRaisingEvents%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="02403-491">En algunos sistemas, <xref:System.IO.FileSystemWatcher> informa de los cambios a los archivos con el formato de nombre corto de 8.3 archivo.</span><span class="sxs-lookup"><span data-stu-id="02403-491">In some systems, <xref:System.IO.FileSystemWatcher> reports changes to files using the short 8.3 file name format.</span></span> <span data-ttu-id="02403-492">Por ejemplo, un cambio en "longfilename.LongExtension", éste podría aparecer como "LongFi ~. LON".</span><span class="sxs-lookup"><span data-stu-id="02403-492">For example, a change to  "LongFileName.LongExtension" could be reported as "LongFi~.Lon".</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.WaitForChangedResult" />
      </Docs>
    </Member>
  </Members>
</Type>