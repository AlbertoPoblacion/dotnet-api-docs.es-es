<Type Name="StringWriter" FullName="System.IO.StringWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd5cd841e65a3c466f54e19d78b39f99751daf3d" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37651686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StringWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit StringWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.IO.StringWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class StringWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class StringWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type StringWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6a3f3-101">Implementa <see cref="T:System.IO.TextWriter" /> para escribir información en una cadena.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a3f3-101">Implements a <see cref="T:System.IO.TextWriter" /> for writing information to a string.</span>
      </span>
      <span data-ttu-id="6a3f3-102">La información se almacena en el <see cref="T:System.Text.StringBuilder" /> subyacente.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6a3f3-102">The information is stored in an underlying <see cref="T:System.Text.StringBuilder" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-103"><xref:System.IO.StringWriter> permite escribir en una cadena de forma sincrónica o asincrónica.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-103"><xref:System.IO.StringWriter> enables you to write to a string synchronously or asynchronously.</span></span> <span data-ttu-id="6a3f3-104">Puede escribir un carácter a la vez con el <xref:System.IO.StringWriter.Write%28System.Char%29> o <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> método, una cadena en un momento mediante el <xref:System.IO.StringWriter.Write%28System.String%29> o el <xref:System.IO.StringWriter.WriteAsync%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-104">You can write a character at a time with the <xref:System.IO.StringWriter.Write%28System.Char%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method, a string at a time using the <xref:System.IO.StringWriter.Write%28System.String%29> or the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span> <span data-ttu-id="6a3f3-105">Además, puede escribir un carácter, una matriz de caracteres o una cadena seguida del terminador de línea de forma asincrónica con uno de los <xref:System.IO.StringWriter.WriteLineAsync%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-105">In addition, you can write a character, an array of characters or a string followed by the line terminator asynchronously with one of the <xref:System.IO.StringWriter.WriteLineAsync%2A> methods.</span></span>  
  
[!INCLUDE[note_unnecessary_dispose](~/includes/note-unnecessary-dispose.md)]
  
 <span data-ttu-id="6a3f3-106">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-106">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-107">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-107">To do this...</span></span>|<span data-ttu-id="6a3f3-108">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-108">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-109">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-109">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-110">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-110">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-111">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-111">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-112">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-112">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-113">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-113">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-114">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-114">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-115">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-115">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-116">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-116">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-117">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-117">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-118">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-118">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-119">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-119">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-120">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-120">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-121">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-121">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-122">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-122">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-123">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-123">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-124">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-124">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-125">En el ejemplo de código siguiente se muestra la creación de un párrafo continua desde un grupo de frases a doble espacio y, a continuación, la conversión del párrafo al texto original.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-125">The following code example demonstrates the creation of a continuous paragraph from a group of double-spaced sentences, and then the conversion of the paragraph back to the original text.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#1)]
 [!code-csharp[System.IO.StringReaderWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#1)]
 [!code-vb[System.IO.StringReaderWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.IO.StringReader" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-126">Inicializa una nueva instancia de la clase <see cref="T:System.IO.StringWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-126">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-127">Inicializa una nueva instancia de la clase <see cref="T:System.IO.StringWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-127">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-128">Un nuevo <xref:System.Text.StringBuilder> objeto se crea automáticamente y se asociada a la nueva instancia de la <xref:System.IO.StringWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-128">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span> <span data-ttu-id="6a3f3-129">Puesto que no se especifica un control de formato para este constructor, la nueva instancia se inicializará con <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-129">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6a3f3-130">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-130">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-131">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-131">To do this...</span></span>|<span data-ttu-id="6a3f3-132">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-132">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-133">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-133">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-134">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-134">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-135">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-135">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-136">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-136">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-137">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-137">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-138">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-138">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-139">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-139">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-140">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-140">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-141">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-141">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-142">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-142">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-143">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-143">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-144">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-144">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-145">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-145">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-146">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-146">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-147">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-147">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-148">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-148">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-149">En el ejemplo de código siguiente se muestra cómo construir una cadena con el `StringWriter` clase.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-149">The following code example demonstrates how to construct a string using the `StringWriter` class.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#1)]
 [!code-csharp[System.IO.StringWriter1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#1)]
 [!code-vb[System.IO.StringWriter1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter formatProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="formatProvider">
          <span data-ttu-id="6a3f3-150">Objeto <see cref="T:System.IFormatProvider" /> que controla las operaciones de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-150">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-151">Inicializa una nueva instancia de la clase <see cref="T:System.IO.StringWriter" /> con el control de formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-151">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class with the specified format control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-152">Un nuevo <xref:System.Text.StringBuilder> objeto se crea automáticamente y se asociada a la nueva instancia de la <xref:System.IO.StringWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-152">A new <xref:System.Text.StringBuilder> object is automatically created and associated with the new instance of the <xref:System.IO.StringWriter> class.</span></span>  
  
 <span data-ttu-id="6a3f3-153">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-153">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-154">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-154">To do this...</span></span>|<span data-ttu-id="6a3f3-155">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-155">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-156">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-156">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-157">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-157">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-158">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-158">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-159">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-159">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-160">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-160">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-161">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-161">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-162">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-162">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-163">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-163">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-164">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-164">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-165">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-165">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-166">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-166">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-167">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-167">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-168">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-168">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-169">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-169">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-170">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-170">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-171">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-171">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-172">En el ejemplo de código siguiente se muestra cómo construir una cadena en una referencia cultural concreta.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-172">The following code example demonstrates how to construct a string in a specific culture.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#1)]
 [!code-csharp[System.IO.StringWriter2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#1)]
 [!code-vb[System.IO.StringWriter2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter sb" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="6a3f3-173">Objeto <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-173">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-174">Inicializa una nueva instancia de la clase <see cref="T:System.IO.StringWriter" /> que escribe en el <see cref="T:System.Text.StringBuilder" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-174">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-175">Puesto que no se especifica un control de formato para este constructor, la nueva instancia se inicializará con <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-175">Since a format control is not specified for this constructor, the new instance will be initialized with <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6a3f3-176">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-176">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-177">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-177">To do this...</span></span>|<span data-ttu-id="6a3f3-178">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-178">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-179">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-179">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-180">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-180">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-181">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-181">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-182">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-182">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-183">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-183">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-184">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-184">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-185">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-185">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-186">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-186">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-187">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-187">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-188">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-188">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-189">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-189">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-190">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-190">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-191">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-191">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-192">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-192">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-193">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-193">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-194">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-194">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-195">En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Text.StringBuilder> clase para modificar la cadena subyacente en un cerrado `StringWriter`.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-195">The following code example demonstrates using the <xref:System.Text.StringBuilder> class to modify the underlying string in a closed `StringWriter`.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#1)]
 [!code-csharp[System.IO.StringWriter3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#1)]
 [!code-vb[System.IO.StringWriter3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a3f3-196">
            <paramref name="sb" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-196">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StringWriter (System.Text.StringBuilder sb, IFormatProvider formatProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Text.StringBuilder sb, class System.IFormatProvider formatProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.#ctor(System.Text.StringBuilder,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sb As StringBuilder, formatProvider As IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StringWriter(System::Text::StringBuilder ^ sb, IFormatProvider ^ formatProvider);" />
      <MemberSignature Language="F#" Value="new System.IO.StringWriter : System.Text.StringBuilder * IFormatProvider -&gt; System.IO.StringWriter" Usage="new System.IO.StringWriter (sb, formatProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sb" Type="System.Text.StringBuilder" />
        <Parameter Name="formatProvider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="sb">
          <span data-ttu-id="6a3f3-197">Objeto <see cref="T:System.Text.StringBuilder" /> en el que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-197">The <see cref="T:System.Text.StringBuilder" /> object to write to.</span>
          </span>
        </param>
        <param name="formatProvider">
          <span data-ttu-id="6a3f3-198">Objeto <see cref="T:System.IFormatProvider" /> que controla las operaciones de formato.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-198">An <see cref="T:System.IFormatProvider" /> object that controls formatting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-199">Inicializa una nueva instancia de la clase <see cref="T:System.IO.StringWriter" /> que escribe en el <see cref="T:System.Text.StringBuilder" /> especificado y tiene el control de formato especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-199">Initializes a new instance of the <see cref="T:System.IO.StringWriter" /> class that writes to the specified <see cref="T:System.Text.StringBuilder" /> and has the specified format provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-200">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-200">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-201">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-201">To do this...</span></span>|<span data-ttu-id="6a3f3-202">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-202">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-203">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-203">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-204">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-204">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-205">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-205">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-206">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-206">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-207">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-207">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-208">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-208">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-209">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-209">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-210">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-210">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-211">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-211">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-212">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-212">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-213">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-213">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-214">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-214">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-215">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-215">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-216">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-216">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-217">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-217">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-218">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-218">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a3f3-219">
            <paramref name="sb" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-219">
              <paramref name="sb" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="override this.Close : unit -&gt; unit" Usage="stringWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-220">Cierra el <see cref="T:System.IO.StringWriter" /> actual y la secuencia subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-220">Closes the current <see cref="T:System.IO.StringWriter" /> and the underlying stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-221">Para obtener un ejemplo de creación de un archivo y escribir texto en un archivo, consulte [Cómo: escribir texto en un archivo](~/docs/standard/io/how-to-write-text-to-a-file.md).</span><span class="sxs-lookup"><span data-stu-id="6a3f3-221">For an example of creating a file and writing text to a file, see [How to: Write Text to a File](~/docs/standard/io/how-to-write-text-to-a-file.md).</span></span> <span data-ttu-id="6a3f3-222">Para obtener un ejemplo de cómo leer texto desde un archivo, consulte [Cómo: leer texto desde un archivo](~/docs/standard/io/how-to-read-text-from-a-file.md).</span><span class="sxs-lookup"><span data-stu-id="6a3f3-222">For an example of reading text from a file, see [How to: Read Text from a File](~/docs/standard/io/how-to-read-text-from-a-file.md).</span></span> <span data-ttu-id="6a3f3-223">Para obtener un ejemplo de cómo leer y escribir en un archivo binario, vea [Cómo: leer y escribir en un recién creado archivo de datos](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span><span class="sxs-lookup"><span data-stu-id="6a3f3-223">For an example of reading from and writing to a binary file, see [How to: Read and Write to a Newly Created Data File](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md).</span></span>  
  
 <span data-ttu-id="6a3f3-224">Este método invalida <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-224">This method overrides <xref:System.IO.Stream.Close%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6a3f3-225">Esta implementación de `Close` llamadas la <xref:System.IO.StringWriter.Dispose%2A> método pasando un `true` valor.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-225">This implementation of `Close` calls the <xref:System.IO.StringWriter.Dispose%2A> method passing a `true` value.</span></span>  
  
 <span data-ttu-id="6a3f3-226">Vaciar la secuencia no hará que vacíe su codificador subyacente a menos que se llame explícitamente a `Close`.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-226">Flushing the stream will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="6a3f3-227">Establecer <xref:System.IO.StreamWriter.AutoFlush%2A> a `true` significa que los datos del búfer se vaciará en el flujo, pero no se vaciará el estado del codificador.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-227">Setting <xref:System.IO.StreamWriter.AutoFlush%2A> to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="6a3f3-228">Esto permite al codificador mantener su estado (caracteres parciales) para que puede codificar correctamente el siguiente bloque de caracteres.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-228">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="6a3f3-229">Esta situación afecta a UTF8 y UTF7 donde ciertos caracteres solo se pueden codificar después de que el codificador reciba el carácter o caracteres adyacentes.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-229">This scenario affects UTF8 and UTF7 where certain characters can only be encoded after the encoder receives the adjacent character or characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-230">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-230">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.Text.StringBuilder%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter3#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter3/CPP/strwriter3.cpp#2)]
 [!code-csharp[System.IO.StringWriter3#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter3/CS/strwriter3.cs#2)]
 [!code-vb[System.IO.StringWriter3#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter3/VB/strwriter3.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="stringWriter.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="6a3f3-231">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-231">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-232">Libera los recursos no administrados que usa <see cref="T:System.IO.StringWriter" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-232">Releases the unmanaged resources used by the <see cref="T:System.IO.StringWriter" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-233">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.IO.StringWriter> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-233">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.StringWriter> references.</span></span> <span data-ttu-id="6a3f3-234">Este método invoca al método `Dispose` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-234">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="6a3f3-235">
            <para>
              <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> puede llamarse varias veces por otros objetos. Cuando se reemplaza <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-235">
              <para>
                <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" /> can be called multiple times by other objects. When overriding <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see cref="M:System.IO.StringWriter.Dispose(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.IO.StringWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.IO.StringWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-236">Obtiene el <see cref="T:System.Text.Encoding" /> donde se escribe el resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-236">Gets the <see cref="T:System.Text.Encoding" /> in which the output is written.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6a3f3-237">El <see langword="Encoding" /> donde se escribe el resultado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-237">The <see langword="Encoding" /> in which the output is written.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-238">Esta propiedad es necesaria en algunos escenarios XML donde se debe escribir un encabezado que contiene la codificación utilizada por el `StringWriter`.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-238">This property is necessary for some XML scenarios where a header must be written containing the encoding used by the `StringWriter`.</span></span> <span data-ttu-id="6a3f3-239">Esto permite que el código XML consumir arbitrario `StringWriter` y generar el encabezado XML correcto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-239">This allows the XML code to consume an arbitrary `StringWriter` and generate the correct XML header.</span></span>  
  
 <span data-ttu-id="6a3f3-240">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-240">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-241">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-241">To do this...</span></span>|<span data-ttu-id="6a3f3-242">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-242">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-243">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-243">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-244">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-244">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-245">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-245">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-246">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-246">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-247">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-247">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-248">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-248">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-249">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.IO.StringWriter.%23ctor> constructor.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-249">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#4)]
 [!code-csharp[System.IO.StringWriter1#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#4)]
 [!code-vb[System.IO.StringWriter1#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlushAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task FlushAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task FlushAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.FlushAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FlushAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ FlushAsync();" />
      <MemberSignature Language="F#" Value="override this.FlushAsync : unit -&gt; System.Threading.Tasks.Task" Usage="stringWriter.FlushAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-250">Borra asincrónicamente todos los búferes del sistema de escritura actual y hace que todos los datos almacenados en el búfer se escriban en el dispositivo subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-250">Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-251">Tarea que representa la operación de vaciado asincrónico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-251">A task that represents the asynchronous flush operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStringBuilder">
      <MemberSignature Language="C#" Value="public virtual System.Text.StringBuilder GetStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Text.StringBuilder GetStringBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.GetStringBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStringBuilder () As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Text::StringBuilder ^ GetStringBuilder();" />
      <MemberSignature Language="F#" Value="abstract member GetStringBuilder : unit -&gt; System.Text.StringBuilder&#xA;override this.GetStringBuilder : unit -&gt; System.Text.StringBuilder" Usage="stringWriter.GetStringBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-252">Devuelve el <see cref="T:System.Text.StringBuilder" /> subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-252">Returns the underlying <see cref="T:System.Text.StringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-253">Objeto <see langword="StringBuilder" /> subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-253">The underlying <see langword="StringBuilder" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-254">Puede ser el `StringBuilder` que se pasó al constructor, o la `StringBuilder` que se creó automáticamente.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-254">This is either the `StringBuilder` that was passed to the constructor, or the `StringBuilder` that was automatically created.</span></span>  
  
 <span data-ttu-id="6a3f3-255">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-255">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-256">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-256">To do this...</span></span>|<span data-ttu-id="6a3f3-257">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-257">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-258">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-258">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-259">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-259">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-260">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-260">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-261">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-261">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-262">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-262">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-263">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-263">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-264">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.IO.StringWriter.%23ctor> constructor.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-264">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#3)]
 [!code-csharp[System.IO.StringWriter1#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#3)]
 [!code-vb[System.IO.StringWriter1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="stringWriter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-265">Devuelve una cadena que contiene los caracteres escritos hasta el momento en el <see langword="StringWriter" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-265">Returns a string containing the characters written to the current <see langword="StringWriter" /> so far.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-266">Cadena que contiene los caracteres escritos en el <see langword="StringWriter" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-266">The string containing the characters written to the current <see langword="StringWriter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-267">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-267">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-268">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-268">To do this...</span></span>|<span data-ttu-id="6a3f3-269">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-269">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-270">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-270">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-271">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-271">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-272">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-272">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-273">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-273">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-274">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-274">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-275">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-275">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-276">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-276">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor%28System.IFormatProvider%29> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter2#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter2/CPP/strwriter2.cpp#2)]
 [!code-csharp[System.IO.StringWriter2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter2/CS/strwriter2.cs#2)]
 [!code-vb[System.IO.StringWriter2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter2/VB/strwriter2.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-277">Escribe datos en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-277">Writes data to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="override this.Write : char -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a3f3-278">Carácter que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-278">The character to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-279">Escribe un carácter en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-279">Writes a character to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-280">Este método invalida <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-280">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6a3f3-281">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-281">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-282">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-282">To do this...</span></span>|<span data-ttu-id="6a3f3-283">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-283">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-284">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-284">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-285">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-285">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-286">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-286">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-287">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-287">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-288">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-288">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-289">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-289">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-290">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-290">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-291">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-291">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-292">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-292">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-293">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-293">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-294">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-294">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-295">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-295">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-296">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-296">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-297">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-297">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-298">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-298">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-299">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-299">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-300">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.IO.StringWriter.%23ctor> constructor.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-300">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-301">El sistema de escritura está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-301">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.Write : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Write : string -&gt; unit" Usage="stringWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a3f3-302">Cadena que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-302">The string to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-303">Escribe una cadena en la cadena actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-303">Writes a string to the current string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-304">Este método invalida <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-304">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6a3f3-305">Si la cadena especificada es `null`, se escribe nada.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-305">If the specified string is `null`, nothing is written.</span></span>  
  
 <span data-ttu-id="6a3f3-306">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-306">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-307">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-307">To do this...</span></span>|<span data-ttu-id="6a3f3-308">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-308">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-309">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-309">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-310">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-310">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-311">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-311">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-312">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-312">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-313">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-313">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-314">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-314">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-315">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-315">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-316">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-316">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-317">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-317">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-318">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-318">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-319">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-319">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-320">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-320">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-321">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-321">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-322">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-322">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-323">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-323">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-324">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-324">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-325">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.IO.StringWriter> clase.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-325">This code example is part of a larger example provided for the <xref:System.IO.StringWriter> class.</span></span>  
  
 [!code-cpp[System.IO.StringReaderWriter#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CPP/stringrw.cpp#3)]
 [!code-csharp[System.IO.StringReaderWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringReaderWriter/CS/stringrw.cs#3)]
 [!code-vb[System.IO.StringReaderWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringReaderWriter/VB/stringrw.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-326">El sistema de escritura está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-326">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.Write : char[] * int * int -&gt; unit" Usage="stringWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6a3f3-327">Matriz de caracteres de la que se escriben los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-327">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6a3f3-328">Posición en el búfer donde comenzar la lectura de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-328">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6a3f3-329">Número máximo de caracteres que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-329">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-330">Escribe una submatriz de caracteres en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-330">Writes a subarray of characters to the string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-331">Este método invalida <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-331">This method overrides <xref:System.IO.TextWriter.Write%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6a3f3-332">Este método escribe `count` caracteres de datos a este `StringWriter` desde `buffer`, empezando en la posición `index`.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-332">This method writes `count` characters of data to this `StringWriter` from `buffer`, starting at position `index`.</span></span>  
  
 <span data-ttu-id="6a3f3-333">En la tabla siguiente se muestra ejemplos de otras tareas de E/S típicas o relacionadas.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-333">The following table lists examples of other typical or related I/O tasks.</span></span>  
  
|<span data-ttu-id="6a3f3-334">Para...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-334">To do this...</span></span>|<span data-ttu-id="6a3f3-335">Vea el ejemplo de este tema...</span><span class="sxs-lookup"><span data-stu-id="6a3f3-335">See the example in this topic...</span></span>|  
|-------------------|--------------------------------------|  
|<span data-ttu-id="6a3f3-336">Crear un archivo de texto</span><span class="sxs-lookup"><span data-stu-id="6a3f3-336">Create a text file.</span></span>|[<span data-ttu-id="6a3f3-337">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-337">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-338">Escribir en un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-338">Write to a text file.</span></span>|[<span data-ttu-id="6a3f3-339">Cómo: Escribir texto en un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-339">How to: Write Text to a File</span></span>](~/docs/standard/io/how-to-write-text-to-a-file.md)|  
|<span data-ttu-id="6a3f3-340">Leer de un archivo de texto.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-340">Read from a text file.</span></span>|[<span data-ttu-id="6a3f3-341">Cómo: Leer texto de un archivo</span><span class="sxs-lookup"><span data-stu-id="6a3f3-341">How to: Read Text from a File</span></span>](~/docs/standard/io/how-to-read-text-from-a-file.md)|  
|<span data-ttu-id="6a3f3-342">Anexar texto a un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-342">Append text to a file.</span></span>|[<span data-ttu-id="6a3f3-343">Cómo: Abrir y anexar a un archivo de registro</span><span class="sxs-lookup"><span data-stu-id="6a3f3-343">How to: Open and Append to a Log File</span></span>](~/docs/standard/io/how-to-open-and-append-to-a-log-file.md)<br /><br /> <xref:System.IO.File.AppendText%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.FileInfo.AppendText%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-344">Obtiene el tamaño de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-344">Get the size of a file.</span></span>|<xref:System.IO.FileInfo.Length%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-345">Obtener los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-345">Get the attributes of a file.</span></span>|<xref:System.IO.File.GetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-346">Establezca los atributos de un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-346">Set the attributes of a file.</span></span>|<xref:System.IO.File.SetAttributes%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-347">Determinar si existe un archivo.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-347">Determine if a file exists.</span></span>|<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>|  
|<span data-ttu-id="6a3f3-348">Leer de un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-348">Read from a binary file.</span></span>|[<span data-ttu-id="6a3f3-349">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-349">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
|<span data-ttu-id="6a3f3-350">Escribir en un archivo binario.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-350">Write to a binary file.</span></span>|[<span data-ttu-id="6a3f3-351">Cómo: Leer y escribir en un archivo de datos recién creado</span><span class="sxs-lookup"><span data-stu-id="6a3f3-351">How to: Read and Write to a Newly Created Data File</span></span>](~/docs/standard/io/how-to-read-and-write-to-a-newly-created-data-file.md)|  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-352">Este ejemplo de código forma parte de un ejemplo más extenso proporcionado para el <xref:System.IO.StringWriter.%23ctor> constructor.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-352">This code example is part of a larger example provided for the <xref:System.IO.StringWriter.%23ctor> constructor.</span></span>  
  
 [!code-cpp[System.IO.StringWriter1#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.StringWriter1/CPP/strwriter1.cpp#2)]
 [!code-csharp[System.IO.StringWriter1#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StringWriter1/CS/strwriter1.cs#2)]
 [!code-vb[System.IO.StringWriter1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StringWriter1/VB/strwriter1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a3f3-353">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-353">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a3f3-354">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-354">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a3f3-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-355">(<paramref name="index" /> + <paramref name="count" />)&gt; <paramref name="buffer" />.</span>
          </span>
          <span data-ttu-id="6a3f3-356">
            <see langword="Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-356">
              <see langword="Length" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-357">El sistema de escritura está cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-357">The writer is closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-358">Escribe datos en la cadena de forma asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-358">Writes data to the string asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a3f3-359">Carácter que se va a escribir en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-359">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-360">Escribe un carácter en la cadena de forma asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-360">Writes a character to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-361">Tarea que representa la operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-361">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a3f3-362">En el ejemplo siguiente se muestra cómo escribir caracteres utilizando el <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> método.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-362">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example5.cs#5)]
 [!code-vb[System.IO.StringWriter#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example5.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-363">El escritor de cadena se elimina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-363">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a3f3-364">Una operación de escritura anterior está usando actualmente el escritor de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-364">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a3f3-365">Cadena que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-365">The string to write.</span>
          </span>
          <span data-ttu-id="6a3f3-366">Si <c>value</c> es <see langword="null" />, no se escribe nada en la secuencia de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-366">If <c>value</c> is <see langword="null" />, nothing is written to the text stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-367">Escribe una cadena en la cadena actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-367">Writes a string to the current string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-368">Tarea que representa la operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-368">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a3f3-369">El ejemplo siguiente muestra cómo escribir una cadena mediante el uso de la <xref:System.IO.StringWriter.WriteAsync%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-369">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example4.cs#4)]
 [!code-vb[System.IO.StringWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-370">El escritor de cadena se elimina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-370">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a3f3-371">Una operación de escritura anterior está usando actualmente el escritor de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-371">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6a3f3-372">Matriz de caracteres de la que se escriben los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-372">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6a3f3-373">Posición en el búfer donde comenzar la lectura de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-373">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6a3f3-374">Número máximo de caracteres que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-374">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-375">Escribe una submatriz de caracteres en la cadena de forma asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-375">Writes a subarray of characters to the string asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-376">Tarea que representa la operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-376">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="6a3f3-377">En el ejemplo siguiente se muestra cómo escribir caracteres utilizando el <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-377">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example6.cs#6)]
 [!code-vb[System.IO.StringWriter#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example6.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a3f3-378">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-378">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a3f3-379">La suma de <paramref name="index" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-379">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a3f3-380">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-380">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-381">El escritor de cadena se elimina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-381">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a3f3-382">Una operación de escritura anterior está usando actualmente el escritor de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-382">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(valuetype System.ReadOnlySpan`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLine(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(ReadOnlySpan&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="override this.WriteLine : ReadOnlySpan&lt;char&gt; -&gt; unit" Usage="stringWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLineAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="6a3f3-383">Escribe datos seguidos de un terminador de línea de forma asincrónica en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-383">Writes data followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As Char) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(char value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a3f3-384">Carácter que se va a escribir en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-384">The character to write to the string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-385">Escribe un carácter seguido de un terminador de línea de forma asincrónica en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-385">Writes a character followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-386">Tarea que representa la operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-386">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-387">El terminador de línea se define mediante el <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-387">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-388">En el ejemplo siguiente se muestra cómo escribir caracteres utilizando el <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> método.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-388">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example2.cs#2)]
 [!code-vb[System.IO.StringWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-389">El escritor de cadena se elimina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-389">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a3f3-390">Una operación de escritura anterior está usando actualmente el escritor de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-390">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (value As String) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : string -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="6a3f3-391">Cadena que se va a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-391">The string to write.</span>
          </span>
          <span data-ttu-id="6a3f3-392">Si el valor es <see langword="null" />, solo se escribe el terminador de línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-392">If the value is <see langword="null" />, only a line terminator is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-393">Escribe una cadena seguida de un terminador de línea de forma asincrónica en la cadena actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-393">Writes a string followed by a line terminator asynchronously to the current string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-394">Tarea que representa la operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-394">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-395">El terminador de línea se define mediante el <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-395">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-396">El ejemplo siguiente muestra cómo escribir una cadena mediante el uso de la <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> método.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-396">The following example shows how to write a string by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.String%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example.cs#1)]
 [!code-vb[System.IO.StringWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-397">El escritor de cadena se elimina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-397">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a3f3-398">Una operación de escritura anterior está usando actualmente el escritor de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-398">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (ReadOnlyMemory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(valuetype System.ReadOnlyMemory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.ReadOnlyMemory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : ReadOnlyMemory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteLineAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task WriteLineAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task WriteLineAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.StringWriter.WriteLineAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function WriteLineAsync (buffer As Char(), index As Integer, count As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Threading::Tasks::Task ^ WriteLineAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="override this.WriteLineAsync : char[] * int * int -&gt; System.Threading.Tasks.Task" Usage="stringWriter.WriteLineAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="6a3f3-399">Matriz de caracteres de la que se escriben los datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-399">The character array to write data from.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="6a3f3-400">Posición en el búfer donde comenzar la lectura de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-400">The position in the buffer at which to start reading data.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="6a3f3-401">Número máximo de caracteres que se van a escribir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-401">The maximum number of characters to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6a3f3-402">Escribe una submatriz de caracteres seguida de un terminador de línea de forma asincrónica en la cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-402">Writes a subarray of characters followed by a line terminator asynchronously to the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6a3f3-403">Tarea que representa la operación de escritura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-403">A task that represents the asynchronous write operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6a3f3-404">El terminador de línea se define mediante el <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-404">The line terminator is defined by the <xref:System.IO.TextWriter.NewLine%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6a3f3-405">En el ejemplo siguiente se muestra cómo escribir caracteres utilizando el <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> método.</span><span class="sxs-lookup"><span data-stu-id="6a3f3-405">The following example shows how to write characters by using the <xref:System.IO.StringWriter.WriteLineAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[System.IO.StringWriter#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.stringwriter/cs/example3.cs#3)]
 [!code-vb[System.IO.StringWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.stringwriter/vb/example3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="6a3f3-406">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-406">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6a3f3-407">La suma de <paramref name="index" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-407">The <paramref name="index" /> plus <paramref name="count" /> is greater than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="6a3f3-408">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-408">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="6a3f3-409">El escritor de cadena se elimina.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-409">The string writer is disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="6a3f3-410">Una operación de escritura anterior está usando actualmente el escritor de cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6a3f3-410">The string writer is currently in use by a previous write operation.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>