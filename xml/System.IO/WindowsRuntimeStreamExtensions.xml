<Type Name="WindowsRuntimeStreamExtensions" FullName="System.IO.WindowsRuntimeStreamExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="875502c86324cd7e5a5244ce809261d8b2fe0dc1" /><Meta Name="ms.sourcegitcommit" Value="4ee26ac79338b0bf99fa1e0913e8a06b21994d8e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/26/2019" /><Meta Name="ms.locfileid" Value="58460388" /></Metadata><TypeSignature Language="C#" Value="public static class WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit WindowsRuntimeStreamExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IO.WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module WindowsRuntimeStreamExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsRuntimeStreamExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type WindowsRuntimeStreamExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="dotnet-uwp-10.0">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Contiene métodos de extensión para realizar conversiones entre flujos de Windows Runtime y flujos administrados de .NET para aplicaciones de Microsoft Store.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[
## Remarks

Estos métodos de extensión están disponibles solo cuando se desarrollan aplicaciones de Windows Store. Los métodos proporcionan una manera cómoda de trabajar con secuencias en las aplicaciones de Windows Store. No se cree una instancia de la `WindowsRuntimeStreamExtensions` clase; en su lugar, usar estos métodos de las instancias de la <xref:Windows.Storage.Streams.IInputStream> y <xref:Windows.Storage.Streams.IOutputStream> interfaces y <xref:System.IO.Stream> clase.

El `WindowsRuntimeStreamExtensions` clase contiene dos métodos para convertir una administrada <xref:System.IO.Stream> objeto a una secuencia en el tiempo de ejecución de Windows:

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A>

El `WindowsRuntimeStreamExtensions` clase contiene tres métodos sobrecargados para convertir una secuencia en el tiempo de ejecución de Windows a un <xref:System.IO.Stream> objeto:

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A>
  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A>

A partir de .NET Framework 4.5.1, el `WindowsRuntimeStreamExtensions` clase contiene un método para convertir una secuencia en un tiempo de ejecución de Windows <xref:Windows.Storage.Streams.RandomAccessStream>:

  - <xref:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)>

## Examples

El ejemplo siguiente muestra cómo usar el <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> y <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A>

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

Este es el código XAML que está asociado con el ejemplo anterior. 

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]
]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsInputStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IInputStream AsInputStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IInputStream AsInputStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsInputStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IInputStream ^ AsInputStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsInputStream : System.IO.Stream -&gt; Windows.Storage.Streams.IInputStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsInputStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IInputStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream">La secuencia que se va a convertir.</param>
        <summary>Convierte un flujo administrado de .NET para aplicaciones de Microsoft Store en un flujo de entrada de Windows Runtime.</summary>
        <returns>Objeto <see cref="T:Windows.Storage.Streams.IInputStream" /> de Windows Runtime que representa el flujo convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
          
> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo < System.IO.Stream >. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

El ejemplo siguiente muestra cómo usar el `AsInputStream` y <xref:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream%2A> métodos para convertir una secuencia administrada hacia y desde una secuencia en el tiempo de ejecución de Windows.

[!code-csharp[windowsruntimestreamextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestreamextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage2.xaml.vb#4)]

Este es el código XAML que está asociado con el ejemplo anterior.

[!code-xaml[windowsruntimestreamextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">La secuencia no admite lectura.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsOutputStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IOutputStream AsOutputStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IOutputStream AsOutputStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsOutputStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IOutputStream ^ AsOutputStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsOutputStream : System.IO.Stream -&gt; Windows.Storage.Streams.IOutputStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsOutputStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IOutputStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream">La secuencia que se va a convertir.</param>
        <summary>Convierte un flujo administrado de .NET para aplicaciones de Microsoft Store en un flujo de salida de Windows Runtime.</summary>
        <returns>Objeto <see cref="T:Windows.Storage.Streams.IOutputStream" /> de Windows Runtime que representa el flujo convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

## Examples

El ejemplo siguiente muestra cómo usar el <xref:System.IO.WindowsRuntimeStreamExtensions.AsInputStream%2A> y `AsOutputStream`> métodos para convertir una secuencia administrada hacia y desde una secuencia en el tiempo de ejecución de Windows.

[!code-csharp[windowsruntimestreamextensions#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml.cs#4)]
[!code-vb[windowsruntimestreamextensions#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage2.xaml.vb#4)]

Este es el código XAML que está asociado con el ejemplo anterior.

[!code-xaml[windowsruntimestreamextensions#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage2.xaml#3)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">La secuencia no admite lectura.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsRandomAccessStream">
      <MemberSignature Language="C#" Value="public static Windows.Storage.Streams.IRandomAccessStream AsRandomAccessStream (this System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Windows.Storage.Streams.IRandomAccessStream AsRandomAccessStream(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Windows::Storage::Streams::IRandomAccessStream ^ AsRandomAccessStream(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="static member AsRandomAccessStream : System.IO.Stream -&gt; Windows.Storage.Streams.IRandomAccessStream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsRandomAccessStream stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Storage.Streams.IRandomAccessStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="stream">La secuencia que se va a convertir.</param>
        <summary>Convierte la secuencia especificada en una secuencia de acceso aleatorio.</summary>
        <returns><see cref="T:Windows.Storage.Streams.IRandomAccessStream" /> de Windows Runtime que representa el flujo convertido.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks


> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStream (this Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStream(class Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStream (windowsRuntimeStream As IRandomAccessStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStream(Windows::Storage::Streams::IRandomAccessStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStream : Windows.Storage.Streams.IRandomAccessStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStream windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IRandomAccessStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Objeto <see cref="T:Windows.Storage.Streams.IRandomAccessStream" /> de Windows Runtime que se va a convertir.</param>
        <summary>Convierte un flujo de acceso aleatorio de Windows Runtime en un flujo administrado de .NET para aplicaciones de Microsoft Store.</summary>
        <returns>Secuencia convertida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Se utiliza un tamaño de búfer predeterminado de 16 384 bytes al convertir la secuencia. Para especificar un tamaño de búfer diferente, use el <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream,System.Int32)> sobrecargar.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStream">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStream (this Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStream(class Windows.Storage.Streams.IRandomAccessStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStream (windowsRuntimeStream As IRandomAccessStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStream(Windows::Storage::Streams::IRandomAccessStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStream : Windows.Storage.Streams.IRandomAccessStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStream (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IRandomAccessStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Objeto <see cref="T:Windows.Storage.Streams.IRandomAccessStream" /> de Windows Runtime que se va a convertir.</param>
        <param name="bufferSize">Tamaño del búfer en bytes. Este valor no puede ser negativo, pero puede ser 0 (cero) para deshabilitar el almacenamiento en búfer.</param>
        <summary>Convierte un flujo de acceso aleatorio de Windows Runtime en un flujo administrado de .NET para aplicaciones de Microsoft Store utilizando el tamaño de búfer especificado.</summary>
        <returns>Secuencia convertida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Utilice este método para especificar un tamaño de búfer al convertir la secuencia. Para usar el tamaño de búfer predeterminado de 16 384 bytes, use la <xref:System.IO.WindowsRuntimeStreamExtensions.AsStream(Windows.Storage.Streams.IRandomAccessStream)> sobrecargar.

En la mayoría de los casos, el almacenamiento en búfer, mejora el rendimiento de operaciones de secuencia. Puede deshabilitar el almacenamiento en búfer estableciendo `bufferSize` a cero, pero debe hacerlo solo cuando esté seguro de que deshabilitar el almacenamiento en búfer es adecuado para su situación.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" /> es negativo.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForRead">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForRead (this Windows.Storage.Streams.IInputStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForRead(class Windows.Storage.Streams.IInputStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForRead (windowsRuntimeStream As IInputStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForRead(Windows::Storage::Streams::IInputStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStreamForRead : Windows.Storage.Streams.IInputStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IInputStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Objeto <see cref="T:Windows.Storage.Streams.IInputStream" /> de Windows Runtime que se va a convertir.</param>
        <summary>Convierte un flujo de entrada de Windows Runtime en un flujo administrado de .NET para aplicaciones de Microsoft Store.</summary>
        <returns>Secuencia convertida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Se utiliza un tamaño de búfer predeterminado de 16 384 bytes al convertir la secuencia. Para especificar un tamaño de búfer diferente, use el <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream,System.Int32)> sobrecargar.

## Examples

El ejemplo siguiente muestra cómo usar el <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> y <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> métodos para convertir una secuencia administrada hacia y desde una secuencia en el tiempo de ejecución de Windows.

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

Este es el código XAML que está asociado con el ejemplo anterior.

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForRead">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForRead (this Windows.Storage.Streams.IInputStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForRead(class Windows.Storage.Streams.IInputStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForRead (windowsRuntimeStream As IInputStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForRead(Windows::Storage::Streams::IInputStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStreamForRead : Windows.Storage.Streams.IInputStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IInputStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Objeto <see xref="T:Windows.Storage.Streams.IInputStream" /> de Windows Runtime que se va a convertir.</param>
        <param name="bufferSize">Tamaño del búfer en bytes. Este valor no puede ser negativo, pero puede ser 0 (cero) para deshabilitar el almacenamiento en búfer.</param>
        <summary>Convierte un flujo de entrada de Windows Runtime en un flujo administrado de .NET para aplicaciones de Store de Windows 8.x utilizando el tamaño de búfer especificado.</summary>
        <returns>Secuencia convertida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Utilice este método para especificar un tamaño de búfer al convertir la secuencia. Para usar el tamaño de búfer predeterminado de 16 384 bytes, use la <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead(Windows.Storage.Streams.IInputStream)> sobrecargar.

En la mayoría de los casos, el almacenamiento en búfer, mejora el rendimiento de operaciones de secuencia. Puede deshabilitar el almacenamiento en búfer estableciendo `bufferSize` a cero, pero debe hacerlo solo cuando esté seguro de que deshabilitar el almacenamiento en búfer es adecuado para su situación.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" /> es negativo.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForWrite">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForWrite (this Windows.Storage.Streams.IOutputStream windowsRuntimeStream);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForWrite(class Windows.Storage.Streams.IOutputStream windowsRuntimeStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForWrite (windowsRuntimeStream As IOutputStream) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForWrite(Windows::Storage::Streams::IOutputStream ^ windowsRuntimeStream);" />
      <MemberSignature Language="F#" Value="static member AsStreamForWrite : Windows.Storage.Streams.IOutputStream -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite windowsRuntimeStream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IOutputStream" RefType="this" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Objeto <see xref="T:Windows.Storage.Streams.IOutputStream" /> de Windows Runtime que se va a convertir.</param>
        <summary>Convierte un flujo de salida de Windows Runtime en un flujo administrado de .NET para aplicaciones de Store de Windows 8.x.</summary>
        <returns>Secuencia convertida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[
## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Se utiliza un tamaño de búfer predeterminado de 16 384 bytes al convertir la secuencia. Para especificar un tamaño de búfer diferente, use el <xref:> sobrecargar.

## Examples
El ejemplo siguiente muestra cómo usar el <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite%2A> y <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForRead%2A> métodos para convertir una secuencia administrada hacia y desde una secuencia en el tiempo de ejecución de Windows.

[!code-csharp[windowsruntimestreamextensions#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml.cs#2)]
[!code-vb[windowsruntimestreamextensions#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/vb/blankpage.xaml.vb#2)]

Este es el código XAML que está asociado con el ejemplo anterior.

[!code-xaml[windowsruntimestreamextensions#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.io.windowsruntimestreamextensions/cs/blankpage.xaml#1)]

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AsStreamForWrite">
      <MemberSignature Language="C#" Value="public static System.IO.Stream AsStreamForWrite (this Windows.Storage.Streams.IOutputStream windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.Stream AsStreamForWrite(class Windows.Storage.Streams.IOutputStream windowsRuntimeStream, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsStreamForWrite (windowsRuntimeStream As IOutputStream, bufferSize As Integer) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::IO::Stream ^ AsStreamForWrite(Windows::Storage::Streams::IOutputStream ^ windowsRuntimeStream, int bufferSize);" />
      <MemberSignature Language="F#" Value="static member AsStreamForWrite : Windows.Storage.Streams.IOutputStream * int -&gt; System.IO.Stream" Usage="System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite (windowsRuntimeStream, bufferSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.WindowsRuntime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="windowsRuntimeStream" Type="Windows.Storage.Streams.IOutputStream" RefType="this" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="windowsRuntimeStream">Objeto <see cref="T:Windows.Storage.Streams.IOutputStream" /> de Windows Runtime que se va a convertir.</param>
        <param name="bufferSize">Tamaño del búfer en bytes. Este valor no puede ser negativo, pero puede ser 0 (cero) para deshabilitar el almacenamiento en búfer.</param>
        <summary>Convierte un flujo de salida de Windows Runtime en un flujo administrado de .NET para aplicaciones de la Tienda Windows utilizando el tamaño de búfer especificado.</summary>
        <returns>Secuencia convertida.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

> [!NOTE]
> En Visual Basic y C#, puede llamar a este método como un método de instancia en cualquier objeto de tipo <xref:System.IO.Stream>. Cuando emplee la sintaxis del método de instancia para llamar a este método, omita el primer parámetro. Para obtener más información, consulte [métodos de extensión (Visual Basic)](~/docs/visual-basic/programming-guide/language-features/procedures/extension-methods.md) o [métodos de extensión (C# Programming Guide)](~/docs/csharp/programming-guide/classes-and-structs/extension-methods.md).

Utilice este método para especificar un tamaño de búfer al convertir la secuencia. Para usar el tamaño de búfer predeterminado de 16 384 bytes, use la <xref:System.IO.WindowsRuntimeStreamExtensions.AsStreamForWrite(Windows.Storage.Streams.IOutputStream)> sobrecargar.

En la mayoría de los casos, el almacenamiento en búfer, mejora el rendimiento de operaciones de secuencia. Puede deshabilitar el almacenamiento en búfer estableciendo `bufferSize` a cero, pero debe hacerlo solo cuando esté seguro de que deshabilitar el almacenamiento en búfer es adecuado para su situación.

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="windowsRuntimeStream" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="bufferSize" /> es negativo.</exception>
      </Docs>
    </Member>
  </Members>
</Type>