<Type Name="TextReader" FullName="System.IO.TextReader">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5f81ef7652136860b6d08c4d91140e20523e22a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37652323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TextReader : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit TextReader extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.TextReader" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextReader&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextReader abstract : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type TextReader = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IO</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="5c84c-101">Representa un lector que puede leer una serie secuencial de caracteres.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5c84c-101">Represents a reader that can read a sequential series of characters.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-102"><xref:System.IO.TextReader> es la clase base abstracta de <xref:System.IO.StreamReader> y <xref:System.IO.StringReader>, que leen caracteres de secuencias y cadenas, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="5c84c-102"><xref:System.IO.TextReader> is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively.</span></span> <span data-ttu-id="5c84c-103">Use estas clases derivadas para abrir un archivo de texto para leer un intervalo de caracteres especificado, o para crear un lector basándose en una secuencia existente.</span><span class="sxs-lookup"><span data-stu-id="5c84c-103">Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="5c84c-104">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="5c84c-104">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="5c84c-105">Cuando haya terminado de utilizar cualquier tipo que se deriva este tipo, debe deshacerse de él directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="5c84c-105">When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="5c84c-106">Para deshacerse del tipo directamente, llame a su <xref:System.IO.TextReader.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="5c84c-106">To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="5c84c-107">Para deshacerse de él, indirectamente, usar una construcción de lenguaje, como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="5c84c-107">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="5c84c-108">Para obtener más información, consulte Dispose y la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="5c84c-108">For more information, see Dispose and the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c84c-109">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-109">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-110">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-110">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-111">El <xref:System.IO.StreamReader> clase se deriva de <xref:System.IO.TextReader> y proporciona implementaciones de los miembros para la lectura de una secuencia.</span><span class="sxs-lookup"><span data-stu-id="5c84c-111">The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream.</span></span> <span data-ttu-id="5c84c-112">El ejemplo siguiente muestra cómo se leen todos los caracteres de un archivo mediante el uso de la <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-112">The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="5c84c-113">Comprueba si cada carácter es una letra, un dígito o un espacio en blanco antes de agregar el carácter en una instancia de la <xref:System.Text.StringBuilder> clase.</span><span class="sxs-lookup"><span data-stu-id="5c84c-113">It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.</span></span>  
  
 [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]
 [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="5c84c-114">
        <para>Una clase derivada debe implementar al menos el <see cref="M:System.IO.TextReader.Peek" /> y <see cref="M:System.IO.TextReader.Read" /> métodos para crear una instancia útil de <see cref="T:System.IO.TextReader" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="5c84c-114">
          <para>A derived class must minimally implement the <see cref="M:System.IO.TextReader.Peek" /> and <see cref="M:System.IO.TextReader.Read" /> methods to make a useful instance of <see cref="T:System.IO.TextReader" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.IO.StringReader" />
    <altmember cref="T:System.IO.StreamReader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextReader();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-115">Inicializa una nueva instancia de la clase <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-115">Initializes a new instance of the <see cref="T:System.IO.TextReader" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-116">Utilice este constructor para las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="5c84c-116">Use this constructor for derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="textReader.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-117">Cierra el <see cref="T:System.IO.TextReader" /> y libera todos los recursos del sistema asociados a <see langword="TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-117">Closes the <see cref="T:System.IO.TextReader" /> and releases any system resources associated with the <see langword="TextReader" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-118">Esta implementación de `Close` llamadas la <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> método y le pasa un `true` valor.</span><span class="sxs-lookup"><span data-stu-id="5c84c-118">This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method and passes it a `true` value.</span></span>  
  
 <span data-ttu-id="5c84c-119">Vaciar el lector de texto no vacía su codificador subyacente a menos que se llame explícitamente a `Close`.</span><span class="sxs-lookup"><span data-stu-id="5c84c-119">Flushing the text reader will not flush its underlying encoder unless you explicitly call `Close`.</span></span> <span data-ttu-id="5c84c-120">Establecer el <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> propiedad `true` significa que los datos del búfer se vaciará en el flujo, pero no se vaciará el estado del codificador.</span><span class="sxs-lookup"><span data-stu-id="5c84c-120">Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=nameWithType> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed.</span></span> <span data-ttu-id="5c84c-121">Esto permite al codificador mantener su estado (caracteres parciales) para que puede codificar correctamente el siguiente bloque de caracteres.</span><span class="sxs-lookup"><span data-stu-id="5c84c-121">This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly.</span></span> <span data-ttu-id="5c84c-122">Esta situación afecta a UTF8 y UTF7 donde ciertos caracteres se pueden codificar solo después de que el codificador reciba el carácter o caracteres adyacentes.</span><span class="sxs-lookup"><span data-stu-id="5c84c-122">This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c84c-123">En las clases derivadas, no invalidan el <xref:System.IO.TextReader.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-123">In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method.</span></span> <span data-ttu-id="5c84c-124">En su lugar, invalide el <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> método para agregar código para liberar recursos.</span><span class="sxs-lookup"><span data-stu-id="5c84c-124">Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=nameWithType> method to add code for releasing resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-125">Libera todos los recursos utilizados por el objeto <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-125">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="textReader.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-126">Libera todos los recursos utilizados por el objeto <see cref="T:System.IO.TextReader" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-126">Releases all resources used by the <see cref="T:System.IO.TextReader" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-127">Llame a <xref:System.IO.TextReader.Dispose%2A> cuando haya terminado de usar <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="5c84c-127">Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="5c84c-128">El método <xref:System.IO.TextReader.Dispose%2A> deja el <xref:System.IO.TextReader> en un estado no utilizable.</span><span class="sxs-lookup"><span data-stu-id="5c84c-128">The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state.</span></span> <span data-ttu-id="5c84c-129">Después de llamar a <xref:System.IO.TextReader.Dispose%2A>, debe liberar todas las referencias a la <xref:System.IO.TextReader> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.IO.TextReader> estaba ocupando.</span><span class="sxs-lookup"><span data-stu-id="5c84c-129">After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.</span></span>  
  
 <span data-ttu-id="5c84c-130">Para obtener más información, consulte [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md) y [implementar un método Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="5c84c-130">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="5c84c-131">Realice siempre una llamada a <xref:System.IO.TextReader.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="5c84c-131">Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="5c84c-132">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.IO.TextReader> del objeto <xref:System.Object.Finalize%2A>.</span><span class="sxs-lookup"><span data-stu-id="5c84c-132">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="textReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5c84c-133">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-133">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c84c-134">Libera los recursos no administrados que usa <see cref="T:System.IO.TextReader" /> y, de forma opcional, libera los recursos administrados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-134">Releases the unmanaged resources used by the <see cref="T:System.IO.TextReader" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-135">Este método se llama por el público `Dispose` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-135">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5c84c-136">De forma predeterminada, este método especifica el `disposing` parámetro como `true`.</span><span class="sxs-lookup"><span data-stu-id="5c84c-136">By default, this method specifies the `disposing` parameter as `true`.</span></span> <span data-ttu-id="5c84c-137"><xref:System.Object.Finalize%2A> Especifica el `disposing` parámetro como `false`.</span><span class="sxs-lookup"><span data-stu-id="5c84c-137"><xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.</span></span>  
  
 <span data-ttu-id="5c84c-138">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.IO.TextReader> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="5c84c-138">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references.</span></span> <span data-ttu-id="5c84c-139">Este método invoca al método `Dispose` de cada uno de los objetos a los que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="5c84c-139">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5c84c-140">
            <para>
              <see langword="Dispose" /> puede llamarse varias veces por otros objetos. Al reemplazar este método, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar este método, vea [implementar un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obtener más información acerca de <see cref="M:System.IDisposable.Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpieza de Resources](~/docs/standard/garbage-collection/unmanaged.md) no administrado.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-140">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding this method, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement this method, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see cref="M:System.IDisposable.Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static readonly System.IO.TextReader Null;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.IO.TextReader Null" />
      <MemberSignature Language="DocId" Value="F:System.IO.TextReader.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Null As TextReader " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::IO::TextReader ^ Null;" />
      <MemberSignature Language="F#" Value=" staticval mutable Null : System.IO.TextReader" Usage="System.IO.TextReader.Null" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-141">Proporciona un <see langword="TextReader" /> sin datos del que leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-141">Provides a <see langword="TextReader" /> with no data to read from.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-142">Leyendo el <xref:System.IO.TextReader.Null> lector de texto es similar a leer desde el final de una secuencia:</span><span class="sxs-lookup"><span data-stu-id="5c84c-142">Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:</span></span>  
  
-   <span data-ttu-id="5c84c-143">El <xref:System.IO.TextReader.Read%2A> y <xref:System.IO.TextReader.Peek%2A> métodos devuelven -1.</span><span class="sxs-lookup"><span data-stu-id="5c84c-143">The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.</span></span>  
  
-   <span data-ttu-id="5c84c-144">El <xref:System.IO.TextReader.ReadBlock%2A> método devuelve cero.</span><span class="sxs-lookup"><span data-stu-id="5c84c-144">The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.</span></span>  
  
-   <span data-ttu-id="5c84c-145">El <xref:System.IO.TextReader.ReadLine%2A> devuelve del método `null`.</span><span class="sxs-lookup"><span data-stu-id="5c84c-145">The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.</span></span>  
  
-   <span data-ttu-id="5c84c-146">El <xref:System.IO.TextReader.ReadToEnd%2A> método devuelve una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="5c84c-146">The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.StringReader" />
        <altmember cref="T:System.IO.StreamReader" />
      </Docs>
    </Member>
    <Member MemberName="Peek">
      <MemberSignature Language="C#" Value="public virtual int Peek ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Peek() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Peek" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Peek () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Peek();" />
      <MemberSignature Language="F#" Value="abstract member Peek : unit -&gt; int&#xA;override this.Peek : unit -&gt; int" Usage="textReader.Peek " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-147">Lee el siguiente carácter sin modificar el estado del sistema de lectura o el origen del carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-147">Reads the next character without changing the state of the reader or the character source.</span>
          </span>
          <span data-ttu-id="5c84c-148">Devuelve el siguiente carácter disponible sin leerlo realmente del lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-148">Returns the next available character without actually reading it from the reader.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-149">Un entero que representa el siguiente carácter que se va a leer, o -1 si no hay más caracteres disponibles o si el lector no admite la operación de búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-149">An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-150">El <xref:System.IO.TextReader.Peek%2A> método devuelve un valor entero con el fin de determinar si se ha producido el final del archivo o de otro error.</span><span class="sxs-lookup"><span data-stu-id="5c84c-150">The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred.</span></span> <span data-ttu-id="5c84c-151">Esto permite que un usuario compruebe primero si el valor devuelto es -1 antes de convertirlo a un <xref:System.Char> tipo.</span><span class="sxs-lookup"><span data-stu-id="5c84c-151">This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.</span></span>  
  
 <span data-ttu-id="5c84c-152">La posición actual de la <xref:System.IO.TextReader> esta operación no se modifica.</span><span class="sxs-lookup"><span data-stu-id="5c84c-152">The current position of the <xref:System.IO.TextReader> is not changed by this operation.</span></span> <span data-ttu-id="5c84c-153">El valor devuelto es -1 si no hay más caracteres disponibles.</span><span class="sxs-lookup"><span data-stu-id="5c84c-153">The returned value is -1 if no more characters are available.</span></span> <span data-ttu-id="5c84c-154">La implementación predeterminada devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="5c84c-154">The default implementation returns -1.</span></span>  
  
 <span data-ttu-id="5c84c-155">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-155">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-156">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-156">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-157">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.Peek%2A> método, consulte el <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-157">For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-158">La clase <see cref="T:System.IO.TextReader" /> está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-158">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5c84c-159">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-159">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Peek" />
        <altmember cref="M:System.IO.StringReader.Peek" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Read">
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-160">Lee datos del lector de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-160">Reads data from the text reader.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read();" />
      <MemberSignature Language="F#" Value="abstract member Read : unit -&gt; int&#xA;override this.Read : unit -&gt; int" Usage="textReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-161">Lee el siguiente carácter en el lector de texto y hace avanzar la posición de los caracteres en un carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-161">Reads the next character from the text reader and advances the character position by one character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-162">Carácter siguiente del lector de texto o -1 si no hay más caracteres disponibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-162">The next character from the text reader, or -1 if no more characters are available.</span>
          </span>
          <span data-ttu-id="5c84c-163">La implementación predeterminada devuelve -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-163">The default implementation returns -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-164">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-164">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-165">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-165">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-166">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.Read%2A> método, consulte el <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-166">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-167">La clase <see cref="T:System.IO.TextReader" /> está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-167">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5c84c-168">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-168">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read" />
        <altmember cref="M:System.IO.StringReader.Read" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member Read : Span&lt;char&gt; -&gt; int&#xA;override this.Read : Span&lt;char&gt; -&gt; int" Usage="textReader.Read buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Read (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Read(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Read : char[] * int * int -&gt; int&#xA;override this.Read : char[] * int * int -&gt; int" Usage="textReader.Read (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c84c-169">Cuando este método finaliza, contiene la matriz de caracteres especificada con los valores comprendidos entre <c>index</c> e (<c>index</c> + <c>count</c> - 1) reemplazada por los caracteres leídos del origen actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-169">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5c84c-170">La posición de <c>buffer</c> en la que se va a iniciar la escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-170">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5c84c-171">Número máximo de caracteres que se van a leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-171">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="5c84c-172">Si el final del lector se alcanza antes de escribir el número de caracteres especificado en el búfer, el método vuelve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-172">If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c84c-173">Lee un número máximo de caracteres especificado en el lector actual y escribe los datos en un búfer, comenzando en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-173">Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-174">Número de caracteres que se han leído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-174">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="5c84c-175">Este número será menor o igual que <paramref name="count" />, en función de si los datos están disponibles dentro del lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-175">The number will be less than or equal to <paramref name="count" />, depending on whether the data is available within the reader.</span>
          </span>
          <span data-ttu-id="5c84c-176">Este método devuelve 0 (cero) si se llama cuando no quedan más caracteres para leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-176">This method returns 0 (zero) if it is called when no more characters are left to read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-177">Este método devuelve después `count` caracteres que se leen o se alcanza el final del archivo.</span><span class="sxs-lookup"><span data-stu-id="5c84c-177">This method returns after either `count` characters are read or the end of the file is reached.</span></span> <span data-ttu-id="5c84c-178"><xref:System.IO.TextReader.ReadBlock%2A> es una versión de bloqueo de este método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-178"><xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of this method.</span></span>  
  
 <span data-ttu-id="5c84c-179">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-179">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-180">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-180">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-181">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.Read%2A> método, consulte el <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-181">For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c84c-182">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-182">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c84c-183">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-183">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-184">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-184">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-185">La clase <see cref="T:System.IO.TextReader" /> está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-185">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5c84c-186">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-186">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.Read(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.Read(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c84c-187">Cuando este método finaliza, contiene la matriz de caracteres especificada con los valores comprendidos entre <c>index</c> e (<c>index</c> + <c>count</c> - 1) reemplazada por los caracteres leídos del origen actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-187">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5c84c-188">La posición de <c>buffer</c> en la que se va a iniciar la escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-188">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5c84c-189">Número máximo de caracteres que se van a leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-189">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="5c84c-190">Si el final del texto se alcanza antes de leer el número de caracteres especificado en el búfer, el método actual vuelve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-190">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c84c-191">Lee un número máximo de caracteres especificado en el lector de texto actual de forma asincrónica y escribe los datos en un búfer, comenzando en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-191">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-192">Tarea que representa la operación de lectura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-192">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="5c84c-193">El valor del parámetro <paramref name="TResult" /> contiene el número total de bytes leídos en el búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-193">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="5c84c-194">El valor del resultado puede ser menor que el número de bytes solicitados si el número de bytes disponibles actualmente es menor que el número solicitado o puede ser 0 (cero) si se ha llegado al final del texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-194">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-195">La tarea completa después el número de caracteres especificados por el `count` parámetro se leen o se alcanza el final del archivo.</span><span class="sxs-lookup"><span data-stu-id="5c84c-195">The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.</span></span>  
  
 <span data-ttu-id="5c84c-196">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-196">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-197">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-197">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-198">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.ReadAsync%2A> método, consulte el <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-198">For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c84c-199">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-199">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-200">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-200">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c84c-201">La suma de <paramref name="index" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-201">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-202">Se ha desechado el lector de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-202">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5c84c-203">Una operación de lectura anterior está usando actualmente el lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-203">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (Span&lt;char&gt; buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock(valuetype System.Span`1&lt;char&gt; buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Span{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Span(Of Char)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(Span&lt;char&gt; buffer);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : Span&lt;char&gt; -&gt; int&#xA;override this.ReadBlock : Span&lt;char&gt; -&gt; int" Usage="textReader.ReadBlock buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Span&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlock">
      <MemberSignature Language="C#" Value="public virtual int ReadBlock (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ReadBlock([out] char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlock (buffer As Char(), index As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int ReadBlock(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlock : char[] * int * int -&gt; int&#xA;override this.ReadBlock : char[] * int * int -&gt; int" Usage="textReader.ReadBlock (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c84c-204">Cuando este método finaliza, este parámetro contiene la matriz de caracteres especificada con los valores comprendidos entre <c>index</c> e (<c>index</c> + <c>count</c> -1) reemplazada por los caracteres leídos del origen actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-204">When this method returns, this parameter contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> -1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5c84c-205">La posición de <c>buffer</c> en la que se va a iniciar la escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-205">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5c84c-206">Número máximo de caracteres que se van a leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-206">The maximum number of characters to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c84c-207">Lee un número máximo de caracteres especificado en el lector de texto actual y escribe los datos en un búfer, comenzando en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-207">Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-208">Número de caracteres que se han leído.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-208">The number of characters that have been read.</span>
          </span>
          <span data-ttu-id="5c84c-209">Este número será menor o igual que <paramref name="count" />, dependiendo de si se han leído todos los caracteres de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-209">The number will be less than or equal to <paramref name="count" />, depending on whether all input characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-210">Avanza la posición del lector de texto subyacente por el número de caracteres que se han leído en `buffer`.</span><span class="sxs-lookup"><span data-stu-id="5c84c-210">The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.</span></span>  
  
 <span data-ttu-id="5c84c-211">El método se bloquea hasta que `count` se leen caracteres, o se han leído todos los caracteres.</span><span class="sxs-lookup"><span data-stu-id="5c84c-211">The method blocks until either `count` characters are read, or all characters have been read.</span></span> <span data-ttu-id="5c84c-212">Se trata de una versión de bloqueo de <xref:System.IO.TextReader.Read%2A>.</span><span class="sxs-lookup"><span data-stu-id="5c84c-212">This is a blocking version of <xref:System.IO.TextReader.Read%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c84c-213">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-213">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c84c-214">La longitud del búfer menos <paramref name="index" /> es menor que <paramref name="count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-214">The buffer length minus <paramref name="index" /> is less than <paramref name="count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-215">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-215">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-216">La clase <see cref="T:System.IO.TextReader" /> está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-216">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5c84c-217">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-217">An I/O error occurs.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlock(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.ValueTask&lt;int&gt; ReadBlockAsync (Memory&lt;char&gt; buffer, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Threading.Tasks.ValueTask`1&lt;int32&gt; ReadBlockAsync(valuetype System.Memory`1&lt;char&gt; buffer, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Memory{System.Char},System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;&#xA;override this.ReadBlockAsync : Memory&lt;char&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Memory&lt;System.Char&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="buffer">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadBlockAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;int&gt; ReadBlockAsync (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadBlockAsync(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadBlockAsync (buffer As Char(), index As Integer, count As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;int&gt; ^ ReadBlockAsync(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;&#xA;override this.ReadBlockAsync : char[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="textReader.ReadBlockAsync (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="5c84c-218">Cuando este método finaliza, contiene la matriz de caracteres especificada con los valores comprendidos entre <c>index</c> e (<c>index</c> + <c>count</c> - 1) reemplazada por los caracteres leídos del origen actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-218">When this method returns, contains the specified character array with the values between <c>index</c> and (<c>index</c> + <c>count</c> - 1) replaced by the characters read from the current source.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="5c84c-219">La posición de <c>buffer</c> en la que se va a iniciar la escritura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-219">The position in <c>buffer</c> at which to begin writing.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="5c84c-220">Número máximo de caracteres que se van a leer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-220">The maximum number of characters to read.</span>
          </span>
          <span data-ttu-id="5c84c-221">Si el final del texto se alcanza antes de leer el número de caracteres especificado en el búfer, el método actual vuelve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-221">If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c84c-222">Lee un número máximo de caracteres especificado en el lector de texto actual de forma asincrónica y escribe los datos en un búfer, comenzando en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-222">Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-223">Tarea que representa la operación de lectura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-223">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="5c84c-224">El valor del parámetro <paramref name="TResult" /> contiene el número total de bytes leídos en el búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-224">The value of the <paramref name="TResult" /> parameter contains the total number of bytes read into the buffer.</span>
          </span>
          <span data-ttu-id="5c84c-225">El valor del resultado puede ser menor que el número de bytes solicitados si el número de bytes disponibles actualmente es menor que el número solicitado o puede ser 0 (cero) si se ha llegado al final del texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-225">The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-226">La tarea no completa hasta que el número de caracteres especificados por el `count` parámetro se leen o se alcanzó el final del texto.</span><span class="sxs-lookup"><span data-stu-id="5c84c-226">The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c84c-227">
            <paramref name="buffer" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-227">
              <paramref name="buffer" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-228">
            <paramref name="index" /> o <paramref name="count" /> es negativo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-228">
              <paramref name="index" /> or <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="5c84c-229">La suma de <paramref name="index" /> y <paramref name="count" /> es mayor que la longitud del búfer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-229">The sum of <paramref name="index" /> and <paramref name="count" /> is larger than the buffer length.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-230">Se ha desechado el lector de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-230">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5c84c-231">Una operación de lectura anterior está usando actualmente el lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-231">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.IO.StringReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReadLine">
      <MemberSignature Language="C#" Value="public virtual string ReadLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLine" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLine () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadLine();" />
      <MemberSignature Language="F#" Value="abstract member ReadLine : unit -&gt; string&#xA;override this.ReadLine : unit -&gt; string" Usage="textReader.ReadLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-232">Lee una línea de caracteres del lector de texto y devuelve los datos como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-232">Reads a line of characters from the text reader and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-233">Línea siguiente del lector o <see langword="null" /> si se han leído todos los caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-233">The next line from the reader, or <see langword="null" /> if all characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-234">Una línea se define como una secuencia de caracteres seguida de un retorno de carro (0x000d), un avance de línea (0x000a), un retorno de carro seguido de un avance de línea <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, o el marcador de final de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="5c84c-234">A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=nameWithType>, or the end-of-stream marker.</span></span> <span data-ttu-id="5c84c-235">La cadena devuelta no contiene la terminación de retorno de carro o avance de línea.</span><span class="sxs-lookup"><span data-stu-id="5c84c-235">The string that is returned does not contain the terminating carriage return or line feed.</span></span> <span data-ttu-id="5c84c-236">El valor devuelto es `null` si se ha alcanzado el final de la secuencia de entrada.</span><span class="sxs-lookup"><span data-stu-id="5c84c-236">The return value is `null` if the end of the input stream has been reached.</span></span>  
  
 <span data-ttu-id="5c84c-237">Si el método produce una <xref:System.OutOfMemoryException> excepción, la posición del lector en subyacente <xref:System.IO.Stream> avanza por el número de caracteres que el método fue capaz de leer, pero los caracteres que ya se han leído en interno <xref:System.IO.TextReader.ReadLine%2A> búfer son se descartan.</span><span class="sxs-lookup"><span data-stu-id="5c84c-237">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded.</span></span> <span data-ttu-id="5c84c-238">Dado que no se puede cambiar la posición del lector en la secuencia, los caracteres que ya se han leído son irrecuperables y se puede acceder solo reinicializando la <xref:System.IO.TextReader> objeto.</span><span class="sxs-lookup"><span data-stu-id="5c84c-238">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object.</span></span> <span data-ttu-id="5c84c-239">Si la posición inicial dentro de la secuencia es desconocida o la secuencia no admite búsquedas, subyacente <xref:System.IO.Stream> también es necesario reinicializar.</span><span class="sxs-lookup"><span data-stu-id="5c84c-239">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="5c84c-240">Para evitar esta situación y generar código robusto, debe usar el <xref:System.IO.TextReader.Read%2A> método y el almacén de los caracteres de lectura en un búfer preasignado.</span><span class="sxs-lookup"><span data-stu-id="5c84c-240">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="5c84c-241">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-241">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-242">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-242">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-243">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.ReadLine%2A> método, consulte el <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-243">For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5c84c-244">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-244">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="5c84c-245">No hay memoria suficiente para asignar un búfer para la cadena devuelta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-245">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-246">La clase <see cref="T:System.IO.TextReader" /> está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-246">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-247">El número de caracteres de la siguiente línea es mayor que <see cref="F:System.Int32.MaxValue" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-247">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLine" />
        <altmember cref="M:System.IO.StringReader.ReadLine" />
      </Docs>
    </Member>
    <Member MemberName="ReadLineAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadLineAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadLineAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadLineAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadLineAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadLineAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadLineAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadLineAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-248">Lee de forma asincrónica una línea de caracteres y devuelve los datos como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-248">Reads a line of characters asynchronously and returns the data as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-249">Tarea que representa la operación de lectura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-249">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="5c84c-250">El valor del parámetro <paramref name="TResult" /> contiene la línea siguiente del lector de texto, o es <see langword="null" /> si se han leído todos los caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-250">The value of the <paramref name="TResult" /> parameter contains the next line from the text reader, or is <see langword="null" /> if all of the characters have been read.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-251">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-251">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-252">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-252">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-253">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.ReadLineAsync%2A> método, consulte el <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-253">For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="5c84c-254">Si actual <xref:System.IO.TextReader> representa la secuencia de entrada estándar devuelta por la <xref:System.Console.In%2A?displayProperty=nameWithType> propiedad, el <xref:System.IO.TextReader.ReadLineAsync%2A> método se ejecuta sincrónicamente en lugar de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="5c84c-254">If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=nameWithType> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-255">El número de caracteres de la siguiente línea es mayor que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-255">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-256">Se ha desechado el lector de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-256">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5c84c-257">Una operación de lectura anterior está usando actualmente el lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-257">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadLineAsync" />
        <altmember cref="M:System.IO.StringReader.ReadLineAsync" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEnd">
      <MemberSignature Language="C#" Value="public virtual string ReadToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ReadToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ReadToEnd();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEnd : unit -&gt; string&#xA;override this.ReadToEnd : unit -&gt; string" Usage="textReader.ReadToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-258">Lee todos los caracteres desde la posición actual hasta el final del lector de texto y los devuelve como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-258">Reads all characters from the current position to the end of the text reader and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-259">Cadena que contiene todos los caracteres desde la posición actual hasta el final del lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-259">A string that contains all characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-260">Si el método produce una <xref:System.OutOfMemoryException> excepción, la posición del lector en subyacente <xref:System.IO.Stream> avanza por el número de caracteres que el método fue capaz de leer, pero los caracteres que ya se han leído en interno <xref:System.IO.TextReader.ReadToEnd%2A> búfer son se descartan.</span><span class="sxs-lookup"><span data-stu-id="5c84c-260">If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded.</span></span> <span data-ttu-id="5c84c-261">Dado que no se puede cambiar la posición del lector en la secuencia, los caracteres que ya se han leído son irrecuperables y se puede acceder solo reinicializando la <xref:System.IO.TextReader>.</span><span class="sxs-lookup"><span data-stu-id="5c84c-261">Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>.</span></span> <span data-ttu-id="5c84c-262">Si la posición inicial dentro de la secuencia es desconocida o la secuencia no admite búsquedas, subyacente <xref:System.IO.Stream> también es necesario reinicializar.</span><span class="sxs-lookup"><span data-stu-id="5c84c-262">If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.</span></span>  
  
 <span data-ttu-id="5c84c-263">Para evitar esta situación y generar código robusto, debe usar el <xref:System.IO.TextReader.Read%2A> método y el almacén de los caracteres de lectura en un búfer preasignado.</span><span class="sxs-lookup"><span data-stu-id="5c84c-263">To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.</span></span>  
  
 <span data-ttu-id="5c84c-264">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-264">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-265">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-265">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-266">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.ReadToEnd%2A> método, consulte el <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-266">For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="5c84c-267">Error de E/S.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-267">An I/O error occurs.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-268">La clase <see cref="T:System.IO.TextReader" /> está cerrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-268">The <see cref="T:System.IO.TextReader" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="5c84c-269">No hay memoria suficiente para asignar un búfer para la cadena devuelta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-269">There is insufficient memory to allocate a buffer for the returned string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-270">El número de caracteres de la siguiente línea es mayor que <see cref="F:System.Int32.MaxValue" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-270">The number of characters in the next line is larger than <see cref="F:System.Int32.MaxValue" /></span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEnd" />
        <altmember cref="M:System.IO.StringReader.ReadToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ReadToEndAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;string&gt; ReadToEndAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadToEndAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.ReadToEndAsync" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReadToEndAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadToEndAsync();" />
      <MemberSignature Language="F#" Value="abstract member ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;&#xA;override this.ReadToEndAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="textReader.ReadToEndAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.IO.TextReader/&lt;ReadToEndAsync&gt;c__async0))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5c84c-271">Lee de forma asincrónica todos los caracteres desde la posición actual hasta el final del lector de texto y los devuelve como una cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-271">Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-272">Tarea que representa la operación de lectura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-272">A task that represents the asynchronous read operation.</span>
          </span>
          <span data-ttu-id="5c84c-273">El valor del parámetro <paramref name="TResult" /> contiene una cadena con los caracteres desde la posición actual hasta el final del lector de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-273">The value of the <paramref name="TResult" /> parameter contains a string with the characters from the current position to the end of the text reader.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-274">La clase <xref:System.IO.TextReader> es abstracta.</span><span class="sxs-lookup"><span data-stu-id="5c84c-274">The <xref:System.IO.TextReader> class is an abstract class.</span></span> <span data-ttu-id="5c84c-275">Por lo tanto, no inicializarla en el código.</span><span class="sxs-lookup"><span data-stu-id="5c84c-275">Therefore, you do not instantiate it in your code.</span></span> <span data-ttu-id="5c84c-276">Para obtener un ejemplo del uso de la <xref:System.IO.TextReader.ReadToEndAsync%2A> método, consulte el <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="5c84c-276">For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="5c84c-277">El número de caracteres es mayor que <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-277">The number of characters is larger than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5c84c-278">Se ha desechado el lector de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-278">The text reader has been disposed.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5c84c-279">Una operación de lectura anterior está usando actualmente el lector.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-279">The reader is currently in use by a previous read operation.</span>
          </span>
        </exception>
        <altmember cref="M:System.IO.StreamReader.ReadToEndAsync" />
        <altmember cref="M:System.IO.StringReader.ReadToEndAsync" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.IO.TextReader Synchronized (System.IO.TextReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.TextReader Synchronized(class System.IO.TextReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.Synchronized(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (reader As TextReader) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::TextReader ^ Synchronized(System::IO::TextReader ^ reader);" />
      <MemberSignature Language="F#" Value="static member Synchronized : System.IO.TextReader -&gt; System.IO.TextReader" Usage="System.IO.TextReader.Synchronized reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="5c84c-280">
            <see langword="TextReader" /> que se va a sincronizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-280">The <see langword="TextReader" /> to synchronize.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5c84c-281">Crea un contenedor seguro para subprocesos en torno al <see langword="TextReader" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-281">Creates a thread-safe wrapper around the specified <see langword="TextReader" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5c84c-282">
            <see cref="T:System.IO.TextReader" /> seguro para subprocesos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-282">A thread-safe <see cref="T:System.IO.TextReader" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c84c-283">El método actual vuelve una clase que envuelve especificado <xref:System.IO.TextReader> de instancia y restringe el acceso a él mediante varios subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5c84c-283">The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads.</span></span> <span data-ttu-id="5c84c-284">Todas las lecturas desde el contenedor devuelto será seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="5c84c-284">All reads from the returned wrapper will be thread safe.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5c84c-285">
            <paramref name="reader" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5c84c-285">
              <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.TextReader.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>