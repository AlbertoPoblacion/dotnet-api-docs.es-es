<Type Name="RoutedEvent" FullName="System.Windows.RoutedEvent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7b29345e42d255209a1b8868b1734575553c533" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56360726" /></Metadata><TypeSignature Language="C#" Value="public sealed class RoutedEvent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RoutedEvent extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedEvent" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RoutedEvent" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoutedEvent sealed" />
  <TypeSignature Language="F#" Value="type RoutedEvent = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Markup.RoutedEventConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
      <AttributeName>System.Windows.Markup.ValueSerializer("System.Windows.Markup.RoutedEventValueSerializer, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa e identifica un evento enrutado y declara sus características.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta clase contiene la <xref:System.Windows.RoutedEvent.Name%2A>, <xref:System.Windows.RoutedEvent.RoutingStrategy%2A>, <xref:System.Windows.RoutedEvent.HandlerType%2A>, y <xref:System.Windows.RoutedEvent.OwnerType%2A> propiedades. Ninguno de estos miembros pueden tener valores nulos.  
  
 Esta clase tiene un uso XAML que está diseñado exclusivamente para proporcionar el valor de la <xref:System.Windows.EventTrigger.RoutedEvent%2A> propiedad de un <xref:System.Windows.EventTrigger> (o clase derivada), o para el <xref:System.Windows.EventSetter.Event%2A> propiedad de un <xref:System.Windows.EventSetter> (o clase derivada). Para obtener más información acerca de <xref:System.Windows.EventTrigger>, <xref:System.Windows.EventSetter>, y los usos XAML para esas clases, vea [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
<a name="xamlAttributeUsage_RoutedEvent"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="eventName"/>  
- or -  
<object property="type.eventName"/>  
  
```  
  
<a name="xamlValues_RoutedEvent"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *eventName*  
 Un nombre de evento sin calificar, equivalente a la <xref:System.Windows.RoutedEvent.Name%2A> propiedad de la <xref:System.Windows.RoutedEvent> campo, no el nombre de miembro real de la <xref:System.Windows.RoutedEvent> campo identificador dentro de un tipo. Sin calificación, *eventName* debe asignar nombre a un evento que se encuentra en el tipo que es el <xref:System.Windows.Style.TargetType%2A> del estilo actual que contiene el <xref:System.Windows.EventSetter> o <xref:System.Windows.EventTrigger>.  
  
 *type*  
 El tipo se utiliza para calificar el nombre del evento. Si se proporciona sin un prefijo, *tipo* se espera que sea un tipo dentro del espacio de nombres XAML predeterminado, y que se puede asignar a un tipo CLR existente. Para los eventos personalizados o los eventos que se encuentran en tipos fuera del espacio de nombres XAML de forma predeterminada, la cadena para *tipo* puede incluir un prefijo para un espacio de nombres XAML asignado. Ese espacio de nombres XAML debe contener el tipo XAML que se puede asignar a un tipo CLR de respaldo, y ese tipo CLR debe definir el identificador de evento enrutado que desee. Para obtener más información sobre la asignación de espacio de nombres XAML, vea [los espacios de nombres XAML y la asignación de Namespace para WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddOwner">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent AddOwner (Type ownerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.RoutedEvent AddOwner(class System.Type ownerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.AddOwner(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddOwner (ownerType As Type) As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::RoutedEvent ^ AddOwner(Type ^ ownerType);" />
      <MemberSignature Language="F#" Value="member this.AddOwner : Type -&gt; System.Windows.RoutedEvent" Usage="routedEvent.AddOwner ownerType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="ownerType">Tipo al que se agrega el evento enrutado.</param>
        <summary>Asocia otro tipo de propietario con el evento enrutado representado por una instancia de <see cref="T:System.Windows.RoutedEvent" /> y habilita enrutamiento del evento y su control.</summary>
        <returns>Campo del identificador del evento. Este valor devuelto se debe usar para establecer un campo de sólo lectura estático público que almacenará el identificador de la representación del evento enrutado en el tipo propietario. Este campo se define normalmente con acceso público, porque el código de usuario debe hacer referencia al campo para adjuntar cualquier controlador de la instancia para el evento enrutado al utilizar el método de utilidad <see cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo de propietario se usa internamente al resolver un evento por nombre.  
  
   
  
## Examples  
 El ejemplo siguiente agrega la clase actual como otro propietario de un evento definido en una clase diferente. En este caso, `AnotherEditContainer` es la clase actual y el `EditStateChangedEvent` <xref:System.Windows.RoutedEvent> campo se define como un miembro de esa clase. El `MyEditContainer` clase definió originalmente el evento, registrarlo con el mismo nombre `EditStateChangedEvent` identificador.  
  
 [!code-csharp[ClassHandling#RoutedEventAddOwner](~/samples/snippets/csharp/VS_Snippets_Wpf/ClassHandling/CSharp/SDKSampleLibrary/class1.cs#routedeventaddowner)]
 [!code-vb[ClassHandling#RoutedEventAddOwner](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClassHandling/visualbasic/sdksamplelibrary/class1.vb#routedeventaddowner)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerType">
      <MemberSignature Language="C#" Value="public Type HandlerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type HandlerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.HandlerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ HandlerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HandlerType : Type" Usage="System.Windows.RoutedEvent.HandlerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de controlador del evento enrutado.</summary>
        <value>Tipo de controlador de evento enrutado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El tipo de controlador es el delegado de controlador de eventos que debe usarse al implementar los controladores que escuchan el evento representado por este <xref:System.Windows.RoutedEvent>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Windows.RoutedEvent.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de identificación del evento enrutado.</summary>
        <value>Nombre del evento enrutado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre de un evento enrutado debe ser único dentro de cada tipo de propietario, pero no es necesario que sea globalmente único.  
  
 El valor de esta propiedad se origina el <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> método que define un <xref:System.Windows.RoutedEvent>. En concreto, el valor de <xref:System.Windows.RoutedEvent.Name%2A> es el `name` valor del parámetro que se pasó a <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="OwnerType">
      <MemberSignature Language="C#" Value="public Type OwnerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type OwnerType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.OwnerType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnerType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ OwnerType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnerType : Type" Usage="System.Windows.RoutedEvent.OwnerType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de propietario registrado del evento enrutado.</summary>
        <value>Tipo de propietario del evento enrutado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este tipo puede ser cualquier tipo de objeto, no se limita necesariamente al <xref:System.Windows.DependencyObject>. En caso de los eventos enrutados con propietarios agregados, esta propiedad devolverá el primer propietario declarado.  
  
 El valor de esta propiedad se origina el <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> método que define un <xref:System.Windows.RoutedEvent>. En concreto, el valor de <xref:System.Windows.RoutedEvent.OwnerType%2A> es el `ownerType` valor del parámetro que se pasó a <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="RoutingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.RoutingStrategy RoutingStrategy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.RoutingStrategy RoutingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RoutedEvent.RoutingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoutingStrategy As RoutingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutingStrategy RoutingStrategy { System::Windows::RoutingStrategy get(); };" />
      <MemberSignature Language="F#" Value="member this.RoutingStrategy : System.Windows.RoutingStrategy" Usage="System.Windows.RoutedEvent.RoutingStrategy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la estrategia de enrutamiento del evento enrutado.</summary>
        <value>Uno de los valores de la enumeración. El valor predeterminado es el de la enumeración, <see cref="F:System.Windows.RoutingStrategy.Bubble" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Por convención, los eventos enrutados de tunelización tienen el prefijo de nombre "Preview" y un evento de propagación asociado definido. Debe ser poco frecuente que podría haber solo una versión de tunelización y no una versión coincidente de propagación. Para obtener más información, vea [Cómo: Crear un evento enrutado personalizado](~/docs/framework/wpf/advanced/how-to-create-a-custom-routed-event.md).  
  
 El valor de esta propiedad se origina el <xref:System.Windows.EventManager.RegisterRoutedEvent%2A> método que define un <xref:System.Windows.RoutedEvent>. En concreto, el valor de <xref:System.Windows.RoutedEvent.RoutingStrategy%2A> es el `routingStrategy` valor del parámetro que se pasó a <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.EventManager.RegisterRoutedEvent(System.String,System.Windows.RoutingStrategy,System.Type,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RoutedEvent.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="routedEvent.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la representación de <see cref="T:System.Windows.RoutedEvent" />.</summary>
        <returns>Representación de cadena de este objeto, que es idéntica al valor devuelto por <see cref="P:System.Windows.RoutedEvent.Name" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>