<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a92c758627e8518b493edf17e3bc3f08b388edc5" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57962347" /></Metadata><TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un método auxiliar único (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />) que notifica el origen de sistema de propiedades para obtener el valor efectivo de una propiedad de dependencia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sistema de propiedades es bastante complejo y se basa en la racionalización de los valores que pueden proceden de una variedad de entradas, en función de una prioridad de determinación del valor establecido. Dado que estos orígenes pueden proceder de código en tiempo de ejecución, desde el marcado compilado, o incluso de la configuración de usuario de tiempo de ejecución, puede ser útil saber exactamente qué participante en el sistema de valor de propiedad de dependencia es necesario establecer el valor que se obtiene al llamar a <xref:System.Windows.DependencyObject.GetValue%2A>en tiempo de ejecución en esa propiedad. Si el valor procede de un origen diferente del que tenía previsto, es posible que deba ajustar algún aspecto de la aplicación. El origen de valor podría ser un estilo, un tema, un valor local, una animación, un enlace o un valor basado en tiempo de ejecución como la configuración del sistema a través de los temas o los recursos del sistema. Para obtener más información, consulte [Prioridad de los valores de propiedades de dependencia](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 Otro mecanismo que informa de la propiedad en general, en lugar de una instancia específica de la propiedad de un objeto, es los metadatos de propiedad. Los metadatos de propiedad están búsquedo mediante una llamada a <xref:System.Windows.DependencyProperty.GetMetadata%2A> y examinando el valor devuelto <xref:System.Windows.PropertyMetadata> (o una de las posibles clases derivadas que los metadatos de propiedad devueltos son convertibles a).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member GetValueSource : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; System.Windows.ValueSource" Usage="System.Windows.DependencyPropertyHelper.GetValueSource (dependencyObject, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Elemento que contiene el valor de <paramref name="dependencyProperty" /> para el que se va a notificar información.</param>
        <param name="dependencyProperty">Identificador de la propiedad de dependencia para la que se va a notificar información.</param>
        <summary>Devuelve una estructura que informa de diversas características del sistema de metadatos y propiedades de una propiedad de dependencia especificada en un determinado <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Una estructura <see cref="T:System.Windows.ValueSource" /> que notifica la información específica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Debe llamar a este método en un contexto de modo que se pueda actuar en una propiedad en tiempo de ejecución participantes en la determinación del valor de propiedad. Por ejemplo, los enlaces no pueden estar activos en una propiedad a menos que se cargan todos los elementos de participantes en el árbol de elementos y se propaga el enlace asincrónico y se conecta el objeto de origen de enlace. De forma similar, recursos incluidos todos los diccionarios de temas necesarios deben estar disponibles.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="static member IsTemplatedValueDynamic : System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; bool" Usage="System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic (elementInTemplate, dependencyProperty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">Elemento que pertenece a una instancia de plantilla.</param>
        <param name="dependencyProperty">Propiedad de dependencia.</param>
        <summary>Indica si un elemento especificado pertenece a una instancia de una plantilla que define un valor para la propiedad especificada que puede cambiar en tiempo de ejecución según los cambios que se produzcan en cualquier otra parte.</summary>
        <returns><see langword="true" /> si <paramref name="elementInTemplate" /> pertenece a una instancia de una plantilla que define un valor para la propiedad especificada que puede cambiar en tiempo de ejecución según los cambios que se produzcan en cualquier otra parte; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Ejemplos de valores que pueden cambiar en tiempo de ejecución según los cambios en otros lugares son los valores establecidos por <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> y <xref:System.Windows.DynamicResourceExtension> objetos.

Este método proporciona más información en los casos donde el valor de la <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> propiedad es <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.
La información es principalmente de uso para las herramientas de diagnóstico.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>