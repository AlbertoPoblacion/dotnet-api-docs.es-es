<Type Name="TemplateVisualStateAttribute" FullName="System.Windows.TemplateVisualStateAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a69249690f1e064f462a6ca645a0bd3f16bec666" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36456700" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TemplateVisualStateAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TemplateVisualStateAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TemplateVisualStateAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TemplateVisualStateAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class TemplateVisualStateAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type TemplateVisualStateAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica que un control puede estar en un estado determinado y que se espera <see cref="T:System.Windows.VisualState" /> en el objeto <see cref="T:System.Windows.Controls.ControlTemplate" /> del control.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autores de controles utilizan este atributo para especificar el <xref:System.Windows.VisualState> y <xref:System.Windows.VisualStateGroup> objetos que pertenecen a su control <xref:System.Windows.Controls.ControlTemplate>.  Por ejemplo, suponga que crea un nuevo control que tiene dos estados visuales denominados `Focused` y `Unfocused`, tanto de que se encuentran en un <xref:System.Windows.VisualStateGroup> denominado `FocusStates`.  Especificar <xref:System.Windows.Controls.ControlTemplate> autores que pueden utilizar esos estados visuales, agregue dos <xref:System.Windows.TemplateVisualStateAttribute> atributos para la firma de la clase del control.  Especificar que la <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> propiedad es `FocusStates` y que la <xref:System.Windows.TemplateVisualStateAttribute.Name%2A> propiedad es `Focused` para uno y `Unfocused` para los demás.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la firma de la clase para el `NumericUpDown` control.  Este ejemplo especifica que el `NumericUpDown` control usa cuatro estados visuales.  Dos Estados, denominados `Positive` y `Negative`, están en el <xref:System.Windows.VisualStateGroup> denominado `ValueStates`.  Nombre de los otros dos Estados, `Focused` y `Unfocused`, están en el <xref:System.Windows.VisualStateGroup> denominado `FocusedStates`.  Para obtener el ejemplo completo, vea [crear un Control que tiene una apariencia personalizable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TemplateVisualStateAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TemplateVisualStateAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TemplateVisualStateAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.TemplateVisualStateAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupName">
      <MemberSignature Language="C#" Value="public string GroupName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupName : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.GroupName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del grupo al que pertenece el estado.</summary>
        <value>Nombre del objeto <see cref="T:System.Windows.VisualStateGroup" /> al que pertenece el estado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> propiedad se corresponde con el <xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=nameWithType> propiedad de un <xref:System.Windows.VisualStateGroup> objeto. Para especificar qué <xref:System.Windows.VisualStateGroup> una <xref:System.Windows.VisualState> pertenece, establecer el <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la firma de la clase para el `NumericUpDown` control.  Este ejemplo especifica que el `NumericUpDown` control usa cuatro estados visuales.  Dos Estados, denominados `Positive` y `Negative`, están en el <xref:System.Windows.VisualStateGroup> denominado `ValueStates`.  Nombre de los otros dos Estados, `Focused` y `Unfocused`, están en el <xref:System.Windows.VisualStateGroup> denominado `FocusedStates`.  Para obtener el ejemplo completo, vea [crear un Control que tiene una apariencia personalizable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.TemplateVisualStateAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del estado en el que puede estar el control.</summary>
        <value>Nombre del estado en el que puede estar el control.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> propiedad se corresponde con el <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> propiedad de un <xref:System.Windows.VisualState>. Para especificar qué <xref:System.Windows.VisualState> pertenece a un control <xref:System.Windows.Controls.ControlTemplate>, establezca el <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra la firma de la clase para el `NumericUpDown` control.  Este ejemplo especifica que el `NumericUpDown` control usa cuatro estados visuales.  Dos Estados, denominados `Positive` y `Negative`, están en el <xref:System.Windows.VisualStateGroup> denominado `ValueStates`.  Nombre de los otros dos Estados, `Focused` y `Unfocused`, están en el <xref:System.Windows.VisualStateGroup> denominado `FocusedStates`.  Para obtener el ejemplo completo, vea [crear un Control que tiene una apariencia personalizable](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 [!code-csharp[VSMCustomControl#ClassAttributes](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/numericupdown.cs#classattributes)]
 [!code-vb[VSMCustomControl#ClassAttributes](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/numericupdown.vb#classattributes)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>