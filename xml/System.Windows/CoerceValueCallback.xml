<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bc1a383fe21e6b9b549e0ccda7aa8c21c6f92d9f" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37493668" /></Metadata><TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <TypeSignature Language="F#" Value="type CoerceValueCallback = delegate of DependencyObject * obj -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">Objeto en el que existe la propiedad. Cuando se invoca la devolución de llamada, el sistema de propiedades pasará este valor.</param>
    <param name="baseValue">Nuevo valor de la propiedad, antes de cualquier intento de conversión.</param>
    <summary>Proporciona una plantilla para un método al que se llama cuando se vuelve a evaluar el valor de una propiedad de dependencia o cuando se solicita específicamente la conversión.</summary>
    <returns>Valor convertido (con el tipo apropiado).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las devoluciones de llamada según <xref:System.Windows.CoerceValueCallback> puede asignarse a una propiedad de dependencia a través de varias técnicas diferentes. Cada una de estas técnicas requiere que primero cree un nuevo objeto de metadatos de propiedad (<xref:System.Windows.PropertyMetadata>, o una clase derivada como <xref:System.Windows.FrameworkPropertyMetadata>). Crear el objeto de metadatos mediante una firma del constructor que toma el `coerceValueCallback` parámetro y asignar ese parámetro al controlador de devolución de llamada. O generar los metadatos por cualquier firma y establezca el <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> propiedad antes de colocar los metadatos en uso.  
  
 Cuando tenga estos metadatos, puede:  
  
-   Definir una nueva propiedad de dependencia en una nueva clase, utilizando cualquiera de las firmas de <xref:System.Windows.DependencyProperty.Register%2A>, lo que proporciona los metadatos como el `typeMetadata` valor.  
  
-   Invalidar los metadatos (llamar a <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) para una propiedad de dependencia existente, al derivar de la clase que posee la propiedad de dependencia.  
  
-   Agregue una propiedad de dependencia existente a un nuevo <xref:System.Windows.DependencyObject> clase, utilizando los nuevos metadatos, mediante una llamada a <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.  
  
 Las implementaciones de esta devolución de llamada deben comprobar el valor `baseValue` y determinar según el valor o el tipo si se trata de un valor que deba convertirse aún más.  
  
 El <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> para una dependencia se invoca cada vez que el sistema de propiedades o cualquier otro autor de llamada llama a la propiedad <xref:System.Windows.DependencyObject.CoerceValue%2A> en un <xref:System.Windows.DependencyObject> instancia, especificando el identificador de la propiedad como el `dp`.  
  
 Los cambios realizados en el valor de propiedad pueden proceder de cualquier posible participante en el sistema de propiedades. Esto incluye los estilos, invalidación genérica, desencadenadores, herencia de valores de propiedad y valor local.  
  
 Por lo general debe evitar especificar más de una <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> para cualquier propiedad de dependencia de dada (reemplaza o agrega con nuevos metadatos para una propiedad de dependencia que ya tenía un <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>). Solo una de las devoluciones de llamada podrá actuar. La devolución de llamada que actúa será el que se aplicó a la clase más derivada en la herencia en comparación con el <xref:System.Windows.DependencyObject> llamador. Cuando se invalidan los metadatos, se reemplazan otras devoluciones de llamada como asignadas a los metadatos para la propiedad de dependencia tal como se encontraban superior en la jerarquía del propietario.  
  
   
  
## Examples  
 El ejemplo siguiente incluye una implementación de esta devolución de llamada para convertir el valor almacenado de una propiedad de dependencia basado en otras entradas, como el valor de otra propiedad. En este caso, la devolución de llamada comprueba si el `ShirtType` propiedad se corresponde con un tipo de camisa que tiene botones; si es así establece un color predeterminado inicial para el `ButtonColor`, si el tipo de la camisa no tiene ningún botón, convierte el `ButtonColor` valor a un valor inicial, lo que hace que el [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (no mostrado) para quitar esa lista desplegable de las opciones efectivas.  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>