<Type Name="UIElement" FullName="System.Windows.UIElement">
  <TypeSignature Language="C#" Value="public class UIElement : System.Windows.Media.Visual, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi UIElement extends System.Windows.Media.Visual implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement" />
  <TypeSignature Language="VB.NET" Value="Public Class UIElement&#xA;Inherits Visual&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement : System::Windows::Media::Visual, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Visual</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.UidProperty("Uid")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dfcc8-101"><see cref="T:System.Windows.UIElement" /> es una clase base para implementaciones de nivel de núcleo de WPF que se compila a partir de características básicas de presentación y elementos de Windows Presentation Foundation (WPF).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-101"><see cref="T:System.Windows.UIElement" /> is a base class for WPF core level implementations building on Windows Presentation Foundation (WPF) elements and basic presentation characteristics.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-102"><xref:System.Windows.UIElement> Proporciona un punto de partida para las características de diseño de elemento y también expone los métodos virtuales que las clases derivadas pueden invalidar, que puede influir en el comportamiento del elemento y su elemento secundario de la representación, elementos de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-102"><xref:System.Windows.UIElement> provides a starting point for element layout characteristics, and also exposes virtual methods that derived classes can override, which can influence the layout rendering behavior of the element and its child elements.</span></span>  
  
 <span data-ttu-id="dfcc8-103">Gran parte de la entrada y resaltar el comportamiento de los elementos en general también se define en la <xref:System.Windows.UIElement> clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-103">Much of the input and focusing behavior for elements in general is also defined in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="dfcc8-104">Esto incluye los eventos de teclado, mouse y entrada de lápiz y propiedades de estado relacionadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-104">This includes the events for keyboard, mouse and stylus input, and related status properties.</span></span> <span data-ttu-id="dfcc8-105">Muchos de estos eventos son eventos enrutados, y muchos de los eventos relacionados con las entradas tienen ambos un enrutamiento de propagación versión, así como una versión de túnel del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-105">Many of these events are routed events, and many of the input-related events have both a bubbling routing version as well as a tunneling version of the event.</span></span> <span data-ttu-id="dfcc8-106">Estos eventos emparejados son normalmente los eventos de mayor interés para los autores de controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-106">These paired events are typically the events of greatest interest to control authors.</span></span>  
  
 <span data-ttu-id="dfcc8-107"><xref:System.Windows.UIElement> También incluye [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] relacionados con el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] el modelo de evento, incluidos los métodos que pueden generar especificadas eventos enrutan que se obtienen de una instancia del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-107"><xref:System.Windows.UIElement> also includes [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that relate to the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] event model, including methods that can raise specified routed events that are sourced from an element instance.</span></span>  
  
 <span data-ttu-id="dfcc8-108">En cuanto a la arquitectura, <xref:System.Windows.UIElement> pueden considerarse prácticamente equivalente a un identificador de ventana en [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programación o en un elemento [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] de programación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-108">In terms of architecture, <xref:System.Windows.UIElement> can be considered roughly equivalent to a window handle in [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] programming, or an Element in [!INCLUDE[TLA#tla_dhtml](~/includes/tlasharptla-dhtml-md.md)] programming.</span></span> <span data-ttu-id="dfcc8-109"><xref:System.Windows.UIElement> es un elemento base en el nivel de núcleo WPF.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-109"><xref:System.Windows.UIElement> is a base element at the WPF core level.</span></span>  
  
 <span data-ttu-id="dfcc8-110">A <xref:System.Windows.UIElement> tiene las siguientes capacidades que se han definido específicamente por la <xref:System.Windows.UIElement> clase:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-110">A <xref:System.Windows.UIElement> has the following capabilities that are specifically defined by the <xref:System.Windows.UIElement> class:</span></span>  
  
-   <span data-ttu-id="dfcc8-111">Puede representar como un elemento secundario (<xref:System.Windows.UIElement> deriva de <xref:System.Windows.Media.Visual>, una clase de gráficos de nivel superior)</span><span class="sxs-lookup"><span data-stu-id="dfcc8-111">Can render as a child element (<xref:System.Windows.UIElement> derives from <xref:System.Windows.Media.Visual>, a high level graphics class)</span></span>  
  
-   <span data-ttu-id="dfcc8-112">Contiene la lógica que se usa para cambiar el tamaño y la posición de posibles elementos secundarios de un <xref:System.Windows.UIElement> (cuando lo interpreta un sistema de diseño)</span><span class="sxs-lookup"><span data-stu-id="dfcc8-112">Contains logic that is used to size and position possible child elements of a <xref:System.Windows.UIElement> (when interpreted by a layout system)</span></span>  
  
-   <span data-ttu-id="dfcc8-113">Puede responder a los proporcionados por el usuario (incluido el control de donde se envían los datos a través del control del evento enrutamiento o el enrutamiento de comandos)</span><span class="sxs-lookup"><span data-stu-id="dfcc8-113">Can respond to user input (including control of where input is getting sent to via their handling of event routing, or routing of commands)</span></span>  
  
-   <span data-ttu-id="dfcc8-114">Puede provocar eventos enrutados que atraviesan una ruta en el árbol lógico de elementos</span><span class="sxs-lookup"><span data-stu-id="dfcc8-114">Can raise routed events that travel a route through the logical element tree</span></span>  
  
-   <span data-ttu-id="dfcc8-115">Es compatible con algunos aspectos del sistema de animación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-115">Supports some aspects of the animation system</span></span>  
  
 <span data-ttu-id="dfcc8-116"><xref:System.Windows.FrameworkElement> es la clase de implementación de nivel de marco WPF que se basa en <xref:System.Windows.UIElement>y agrega las interacciones específicas con el nivel de marco WPF.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-116"><xref:System.Windows.FrameworkElement> is the WPF framework-level implementation class that builds on <xref:System.Windows.UIElement>, and adds specific interactions with the WPF framework level.</span></span> <span data-ttu-id="dfcc8-117"><xref:System.Windows.FrameworkElement> Agrega y define las siguientes capacidades:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-117"><xref:System.Windows.FrameworkElement> adds and defines the following capabilities:</span></span>  
  
-   <span data-ttu-id="dfcc8-118">Características de diseño específicas del marco adicionales</span><span class="sxs-lookup"><span data-stu-id="dfcc8-118">Additional framework-specific layout characteristics</span></span>  
  
-   <span data-ttu-id="dfcc8-119">Compatibilidad con informes en las propiedades de metadatos enriquecidos</span><span class="sxs-lookup"><span data-stu-id="dfcc8-119">Support for richer metadata reporting on properties</span></span>  
  
-   <span data-ttu-id="dfcc8-120">Implementación específica de la clase de ciertas clases base y sus propiedades asociadas de entrada o eventos adjuntos</span><span class="sxs-lookup"><span data-stu-id="dfcc8-120">Class-specific implementation of certain input base classes and their attached properties or attached events</span></span>  
  
-   <span data-ttu-id="dfcc8-121">Compatibilidad con estilos</span><span class="sxs-lookup"><span data-stu-id="dfcc8-121">Style support</span></span>  
  
-   <span data-ttu-id="dfcc8-122">Compatibilidad con más de animación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-122">Further animation support</span></span>  
  
 <span data-ttu-id="dfcc8-123">Otro relacionados con la clase es <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-123">Another related class is <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="dfcc8-124">El <xref:System.Windows.ContentElement> clase implementa muchos de los mismos miembros que hace <xref:System.Windows.UIElement>; la diferencia entre estas dos clases tiene que con su lugar concebido en el modelo de contenido global.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-124">The <xref:System.Windows.ContentElement> class implements many of the same members as does <xref:System.Windows.UIElement>; the difference between these two classes has to do with their intended place in the overall content model.</span></span> <span data-ttu-id="dfcc8-125">Un <xref:System.Windows.UIElement> clase derivada define normalmente un modelo de contenido relativamente rígido, lo que significa que no hay restricciones sobre qué elementos pueden ser elementos secundarios de marcado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-125">A <xref:System.Windows.UIElement> derived class typically defines a relatively rigid content model, meaning that there are restrictions on what elements may be child elements in markup.</span></span> <span data-ttu-id="dfcc8-126">Podría haber capacidad para realizar menos restrictivo contenido secundario un <xref:System.Windows.UIElement>, pero esa capacidad se centraliza normalmente en Propiedades de contenido designadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-126">There might be capacity for taking less restrictive child content in a <xref:System.Windows.UIElement>, but that capacity is typically centralized in designated content properties.</span></span> <span data-ttu-id="dfcc8-127">Un <xref:System.Windows.ContentElement> clase derivada no suele ser tan restrictiva sobre el contenido, para admitir escenarios como los documentos con formato de flujo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-127">A <xref:System.Windows.ContentElement> derived class is typically not as restrictive about content, to support scenarios such as flow-format documents.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dfcc8-128"><xref:System.Windows.UIElement.Visibility%2A> estado afecta a todas las entradas de control de ese elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-128"><xref:System.Windows.UIElement.Visibility%2A> state affects all input handling by that element.</span></span> <span data-ttu-id="dfcc8-129">Elementos que no están visibles no participan en la prueba de posicionamiento y no recibe eventos de entrada, incluso si el mouse está encima de los límites que el elemento estaría si estaban visibles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-129">Elements that are not visible do not participate in hit testing and do not receive input events, even if the mouse is over the bounds where the element would be if were visible.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UIElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UIElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-130">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-130">Initializes a new instance of the <see cref="T:System.Windows.UIElement" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-131">Crear una nueva instancia que es realmente del tipo <xref:System.Windows.UIElement> es raro que aparezcan en el código de aplicación, porque <xref:System.Windows.UIElement> es un elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-131">Creating a new instance that is actually of type <xref:System.Windows.UIElement> is uncommon in application code, because <xref:System.Windows.UIElement> is a base element.</span></span> <span data-ttu-id="dfcc8-132">Vea [Base información general de elementos](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-132">See [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfcc8-133">Agrega un controlador de eventos enrutados para un evento enrutado especificado. Para ello, agrega el controlador a la colección de controladores en el elemento actual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-133">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="dfcc8-134">Identificador del evento enrutado que se va a controlar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-134">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="dfcc8-135">Referencia a la implementación del controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-135">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="dfcc8-136">Agrega un controlador de eventos enrutados para un evento enrutado especificado. Para ello, agrega el controlador a la colección de controladores en el elemento actual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-136">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-137">Puede agregar el mismo controlador para el mismo evento varias veces sin que se produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-137">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="dfcc8-138">Sin embargo, realmente se invoca varias veces cuando se controla el evento al controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-138">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="dfcc8-139">Por lo tanto, tenga en cuenta cómo este comportamiento podría tener efectos secundarios que deben tenerse en cuenta en la implementación del controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-139">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-140">Este método se utiliza normalmente para proporcionar la implementación del descriptor de acceso "Agregar" para el [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] patrón de acceso de eventos de un evento enrutado personalizado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-140">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="dfcc8-141">Identificador del evento enrutado que se va a controlar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-141">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="dfcc8-142">Referencia a la implementación del controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-142">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo">
          <span data-ttu-id="dfcc8-143"><see langword="true" /> para registrar el controlador invocado, aunque el evento enrutado esté marcado como controlado en los datos de evento; <see langword="false" /> para registrar el controlador con la condición predeterminada de que no se invocará si el evento enrutado ya está marcado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-143"><see langword="true" /> to register the handler such that it is invoked even when  the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
 <span data-ttu-id="dfcc8-144">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-144">The default is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="dfcc8-145">No solicite de manera rutinaria volver a controlar un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-145">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-146">Agrega un controlador de eventos enrutados para un evento enrutado especificado. Para ello, agrega el controlador a la colección de controladores en el elemento actual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-146">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="dfcc8-147">Especifique <paramref name="handledEventsToo" /> como <see langword="true" /> para que el controlador proporcionado se invoque para eventos enrutados que estén marcados como controlados por otro elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-147">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-148">Procesamiento de eventos de entrada de bajo nivel de una manera práctica es una tarea compleja.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-148">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="dfcc8-149">Muchos controles implementan el comportamiento en un determinado evento está marcado como controlado y se reemplaza por otro evento más intuitivo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-149">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="dfcc8-150">Por lo general, un control solo marcar un evento de entrada de plataforma como controlado si hay alguna intención de diseño para hacerlo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-150">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="dfcc8-151">En determinados escenarios, esas intenciones de diseño podrían no ser lo que requiere el control concreto del evento de entrada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-151">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="dfcc8-152">Para estos escenarios es que registrar los controladores `handledEventsToo` como `true` es adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-152">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="dfcc8-153">Pero no debe hacerlo periódicamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-153">But you should not do this routinely.</span></span> <span data-ttu-id="dfcc8-154">Invocar los controladores en respuesta a todos los eventos aunque controlen se complican su propia lógica de procesamiento de eventos de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-154">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="dfcc8-155">Puede ver una disminución del rendimiento si la lógica de controlador es sustancial.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-155">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="dfcc8-156">Debe reservar el uso de adjuntar controladores de eventos ya controlados para las situaciones donde ya ha detectado durante el proceso de desarrollo que ciertos controles están controlando eventos que desea administrar con lógica de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-156">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="dfcc8-157">Otra técnica para evitar el uso de la clase de comportamiento de ciertas combinaciones de control de eventos de control consiste en utilizar alternativa de vista previa de ese evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-157">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="dfcc8-158">Por ejemplo, si <xref:System.Windows.UIElement.MouseLeftButtonDown> está marcado como controlado por el control de clases, es posible que pueda agregar controladores para <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-158">For example, if <xref:System.Windows.UIElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="dfcc8-159">Puede agregar el mismo controlador para el mismo evento varias veces sin que se produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-159">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="dfcc8-160">Sin embargo, realmente se invoca varias veces cuando se controla el evento al controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-160">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="dfcc8-161">Por lo tanto, tenga en cuenta cómo este comportamiento podría tener efectos secundarios que deben tenerse en cuenta en la implementación del controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-161">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-162">Este método se utiliza normalmente para proporcionar la implementación del descriptor de acceso "Agregar" para el [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] patrón de acceso de eventos de un evento enrutado personalizado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-162">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-163">En el ejemplo siguiente se implementa un controlador que se invoca en el <xref:System.Windows.FrameworkElement.Initialized> eventos en una página que asocia un controlador definido a uno de los elementos con nombre en la página mediante `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-163">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="dfcc8-164">Este controlador se invocaría incluso si los datos del evento compartidos como administrados antes de alcanzar el elemento de control de la ruta de marcado de otro elemento en la ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-164">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="dfcc8-165">Ruta de evento a la que se agregan los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-165">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="dfcc8-166">Datos de evento que se usan para agregar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-166">The event data that is used to add the handlers.</span></span> <span data-ttu-id="dfcc8-167">Este método utiliza la propiedad <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> de los datos de evento para crear los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-167">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the event data to create the handlers.</span></span></param>
        <summary><span data-ttu-id="dfcc8-168">Agregue controladores al objeto <see cref="T:System.Windows.EventRoute" /> especificado para la colección de controladores de eventos <see cref="T:System.Windows.UIElement" /> actual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-168">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.UIElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-169">Este método se puede utilizar elementos host de contenido (ya sean los que implementan <xref:System.Windows.IContentHost> o los que no) para agregar controladores para los elementos secundarios a la <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-169">This method can be used by content host elements (either those that implement <xref:System.Windows.IContentHost> or those that don't) to add handlers for child elements to the <xref:System.Windows.EventRoute>.</span></span> <span data-ttu-id="dfcc8-170">Normalmente, esto no es necesario para <xref:System.Windows.UIElement>, porque los controladores se agregan automáticamente para todos los elementos que se encuentra en un árbol lógico completado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-170">Ordinarily, this is not required for <xref:System.Windows.UIElement>, because handlers are automatically added for all elements found in a completed logical tree.</span></span> <span data-ttu-id="dfcc8-171">Sin embargo, en algunos casos donde <xref:System.Windows.ContentElement> y <xref:System.Windows.UIElement> se mezclan en árboles con plantilla, intermedias elementos que provienen de la plantilla tienen que agregarse a una ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-171">However, in some cases where <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are mixed in templated trees, intervening elements that came from the template need to be added to a route.</span></span> <span data-ttu-id="dfcc8-172">Ambos <xref:System.Windows.ContentElement> y <xref:System.Windows.UIElement> admite una versión de este método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-172">Both <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> support a version of this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-173">Obtiene o establece un valor que indica si este elemento se puede usar como destino de una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-173">Gets or sets a value indicating whether this element can be used as the target of a drag-and-drop operation.</span></span>  <span data-ttu-id="dfcc8-174">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-174">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-175"><see langword="true" /> si este elemento se puede usar como destino de una operación de arrastrar y colocar; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-175"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-176">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-176">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-177">Operaciones de arrastrar y colocar no están habilitadas de forma predeterminada y debe habilitarse deliberadamente estableciendo <xref:System.Windows.UIElement.AllowDrop%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-177">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.UIElement.AllowDrop%2A> to `true`.</span></span> <span data-ttu-id="dfcc8-178">Más allá de esta configuración básica, el comportamiento de arrastrar y colocar es totalmente específico de la implementación y no está definido por <xref:System.Windows.UIElement> o cualquier otra clase de elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-178">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.UIElement> or any other base element class.</span></span> <span data-ttu-id="dfcc8-179">Determinados controles como, por ejemplo, <xref:System.Windows.Controls.RichTextBox>, tiene un comportamiento predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-179">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior.</span></span> <span data-ttu-id="dfcc8-180">Para obtener más información acerca de arrastrar y colocar, vea [de arrastrar y colocar, información general sobre](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-180">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="dfcc8-181"><xref:System.Windows.FrameworkElement> invalida los metadatos de esta propiedad de dependencia en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-181"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="dfcc8-182">En concreto, <xref:System.Windows.FrameworkElement> designa esta propiedad para permitir la herencia del valor de propiedad (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> es `true` en los metadatos).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-182">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="dfcc8-183">Herencia de valores de propiedad en este contexto significa que si hay elementos secundarios con ningún otro valor para <xref:System.Windows.UIElement.AllowDrop%2A> asignado a través de valores o estilos, el valor del elemento primario más cercano que tenga asignado este valor (de nuevo, ya sea en estilos, valores predeterminados o un valor local), locales, a continuación, se le asignará el valor del elemento primario para todos los elementos secundarios no asignados previamente por el sistema de propiedades.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-183">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from the parent element will be assigned to all previously unassigned child elements by the property system.</span></span> <span data-ttu-id="dfcc8-184">En la práctica, esto significa que puede especificar si desea permitir que las operaciones de colocar en el elemento raíz y que el valor se propagará a todos los elementos secundarios que tengan específicamente no asignarlo como `false`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-184">In practice this means that you can specify whether to allow drop operations at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-185">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-185">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-186">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-186">Identifier field</span></span>|<xref:System.Windows.UIElement.AllowDropProperty>|  
|<span data-ttu-id="dfcc8-187">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-187">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-188">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-188">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-189">El ejemplo de marcado siguiente se establece la <xref:System.Windows.UIElement.AllowDrop%2A> propiedad `true` mediante un atributo en un <xref:System.Windows.Controls.TextBox>, así como otra configuración relacionada con propiedades que, de forma agregada, permiten que <xref:System.Windows.Controls.TextBox> a ser el destino de un objeto de datos de texto multilínea cuando se arrastra.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-189">The following markup example sets the <xref:System.Windows.UIElement.AllowDrop%2A> property `true` using an attribute on a <xref:System.Windows.Controls.TextBox>, as well as setting some other related properties that in aggregate enable that <xref:System.Windows.Controls.TextBox> to be the target of a multiline text data object when it is dragged in.</span></span> <span data-ttu-id="dfcc8-190">Para obtener un ejemplo completo, vea [cargar una muestra de archivo quitado](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-190">For the complete sample, see [Load a Dropped File Sample](http://msdn.microsoft.com/library/be90d645-dd61-4f53-93bb-87902d086ef7).</span></span>  
  
 [!code-xaml[DragDrop_DropOpenTextFile#UIElementAllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/DragDrop_DropOpenTextFile/CS/window1.xaml#uielementallowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-191">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.AllowDrop" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-191">Identifies the <see cref="P:System.Windows.UIElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfcc8-192">Aplica una animación a una propiedad de dependencia especificada en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-192">Applies an animation to a specified dependency property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-193">Este método está sellado y no se puede invalidar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-193">This method is sealed and cannot be overridden.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="dfcc8-194">Identificador de la propiedad que se animará.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-194">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="dfcc8-195">Reloj de animación que controla y declara la animación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-195">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="dfcc8-196">Aplica una animación a una propiedad de dependencia especificada en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-196">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="dfcc8-197">Se detiene cualquier animación existente y se reemplaza con la nueva animación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-197">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-198">Para quitar una animación de una propiedad, especifique el identificador de esa propiedad como `dp` y especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-198">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="dfcc8-199">Esto quita la animación y la propiedad animada se establece en su valor base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-199">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="dfcc8-200">Sin embargo, no se detiene el reloj de animación asociada originalmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-200">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="dfcc8-201">Cualquier otra animación asignada a ese reloj continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-201">Any other animations assigned to that clock will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-202">En el ejemplo siguiente, un <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` tiene una animación de tiempo particular aplicada a ella mediante una llamada a <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span><span class="sxs-lookup"><span data-stu-id="dfcc8-202">In the following example, a <xref:System.Windows.Shapes.Rectangle> `myAnimatedRectangle` has a particular timing animation applied to it by calling <xref:System.Windows.UIElement.ApplyAnimationClock%2A> .</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/ClockControllerSpeedRatioExample.cs#uielementapplyanimationclock)]
 [!code-vb[timingbehaviors_procedural_snip#UIElementApplyAnimationClock](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/clockcontrollerspeedratioexample.vb#uielementapplyanimationclock)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="dfcc8-203">Propiedad que se va a animar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-203">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="dfcc8-204">Reloj de animación que controla y declara la animación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-204">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="dfcc8-205">Valor de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-205">A value of the enumeration.</span></span> <span data-ttu-id="dfcc8-206">El valor predeterminado es <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, que detendrá cualquier animación existente y la reemplazará por una nueva.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-206">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="dfcc8-207">Aplica una animación a una propiedad de dependencia especificada en este elemento, con capacidad para especificar lo que ocurre si la propiedad ya tiene una animación en ejecución.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-207">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-208">Para quitar una animación de una propiedad, especifique el identificador de esa propiedad como `dp` y especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-208">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="dfcc8-209">Esto quita la animación y la propiedad animada se establece en su valor base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-209">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="dfcc8-210">Sin embargo, no se detiene el reloj de animación asociada originalmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-210">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="dfcc8-211">Cualquier otra animación asignada a ese reloj continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-211">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-212">Obtiene un valor que indica si se captura al menos una entrada táctil en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-212">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-213">Es <see langword="true" /> si se captura al menos una entrada táctil en este elemento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-213"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-214">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-214">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-215">Obtiene un valor que indica si se captura al menos una entrada táctil en este elemento o en cualquier elemento secundario de su árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-215">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-216">Es <see langword="true" /> si se captura al menos una entrada táctil en este elemento o en cualquier elemento secundario de su árbol visual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-216"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-217">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-217">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-218">Obtiene un valor que indica si se presiona al menos una entrada táctil sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-218">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-219">Es <see langword="true" /> si se presiona al menos una entrada táctil sobre este elemento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-219"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-220">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-220">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-221">Obtiene un valor que indica si se presiona al menos una entrada táctil sobre este elemento o sobre cualquier elemento secundario de su árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-221">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-222">Es <see langword="true" /> si se presiona al menos una entrada táctil sobre este elemento o sobre cualquier elemento secundario de su árbol visual; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-222"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-223">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-223">Identifies the <see cref="P:System.Windows.UIElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Arrange">
      <MemberSignature Language="C#" Value="public void Arrange (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Arrange(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Arrange (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Arrange(System::Windows::Rect finalRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="dfcc8-224">Tamaño final que el elemento primario calcula para el elemento secundario, y que se proporciona como una instancia <see cref="T:System.Windows.Rect" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-224">The final size that the parent computes for the child element, provided as a <see cref="T:System.Windows.Rect" /> instance.</span></span></param>
        <summary><span data-ttu-id="dfcc8-225">Coloca los elementos secundarios y determina un tamaño para un <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-225">Positions child elements and determines a size for a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="dfcc8-226">Los elementos primarios llaman a este método desde su implementación de <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (o un equivalente de nivel de marco WPF) para formar una actualización de diseño recursiva.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-226">Parent elements call this method from their <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> implementation (or a WPF framework-level equivalent) to form a recursive layout update.</span></span> <span data-ttu-id="dfcc8-227">Este método constituye el segundo paso de una actualización de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-227">This method constitutes the second pass of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-228">Para el elemento de nivel de marco WPF derivar escenarios, el comportamiento de <xref:System.Windows.UIElement.Arrange%2A> no deberían (y no es posible, a menos que sombrea) puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-228">For WPF framework-level element deriving scenarios, behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="dfcc8-229">En su lugar, debe invalidar el <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementación en la clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-229">Instead, you should override the <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation in your class.</span></span> <span data-ttu-id="dfcc8-230">Su <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> se llama internamente a implementación <xref:System.Windows.UIElement.Arrange%2A> como parte de las operaciones de diseño de nivel de marco WPF predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-230">Your <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="dfcc8-231">Su <xref:System.Windows.UIElement.ArrangeCore%2A> implementación también debe llamar a <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> en cada elemento secundario, si tiene elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-231">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.FrameworkElement.ArrangeOverride%2A> on each child element, if it has child elements.</span></span>  
  
 <span data-ttu-id="dfcc8-232">Para el elemento de nivel de núcleo WPF derivar escenarios, el comportamiento de <xref:System.Windows.UIElement.Arrange%2A> no deberían (y no es posible, a menos que sombrea) puede cambiar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-232">For WPF core-level element deriving scenarios, the behavior for <xref:System.Windows.UIElement.Arrange%2A> should not (and cannot, unless you shadow) be changed.</span></span> <span data-ttu-id="dfcc8-233">En su lugar, debe invalidar <xref:System.Windows.UIElement.ArrangeCore%2A> en su clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-233">Instead, you should override <xref:System.Windows.UIElement.ArrangeCore%2A> in your class.</span></span> <span data-ttu-id="dfcc8-234">Su <xref:System.Windows.UIElement.ArrangeCore%2A> se llama internamente a implementación <xref:System.Windows.UIElement.Arrange%2A> como parte de las operaciones de diseño de nivel de marco WPF predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-234">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation is called internally by <xref:System.Windows.UIElement.Arrange%2A> as part of default WPF framework-level layout operations.</span></span> <span data-ttu-id="dfcc8-235">Sin embargo, esto supone que está usando Diseño de nivel de marco WPF y su sistema de diseño, que a menudo no es el caso si va a derivar específicamente elementos en el núcleo de WPF desde la <xref:System.Windows.UIElement> clase de elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-235">However, this assumes you are using WPF framework-level layout and its layout system, which is often not the case if you are specifically deriving elements at the WPF core-level from the <xref:System.Windows.UIElement> base element class.</span></span> <span data-ttu-id="dfcc8-236">Su <xref:System.Windows.UIElement.ArrangeCore%2A> implementación también debe llamar a <xref:System.Windows.UIElement.Arrange%2A> en cada elemento secundario, si tiene elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-236">Your <xref:System.Windows.UIElement.ArrangeCore%2A> implementation should also call <xref:System.Windows.UIElement.Arrange%2A> on each child element, if it has child elements.</span></span> <span data-ttu-id="dfcc8-237">Tenga en cuenta que el escenario de nivel de núcleo WPF implica que no está usando un <xref:System.Windows.FrameworkElement> clase derivada, porque <xref:System.Windows.FrameworkElement> sellos <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-237">Note that the WPF core-level scenario implies that you are not using a <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-238">Cálculo de la posición del diseño de nivel de marco WPF en [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consta de un <xref:System.Windows.UIElement.Measure%2A> llamar y un <xref:System.Windows.UIElement.Arrange%2A> llamar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-238">Computation of WPF framework-level layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] consists of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="dfcc8-239">Durante la <xref:System.Windows.UIElement.Measure%2A> llamada, el sistema de diseño determina los requisitos de tamaño de un elemento mediante proporcionado <xref:System.Windows.Size> (`availableSize`) argumentos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-239">During the <xref:System.Windows.UIElement.Measure%2A> call, the layout system determines an element's size requirements using a provided <xref:System.Windows.Size> (`availableSize`) argument.</span></span> <span data-ttu-id="dfcc8-240">Durante la <xref:System.Windows.UIElement.Arrange%2A> llamada, el sistema de diseño finaliza el tamaño y posición de un elemento del cuadro de límite.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-240">During the <xref:System.Windows.UIElement.Arrange%2A> call, the layout system finalizes the size and position of an element's bounding box.</span></span>  <span data-ttu-id="dfcc8-241">Para obtener más información, consulte [diseño](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-241">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 <span data-ttu-id="dfcc8-242">`availableSize` puede ser cualquier número de cero a infinito.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-242">`availableSize` can be any number from zero to infinity.</span></span> <span data-ttu-id="dfcc8-243">Elementos que se coloquen devuelven el mínimo <xref:System.Windows.Size> necesiten a través de la `availableSize` parámetro.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-243">Elements to be laid out return the minimum <xref:System.Windows.Size> they require through the `availableSize` parameter.</span></span>  
  
 <span data-ttu-id="dfcc8-244">Cuando primero se crea una instancia de un diseño, siempre recibe una <xref:System.Windows.UIElement.Measure%2A> llamar antes de <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-244">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="dfcc8-245">Sin embargo, después de la primera fase de diseño, puede recibir un <xref:System.Windows.UIElement.Arrange%2A> llamar sin una <xref:System.Windows.UIElement.Measure%2A>; Esto puede ocurrir cuando una propiedad que solo afecta a <xref:System.Windows.UIElement.Arrange%2A> se modifica (como la alineación), o cuando el elemento primario recibe un <xref:System.Windows.UIElement.Arrange%2A> sin un <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-245">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="dfcc8-246">A <xref:System.Windows.UIElement.Measure%2A> llamada invalidará automáticamente un <xref:System.Windows.UIElement.Arrange%2A> llamar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-246">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="dfcc8-247">Las actualizaciones de diseño se producen generalmente asincrónicamente (en un momento determinado por el sistema de diseño).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-247">Layout updates generally occur asynchronously (at a time determined by the layout system).</span></span> <span data-ttu-id="dfcc8-248">Un elemento podría no reflejar inmediatamente los cambios en las propiedades que afectan al tamaño del elemento (como <xref:System.Windows.FrameworkElement.Width%2A>).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-248">An element might not immediately reflect changes to properties that affect element sizing (such as <xref:System.Windows.FrameworkElement.Width%2A>).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dfcc8-249">Actualizaciones del diseño se pueden forzar mediante el uso de la <xref:System.Windows.UIElement.UpdateLayout%2A> método; sin embargo, al llamar a esta función no se recomienda, ya que normalmente no es necesario y puede provocar un rendimiento bajo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-249">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method; however, calling this function is not recommended, as it is usually unnecessary and can cause poor performance.</span></span> <span data-ttu-id="dfcc8-250">En muchas situaciones donde llamar a <xref:System.Windows.UIElement.UpdateLayout%2A> podría ser adecuado, el sistema de diseño probablemente ya está procesando las actualizaciones.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-250">In many situations where calling <xref:System.Windows.UIElement.UpdateLayout%2A> might be appropriate, the layout system will probably already be processing updates.</span></span> <span data-ttu-id="dfcc8-251">El sistema de diseño puede procesar los cambios de diseño de forma que pueda optimizar todas las actualizaciones necesarias como parte de un paquete.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-251">The layout system can process layout changes in a manner that can optimize all necessary updates as part of a package.</span></span>  
  
 <span data-ttu-id="dfcc8-252">El sistema de diseño mantiene dos colas independientes de diseños no válidos, uno para <xref:System.Windows.UIElement.Measure%2A> y otro para <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-252">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="dfcc8-253">La cola de diseño se ordena según el orden de los elementos en el árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-253">The layout queue is sorted based upon the order of elements in the visual tree.</span></span> <span data-ttu-id="dfcc8-254">Son superiores del árbol de elementos en la parte superior de la cola, con el fin de evitar diseños redundantes producidos por cambios repetidos en los elementos primarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-254">Elements higher in the tree are at the top of the queue, in order to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="dfcc8-255">Las entradas duplicadas se quitan automáticamente de la cola y los elementos se quitan automáticamente de la cola si ya son válidos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-255">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already valid.</span></span>  
  
 <span data-ttu-id="dfcc8-256">Al actualizar el diseño, la <xref:System.Windows.UIElement.Measure%2A> cola se vacía en primer lugar, seguido por el <xref:System.Windows.UIElement.Arrange%2A> cola.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-256">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="dfcc8-257">Un elemento en el <xref:System.Windows.UIElement.Arrange%2A> cola nunca se organizarán si hay un elemento en el <xref:System.Windows.UIElement.Measure%2A> cola.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-257">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected virtual void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect"><span data-ttu-id="dfcc8-258">Área final en el elemento primario que este elemento debe usar para organizarse a sí mismo y a sus elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-258">The final area within the parent that element should use to arrange itself and its child elements.</span></span></param>
        <summary><span data-ttu-id="dfcc8-259">Define la plantilla de definición del diseño de organización nivel básico de WPF.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-259">Defines the template for WPF core-level arrange layout definition.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="dfcc8-260">Invalidación de este método solo es adecuada si va a derivar en el nivel de núcleo WPF, y no está utilizando el sistema de diseño de nivel de marco WPF y <xref:System.Windows.FrameworkElement> clase derivada, porque <xref:System.Windows.FrameworkElement> sellos <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-260">Overriding this method is only appropriate if you are deriving at the WPF core-level, and you are not using the WPF framework-level layout system and <xref:System.Windows.FrameworkElement> derived class, because <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.FrameworkElement.ArrangeCore%2A>.</span></span> <span data-ttu-id="dfcc8-261">Si está utilizando el sistema de diseño de nivel de marco WPF, el método adecuado para invalidar de diseño específicos de la clase organizar el comportamiento es <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-261">If you are using the WPF framework-level layout system, the appropriate method to override for class-specific layout arrange behavior is <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-262"><xref:System.Windows.UIElement.ArrangeCore%2A> las implementaciones deben llamar a la implementación base para devolver un tamaño, a continuación, llame a la <xref:System.Windows.UIElement.Arrange%2A> método de cada elemento secundario visible y reconciliar los tamaños devueltos por estos <xref:System.Windows.UIElement.Arrange%2A> llamadas con el tamaño de la implementación base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-262"><xref:System.Windows.UIElement.ArrangeCore%2A> implementations should call the base implementation to return a size, then call the <xref:System.Windows.UIElement.Arrange%2A> method of each visible child element, and reconcile the sizes returned by these <xref:System.Windows.UIElement.Arrange%2A> calls with the size of the base implementation.</span></span> <span data-ttu-id="dfcc8-263">La lógica para el aspecto de conciliación de un <xref:System.Windows.UIElement.ArrangeCore%2A> implementación puede variar, según las características de diseño de su elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-263">The logic for the reconciliation aspect of a <xref:System.Windows.UIElement.ArrangeCore%2A> implementation might vary, depending on the layout characteristics of your element.</span></span> <span data-ttu-id="dfcc8-264">En la plantilla de ejemplo siguiente, `VisualChildren` es una propiedad hipotética que su elemento podría definir para ayudar a enumerar su contenido; <xref:System.Windows.UIElement> no define las colecciones de contenido en este nivel, la arquitectura de nivel de marco WPF aplaza el comportamiento del contenido para los elementos derivados como controles concretos o clases base de controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-264">In the following example template, `VisualChildren` is a hypothetical property that your element might define to help enumerate its content; <xref:System.Windows.UIElement> does not define content collections at this level, the WPF framework-level architecture defers content behavior to derived elements such as specific controls or control base classes.</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementarrangeoverride)]
 [!code-vb[CorePseudocode#UIElementArrangeOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementarrangeoverride)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-265">Si está desarrollando elementos en el nivel de núcleo WPF, debe invalidar este método para proporcionar a su elemento de nivel de núcleo WPF única organizar un comportamiento de diseño, o para crear un diseño correcto de decisiones acerca de los elementos secundarios de los elementos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-265">If you are developing elements at the WPF core level,you should override this method to give your WPF core-level element a unique arrange layout behavior, or to make proper layout decisions about the child elements of your elements.</span></span> <span data-ttu-id="dfcc8-266">Una invalidación podría ser necesaria si esos elementos secundarios no son reconocibles en un patrón definido como un <see cref="T:System.Windows.Controls.ItemCollection" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-266">An override might be necessary if those child elements are not recognizable from a defined pattern such as an <see cref="T:System.Windows.Controls.ItemCollection" />.</span></span>  
  
 <span data-ttu-id="dfcc8-267">Un elemento primario debe llamar a la clase específica <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> en cada elemento secundario, en caso contrario, esos elementos secundarios no se representan.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-267">A parent element must call the class-specific <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child element, otherwise those child elements are not rendered.</span></span></para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfcc8-268">Inicia una animación para una propiedad animada especificada en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-268">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="dfcc8-269">Propiedad que se va a animar, que se especifica como un identificador de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-269">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="dfcc8-270">Escala de tiempo de la animación que se va a iniciar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-270">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="dfcc8-271">Inicia una animación para una propiedad animada especificada en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-271">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-272">Al comprobar si una propiedad está animada, tenga en cuenta que la animación se iniciará y se considera como animada cuando se represente el primer fotograma más allá del punto de partida no animadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-272">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="dfcc8-273">Si el <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` es `null`, a continuación, se quitan las animaciones actuales y se mantiene el valor actual de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-273">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="dfcc8-274">Si toda la `animation` valor es `null`, todas las animaciones se quitan de la propiedad y el valor de propiedad se revierte a su valor base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-274">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="dfcc8-275">Sin embargo, la escala de tiempo de animación asociada originalmente no se detiene.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-275">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="dfcc8-276">Cualquier otra animación asignada a esa escala de tiempo continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-276">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-277">En el ejemplo siguiente se crea una animación, lo asigna y, a continuación, llama a <xref:System.Windows.UIElement.BeginAnimation%2A> para iniciarlo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-277">The following example creates an animation, assigns it, and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> to start it.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#beginanimation)]
 [!code-vb[timingbehaviors_procedural_snip#BeginAnimation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#beginanimation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="dfcc8-278">Propiedad que se va a animar, que se especifica como el identificador de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-278">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="dfcc8-279">Escala de tiempo de la animación que va a aplicarse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-279">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="dfcc8-280">Valor de la enumeración que especifica la interacción de la nueva animación con cualquier animación actual (en ejecución) que ya afecte el valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-280">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="dfcc8-281">Inicia una animación concreta para una propiedad animada especificada en este elemento, con la opción de especificar lo que ocurre si la propiedad ya tiene una animación en ejecución.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-281">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-282">Al comprobar si una propiedad está animada, tenga en cuenta que la animación se iniciará y se considera como animada cuando se represente el primer fotograma más allá del punto de partida no animadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-282">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="dfcc8-283">Si el <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` es `null`, a continuación, se quitan las animaciones actuales y se mantiene el valor actual de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-283">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="dfcc8-284">Si toda la `animation` valor es `null`, todas las animaciones se quitan de la propiedad y el valor de propiedad se revierte a su valor base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-284">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="dfcc8-285">Sin embargo, la escala de tiempo de animación asociada originalmente no se detiene.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-285">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="dfcc8-286">Cualquier otra animación asignada a esa escala de tiempo continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-286">Any other animations assigned to that timeline will continue to run.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-287">En el ejemplo siguiente se implementa un controlador que obtiene una animación existente de un recurso y, a continuación, llama <xref:System.Windows.UIElement.BeginAnimation%2A> con un comportamiento de entrega especificado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-287">The following example implements a handler that obtains an existing animation from a resource and then calls <xref:System.Windows.UIElement.BeginAnimation%2A> with a specified handoff behavior.</span></span>  
  
 [!code-csharp[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/csharp/VS_Snippets_Wpf/BrushesIntroduction/CSharp/SampleViewer.xaml.cs#beginanimationhandoff)]
 [!code-vb[BrushesIntroduction#BeginAnimationHandoff](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BrushesIntroduction/visualbasic/sampleviewer.xaml.vb#beginanimationhandoff)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffect BitmapEffect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffect BitmapEffect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffect" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffect As BitmapEffect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffect ^ BitmapEffect { System::Windows::Media::Effects::BitmapEffect ^ get(); void set(System::Windows::Media::Effects::BitmapEffect ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-288">Obtiene o establece un efecto de imagen que se aplica directamente al contenido representado de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-288">Gets or sets a bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="dfcc8-289">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-289">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-290">Efecto de imagen que se va a aplicar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-290">The bitmap effect to apply.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-291"><xref:System.Windows.Media.Effects.BitmapEffect> es un tipo abstracto, por lo tanto, la [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] uso requiere una clase derivada implementada de <xref:System.Windows.Media.Effects.BitmapEffect>, como <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-291"><xref:System.Windows.Media.Effects.BitmapEffect> is an abstract type, therefore the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage requires an implemented derived class of <xref:System.Windows.Media.Effects.BitmapEffect>, such as <xref:System.Windows.Media.Effects.OuterGlowBitmapEffect>.</span></span> <span data-ttu-id="dfcc8-292">Tenga en cuenta que una clase derivada implementada es un tipo de colección que le permite especificar más de uno secuencial <xref:System.Windows.Media.Effects.BitmapEffect>, mediante una sintaxis de las etiquetas anidadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-292">Note that one implemented derived class is a collection type that allows you to specify more than one sequential <xref:System.Windows.Media.Effects.BitmapEffect>, using a nested tag syntax.</span></span>  
  
 <span data-ttu-id="dfcc8-293">Ninguna clase derivada de <xref:System.Windows.Media.Effects.BitmapEffect> admite un convertidor de tipos, por lo que el [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxis que se utiliza para esta propiedad generalmente es la sintaxis de elemento de propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-293">No existing derived class of <xref:System.Windows.Media.Effects.BitmapEffect> supports a type converter, so the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax that you use for this property is generally property element syntax.</span></span>  
  
<a name="dependencyPropertyInfo_BitmapEffect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-294">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-294">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-295">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-295">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectProperty>|  
|<span data-ttu-id="dfcc8-296">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-296">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-297">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-297">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-298">En el ejemplo siguiente se establece un mapa de bits surta efecto, mediante <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-298">The following example sets a bitmap effect, using <xref:System.Windows.Media.Effects.BlurBitmapEffect>.</span></span>  
  
 [!code-csharp[EffectsGallery_snip#CodeBehindBlurCodeBehindExampleInline](~/samples/snippets/csharp/VS_Snippets_Wpf/EffectsGallery_snip/CSharp/blurcodebehindexample.xaml.cs#codebehindblurcodebehindexampleinline)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInput">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.BitmapEffectInput BitmapEffectInput" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.BitmapEffectInput" />
      <MemberSignature Language="VB.NET" Value="Public Property BitmapEffectInput As BitmapEffectInput" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::BitmapEffectInput ^ BitmapEffectInput { System::Windows::Media::Effects::BitmapEffectInput ^ get(); void set(System::Windows::Media::Effects::BitmapEffectInput ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("BitmapEffects are deprecated and no longer function.  Consider using Effects where appropriate instead.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.BitmapEffectInput</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-299">Obtiene o establece un origen de entrada para el efecto de imagen que se aplica directamente al contenido representado de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-299">Gets or sets an input source for the bitmap effect that applies directly to the rendered content for this element.</span></span>  <span data-ttu-id="dfcc8-300">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-300">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-301">Origen de los efectos de imagen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-301">The source for bitmap effects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BitmapEffectInput"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-302">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-302">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-303">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-303">Identifier field</span></span>|<xref:System.Windows.UIElement.BitmapEffectInputProperty>|  
|<span data-ttu-id="dfcc8-304">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-304">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-305">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-305">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectInputProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectInputProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectInputProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectInputProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectInputProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectInputProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-306">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.BitmapEffectInput" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-306">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffectInput" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BitmapEffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BitmapEffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BitmapEffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.BitmapEffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BitmapEffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BitmapEffectProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-307">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.BitmapEffect" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-307">Identifies the <see cref="P:System.Windows.UIElement.BitmapEffect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheMode">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CacheMode CacheMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CacheMode CacheMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CacheMode" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheMode As CacheMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CacheMode ^ CacheMode { System::Windows::Media::CacheMode ^ get(); void set(System::Windows::Media::CacheMode ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CacheMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-308">Obtiene o establece una representación en caché del objeto <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-308">Gets or sets a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value><span data-ttu-id="dfcc8-309"><see cref="T:System.Windows.Media.CacheMode" /> que tiene una representación en caché del objeto <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-309">A <see cref="T:System.Windows.Media.CacheMode" /> that holds a cached representation of the <see cref="T:System.Windows.UIElement" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-310">Establecer el <xref:System.Windows.UIElement.CacheMode%2A> propiedad cuando necesite aumentar el rendimiento para el contenido que requiere tiempo para representar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-310">Set the <xref:System.Windows.UIElement.CacheMode%2A> property when you need to increase performance for content that is time consuming to render.</span></span> <span data-ttu-id="dfcc8-311">Para obtener más información, vea <xref:System.Windows.Media.BitmapCache>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-311">For more information, see <xref:System.Windows.Media.BitmapCache>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Media3D.Viewport2DVisual3D.CacheMode" />
        <altmember cref="T:System.Windows.Media.BitmapCache" />
        <altmember cref="T:System.Windows.Media.BitmapCacheBrush" />
      </Docs>
    </Member>
    <Member MemberName="CacheModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CacheModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CacheModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.CacheModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CacheModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CacheModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-312">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.CacheMode" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-312">Identifies the <see cref="P:System.Windows.UIElement.CacheMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-313">Intenta forzar la captura del mouse en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-313">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-314">Es <see langword="true" /> si se captura el mouse correctamente; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-314"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-315">Para ser capturado, un elemento debe estar habilitado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-315">To be captured, an element must be enabled.</span></span> <span data-ttu-id="dfcc8-316">Compruebe si <xref:System.Windows.UIElement.IsEnabled%2A> es `true` antes de llamar a <xref:System.Windows.UIElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-316">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.UIElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-317">Si una llamada a <xref:System.Windows.UIElement.CaptureMouse%2A> devuelve `true`, a continuación, <xref:System.Windows.UIElement.IsMouseCaptured%2A> también es `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-317">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.UIElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-318">Si una llamada a <xref:System.Windows.UIElement.CaptureMouse%2A> devuelve `true`, la <xref:System.Windows.UIElement.GotMouseCapture> y <xref:System.Windows.UIElement.IsMouseCapturedChanged> se generan eventos, con <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> en el evento informa de los datos como el elemento donde el <xref:System.Windows.UIElement.CaptureMouse%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-318">If calling <xref:System.Windows.UIElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.UIElement.GotMouseCapture> and <xref:System.Windows.UIElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.UIElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="dfcc8-319">Si se fuerza la captura, que podría interferir con las capturas existentes, especialmente con las capturas que se relacionan con arrastrar y colocar con el mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-319">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="dfcc8-320">Para borrar la captura del mouse de todos los elementos, llame a <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> con el `element` parámetro proporcionado como `null`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-320">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-321">En el ejemplo siguiente se implementa un par de controladores para mouse (ratón) y combinación de teclas de entrada que capturar el mouse (y liberar) y habilitar un modo del mouse especial para ver un modelo 3D.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-321">The following example implements a pair of handlers for mouse and key input combination that capture (and uncapture) the mouse and enable a special mouse mode for viewing a 3D model.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-322">Intenta forzar la captura del lápiz óptico en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-322">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-323">Devuelve <see langword="true" /> si se captura correctamente el lápiz óptico; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-323"><see langword="true" /> if the stylus was successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-324">La implementación predeterminada basada en el dispositivo de lápiz predeterminado subyacente siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-324">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="dfcc8-325">Sin embargo, si está ampliando los dispositivos de entrada que proporcionan la implementación de dispositivo para el sistema de entrada, es posible crear un sistema con una implementación de dispositivo de lápiz alternativo que podría devolver resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-325">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="dfcc8-326">Cuando un elemento captura el lápiz, recibe la entrada de lápiz incluso si el lápiz está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-326">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="dfcc8-327">Normalmente se captura el lápiz sólo durante las operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-327">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="dfcc8-328">Llamar a este método llama a una subyacente estático <xref:System.Windows.Input.Stylus> método <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-328">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="dfcc8-329">El comportamiento de captura real se implementa mediante la implementación de dispositivo de lápiz óptico activo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-329">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-330">Para ser capturado, un elemento debe estar habilitado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-330">To be captured, an element must be enabled.</span></span> <span data-ttu-id="dfcc8-331">Compruebe si <xref:System.Windows.UIElement.IsEnabled%2A> es `true` devolver antes de llamar a <xref:System.Windows.UIElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-331">Check whether <xref:System.Windows.UIElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.UIElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-332">Si una llamada a <xref:System.Windows.UIElement.CaptureStylus%2A> devuelve `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> también es `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-332">If calling <xref:System.Windows.UIElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.UIElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="dfcc8-333">Dispositivo que se va a capturar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-333">The device to capture.</span></span></param>
        <summary><span data-ttu-id="dfcc8-334">Intenta forzar la captura de una entrada táctil en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-334">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-335">Es <see langword="true" /> si la entrada táctil especificada se capturó en este elemento; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-335"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-336"><xref:System.Windows.UIElement.CaptureTouch%2A> devolverá `false` si el <xref:System.Windows.Input.TouchDevice> se captura actualmente en otro elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-336"><xref:System.Windows.UIElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="dfcc8-337">Si <xref:System.Windows.UIElement.CaptureTouch%2A> devuelve `true`, la <xref:System.Windows.UIElement.GotTouchCapture> evento se desencadena.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-337">If <xref:System.Windows.UIElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.UIElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="dfcc8-338">Para liberar la captura de un solo punto táctil de este elemento, utilice la <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> método y especifique el dispositivo táctil para liberar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-338">To release capture of a single touch from this element, use the <xref:System.Windows.UIElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="dfcc8-339">Para liberar todos los dispositivos táctiles de este elemento, utilice la <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-339">To release all touches from this element, use the <xref:System.Windows.UIElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfcc8-340"><paramref name="touchDevice" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-340"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Geometry Clip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Geometry Clip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Clip" />
      <MemberSignature Language="VB.NET" Value="Public Property Clip As Geometry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Geometry ^ Clip { System::Windows::Media::Geometry ^ get(); void set(System::Windows::Media::Geometry ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-341">Obtiene o establece la geometría usada para definir el contorno del contenido de un elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-341">Gets or sets the geometry used to define the outline of the contents of an element.</span></span>  <span data-ttu-id="dfcc8-342">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-342">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-343">Geometría que se usará para definir el tamaño del área de recorte.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-343">The geometry to be used for clipping area sizing.</span></span> <span data-ttu-id="dfcc8-344">El valor predeterminado es una <see cref="T:System.Windows.Media.Geometry" /> nula.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-344">The default is a null <see cref="T:System.Windows.Media.Geometry" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-345">Elementos que estén fuera de la geometría se recortará visualmente en el diseño representado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-345">Elements outside the geometry will be visually clipped in the rendered layout.</span></span> <span data-ttu-id="dfcc8-346">La geometría no tiene que ser rectangular.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-346">The geometry does not have to be rectangular.</span></span>  
  
<a name="dependencyPropertyInfo_Clip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-347">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-347">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-348">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-348">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipProperty>|  
|<span data-ttu-id="dfcc8-349">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-349">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-350">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-350">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-351">Este ejemplo muestra cómo definir un elemento de marco <xref:System.Windows.UIElement.Clip%2A> región.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-351">This example shows how to define a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="dfcc8-352">Para definir un clip, utilice un <xref:System.Windows.Media.Geometry> (por ejemplo, un <xref:System.Windows.Media.EllipseGeometry> para establecer el elemento <xref:System.Windows.UIElement.Clip%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-352">To define a clip, use a <xref:System.Windows.Media.Geometry> (for example, an <xref:System.Windows.Media.EllipseGeometry> to set the element's <xref:System.Windows.UIElement.Clip%2A> property.</span></span> <span data-ttu-id="dfcc8-353">Solo el área que está dentro de la región de la geometría serán visible.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-353">Only the area that is within the region of the geometry will be visible.</span></span>  
  
 <span data-ttu-id="dfcc8-354">El ejemplo siguiente muestra un <xref:System.Windows.Controls.Image> elemento sin una región de recorte definida.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-354">The following example shows an <xref:System.Windows.Controls.Image> element without a defined clip region.</span></span> <span data-ttu-id="dfcc8-355">Como no se define ninguna región de recorte, se muestra toda la imagen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-355">Because no clip region is defined, the entire image is displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#2)]  
  
 <span data-ttu-id="dfcc8-356">![Un objeto antes de aplicar una región de recorte](~/add/media/mil-task-clip-region-noclip.png "un objeto antes de aplicar una región de recorte")</span><span class="sxs-lookup"><span data-stu-id="dfcc8-356">![An object before applying a clip region](~/add/media/mil-task-clip-region-noclip.png "An object before applying a clip region")</span></span>  
<span data-ttu-id="dfcc8-357">Imagen con ninguna región de recorte</span><span class="sxs-lookup"><span data-stu-id="dfcc8-357">Image with No Clip Region</span></span>  
  
 <span data-ttu-id="dfcc8-358">En el ejemplo siguiente, se crea una imagen idéntica, salvo que tenga una región de recorte definida.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-358">In the next example, an identical Image is created, except that it has a defined clip region.</span></span> <span data-ttu-id="dfcc8-359">Solo la parte de la imagen que está dentro del área del <xref:System.Windows.Media.EllipseGeometry> se mostrará.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-359">Only the part of the image that is within the area the <xref:System.Windows.Media.EllipseGeometry> will be displayed.</span></span>  
  
 [!code-xaml[ClipPathExample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#4)]  
  
 <span data-ttu-id="dfcc8-360">![Objeto recortado](~/add/media/mil-task-clip-region-ellispe.PNG "objeto recortado")</span><span class="sxs-lookup"><span data-stu-id="dfcc8-360">![A clipped object](~/add/media/mil-task-clip-region-ellispe.PNG "A clipped object")</span></span>  
<span data-ttu-id="dfcc8-361">Imagen con una región de recorte elíptica</span><span class="sxs-lookup"><span data-stu-id="dfcc8-361">Image with an Elliptical Clip Region</span></span>  
  
 <span data-ttu-id="dfcc8-362">En el ejemplo siguiente se muestra cómo animar un elemento de marco <xref:System.Windows.UIElement.Clip%2A> región.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-362">The following example shows how animate a framework element's <xref:System.Windows.UIElement.Clip%2A> region.</span></span> <span data-ttu-id="dfcc8-363">En este ejemplo, un <xref:System.Windows.Media.EllipseGeometry> se utiliza para definir una región de recorte elíptica para un <xref:System.Windows.Controls.Image> elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-363">In this example, an <xref:System.Windows.Media.EllipseGeometry> is used to define an elliptical clip region for an <xref:System.Windows.Controls.Image> element.</span></span> <span data-ttu-id="dfcc8-364">A <xref:System.Windows.Media.Animation.PointAnimation> anima la geometría de elipse <xref:System.Windows.Media.EllipseGeometry.Center%2A> propiedad de (0, 0) a (200, 150).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-364">A <xref:System.Windows.Media.Animation.PointAnimation> animates the ellipse geometry's <xref:System.Windows.Media.EllipseGeometry.Center%2A> property from (0, 0) to (200, 150).</span></span> <span data-ttu-id="dfcc8-365">La animación comienza a reproducirse después de que la imagen se carga y se repite indefinidamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-365">The animation starts playing after the image is loaded and repeats indefinitely.</span></span>  
  
 [!code-xaml[ClipPathExample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/ClipPathExample/CS/ClipExample.xaml#5)]  
  
 <span data-ttu-id="dfcc8-366">Para obtener el ejemplo completo, vea el [Clip Region Sample](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-366">For the full sample, see the [Clip Region Sample](http://msdn.microsoft.com/library/83043a0b-f824-445f-9675-103280c5ca67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="ClipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-367">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.Clip" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-367">Identifies the <see cref="P:System.Windows.UIElement.Clip" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClipToBounds">
      <MemberSignature Language="C#" Value="public bool ClipToBounds { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ClipToBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.ClipToBounds" />
      <MemberSignature Language="VB.NET" Value="Public Property ClipToBounds As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ClipToBounds { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-368">Obtiene o establece un valor que indica si hay que recortar el contenido de este elemento (o el contenido de los elementos secundarios de este elemento) para que se ajuste al tamaño del elemento contenedor.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-368">Gets or sets a value indicating whether to clip the content of this element (or content coming from the child elements of this element) to fit into the size of the containing element.</span></span>   <span data-ttu-id="dfcc8-369">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-369">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-370"><see langword="true" /> si debe recortarse el contenido; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-370"><see langword="true" /> if the content should be clipped; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-371">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-371">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-372">Para los elementos secundarios, <xref:System.Windows.UIElement.ClipToBounds%2A> tiene efectos diferentes comportamientos de diseño dependiendo de si el alto y ancho del elemento primario se determina <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> o <xref:System.Windows.FrameworkElement.MaxHeight%2A>  /  <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-372">For child elements, <xref:System.Windows.UIElement.ClipToBounds%2A> has different effects on layout behaviors depending on whether the height and width of the parent element are being determined by <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> or <xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span> <span data-ttu-id="dfcc8-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> del elemento primario siempre se respetan sin tener en cuenta el valor de <xref:System.Windows.UIElement.ClipToBounds%2A> y el recorte efectivo siempre recortará el contenido basándose en estos máximos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-373"><xref:System.Windows.FrameworkElement.MaxHeight%2A> / <xref:System.Windows.FrameworkElement.MaxWidth%2A> of the parent element are always respected regardless of the value of <xref:System.Windows.UIElement.ClipToBounds%2A> and the effective clipping will always clip the content based on these maximums.</span></span> <span data-ttu-id="dfcc8-374">Del elemento primario <xref:System.Windows.FrameworkElement.Height%2A>  /  <xref:System.Windows.FrameworkElement.Width%2A> configuración no ajustará el contenido cuando <xref:System.Windows.UIElement.ClipToBounds%2A> es `false`, pero se recorta el contenido if <xref:System.Windows.UIElement.ClipToBounds%2A> es `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-374">The parent's <xref:System.Windows.FrameworkElement.Height%2A> / <xref:System.Windows.FrameworkElement.Width%2A> settings will not clip the content when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`, but will clip the content if <xref:System.Windows.UIElement.ClipToBounds%2A> is `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-375">Tenga en cuenta que el valor predeterminado `false` es el comportamiento general, tal como se implementa en el <xref:System.Windows.UIElement> clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-375">Note that defaulting to `false` is the general behavior as implemented in the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="dfcc8-376">Es posible que cualquier elemento que se deriva de <xref:System.Windows.UIElement> para invalidar los metadatos de propiedad de dependencia para esta propiedad en esa instancia en de forma predeterminada `true` en su lugar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-376">It is possible for any given element that derives from <xref:System.Windows.UIElement> to override the dependency property metadata for this property in that instance to default to `true` instead.</span></span> <span data-ttu-id="dfcc8-377">Varias clases derivadas existentes invalidan estos metadatos o ajustan el valor predeterminado de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-377">Several existing derived classes override this metadata and/or adjust the dependency property default value.</span></span>  
  
 <span data-ttu-id="dfcc8-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, y <xref:System.Windows.Controls.Primitives.Popup> entre reemplazar el valor predeterminado sea `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-378"><xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.Popup> each override the default value to be `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-379"><xref:System.Windows.FrameworkElement> invalida los metadatos de esta propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-379"><xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property.</span></span> <span data-ttu-id="dfcc8-380">En concreto, <xref:System.Windows.FrameworkElement> designa esta propiedad para permitir la herencia del valor de propiedad (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> es `true` en los metadatos).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-380">Specifically, <xref:System.Windows.FrameworkElement> designates this property to allow property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="dfcc8-381">Herencia del valor de propiedad en este contexto significa que si hay elementos secundarios con ningún otro valor para <xref:System.Windows.UIElement.ClipToBounds%2A> asignado a través de valores locales o estilos, el valor del elemento primario más próximo con este valor asignado (nuevo, ya sea en estilos, valores predeterminados, o un valor localmente), a continuación, se asignará el valor del elemento primario para todos los elementos secundarios no asignados por el sistema de propiedades.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-381">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.UIElement.ClipToBounds%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a locally value), then the value from the parent element will be assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="dfcc8-382">En la práctica, esto significa que puede especificar si desea permitir recortes en límites en el elemento raíz y que el valor se propagará a todos los elementos secundarios que tengan específicamente no asignarlo como `false`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-382">In practice this means that you can specify whether to allow clip to bounds at the root element, and that value will propagate to all child elements that have not specifically assigned it as `false`.</span></span>  
  
<a name="dependencyPropertyInfo_ClipToBounds"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-383">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-383">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-384">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-384">Identifier field</span></span>|<xref:System.Windows.UIElement.ClipToBoundsProperty>|  
|<span data-ttu-id="dfcc8-385">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-385">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-386">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-386">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Clip" />
      </Docs>
    </Member>
    <Member MemberName="ClipToBoundsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClipToBoundsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClipToBoundsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ClipToBoundsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClipToBoundsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClipToBoundsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-387">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.ClipToBounds" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-387">Identifies the <see cref="P:System.Windows.UIElement.ClipToBounds" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-388">Obtiene una colección de objetos <see cref="T:System.Windows.Input.CommandBinding" /> asociados a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-388">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects associated with this element.</span></span> <span data-ttu-id="dfcc8-389"><see cref="T:System.Windows.Input.CommandBinding" /> habilita el control de comandos para este elemento y declara la vinculación entre un comando, sus eventos y los controladores asociados por este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-389">A <see cref="T:System.Windows.Input.CommandBinding" /> enables command handling for this element, and declares the linkage between a command, its events, and the handlers attached by this element.</span></span></summary>
        <value><span data-ttu-id="dfcc8-390">Colección de todos los objetos <see cref="T:System.Windows.Input.CommandBinding" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-390">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-391">Otra forma habitual para rellenar el <xref:System.Windows.UIElement.CommandBindings%2A> colección consiste en usar <xref:System.Windows.Input.CommandManager> métodos mediante programación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-391">Another typical way to populate the <xref:System.Windows.UIElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="dfcc8-392">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="dfcc8-392">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  
  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dfcc8-393">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="dfcc8-393">XAML Values</span></span>  
 <span data-ttu-id="dfcc8-394">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="dfcc8-394">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="dfcc8-395">Uno o más <xref:System.Windows.Input.CommandBinding> elementos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-395">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="dfcc8-396">Cada uno de ellos debe tener un <xref:System.Windows.Input.CommandBinding.Command%2A> atributo establecido en un comando conocido y atributos establecidos para el <xref:System.Windows.Input.CommandBinding.CanExecute> y <xref:System.Windows.Input.CommandBinding.Executed> las implementaciones de controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-396">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="dfcc8-397">Para obtener más información, vea <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-397">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-398">En el ejemplo siguiente se agrega un <xref:System.Windows.Input.CommandBinding> a una ventana mediante marcado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-398">The following example adds a <xref:System.Windows.Input.CommandBinding> to a window using markup.</span></span> <span data-ttu-id="dfcc8-399">Tenga en cuenta que en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], <xref:System.Windows.Input.CommandBindingCollection> no se ha declarado en el marcado como un elemento; el tipo que la propiedad toma deduce el objeto de colección y rellenar el elemento de propiedad con uno o varios <xref:System.Windows.Input.CommandBinding> elementos:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-399">Note that in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the <xref:System.Windows.Input.CommandBindingCollection> is not declared in the markup as an element; the collection object is inferred by the type that the property takes, and you populate the property element with one or more <xref:System.Windows.Input.CommandBinding> elements:</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerCommandBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlercommandbinding)]  
  
 <span data-ttu-id="dfcc8-400">Para obtener más información sobre la [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxis para las colecciones, vea [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-400">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 <span data-ttu-id="dfcc8-401">En el ejemplo siguiente se realiza básicamente lo mismo en el código:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-401">The following example does essentially the same thing in code:</span></span>  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerbindinginit)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerBindingInit](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerbindinginit)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesiredSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size DesiredSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size DesiredSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.DesiredSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesiredSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size DesiredSize { System::Windows::Size get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-402">Obtiene el tamaño que este elemento calculó durante el paso de medición del proceso de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-402">Gets the size that this element computed during the measure pass of the layout process.</span></span></summary>
        <value><span data-ttu-id="dfcc8-403">Tamaño calculado, que se convierte en el tamaño deseado para el paso de organización.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-403">The computed size, which becomes the desired size for the arrange pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-404">El valor devuelto por esta propiedad solo será una medida válida si el valor de la <xref:System.Windows.UIElement.IsMeasureValid%2A> propiedad es `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-404">The value returned by this property will only be a valid measurement if the value of the <xref:System.Windows.UIElement.IsMeasureValid%2A> property is `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-405"><xref:System.Windows.UIElement.DesiredSize%2A> Normalmente, se comprueba como uno de los factores de medida al implementar el comportamiento del diseño invalida como <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, o <xref:System.Windows.UIElement.OnRender%2A> (en el <xref:System.Windows.UIElement.OnRender%2A> caso, debe comprobar <xref:System.Windows.UIElement.RenderSize%2A> en su lugar, pero esto depende de su implementación).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-405"><xref:System.Windows.UIElement.DesiredSize%2A> is typically checked as one of the measurement factors when you implement layout behavior overrides such as <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>, <xref:System.Windows.FrameworkElement.MeasureOverride%2A>, or <xref:System.Windows.UIElement.OnRender%2A> (in the <xref:System.Windows.UIElement.OnRender%2A> case, you might check <xref:System.Windows.UIElement.RenderSize%2A> instead, but this depends on your implementation).</span></span> <span data-ttu-id="dfcc8-406">Según el escenario, <xref:System.Windows.UIElement.DesiredSize%2A> podría ser respetan totalmente la lógica de implementación, las restricciones en <xref:System.Windows.UIElement.DesiredSize%2A> podrían aplicarse, y estas restricciones también podrían cambiar otras características del elemento primario o del elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-406">Depending on the scenario, <xref:System.Windows.UIElement.DesiredSize%2A> might be fully respected by your implementation logic, constraints on <xref:System.Windows.UIElement.DesiredSize%2A> might be applied, and such constraints might also change other characteristics of either the parent element or child element.</span></span> <span data-ttu-id="dfcc8-407">Por ejemplo, un control que admite regiones desplazables (pero decide no derivar de los controles de nivel de marco WPF que ya habilitan las regiones desplazables) podría comparar el tamaño disponible para <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-407">For example, a control that supports scrollable regions (but chooses not to derive from the WPF framework-level controls that already enable scrollable regions) could compare available size to <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="dfcc8-408">El control, a continuación, podría establecer un estado interno que habilite las barras de desplazamiento en el [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] de ese control.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-408">The control could then set an internal state that enabled scrollbars in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] for that control.</span></span> <span data-ttu-id="dfcc8-409">O bien, <xref:System.Windows.UIElement.DesiredSize%2A> podría también se omite en ciertos escenarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-409">Or, <xref:System.Windows.UIElement.DesiredSize%2A> could potentially also be ignored in certain scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-410">El ejemplo siguiente muestra <xref:System.Windows.UIElement.DesiredSize%2A> como parte de una <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-410">The following example shows <xref:System.Windows.UIElement.DesiredSize%2A> as part of a <xref:System.Windows.FrameworkElement.MeasureOverride%2A> implementation.</span></span> <span data-ttu-id="dfcc8-411">Observe cómo <xref:System.Windows.UIElement.Measure%2A> se llama inmediatamente antes de obtener <xref:System.Windows.UIElement.DesiredSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-411">Notice how <xref:System.Windows.UIElement.Measure%2A> is called immediately prior to obtaining <xref:System.Windows.UIElement.DesiredSize%2A>.</span></span> <span data-ttu-id="dfcc8-412">Esto garantiza que <xref:System.Windows.UIElement.DesiredSize%2A> contiene un valor legítimo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-412">This assures that <xref:System.Windows.UIElement.DesiredSize%2A> holds a legitimate value.</span></span>  
  
 [!code-cpp[PlotPanel#2](~/samples/snippets/cpp/VS_Snippets_Wpf/PlotPanel/CPP/PlotPanel.cpp#2)]
 [!code-csharp[PlotPanel#2](~/samples/snippets/csharp/VS_Snippets_Wpf/PlotPanel/CSharp/PlotPanel.cs#2)]
 [!code-vb[PlotPanel#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PlotPanel/VisualBasic/PlotPanel.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-413">Se produce cuando el sistema de entrada notifica un evento de arrastre subyacente con este elemento como el destino del arrastre.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-413">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-414">Este evento crea un alias para la <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-414">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-415">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.DragEnter> eventos están conectados a subyacente <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-415">Event handlers that are attached to the <xref:System.Windows.UIElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-416">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-417">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-417">Identifier field</span></span>|<xref:System.Windows.UIElement.DragEnterEvent>|  
|<span data-ttu-id="dfcc8-418">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-418">Routing strategy</span></span>|<span data-ttu-id="dfcc8-419">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-419">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-420">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-420">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-421">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-421">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="dfcc8-422">Invalidar <xref:System.Windows.UIElement.OnDragEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-422">Override <xref:System.Windows.UIElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-423">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.DragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-423">Identifies the <see cref="E:System.Windows.UIElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-424">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-425">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-426">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-427">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-428">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-429">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como el origen del arrastre.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-429">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-430">Este evento crea un alias para la <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-430">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-431">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.DragLeave> eventos están conectados a subyacente <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-431">Event handlers that are attached to the <xref:System.Windows.UIElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-432">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-432">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-433">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-433">Identifier field</span></span>|<xref:System.Windows.UIElement.DragLeaveEvent>|  
|<span data-ttu-id="dfcc8-434">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-434">Routing strategy</span></span>|<span data-ttu-id="dfcc8-435">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-435">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-436">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-436">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-437">El evento de tunelización correspondiente es <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-437">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="dfcc8-438">Invalidar <xref:System.Windows.UIElement.OnDragLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-438">Override <xref:System.Windows.UIElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-439">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.DragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-439">Identifies the <see cref="E:System.Windows.UIElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-440">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-440">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-441">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-441">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-442">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-442">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-443">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-443">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-444">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-444">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-445">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como destino potencial de la colocación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-445">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-446">Este evento se produce incluso si la operación de arrastre se origine en los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-446">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="dfcc8-447">Si la operación de arrastre inicia fuera de los límites y, a continuación, se mueve dentro, también se genera este evento, así como <xref:System.Windows.UIElement.DragEnter> y eventos de vista previa relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-447">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.UIElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="dfcc8-448">Este evento crea un alias para la <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-448">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-449">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.DragOver> eventos están conectados a subyacente <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-449">Event handlers that are attached to the <xref:System.Windows.UIElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-450">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-450">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-451">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-451">Identifier field</span></span>|<xref:System.Windows.UIElement.DragOverEvent>|  
|<span data-ttu-id="dfcc8-452">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-452">Routing strategy</span></span>|<span data-ttu-id="dfcc8-453">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-453">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-454">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-454">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-455">El evento de tunelización correspondiente es <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-455">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="dfcc8-456">Invalidar <xref:System.Windows.UIElement.OnDragOver%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-456">Override <xref:System.Windows.UIElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-457">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.DragOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-457">Identifies the <see cref="E:System.Windows.UIElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-458">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-458">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-459">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-459">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-460">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-460">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-461">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-461">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-462">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-462">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-463">Se produce cuando el sistema de entrada notifica un evento de colocación subyacente con este elemento como el destino de la colocación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-463">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-464">Este evento crea un alias para la <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-464">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-465">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.Drop> eventos están conectados a subyacente <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-465">Event handlers that are attached to the <xref:System.Windows.UIElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-466">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-467">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-467">Identifier field</span></span>|<xref:System.Windows.UIElement.DropEvent>|  
|<span data-ttu-id="dfcc8-468">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-468">Routing strategy</span></span>|<span data-ttu-id="dfcc8-469">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-469">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-470">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-470">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-471">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="dfcc8-472">Invalidar <xref:System.Windows.UIElement.OnDrop%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-472">Override <xref:System.Windows.UIElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-473">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.Drop" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-473">Identifies the <see cref="E:System.Windows.UIElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-474">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-475">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-476">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-477">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-478">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Effect">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Effects.Effect Effect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Effects.Effect Effect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Effect" />
      <MemberSignature Language="VB.NET" Value="Public Property Effect As Effect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Effects::Effect ^ Effect { System::Windows::Media::Effects::Effect ^ get(); void set(System::Windows::Media::Effects::Effect ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Effects.Effect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-479">Obtiene o establece el efecto de imagen que se va a aplicar a <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-479">Gets or sets the bitmap effect to apply to the <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="dfcc8-480">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-480">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-481"><see cref="T:System.Windows.Media.Effects.Effect" /> que representa el efecto de imagen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-481">An <see cref="T:System.Windows.Media.Effects.Effect" /> that represents the bitmap effect.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-482">Use la <xref:System.Windows.UIElement.Effect%2A> propiedad que se va a aplicar un efecto de mapa de bits a una <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-482">Use the <xref:System.Windows.UIElement.Effect%2A> property to apply a bitmap effect to a <xref:System.Windows.UIElement>.</span></span>  
  
<a name="dependencyPropertyInfo_Effect"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-483">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-483">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-484">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-484">Identifier field</span></span>|<xref:System.Windows.UIElement.EffectProperty>|  
|<span data-ttu-id="dfcc8-485">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-485">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-486">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-486">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-487">El código XAML siguiente muestra cómo asignar un personalizado <xref:System.Windows.Media.Effects.ShaderEffect> a la <xref:System.Windows.UIElement.Effect%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-487">The following XAML shows how to assign a custom <xref:System.Windows.Media.Effects.ShaderEffect> to the <xref:System.Windows.UIElement.Effect%2A> property.</span></span>  
  
 [!code-xaml[System.Windows.Media.Effects.ShaderEffect#1000](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.Media.Effects.ShaderEffect/CS/Window1.xaml#1000)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Effects.Effect" />
        <altmember cref="T:System.Windows.Media.Effects.ShaderEffect" />
      </Docs>
    </Member>
    <Member MemberName="EffectProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty EffectProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty EffectProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.EffectProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly EffectProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ EffectProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-488">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.Effect" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-488">Identifies the <see cref="P:System.Windows.UIElement.Effect" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-489">Intenta establecer el foco en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-489">Attempts to set focus to this element.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-490">Devuelve <see langword="true" /> si el foco de teclado y el foco lógico se establecieron en este elemento; devuelve <see langword="false" /> si se estableció únicamente el foco lógico en este elemento o si la llamada a este método no forzó un cambio de foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-490"><see langword="true" /> if keyboard focus and logical focus were set to this element; <see langword="false" /> if only logical focus was set to this element, or if the call to this method did not force the focus to change.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-491">Para poder recibir el foco, <xref:System.Windows.UIElement.Focusable%2A> y <xref:System.Windows.UIElement.IsEnabled%2A> deben ser `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-491">To be focusable, <xref:System.Windows.UIElement.Focusable%2A> and <xref:System.Windows.UIElement.IsEnabled%2A> must both be `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-492">Incluso si un elemento es el control de eventos puede recibir el foco y están habilitados, dentro de un árbol concreto, (por ejemplo, para un control compuesto) podría responder a los eventos de foco de vista previa no permitiendo foco allí, lo que este método devolvería `false`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-492">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="dfcc8-493">Foco en general se rige por dos conceptos independientes: foco del teclado y el foco lógico, que no siempre son idénticos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-493">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span>  <span data-ttu-id="dfcc8-494">Para obtener más información, consulte [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) o [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-494">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) or [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="dfcc8-495">Si una llamada a <xref:System.Windows.UIElement.Focus%2A> devuelve `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> y <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> también son `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-495">If calling <xref:System.Windows.UIElement.Focus%2A> returns `true`, <xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-496">Si las propiedades relacionadas ya no están `true`, al llamar a <xref:System.Windows.UIElement.Focus%2A>, uno o varios de los siguientes eventos se producen en el siguiente orden: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (el origen es el nuevo destino del foco), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (el origen es el nuevo destino del foco).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-496">If the related properties are not already `true`, when you call  <xref:System.Windows.UIElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.UIElement.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement.LostKeyboardFocus>, <xref:System.Windows.UIElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
 <span data-ttu-id="dfcc8-497">En orden para esta llamada se realice correctamente, de algún otro elemento en la aplicación necesaria para que el foco anteriormente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-497">In order for this call to be successful, some other element in the application needed to have focus previously.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-498">En el ejemplo siguiente se establece el foco en un <xref:System.Windows.Controls.TextBox> referenciado por <xref:System.Windows.FrameworkElement.Name%2A>y, a continuación, se ajusta la posición del cursor dentro de la <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-498">The following example sets focus to a <xref:System.Windows.Controls.TextBox> referenced by <xref:System.Windows.FrameworkElement.Name%2A>, and then adjusts the position of the cursor within the <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBox_CursorToEnd/CSharp/Window1.xaml.cs#uielementfocus)]
 [!code-vb[TextBox_CursorToEnd#UIElementFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBox_CursorToEnd/VisualBasic/Window1.xaml.vb#uielementfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-499">Obtiene o establece un valor que indica si el elemento puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-499">Gets or sets a value that indicates whether the element can receive focus.</span></span>  <span data-ttu-id="dfcc8-500">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-500">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-501">Es <see langword="true" /> si el elemento puede tener el foco; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-501"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-502">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-502">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-503">Sólo el elemento enfocado recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-503">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="dfcc8-504"><xref:System.Windows.UIElement.Focusable%2A> es el [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] descriptor de acceso de propiedad para lo que es en realidad una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-504"><xref:System.Windows.UIElement.Focusable%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="dfcc8-505">Esta propiedad de dependencia concreta con bastante frecuencia no tiene valor "predeterminado" aparente establecido de forma distinta en las clases de elemento derivadas, particularmente en los controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-505">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly in controls.</span></span> <span data-ttu-id="dfcc8-506">Esto suele ocurrir en uno de dos maneras:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-506">This commonly occurs in one of two ways:</span></span>  
  
-   <span data-ttu-id="dfcc8-507">La propiedad de dependencia es heredada por una clase derivada determinada, pero que deriva los metadatos de la propiedad de dependencia de invalidaciones de la clase y cambia el valor de propiedad predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-507">The dependency property is inherited by a particular derived class, but that derived class overrides the metadata of the dependency property and changes the property default value.</span></span>  
  
-   <span data-ttu-id="dfcc8-508">Un estilo o plantilla se aplica a un elemento, que establece ese valor de propiedad de dependencia de manera diferente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-508">A style or template is applied to an element, which sets that dependency property value differently.</span></span>  
  
 <span data-ttu-id="dfcc8-509">Por ejemplo, el "predeterminado" aparente de <xref:System.Windows.UIElement.Focusable%2A> para un <xref:System.Windows.Controls.Button> control estará `true`, aunque <xref:System.Windows.Controls.Button> hereda <xref:System.Windows.UIElement.Focusable%2A> como un [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] propiedad directamente desde <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-509">For example, the apparent "default" of <xref:System.Windows.UIElement.Focusable%2A> for a <xref:System.Windows.Controls.Button> control will be `true`, even though <xref:System.Windows.Controls.Button> inherits <xref:System.Windows.UIElement.Focusable%2A> as a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property directly from <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="dfcc8-510">Esto es porque el valor de los metadatos aplicados para el <xref:System.Windows.UIElement.Focusable%2A> se ha reemplazado la propiedad de dependencia dentro del constructor estático de la <xref:System.Windows.Controls.Control> base (clase), que se encuentre entre <xref:System.Windows.Controls.Button> y <xref:System.Windows.UIElement> en la jerarquía de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-510">This is because the applied metadata value for the <xref:System.Windows.UIElement.Focusable%2A> dependency property was overridden within the static constructor of the <xref:System.Windows.Controls.Control> base class, which is situated between <xref:System.Windows.Controls.Button> and <xref:System.Windows.UIElement> in the class hierarchy.</span></span>  
  
 <span data-ttu-id="dfcc8-511">Cuando hereda <xref:System.Windows.Controls.Control> o sus clases derivadas, <xref:System.Windows.Controls.Control> vuelve a definir el valor predeterminado de esta propiedad para que sea `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-511">When inherited by <xref:System.Windows.Controls.Control> or its derived classes, <xref:System.Windows.Controls.Control> redefines the default value of this property to be `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-512">Cuando hereda <xref:System.Windows.Controls.Label> (que es un <xref:System.Windows.Controls.Control> clase derivada), el valor predeterminado nuevo se vuelve a definir para que sea `false`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-512">When inherited by <xref:System.Windows.Controls.Label> (which is a <xref:System.Windows.Controls.Control> derived class), the default value is again redefined to be `false`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-513">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-514">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-514">Identifier field</span></span>|<xref:System.Windows.UIElement.FocusableProperty>|  
|<span data-ttu-id="dfcc8-515">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-516">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-516">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-517">El código de ejemplo siguiente muestra una plantilla de control para un control personalizado determinado, que establece <xref:System.Windows.UIElement.Focusable%2A> `false` en uno de los elementos dentro de la plantilla.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-517">The following example code illustrates a control template for a particular custom control, which sets <xref:System.Windows.UIElement.Focusable%2A> `false` on one of the elements within the template.</span></span>  
  
 [!code-xaml[RichTextBox_NoScrollViewer#_ControlTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBox_NoScrollViewer/CS/window1.xaml#_controltemplate)]
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-518">Al derivar de <see cref="T:System.Windows.UIElement" /> directamente (frente de <see cref="T:System.Windows.Controls.Control" />), tenga en cuenta si desea que el elemento que se va a recibir el foco, porque de forma predeterminada el elemento no se puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-518">When deriving from <see cref="T:System.Windows.UIElement" /> directly (as opposed to from <see cref="T:System.Windows.Controls.Control" />), consider whether you wish your element to be focusable, because by default the element will not be focusable.</span></span> <span data-ttu-id="dfcc8-519">Si desea que el elemento que se va a recibir el foco, invalide los metadatos de esta propiedad en el constructor estático de su tipo como sigue:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-519">If you wish your element to be focusable, override the metadata for this property within your type's static constructor as follows:</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
 [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
 <span data-ttu-id="dfcc8-520">donde <paramref name="myElement" /> debe ser el nombre de clase del tipo que se va a reemplazar el valor de metadatos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-520">where <paramref name="myElement" /> should be the class name of the type that you are overriding the metadata value on.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-521">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.UIElement.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-521">Occurs when the value of the <see cref="P:System.Windows.UIElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-522">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-522">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-523">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.Focusable" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-523">Identifies the <see cref="P:System.Windows.UIElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="dfcc8-524">Propiedad de dependencia que se va a comprobar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-524">The dependency property to check.</span></span></param>
        <summary><span data-ttu-id="dfcc8-525">Devuelve el valor de la propiedad base para la propiedad especificada en este elemento, sin tener en cuenta ningún valor animado posible desde una animación en ejecución o detenida.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-525">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-526">Valor de la propiedad como si no hubiera ninguna animación asociada a la propiedad de dependencia especificada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-526">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-527">Si no hubiera ninguna animación asociada a la propiedad, el <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> valor devuelto siempre es idéntica a la <xref:System.Windows.DependencyObject.GetValue%2A> valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-527">If no animations are attached to the property, then the <xref:System.Windows.UIElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="dfcc8-528">Si hay animaciones asociadas, a continuación, derivados valores, incluidos el inicio de la animación posibles todos los valores de detención se omiten y el valor de propiedad se determina basándose en todas las demás entradas posibles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-528">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="dfcc8-529">Para obtener más información, consulte [Prioridad de los valores de propiedades de dependencia](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-529">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-530">En el ejemplo siguiente se implementa un controlador que notifica el valor base de un elemento animado <xref:System.Windows.FrameworkElement.Width%2A> propiedad en un <xref:System.Windows.Controls.Button>, así como el valor base de una transformación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-530">The following example implements a handler that reports the base value of an animated <xref:System.Windows.FrameworkElement.Width%2A> property on a <xref:System.Windows.Controls.Button>, as well as the base value of a transform.</span></span>  
  
 [!code-csharp[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/GetAnimationBaseValueExample.cs#getanimationbasevalue)]
 [!code-vb[timingbehaviors_procedural_snip#GetAnimationBaseValue](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/getanimationbasevalueexample.vb#getanimationbasevalue)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize"><span data-ttu-id="dfcc8-531">Tamaño disponible proporcionado por el elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-531">The available size provided by the element.</span></span></param>
        <summary><span data-ttu-id="dfcc8-532">Devuelve una geometría de recorte alternativa que representa la región que se recortaría si <see cref="P:System.Windows.UIElement.ClipToBounds" /> se estableciera en <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-532">Returns an alternative clipping geometry that represents the region that would be clipped if <see cref="P:System.Windows.UIElement.ClipToBounds" /> were set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-533">Geometría de recorte potencial.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-533">The potential clipping geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-534">La implementación predeterminada devuelve un valor legítimo, pero no usa el `layoutSlotSize` parámetro en sus cálculos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-534">The default implementation will return a legitimate value, but does not use the `layoutSlotSize` parameter in its calculations.</span></span> <span data-ttu-id="dfcc8-535">En su lugar, usa el valor de <xref:System.Windows.UIElement.RenderSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-535">Instead it uses the value of <xref:System.Windows.UIElement.RenderSize%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-536">Este método se reemplaza esencialmente por la clase derivada inmediatamente <xref:System.Windows.FrameworkElement> (clase) y el <xref:System.Windows.FrameworkElement> invalidación produce un comportamiento más sofisticado para los elementos de nivel de marco WPF generales.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-536">This method is substantially overridden by the immediately derived <xref:System.Windows.FrameworkElement> class, and the <xref:System.Windows.FrameworkElement> override produces a more sophisticated behavior for general WPF framework-level elements.</span></span> <span data-ttu-id="dfcc8-537">Para obtener información detallada, vea <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-537">For details, see <xref:System.Windows.FrameworkElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-538">Cuando se invalida en una clase derivada, devuelve un elemento primario alternativo de la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] para este elemento si no existe ningún elemento primario visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-538">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-539">Devuelve un objeto si la implementación de una clase derivada tiene una conexión primaria alternativa.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-539">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-540">La implementación virtual predeterminada de este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-540">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="dfcc8-541"><xref:System.Windows.FrameworkElement> Proporciona una implementación práctica.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-541"><xref:System.Windows.FrameworkElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-542">Los elementos primarios alternativos se usan para el enrutamiento de eventos, en los casos donde un elemento crea una estructura primaria alternativa para que sus eventos se enruten de forma que difiera el patrón estándar de enrutamiento el árbol visual para el elemento primario estándar o hacia abajo en la estrategia de enrutamiento de vista previa.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-542">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-543">Se produce cuando el sistema de entrada informa de un evento de arrastrar y colocar subyacente que afecta a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-543">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-544">El <xref:System.Windows.UIElement.GiveFeedback> evento permite al origen de un evento de arrastre para modificar la apariencia del puntero del mouse con el fin de proporcionar información visual al usuario durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-544">The <xref:System.Windows.UIElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="dfcc8-545">Los comentarios visuales refuerzan que una operación de arrastrar y colocar está en proceso.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-545">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="dfcc8-546">Este evento crea un alias para la <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.GiveFeedback> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-546">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-547">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.GiveFeedback> eventos están conectados a subyacente <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-547">Event handlers that are attached to the <xref:System.Windows.UIElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-548">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-548">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-549">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-549">Identifier field</span></span>|<xref:System.Windows.UIElement.GiveFeedbackEvent>|  
|<span data-ttu-id="dfcc8-550">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-550">Routing strategy</span></span>|<span data-ttu-id="dfcc8-551">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-551">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-552">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-552">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="dfcc8-553">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-553">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="dfcc8-554">Invalidar <xref:System.Windows.UIElement.OnGiveFeedback%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-554">Override <xref:System.Windows.UIElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-555">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.GiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-555">Identifies the <see cref="E:System.Windows.UIElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-556">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-556">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-557">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-557">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-558">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-558">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-559">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-559">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-560">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-560">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-561">Se produce cuando este elemento recibe el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-561">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-562">El foco lógico es diferente del foco de teclado si el foco se impone deliberadamente mediante una llamada al método pero el foco de teclado anterior existe en otro ámbito.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-562">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="dfcc8-563">En este escenario, el foco de teclado permanece donde está y el elemento donde un <xref:System.Windows.UIElement.Focus%2A> se llama al método todavía obtiene el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-563">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="dfcc8-564">Una interpretación más precisa de este evento es que se produce cuando el valor de la <xref:System.Windows.UIElement.IsFocused%2A> se cambia la propiedad de un elemento en la ruta de `false` a `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-564">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="dfcc8-565">Como este evento usa el enrutamiento de propagación, el elemento que recibe el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-565">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-566">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que ha obtenido el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-566">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-567">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-567">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-568">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-568">Identifier field</span></span>|<xref:System.Windows.UIElement.GotFocusEvent>|  
|<span data-ttu-id="dfcc8-569">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-569">Routing strategy</span></span>|<span data-ttu-id="dfcc8-570">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-570">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-571">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-571">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="dfcc8-572">No hay ningún evento de tunelización correspondiente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-572">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="dfcc8-573">Invalidar <xref:System.Windows.UIElement.OnGotFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-573">Override <xref:System.Windows.UIElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-574">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-574">Identifies the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-575">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-575">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-576">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-576">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-577">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-577">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-578">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-578">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-579">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-579">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-580">Se produce cuando este elemento recibe el foco del teclado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-580">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-581"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> es un evento similar que realiza el seguimiento de cambios de estado en una propiedad que mantiene el estado del foco para un elemento; el <xref:System.Windows.UIElement.GotKeyboardFocus> evento se provoca en muchas de las mismas circunstancias.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-581"><xref:System.Windows.UIElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.UIElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="dfcc8-582">Como este evento usa el enrutamiento de propagación, el elemento que tiene el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-582">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-583">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-583">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="dfcc8-584">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.GotKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-584">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-585">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.GotKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-585">Event handlers that are attached to the <xref:System.Windows.UIElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-586">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-586">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-587">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-587">Identifier field</span></span>|<xref:System.Windows.UIElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="dfcc8-588">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-588">Routing strategy</span></span>|<span data-ttu-id="dfcc8-589">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-589">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-590">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-590">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="dfcc8-591">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-591">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="dfcc8-592">Invalidar <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-592">Override <xref:System.Windows.UIElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-593">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.GotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-593">Identifies the <see cref="E:System.Windows.UIElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-594">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-594">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-595">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-595">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-596">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-596">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-597">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-597">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-598">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-598">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-599">Se produce cuando este elemento captura el mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-599">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-600">Cuando un elemento captura el mouse, recibe la entrada del mouse incluso si el puntero del mouse está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-600">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="dfcc8-601">El mouse se suele capturar sólo durante las operaciones de arrastrar y colocar y capturado se mantiene hasta que se produce la acción de colocación de la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-601">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="dfcc8-602">Como este evento usa el enrutamiento de propagación, el elemento que tiene la captura puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-602">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-603">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en el evento de captura de datos para determinar el elemento real que tiene un mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-603">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="dfcc8-604">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.GotMouseCapture> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-604">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.UIElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-605">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.GotMouseCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-605">Event handlers that are attached to the <xref:System.Windows.UIElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-606">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-606">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-607">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-607">Identifier field</span></span>|<xref:System.Windows.UIElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="dfcc8-608">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-608">Routing strategy</span></span>|<span data-ttu-id="dfcc8-609">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-609">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-610">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-610">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="dfcc8-611">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-611">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="dfcc8-612">Invalidar <xref:System.Windows.UIElement.OnGotMouseCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-612">Override <xref:System.Windows.UIElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-613">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.GotMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-613">Identifies the <see cref="E:System.Windows.UIElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-614">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-614">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-615">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-615">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-616">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-616">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-617">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-617">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-618">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-618">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-619">Se produce cuando este elemento captura el lápiz.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-619">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-620">Cuando un elemento captura el lápiz, recibe la entrada de lápiz incluso si el puntero está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-620">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="dfcc8-621">El lápiz se suele capturar sólo durante las operaciones de arrastrar y colocar y retiene la captura hasta que se produce la acción de colocación de la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-621">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="dfcc8-622">Como este evento usa el enrutamiento de propagación, el elemento que tiene la captura puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-622">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-623">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que tiene la captura.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-623">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="dfcc8-624">Este evento crea un alias para el evento adjunto para esta clase para que <xref:System.Windows.UIElement.GotStylusCapture> forma parte de la clase miembros lista cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-624">This event creates an alias for the attached event for this class so that <xref:System.Windows.UIElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-625">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.GotStylusCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-625">Event handlers that are attached to the <xref:System.Windows.UIElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-626">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-626">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-627">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-627">Identifier field</span></span>|<xref:System.Windows.UIElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="dfcc8-628">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-628">Routing strategy</span></span>|<span data-ttu-id="dfcc8-629">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-629">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-630">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-630">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-631">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-631">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="dfcc8-632">Invalidar <xref:System.Windows.UIElement.OnGotStylusCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-632">Override <xref:System.Windows.UIElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-633">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.GotStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-633">Identifies the <see cref="E:System.Windows.UIElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-634">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-634">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-635">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-635">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-636">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-636">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-637">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-637">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-638">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-638">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-639">Se produce cuando se captura una entrada táctil en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-639">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-640">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-640">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-641">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-641">Identifier field</span></span>|<xref:System.Windows.UIElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="dfcc8-642">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-642">Routing strategy</span></span>|<span data-ttu-id="dfcc8-643">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-643">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-644">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-644">Delegate</span></span>|<span data-ttu-id="dfcc8-645"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-645"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-646">Invalidar <xref:System.Windows.UIElement.OnGotTouchCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-646">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-647">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.GotTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-647">Identifies the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-648">Obtiene un valor que indica si este elemento tiene propiedades animadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-648">Gets a value indicating whether this element has any animated properties.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-649"><see langword="true" /> si este elemento tiene animaciones asociadas a cualquiera de sus propiedades; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-649"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-650">Esta propiedad devuelve `true` para las animaciones persistentes (no bloqueadas, siempre en ejecución) o para las animaciones que tienen una escala de tiempo específico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-650">This property returns `true` either for persistent (unclocked, always-running) animations, or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasEffectiveKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual bool HasEffectiveKeyboardFocus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasEffectiveKeyboardFocus" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.HasEffectiveKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HasEffectiveKeyboardFocus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HasEffectiveKeyboardFocus { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-651">Obtiene un valor que indica si <see cref="T:System.Windows.UIElement" /> tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-651">Gets a value that indicates whether the <see cref="T:System.Windows.UIElement" /> has focus.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-652"><see langword="true" /> si <see cref="T:System.Windows.UIElement" /> tiene el foco; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-652"><see langword="true" /> if the <see cref="T:System.Windows.UIElement" /> has focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-653">Las subclases pueden invalidar esta propiedad para especificar si el elemento tiene el foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-653">Subclasses can override this property to specify when the element has keyboard focus.</span></span>  <span data-ttu-id="dfcc8-654">Esto es útil cuando la <xref:System.Windows.UIElement> contiene elementos que pueden tener el foco del teclado y desea que su elemento de informe que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-654">This is useful when your <xref:System.Windows.UIElement> contains elements that can have keyboard focus and you want your element to report that it has focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTestCore">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dfcc8-655">Implementa <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> para proporcionar el comportamiento de la prueba de posicionamiento del elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-655">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.GeometryHitTestResult HitTestCore (System.Windows.Media.GeometryHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.GeometryHitTestResult HitTestCore(class System.Windows.Media.GeometryHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As GeometryHitTestParameters) As GeometryHitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::GeometryHitTestResult ^ HitTestCore(System::Windows::Media::GeometryHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.GeometryHitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.GeometryHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="dfcc8-656">Describe la prueba de posicionamiento que se va a llevar a cabo, incluido el punto de posicionamiento inicial.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-656">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="dfcc8-657">Implementa <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> para proporcionar el comportamiento de la prueba de posicionamiento del elemento base (devuelve <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-657">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.GeometryHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.GeometryHitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="dfcc8-658">Resultados de la prueba, incluida la geometría evaluada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-658">Results of the test, including the evaluated geometry.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-659">Vea el método virtual original <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> para obtener información sobre cómo reemplazar este método en más de las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-659">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="dfcc8-660">Tenga en cuenta que varios controles concretos (<xref:System.Windows.Controls.TextBlock>, por ejemplo) tienen implementaciones distintas, que invalidan esta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-660">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override this one.</span></span>  
  
 <span data-ttu-id="dfcc8-661">Este método no está pensado para ser llamado desde el código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-661">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="dfcc8-662">Este método es compatible con los comportamientos de pruebas llamados internos expuestos por varios aspectos del sistema de entrada (si el puntero del mouse está sobre un elemento, por ejemplo).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-662">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTestCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.HitTestResult HitTestCore (System.Windows.Media.PointHitTestParameters hitTestParameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.HitTestResult HitTestCore(class System.Windows.Media.PointHitTestParameters hitTestParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.HitTestCore(System.Windows.Media.PointHitTestParameters)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function HitTestCore (hitTestParameters As PointHitTestParameters) As HitTestResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::HitTestResult ^ HitTestCore(System::Windows::Media::PointHitTestParameters ^ hitTestParameters);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.HitTestResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hitTestParameters" Type="System.Windows.Media.PointHitTestParameters" />
      </Parameters>
      <Docs>
        <param name="hitTestParameters"><span data-ttu-id="dfcc8-663">Describe la prueba de posicionamiento que se va a llevar a cabo, incluido el punto de posicionamiento inicial.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-663">Describes the hit test to perform, including the initial hit point.</span></span></param>
        <summary><span data-ttu-id="dfcc8-664">Implementa <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> para proporcionar el comportamiento de la prueba de posicionamiento del elemento base (devuelve <see cref="T:System.Windows.Media.HitTestResult" />).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-664">Implements <see cref="M:System.Windows.Media.Visual.HitTestCore(System.Windows.Media.PointHitTestParameters)" /> to supply base element hit testing behavior (returning <see cref="T:System.Windows.Media.HitTestResult" />).</span></span></summary>
        <returns><span data-ttu-id="dfcc8-665">Resultados de la prueba, incluido el punto evaluado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-665">Results of the test, including the evaluated point.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-666">Vea el método virtual original <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> para obtener información sobre cómo reemplazar este método en más de las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-666">See the original virtual method <xref:System.Windows.Media.Visual.HitTestCore%2A?displayProperty=nameWithType> for information on overriding this method in further derived classes.</span></span> <span data-ttu-id="dfcc8-667">Tenga en cuenta que varios controles concretos (<xref:System.Windows.Controls.TextBlock>, por ejemplo) tienen implementaciones distintas, que invalidan <xref:System.Windows.UIElement.HitTestCore%2A> tal como se define por <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-667">Note that several specific controls (<xref:System.Windows.Controls.TextBlock>, for example) do have distinct implementations, which override <xref:System.Windows.UIElement.HitTestCore%2A> as defined by <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-668">Este método no está pensado para ser llamado desde el código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-668">This method is not intended to be called from your application code.</span></span> <span data-ttu-id="dfcc8-669">Este método es compatible con los comportamientos de pruebas llamados internos expuestos por varios aspectos del sistema de entrada (si el puntero del mouse está sobre un elemento, por ejemplo).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-669">This method supports internal hit testing behaviors that are exposed by various aspects of the input system (whether the mouse pointer is over an element, for example).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-670">Obtiene la colección de enlaces de entrada asociados a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-670">Gets the collection of input bindings associated with this element.</span></span></summary>
        <value><span data-ttu-id="dfcc8-671">Colección de enlaces de entrada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-671">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-672">Enlaces de entrada admiten el enlace de comandos para dispositivos de entrada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-672">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="dfcc8-673">Por ejemplo, <xref:System.Windows.Input.MouseBinding> implementa enlaces que incluyan las propiedades que son específicos de los dispositivos de mouse de entrada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-673">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are particular to mouse devices.</span></span>  
  
 <span data-ttu-id="dfcc8-674">La colección de enlaces de entrada incluye enlaces de entrada que pertenecen al tipo así como los enlaces de entrada que se declaran en la instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-674">The collection of input bindings will include both input bindings that pertain to the type as well as input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="dfcc8-675">Una propiedad relacionada, <xref:System.Windows.UIElement.CommandBindings%2A>, mantiene una colección de enlaces de comando.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-675">A related property, <xref:System.Windows.UIElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="dfcc8-676">Difieren de los enlaces de entrada en que representan el siguiente nivel hacia abajo del procesamiento de comandos - las acciones que están asociados a los comandos conocidos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-676">These differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="dfcc8-677">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="dfcc8-677">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  
  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dfcc8-678">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="dfcc8-678">XAML Values</span></span>  
 <span data-ttu-id="dfcc8-679">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="dfcc8-679">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="dfcc8-680">Uno o varios <xref:System.Windows.Input.InputBinding> elementos (normalmente el <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding> las clases derivadas).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-680">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="dfcc8-681">Se espera que cada uno de ellos tenga un <xref:System.Windows.Input.InputBinding.Command%2A> y <xref:System.Windows.Input.InputBinding.Gesture%2A> conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-681">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-682">El ejemplo siguiente rellena esta propiedad en un <xref:System.Windows.Window>, con una sola <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-682">The following example populates this property on a <xref:System.Windows.Window>, with a single <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-xaml[CommandingOverviewSnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="dfcc8-683">Para obtener más información sobre la [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sintaxis para las colecciones, vea [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-683">For more information about the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax for collections, see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="dfcc8-684">Coordenadas de desplazamiento de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-684">The offset coordinates within this element.</span></span></param>
        <summary><span data-ttu-id="dfcc8-685">Devuelve el elemento de entrada dentro del elemento actual que está en las coordenadas especificadas, relativas al origen del elemento actual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-685">Returns the input element within the current element that is at the specified coordinates, relative to the current element's origin.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-686">Elemento secundario que se encuentra en la posición dada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-686">The element child that is located at the given position.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-687"><xref:System.Windows.IInputElement> se devuelve como el tipo de valor devuelto, porque ese tipo es una interfaz común para ambos <xref:System.Windows.UIElement> y <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-687"><xref:System.Windows.IInputElement> is returned as the return type, because that type is a common interface for both <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="dfcc8-688">A continuación, puede convertir el tipo de valor devuelto correctamente, o usar la instancia de la interfaz para ciertos miembros definidos por el <xref:System.Windows.IInputElement> interfaz.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-688">You can then cast the return type appropriately, or use the interface instance for certain members that are defined by the <xref:System.Windows.IInputElement> interface.</span></span>  
  
 <span data-ttu-id="dfcc8-689">Normalmente no llama a este método desde el código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-689">This method typically is not called from your application code.</span></span> <span data-ttu-id="dfcc8-690">Llamar a este método sólo es apropiado si piensa volver a implementar una cantidad considerable de las características de entrada de bajo niveles que ya están presentes, como volver a crear la lógica de dispositivo de mouse (ratón).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-690">Calling this method is only appropriate if you intend to re-implement a substantial amount of the low level input features that are already present, such as recreating mouse device logic.</span></span>  
  
 <span data-ttu-id="dfcc8-691"><xref:System.Windows.IContentHost> contratos de un <xref:System.Windows.IContentHost.InputHitTest%2A> método con la misma firma, que algunos elementos deciden implementar explícitamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-691"><xref:System.Windows.IContentHost> contracts an <xref:System.Windows.IContentHost.InputHitTest%2A> method with the same signature, which some elements choose to implement explicitly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateArrange">
      <MemberSignature Language="C#" Value="public void InvalidateArrange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateArrange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateArrange" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateArrange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateArrange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-692">Invalida el estado de organización (diseño) del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-692">Invalidates the arrange state (layout) for the element.</span></span> <span data-ttu-id="dfcc8-693">Después de la invalidación, se actualiza el diseño del elemento, lo cual se produce de forma asincrónica a menos que <see cref="M:System.Windows.UIElement.UpdateLayout" /> lo fuerce a continuación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-693">After the invalidation, the element will have its layout updated, which will occur asynchronously unless subsequently forced by <see cref="M:System.Windows.UIElement.UpdateLayout" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-694">Las llamadas frecuentes a <xref:System.Windows.UIElement.InvalidateArrange%2A> o en particular, <xref:System.Windows.UIElement.UpdateLayout%2A> tiene consecuencias de rendimiento significativas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-694">Frequent calls to <xref:System.Windows.UIElement.InvalidateArrange%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="dfcc8-695">Por lo tanto, evite llamar a este método, a menos que requiera el estado de diseño preciso para las llamadas subsiguientes a otros [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] en el código.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-695">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span> <span data-ttu-id="dfcc8-696">Un escenario avanzado que puede llamar a <xref:System.Windows.UIElement.InvalidateArrange%2A> es si va a crear un <xref:System.Windows.PropertyChangedCallback> para una propiedad de dependencia que no se encuentra en un <xref:System.Windows.Freezable> o <xref:System.Windows.FrameworkElement> clase derivada que todavía influye en el paso de organización del diseño cuando el estado cambia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-696">An advanced scenario where you might call <xref:System.Windows.UIElement.InvalidateArrange%2A> is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the arrange pass of layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateMeasure">
      <MemberSignature Language="C#" Value="public void InvalidateMeasure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateMeasure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateMeasure" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateMeasure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateMeasure();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-697">Invalida el estado de medida (diseño) del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-697">Invalidates the measurement state (layout) for the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-698">Llamar a este método también llama <xref:System.Windows.UIElement.InvalidateArrange%2A> internamente, no es necesario llamar a <xref:System.Windows.UIElement.InvalidateMeasure%2A> y <xref:System.Windows.UIElement.InvalidateArrange%2A> en sucesión.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-698">Calling this method also calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally, there is no need to call <xref:System.Windows.UIElement.InvalidateMeasure%2A> and <xref:System.Windows.UIElement.InvalidateArrange%2A> in succession.</span></span> <span data-ttu-id="dfcc8-699">Después de la invalidación, el elemento tiene su diseño actualizado, lo que ocurrirá de forma asincrónica, a menos que <xref:System.Windows.UIElement.UpdateLayout%2A> se llama para forzar un cambio de diseño sincrónico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-699">After the invalidation, the element will have its layout updated, which will occur asynchronously, unless <xref:System.Windows.UIElement.UpdateLayout%2A> is called to force a synchronous layout change.</span></span>  
  
 <span data-ttu-id="dfcc8-700">El sistema de diseño de nivel de marco WPF hace su propio control de cambios en el árbol visual de un elemento y, en casos más comunes de invalidación de diseño el sistema de diseño llama al equivalente de este método cuando sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-700">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and in most common layout invalidation cases the layout system is calling the equivalent of this method when necessary.</span></span> <span data-ttu-id="dfcc8-701">Solo debe llamar a este método si se produce una implementación del diseño completa, que dirigen la manipulación del árbol de elementos, o similar escenarios avanzados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-701">You should only call this method if you are producing a complete layout implementation, which does direct manipulation of the element tree, or similar advanced scenarios.</span></span> <span data-ttu-id="dfcc8-702">Uno de estos escenarios avanzado es si va a crear un <xref:System.Windows.PropertyChangedCallback> para una propiedad de dependencia que no se encuentra en un <xref:System.Windows.Freezable> o <xref:System.Windows.FrameworkElement> clase derivada que todavía influye en el paso de medición del diseño cuando el estado cambia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-702">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the measure pass of layout when it changes.</span></span>  
  
 <span data-ttu-id="dfcc8-703">Las llamadas frecuentes a <xref:System.Windows.UIElement.InvalidateMeasure%2A> o en particular, <xref:System.Windows.UIElement.UpdateLayout%2A> tiene consecuencias de rendimiento significativas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-703">Frequent calls to <xref:System.Windows.UIElement.InvalidateMeasure%2A> or in particular to <xref:System.Windows.UIElement.UpdateLayout%2A> have significant performance consequences.</span></span> <span data-ttu-id="dfcc8-704">Por lo tanto, evite llamar a este método, a menos que requiera el estado de diseño preciso para las llamadas subsiguientes a otros [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] en el código.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-704">Therefore, avoid calling this method unless you absolutely require precise layout state for subsequent calls to other [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in your code.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidateVisual">
      <MemberSignature Language="C#" Value="public void InvalidateVisual ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateVisual() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.InvalidateVisual" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateVisual ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateVisual();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-705">Invalida la representación del elemento y fuerza un nuevo paso de diseño completo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-705">Invalidates the rendering of the element, and forces a complete new layout pass.</span></span> <span data-ttu-id="dfcc8-706">Se llama a <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> una vez completado el ciclo de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-706"><see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> is called after the layout cycle is completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-707">Este método llama <xref:System.Windows.UIElement.InvalidateArrange%2A> internamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-707">This method calls <xref:System.Windows.UIElement.InvalidateArrange%2A> internally.</span></span>  
  
 <span data-ttu-id="dfcc8-708">Por lo general no se llama a este método desde el código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-708">This method is not generally called from your application code.</span></span> <span data-ttu-id="dfcc8-709">El sistema de diseño de nivel de marco WPF hace su propio control de cambios en el árbol visual de un elemento y llamaría el equivalente de este método cuando es necesario ya.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-709">The WPF framework-level layout system does its own handling of changes in the visual tree of an element, and would be calling the equivalent of this method when necessary already.</span></span> <span data-ttu-id="dfcc8-710">Llamar a este método sólo es necesario para escenarios avanzados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-710">Calling this method is necessary only for advanced scenarios.</span></span> <span data-ttu-id="dfcc8-711">Uno de estos escenarios avanzado es si va a crear un <xref:System.Windows.PropertyChangedCallback> para una propiedad de dependencia que no se encuentra en un <xref:System.Windows.Freezable> o <xref:System.Windows.FrameworkElement> clase derivada que todavía influye en el diseño cuando el estado cambia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-711">One such advanced scenario is if you are creating a <xref:System.Windows.PropertyChangedCallback> for a dependency property that is not on a <xref:System.Windows.Freezable> or <xref:System.Windows.FrameworkElement> derived class that still influences the layout when it changes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
      </Docs>
    </Member>
    <Member MemberName="IsArrangeValid">
      <MemberSignature Language="C#" Value="public bool IsArrangeValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArrangeValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsArrangeValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArrangeValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArrangeValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-712">Obtiene un valor que indica si el tamaño calculado y la posición de los elementos secundarios en el diseño de este elemento son válidos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-712">Gets a value indicating whether the computed size and position of child elements in this element's layout are valid.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-713"><see langword="true" /> si el tamaño y posición de diseño son válidos; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-713"><see langword="true" /> if the size and position of layout are valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-714">Puede forzar la organización que se invalide mediante una llamada a <xref:System.Windows.UIElement.InvalidateArrange%2A> en este elemento (o sus elementos primarios).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-714">You can force arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateArrange%2A> on this element (or its parents).</span></span> <span data-ttu-id="dfcc8-715">Esto marca el diseño para la recomposición en el momento que determina el sistema de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-715">This flags the layout for recomposition at such time as the layout system determines.</span></span> <span data-ttu-id="dfcc8-716">O bien, una llamada inmediata a <xref:System.Windows.UIElement.UpdateLayout%2A> podría realizarse, pero esto solo debe realizarse si se tiene la certeza de que ninguna otras invalidaciones están pendientes (un gran número de actualizaciones innecesariamente impuestas tiene consecuencias de rendimiento).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-716">Alternatively, an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A> could be made, but this should only be done if it is certain that no further invalidations are pending (a large number of unnecessarily forced updates has performance consequences).</span></span>  
  
 <span data-ttu-id="dfcc8-717"><xref:System.Windows.UIElement.IsArrangeValid%2A> no puede ser `true` a menos que <xref:System.Windows.UIElement.IsMeasureValid%2A> también es `true` (en el proceso de diseño, la organización no puede ser válida si la medida no es válida).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-717"><xref:System.Windows.UIElement.IsArrangeValid%2A> cannot be `true` unless <xref:System.Windows.UIElement.IsMeasureValid%2A> is also `true` (in the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.InvalidateArrange" />
        <altmember cref="P:System.Windows.UIElement.IsMeasureValid" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-718">Obtiene o establece un valor que indica si este elemento está habilitado en la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfcc8-718">Gets or sets a value indicating whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="dfcc8-719">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-719">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-720"><see langword="true" /> si el elemento está habilitado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-720"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-721">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-721">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-722">Tenga en cuenta que esta propiedad se ve influida por las implementaciones específicas de la clase de <xref:System.Windows.UIElement.IsEnabledCore%2A> en determinados elementos, a menudo en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-722">Note that this property is influenced by class-specific implementations of <xref:System.Windows.UIElement.IsEnabledCore%2A> on particular elements, often at runtime.</span></span> <span data-ttu-id="dfcc8-723">Por lo tanto, el valor predeterminado enumerado aquí a veces no es efectivo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-723">Therefore, the default value listed here is sometimes not effective.</span></span> <span data-ttu-id="dfcc8-724">Por ejemplo, un <xref:System.Windows.Controls.Primitives.ScrollBar> será <xref:System.Windows.UIElement.IsEnabled%2A> `false` cada vez que se determina que no es necesario para admitir una barra de desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-724">For instance, a <xref:System.Windows.Controls.Primitives.ScrollBar> will be <xref:System.Windows.UIElement.IsEnabled%2A> `false` whenever it is determined that there is no need to support a scrollbar.</span></span> <span data-ttu-id="dfcc8-725">Al intentar establecer este valor también potencialmente serán reemplazado por el valor devuelto por <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-725">Attempting to set this value will also potentially be overridden by the value returned by <xref:System.Windows.UIElement.IsEnabledCore%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-726">Elementos que no están habilitados no participan en la prueba de posicionamiento o foco y, por tanto, no será orígenes de eventos de entrada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-726">Elements that are not enabled do not participate in hit testing or focus and therefore will not be sources of input events.</span></span>  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-727">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-727">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-728">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-728">Identifier field</span></span>|<xref:System.Windows.UIElement.IsEnabledProperty>|  
|<span data-ttu-id="dfcc8-729">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-729">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-730">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-730">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-731">En el ejemplo siguiente se muestra un controlador en un botón que cuando ejecuta establece <xref:System.Windows.UIElement.IsEnabled%2A> `false` en otro botón con nombre `b1`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-731">The following example shows a handler on one button that when executed will set <xref:System.Windows.UIElement.IsEnabled%2A> `false` on another named button `b1`.</span></span>  
  
 [!code-csharp[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/CSharp/default.xaml.cs#handler)]
 [!code-vb[RoutedEventAddRemoveHandler#Handler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventAddRemoveHandler/VisualBasic/default.xaml.vb#handler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-732">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsEnabled" /> de este elemento cambia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-732">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-733">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-733">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-734">Obtiene un valor que se convierte en el valor devuelto de <see cref="P:System.Windows.UIElement.IsEnabled" /> en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-734">Gets a value that becomes the return value of <see cref="P:System.Windows.UIElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-735"><see langword="true" /> si el elemento está habilitado; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-735"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-736">La implementación predeterminada de esta propiedad se almacena en caché el valor y también calcula si el elemento primario de este elemento está habilitado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-736">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="dfcc8-737">(Si el elemento primario no está habilitado, el elemento secundario no podrá habilitarse eficazmente en aplicaciones prácticas [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Si opta por invalidar esta implementación, asegúrese de que se llame a la implementación base para conservar este comportamiento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-737">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span>  
  
 <span data-ttu-id="dfcc8-738">La <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> clase proporciona una implementación de invalidación existente de esta propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-738">The <see cref="T:System.Windows.Controls.Primitives.ScrollBar" /> class provides an existing override implementation of this property.</span></span> <span data-ttu-id="dfcc8-739">Esta invalidación determina si el contenido dentro del área de presentación del contenido supera el área disponible.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-739">This override determines whether the content inside the content presentation area exceeds the available area.</span></span> <span data-ttu-id="dfcc8-740">Si el contenido sobrepasa el área, se habilita la parte de la barra de desplazamiento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-740">If the content does exceed the area, the scrollbar portion is enabled.</span></span> <span data-ttu-id="dfcc8-741">En caso contrario, la barra de desplazamiento no está habilitado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-741">Otherwise, the scrollbar is not enabled.</span></span></para>
        </block>
        <altmember cref="E:System.Windows.UIElement.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-742">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-742">Identifies the <see cref="P:System.Windows.UIElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-743">Obtiene un valor que determina si este elemento tiene foco lógico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-743">Gets a value that determines whether this element has logical focus.</span></span>  <span data-ttu-id="dfcc8-744">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-744">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-745">Devuelve <see langword="true" /> si el elemento tiene el foco lógico; en caso contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-745"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-746">El foco lógico puede diferir del foco de teclado si una aplicación tiene varias divisiones de foco, por ejemplo, entre el contenido del menú y el resto de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-746">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="dfcc8-747">En este escenario, el foco de teclado sólo puede estar en un elemento del interfaz de usuario de la aplicación, sin embargo, ciertos elementos en otras divisiones de foco pueden retener el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-747">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="dfcc8-748">Para obtener más información sobre el foco lógico, consulte [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-748">For more information on logical focus, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="dfcc8-749">No establecer el foco al establecer esta propiedad (es de sólo lectura).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-749">You do not set focus by setting this property (it is read-only).</span></span> <span data-ttu-id="dfcc8-750">El uso típico de esta propiedad es utilizarlo como una propiedad de dependencia para un <xref:System.Windows.Setter> o <xref:System.Windows.EventTrigger>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-750">The typical use for this property is to use it as a dependency property for a <xref:System.Windows.Setter> or <xref:System.Windows.EventTrigger>.</span></span> <span data-ttu-id="dfcc8-751">Para establecer el foco mediante programación, llame a <xref:System.Windows.UIElement.Focus%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-751">To set focus programmatically, call <xref:System.Windows.UIElement.Focus%2A>.</span></span> <span data-ttu-id="dfcc8-752">También se puede establecer el enfoque por acción del usuario o las implementaciones de control, que posiblemente incluyen el comportamiento de captura del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-752">Focus can also be set by user action or by control implementations, which possibly include mouse capture behavior.</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-753">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-753">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-754">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-754">Identifier field</span></span>|<xref:System.Windows.UIElement.IsFocusedProperty>|  
|<span data-ttu-id="dfcc8-755">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-755">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-756">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-756">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-757">El ejemplo siguiente es un controlador de código que cambie el fondo de un control cuando recibe el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-757">The following example is a code handler that changes the background of a control when it is focused.</span></span>  
  
 [!code-csharp[PopupSimple#IsFocused](~/samples/snippets/csharp/VS_Snippets_Wpf/PopupSimple/CSharp/Window1.xaml.cs#isfocused)]  
  
 <span data-ttu-id="dfcc8-758">Otra forma común de lograr este mismo efecto consiste en colocar un <xref:System.Windows.Trigger> en el <xref:System.Windows.Style> de un control de este enfoque no requiere control de eventos concretos con código subyacente y permite a los diseñadores mayor acceso a la naturaleza interactiva y gráfica de el [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfcc8-758">Another common way to achieve this same effect is to place a <xref:System.Windows.Trigger> in the <xref:System.Windows.Style> of a control; this approach does not require handling specific events with code-behind and allows designers greater access to the interactive and graphical nature of the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="dfcc8-759">Para obtener un ejemplo, vea [Cómo: crear un efecto de iluminado exterior](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-759">For an example, see [How to: Create an Outer Glow Effect](http://msdn.microsoft.com/library/a2ccf19a-d0dc-4e3c-88e3-95d7f7d765b1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-760">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsFocused" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-760">Identifies the <see cref="P:System.Windows.UIElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-761">Obtiene o establece un valor que declara si este elemento puede devolverse como un resultado de prueba de posicionamiento desde alguna parte del contenido representado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-761">Gets or sets a value that declares whether this element can possibly be returned as a hit test result from some portion of its rendered content.</span></span> <span data-ttu-id="dfcc8-762">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-762">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-763">Devuelve <see langword="true" /> si este elemento puede devolverse como resultado de la prueba de posicionamiento de al menos un punto; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-763"><see langword="true" /> if this element could be returned as a hit test result from at least one point; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-764">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-764">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-765">El valor efectivo de esta propiedad se ve influenciado por las posiciones relativas de los elementos pueden someterse a prueba de posicionamiento en el árbol lógico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-765">The effective value of this property is influenced by the relative positions of hit testable elements in the logical tree.</span></span> <span data-ttu-id="dfcc8-766">Por ejemplo, si un elemento es un elemento secundario de un elemento que es realizar pruebas de posicionamiento visible, el valor efectivo de la propiedad en el elemento secundario seguirá siendo `false`, incluso si se intenta establecer ese valor localmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-766">For instance, if an element is a child element of an element that is not hit test visible, the effective value of the property on the child will remain `false`, even if attempting to set that value locally.</span></span> <span data-ttu-id="dfcc8-767">Por esta razón, es importante que establezca <xref:System.Windows.UIElement.IsHitTestVisible%2A> a `false` en un control compuesto, a menos que no desea ninguna entrada o pruebas de posicionamiento en ese control.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-767">For this reason, it is important that you do not set <xref:System.Windows.UIElement.IsHitTestVisible%2A> to `false` on a composited control unless you do not want any input or hit testing on that control.</span></span> <span data-ttu-id="dfcc8-768">Para más información acerca de las pruebas de posicionamiento, consulte [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md) (Pruebas de posicionamiento en la capa visual).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-768">For more information on hit testing, see [Hit Testing in the Visual Layer](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-769">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-769">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-770">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-770">Identifier field</span></span>|<xref:System.Windows.UIElement.IsHitTestVisibleProperty>|  
|<span data-ttu-id="dfcc8-771">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-771">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-772">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-772">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-773">Se produce cuando el valor de la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-773">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-774">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-774">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-775">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsHitTestVisible" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-775">Identifies the <see cref="P:System.Windows.UIElement.IsHitTestVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-776">Obtiene un valor que indica si un sistema de métodos de entrada, como [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], está habilitado para procesar la entrada en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-776">Gets a value indicating whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)],  is enabled for processing the input to this element.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-777"><see langword="true" /> si hay un método de entrada activo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-777"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-778">El valor predeterminado de la propiedad adjunta subyacente es <see langword="true;" /> sin embargo, esto se verán influido por el estado real de métodos de entrada en tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-778">The default value of the underlying attached property is <see langword="true;" /> however, this will be influenced by the actual state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-779">Esta propiedad devuelve el valor devuelto por la propiedad adjunta <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> para los métodos de entrada actualmente habilitados (teclado, voz y otros dispositivos de entrada).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-779">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-780">Obtiene un valor que indica si este elemento tiene foco de teclado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-780">Gets a value indicating whether this element has keyboard focus.</span></span>  <span data-ttu-id="dfcc8-781">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-781">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-782">Es <see langword="true" /> si el elemento tiene el foco del teclado; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-782"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-783">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-783">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-784">Cambios en el valor predeterminado de esta propiedad pueden ir acompañados de eventos relacionados con el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-784">Changes to the determined value of this property may be accompanied by focus-related events.</span></span>  
  
 <span data-ttu-id="dfcc8-785"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> y <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> usan habitualmente en los controladores de eventos de clase para otros eventos relacionados con la entrada, por ejemplo para determinar si el elemento ya tiene el foco del teclado o determinar al pasar el mouse eventos y eventos de teclado se producen conjuntamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-785"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are commonly used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-786">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-786">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-787">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-787">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="dfcc8-788">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-788">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-789">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-789">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
        <altmember cref="E:System.Windows.UIElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-790">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-790">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-791">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-791">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-792">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsKeyboardFocused" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-792">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-793">Obtiene un valor que indica si el foco del teclado está en alguna parte dentro del elemento o sus elementos secundarios de árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-793">Gets a value indicating whether keyboard focus is anywhere within the element or its visual tree child elements.</span></span>  <span data-ttu-id="dfcc8-794">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-794">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-795">Es <see langword="true" /> si el foco del teclado está en el elemento o en sus elementos secundarios; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-795"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-796">Los cambios en el valor de esta propiedad normalmente provocan el <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> eventos, a menos que una clase derivada invalide <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> para suprimir el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-796">Changes to the value of this property typically raise the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="dfcc8-797">Esta propiedad no se establece directamente, pero puede establecer el foco a un elemento mediante una llamada a <xref:System.Windows.UIElement.Focus%2A>, o realizando una <xref:System.Windows.UIElement.MoveFocus%2A> solicitud.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-797">You do not set this property directly, but you can set the focus to an element by calling <xref:System.Windows.UIElement.Focus%2A>, or by making a <xref:System.Windows.UIElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="dfcc8-798">Cualquiera de estas llamadas al método puede cambiar este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-798">Either of these method calls might change this property value.</span></span>  
  
 <span data-ttu-id="dfcc8-799"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> y <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> se suelen usar en los controladores de eventos de clase para otros eventos relacionados con la entrada, por ejemplo para determinar si el elemento ya tiene el foco del teclado o determinar al pasar el mouse eventos y eventos de teclado se producen conjuntamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-799"><xref:System.Windows.UIElement.IsKeyboardFocused%2A> and <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> are typically used within class event handlers for other input-related events, for instance to determine whether the element already has keyboard focus, or to make determinations when mouse events and keyboard events occur in conjunction.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-800">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-800">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-801">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-801">Identifier field</span></span>|<xref:System.Windows.UIElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="dfcc8-802">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-802">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-803">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-803">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-804">Se produce cuando el valor de la propiedad <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-804">Occurs when the value of the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-805">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-805">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-806">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-806">Identifies the <see cref="P:System.Windows.UIElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabled">
      <MemberSignature Language="C#" Value="public bool IsManipulationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsManipulationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsManipulationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsManipulationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsManipulationEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-807">Obtiene o establece un valor que indica si los eventos de manipulación están habilitados en este objeto <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-807">Gets or sets a value that indicates whether manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-808">Es <see langword="true" /> si los eventos de manipulación están habilitados en este objeto <see cref="T:System.Windows.UIElement" />; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-808"><see langword="true" /> if manipulation events are enabled on this <see cref="T:System.Windows.UIElement" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-809">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-809">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-810">Establezca esta propiedad en true si desea que la <xref:System.Windows.UIElement> para recibir la <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, y <xref:System.Windows.UIElement.ManipulationCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-810">Set this property to true if you want the <xref:System.Windows.UIElement> to receive the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationStarted>, <xref:System.Windows.UIElement.ManipulationDelta>, <xref:System.Windows.UIElement.ManipulationInertiaStarting>, <xref:System.Windows.UIElement.ManipulationBoundaryFeedback>, and <xref:System.Windows.UIElement.ManipulationCompleted> events.</span></span> <span data-ttu-id="dfcc8-811">Para obtener más información acerca de las manipulaciones, vea el [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-811">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="dfcc8-812">Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-812">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-813">En el ejemplo siguiente se crea una aplicación que tenga un rectángulo rojo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-813">The following example creates an application that has a red Rectangle.</span></span>  <span data-ttu-id="dfcc8-814">El <xref:System.Windows.UIElement.IsManipulationEnabled%2A> propiedad del rectángulo está establecida en true y la aplicación de la ventana se suscribe a la <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, y <xref:System.Windows.UIElement.ManipulationInertiaStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-814">The <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property of the Rectangle is set to true and the application's window subscribes to the <xref:System.Windows.UIElement.ManipulationStarting>, <xref:System.Windows.UIElement.ManipulationDelta>, and <xref:System.Windows.UIElement.ManipulationInertiaStarting> events.</span></span> <span data-ttu-id="dfcc8-815">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-815">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-xaml[BasicManipulation#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManipulationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsManipulationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsManipulationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsManipulationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsManipulationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsManipulationEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-816">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsManipulationEnabled" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-816">Identifies the <see cref="P:System.Windows.UIElement.IsManipulationEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMeasureValid">
      <MemberSignature Language="C#" Value="public bool IsMeasureValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMeasureValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMeasureValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMeasureValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMeasureValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-817">Obtiene un valor que indica si el tamaño actual devuelto por la medida del diseño es válido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-817">Gets a value indicating whether the current size returned by layout measure is valid.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-818"><see langword="true" /> si el paso de la medida de diseño devolvió un valor válido y actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-818"><see langword="true" /> if the measure pass of layout returned a valid and current value; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-819">Puede forzar la medida y organización que se invalide mediante una llamada a <xref:System.Windows.UIElement.InvalidateMeasure%2A> en este elemento (o cualquier elemento primario del árbol visual).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-819">You can force measurement and arrangement to be invalidated by calling <xref:System.Windows.UIElement.InvalidateMeasure%2A> on this element (or any parent element up the visual tree).</span></span> <span data-ttu-id="dfcc8-820">Esto hace que designe el diseño para la recomposición de forma asincrónica, que se producen en un momento determinado por el sistema de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-820">This designates the layout for recomposition asynchronously, occurring at a time determined by the layout system.</span></span> <span data-ttu-id="dfcc8-821">Como alternativa, podría realizar una llamada inmediata a <xref:System.Windows.UIElement.UpdateLayout%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-821">Alternatively, you could make an immediate call to <xref:System.Windows.UIElement.UpdateLayout%2A>.</span></span> <span data-ttu-id="dfcc8-822">Sin embargo, debería llamar a <xref:System.Windows.UIElement.UpdateLayout%2A> si es probable que no hay más invalidaciones pendientes (un gran número de actualizaciones impuestas innecesariamente tendrá consecuencias en el rendimiento).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-822">However, you should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if it is likely that no further invalidations are pending (a large number of unnecessarily forced updates will have performance consequences).</span></span>  
  
 <span data-ttu-id="dfcc8-823">Si <xref:System.Windows.UIElement.IsMeasureValid%2A> es `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> también debe ser `false` (por la lógica aplicada del proceso de diseño, la organización no puede ser válida si la medida no es válida).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-823">If <xref:System.Windows.UIElement.IsMeasureValid%2A> is `false`, <xref:System.Windows.UIElement.IsArrangeValid%2A> must also be `false` (by the enforced logic of the layout process, arrangement cannot be valid without measurement first being valid).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-824">Obtiene un valor que indica si se captura el mouse en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-824">Gets a value indicating whether the mouse is captured to this element.</span></span>  <span data-ttu-id="dfcc8-825">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-825">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-826">Es <see langword="true" /> si el elemento tiene la captura del mouse; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-826"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-827">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-827">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-828">Estado de la captura del mouse está relacionado con las operaciones de arrastrar y colocar en proceso.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-828">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-829">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-829">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-830">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-830">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="dfcc8-831">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-831">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-832">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-832">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-833">El ejemplo siguiente activa el estado de la captura del mouse o desactivar en función de si ya se captura el mouse para el elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-833">The following example turns the mouse capture state on or off based on whether the mouse is already captured for the element.</span></span>  
  
 <span data-ttu-id="dfcc8-834">Si captura del mouse está en otra parte, que la captura del mouse está establecida en ese elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-834">If mouse capture is elsewhere, the mouse capture is set to that element.</span></span> <span data-ttu-id="dfcc8-835">Si el elemento tiene la captura del mouse, se borra llamando <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> con una entrada nula.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-835">If the element had mouse capture, it is cleared by calling <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with a null input.</span></span>  
  
 [!code-csharp[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#ismousecaptured)]
 [!code-vb[MouseSnippetSample#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-836">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-836">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-837">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-837">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-838">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsMouseCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-838">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-839">Obtiene un valor que determina si este elemento o los elementos secundarios de su árbol visual contienen la captura del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-839">Gets a value that determines whether mouse capture is held by this element or by child elements in its visual tree.</span></span> <span data-ttu-id="dfcc8-840">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-840">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-841">Es <see langword="true" /> si este elemento o un elemento que contiene tiene la captura del mouse; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-841"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-842">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-842">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-843">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-843">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="dfcc8-844">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-844">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-845">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-845">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-846">Se produce cuando el valor de <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-846">Occurs when the value of the <see cref="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-847">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-847">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-848">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-848">Identifies the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-849">Obtiene un valor que indica si la posición del puntero del mouse corresponde a los resultados de las pruebas de posicionamiento, que tienen en cuenta la composición del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-849">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="dfcc8-850">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-850">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-851"><see langword="true" /> Si el puntero del mouse está sobre el mismo resultado del elemento que una prueba de posicionamiento; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-851"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-852">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-852">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-853">A diferencia de <xref:System.Windows.UIElement.IsMouseOver%2A>, esta propiedad sólo es `true` si el puntero del mouse está sobre el elemento literal, ya que es para una prueba de posicionamiento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-853">Unlike <xref:System.Windows.UIElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="dfcc8-854">Si el puntero del mouse está sobre un elemento secundario, en particular sobre los elementos que forman parte de un elemento de la plantilla más profunda y la composición, esta propiedad será `false`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-854">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="dfcc8-855">A menos que sepa cómo un control es compuesto (por ejemplo, utilice esta propiedad en una plantilla de control personalizado para un control que defina), esta propiedad podría devolver resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-855">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="dfcc8-856">Para la mayoría de los escenarios donde no esté creando controles, use <xref:System.Windows.UIElement.IsMouseOver%2A> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-856">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="dfcc8-857">Si este elemento captura el mouse, y esta propiedad es `true` en el momento de la captura, esta propiedad continuará devolviendo `true` hasta que se pierda la captura del mouse y el puntero no es a través de sus límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-857">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-858">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-858">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-859">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-859">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="dfcc8-860">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-860">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-861">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-861">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-862">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-862">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-863">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-863">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-864">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-864">Identifies the <see cref="P:System.Windows.UIElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-865">Obtiene un valor que indica si el puntero del mouse se encuentra sobre este elemento (incluidos los elementos secundarios en el árbol visual).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-865">Gets a value indicating whether the mouse pointer is located over this element (including child elements in the visual tree).</span></span>  <span data-ttu-id="dfcc8-866">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-866">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-867">Es <see langword="true" /> si el puntero del mouse está sobre el elemento o sus elementos secundarios; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-867"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-868">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-868">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-869">Normalmente, los controles son compuestos tal que todos los distintos elementos dentro del control (el árbol visual) va a notificar el estado del mouse para el control contenedor.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-869">Typically, controls are composited such that the various elements inside the control (the visual tree) will all report the mouse state for the containing control.</span></span> <span data-ttu-id="dfcc8-870">Por ejemplo, un <xref:System.Windows.Controls.ListBox> informará de control de estilo de <xref:System.Windows.UIElement.IsMouseOver%2A> como `true` si el mouse se encuentra en cualquier parte sobre su geometría, incluidos los <xref:System.Windows.Controls.ListBoxItem>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-870">For example, a <xref:System.Windows.Controls.ListBox> style control will report <xref:System.Windows.UIElement.IsMouseOver%2A> as `true` if the mouse is anywhere over its geometry, including any <xref:System.Windows.Controls.ListBoxItem>.</span></span>  
  
 <span data-ttu-id="dfcc8-871">Aunque no exista un evento "IsMouseOverChanged análogo" análogo, realice varios eventos similares.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-871">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="dfcc8-872">Por ejemplo, puede controlar <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, y <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-872">For example, you can handle <xref:System.Windows.UIElement.MouseEnter>, <xref:System.Windows.UIElement.MouseMove>, and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="dfcc8-873">Si este elemento captura el mouse, esta propiedad permanece `true` hasta que se pierda la captura del mouse y el puntero del mouse deja los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-873">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
 <span data-ttu-id="dfcc8-874">Algunos controles capturan deliberadamente el mouse en determinadas acciones que no parecen implicar directamente el mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-874">Some controls deliberately capture the mouse on certain actions that do not appear to directly involve the mouse.</span></span> <span data-ttu-id="dfcc8-875">Esto puede conducir a <xref:System.Windows.UIElement.IsMouseOver%2A> que se va a `true` aunque aparentemente no ha movido el mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-875">This can lead to <xref:System.Windows.UIElement.IsMouseOver%2A> being `true` even though the mouse has not apparently moved.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-876">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-876">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-877">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-877">Identifier field</span></span>|<xref:System.Windows.UIElement.IsMouseOverProperty>|  
|<span data-ttu-id="dfcc8-878">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-878">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-879">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-879">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-880">En el ejemplo siguiente se hace referencia a esta propiedad como el tipo de propiedad de un <xref:System.Windows.Trigger>, parte de un \<Style.Triggers > bloque.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-880">The following example references this property as the property type of a <xref:System.Windows.Trigger>, part of a \<Style.Triggers> block.</span></span> <span data-ttu-id="dfcc8-881">Si el mouse está sobre el control, el texto del control se vuelve azul y el cursor se convierte en una mano.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-881">If the mouse is over the control, the control text turns blue and the cursor becomes a hand.</span></span>  
  
 [!code-xaml[ListViewChkBox#Trigger](~/samples/snippets/csharp/VS_Snippets_Wpf/ListViewChkBox/CS/window1.xaml#trigger)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-882">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsMouseOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-882">Identifies the <see cref="P:System.Windows.UIElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-883">Obtiene un valor que indica si este elemento captura el lápiz.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-883">Gets a value indicating whether the stylus is captured by this element.</span></span>  <span data-ttu-id="dfcc8-884">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-884">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-885">Es <see langword="true" /> si el elemento tiene la captura del lápiz óptico; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-885"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-886">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-886">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-887">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-887">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-888">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-888">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-889">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-889">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-890">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-890">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="dfcc8-891">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-891">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-892">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-892">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-893">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-893">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-894">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-894">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-895">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsStylusCaptured" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-895">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-896">Obtiene un valor que determina si captura del lápiz se mantiene en este elemento o en un elemento dentro de los límites del elemento y su árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-896">Gets a value that determines whether stylus capture is held by this element, or an element within the element bounds and its visual tree.</span></span> <span data-ttu-id="dfcc8-897">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-897">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-898">Devuelve <see langword="true" /> si este elemento o un elemento que contiene tiene la captura del lápiz óptico; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-898"><see langword="true" /> if this element or a contained element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-899">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-899">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-900">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-900">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-901">Para obtener más información, consulte [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) y [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-901">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-902">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-902">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-903">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-903">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="dfcc8-904">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-904">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-905">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-905">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-906">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-906">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-907">Se trata de un [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-907">This is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-908">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-908">Identifies the <see cref="P:System.Windows.UIElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-909">Obtiene un valor que indica si la posición del lápiz corresponde a los resultados de las pruebas de posicionamiento, que tienen en cuenta la composición del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-909">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span>  <span data-ttu-id="dfcc8-910">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-910">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-911">Devuelve <see langword="true" /> si el puntero del lápiz óptico está sobre el mismo resultado del elemento que una prueba de posicionamiento; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-911"><see langword="true" /> if the stylus pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-912">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-912">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-913">A diferencia de <xref:System.Windows.UIElement.IsStylusOver%2A>, esta propiedad sólo es `true` si el lápiz está sobre el elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-913">Unlike <xref:System.Windows.UIElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="dfcc8-914">Si en su lugar, el lápiz está sobre un elemento secundario o sobre los elementos que forman parte de la composición más profunda de un elemento (el árbol visual), esta propiedad será `false`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-914">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing (the visual tree), this property will be `false`.</span></span>  
  
 <span data-ttu-id="dfcc8-915">A menos que sepa cómo un control es compuesto (por ejemplo, utilice esta propiedad en una plantilla de control personalizado para un control que defina), esta propiedad podría devolver resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-915">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="dfcc8-916">Para la mayoría de los escenarios donde no esté creando controles, use <xref:System.Windows.UIElement.IsStylusOver%2A> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-916">For most scenarios where you are not authoring controls, use <xref:System.Windows.UIElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="dfcc8-917">Si este elemento tiene la captura del lápiz y esta propiedad es `true` en el momento de la captura, esta propiedad permanece `true` hasta que se pierde la captura del lápiz y el lápiz no está por encima de sus límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-917">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="dfcc8-918">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-918">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-919">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-919">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-920">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-920">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-921">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-921">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="dfcc8-922">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-922">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-923">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-923">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-924">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-924">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-925">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-925">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-926">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-926">Identifies the <see cref="P:System.Windows.UIElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-927">Obtiene un valor que indica si el cursor del lápiz se encuentra sobre este elemento (incluidos los elementos secundarios del objeto visual).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-927">Gets a value indicating whether the stylus cursor is located over this element (including visual child elements).</span></span>  <span data-ttu-id="dfcc8-928">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-928">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-929">Devuelve <see langword="true" /> si el cursor del lápiz óptico está sobre el elemento o sus elementos secundarios; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-929"><see langword="true" /> if stylus cursor is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-930">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-930">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-931">Si este elemento tiene la captura del lápiz, esta propiedad continuará devolviendo `true` hasta que se pierde la captura del lápiz y el puntero está fuera de sus límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-931">If this element has stylus capture, this property will continue to return `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="dfcc8-932">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-932">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-933">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-933">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-934">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-934">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-935">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-935">Identifier field</span></span>|<xref:System.Windows.UIElement.IsStylusOverProperty>|  
|<span data-ttu-id="dfcc8-936">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-936">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-937">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-937">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-938">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsStylusOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-938">Identifies the <see cref="P:System.Windows.UIElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-939">Obtiene un valor que indica si este elemento está visible en la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfcc8-939">Gets a value indicating whether this element is visible in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="dfcc8-940">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-940">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-941">Es <see langword="true" /> si el elemento está visible, de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-941"><see langword="true" /> if the element is visible; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-942">Determinación de la <xref:System.Windows.UIElement.IsVisible%2A> valor tiene todos los factores de diseño en cuenta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-942">Determination of the <xref:System.Windows.UIElement.IsVisible%2A> value takes all factors of layout into account.</span></span> <span data-ttu-id="dfcc8-943">En cambio, <xref:System.Windows.UIElement.Visibility%2A>, que es una propiedad configurable, solamente indica la intención de realizar mediante programación un elemento visible o invisible.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-943">In contrast, <xref:System.Windows.UIElement.Visibility%2A>, which is a settable property, only indicates the intention to programmatically make an element visible or invisible.</span></span>  
  
 <span data-ttu-id="dfcc8-944">Elementos donde <xref:System.Windows.UIElement.IsVisible%2A> es `false` no participan en eventos de entrada (o comandos), realice no influyen en la medida de cualquiera o pasos de diseño de organización, no son puede recibir el foco, no están en una secuencia de tabulación y no se incluirán en la prueba de posicionamiento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-944">Elements where <xref:System.Windows.UIElement.IsVisible%2A> is `false` do not participate in input events (or commands), do not influence either the measure or arrange passes of layout, are not focusable, are not in a tab sequence, and will not be reported in hit testing.</span></span> <span data-ttu-id="dfcc8-945">En cambio, los elementos donde <xref:System.Windows.UIElement.IsEnabled%2A> es `false` todavía participará en la prueba de posicionamiento, eventos y comandos, pero también no son puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-945">In contrast, elements where <xref:System.Windows.UIElement.IsEnabled%2A> is `false` will still participate in events and commands, and hit testing, but are also not focusable.</span></span>  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-946">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-946">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-947">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-947">Identifier field</span></span>|<xref:System.Windows.UIElement.IsVisibleProperty>|  
|<span data-ttu-id="dfcc8-948">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-948">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-949">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-949">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-950">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.UIElement.IsVisible" /> cambia en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-950">Occurs when the value of the <see cref="P:System.Windows.UIElement.IsVisible" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-951">Este evento no se desencadena si el elemento no se está representando por el sistema de diseño, por motivos que no sea el valor de la <xref:System.Windows.UIElement.IsVisible%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-951">This event is not raised if the element is not being rendered by the layout system, for reasons other than the value of the <xref:System.Windows.UIElement.IsVisible%2A> property.</span></span> <span data-ttu-id="dfcc8-952">Por ejemplo, el elemento no puede tener un objeto visual asociado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-952">For example, the element might not have an associated visual.</span></span>  
  
 <span data-ttu-id="dfcc8-953">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-953">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-954">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.IsVisible" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-954">Identifies the <see cref="P:System.Windows.UIElement.IsVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-955">Se produce cuando se presiona una tecla mientras el foco está en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-955">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-956">Control de claves interactúa con otras características de la plataforma, como la composición de comandos y el texto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-956">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="dfcc8-957">El <xref:System.Windows.UIElement.KeyDown> evento es un evento de entrada de texto de nivel inferior que podría no funcionar como se esperaba en ciertos controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-957">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="dfcc8-958">Esto es debido a que algunos controles tienen la composición del control o control de clases que proporciona una versión de un nivel más alto del texto de entrada de control y eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-958">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="dfcc8-959">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.KeyDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-959">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.UIElement.KeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-960">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.KeyDown> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-960">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-961">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-961">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-962">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-962">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyDownEvent>|  
|<span data-ttu-id="dfcc8-963">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-963">Routing strategy</span></span>|<span data-ttu-id="dfcc8-964">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-964">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-965">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-965">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="dfcc8-966">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-966">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-967">Invalidar <xref:System.Windows.UIElement.OnKeyDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-967">Override <xref:System.Windows.UIElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-968">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.KeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-968">Identifies the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-969">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-969">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-970">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-970">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-971">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-971">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-972">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-972">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-973">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-973">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-974">Se produce al soltar una tecla mientras el foco está en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-974">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-975">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.UIElement.KeyUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-975">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.UIElement.KeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-976">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.KeyUp> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-976">Event handlers that are attached to the <xref:System.Windows.UIElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-977">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-977">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-978">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-978">Identifier field</span></span>|<xref:System.Windows.UIElement.KeyUpEvent>|  
|<span data-ttu-id="dfcc8-979">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-979">Routing strategy</span></span>|<span data-ttu-id="dfcc8-980">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-980">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-981">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-981">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="dfcc8-982">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-982">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-983">Invalidar <xref:System.Windows.UIElement.OnKeyUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-983">Override <xref:System.Windows.UIElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-984">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.KeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-984">Identifies the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-985">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-985">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-986">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-986">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-987">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-987">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-988">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-988">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-989">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-989">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler LayoutUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LayoutUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LayoutUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LayoutUpdated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LayoutUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-990">Se produce cuando cambia el diseño de los diversos elementos visuales asociados al objeto <see cref="T:System.Windows.Threading.Dispatcher" /> actual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-990">Occurs when the layout of the various visual elements associated with the current <see cref="T:System.Windows.Threading.Dispatcher" /> changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-991">Una actualización de diseño puede deberse a un cambio de propiedad, un cambio de tamaño de ventana o una solicitud explícita del usuario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-991">A layout update can occur as a result of a property change, a window resize, or an explicit user request.</span></span>  
  
 <span data-ttu-id="dfcc8-992">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-992">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-993">Se produce cuando este elemento pierde el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-993">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-994">El foco lógico es diferente del foco de teclado si el foco se aleja deliberadamente mediante una llamada a un método pero el foco de teclado anterior existe en otro ámbito.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-994">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="dfcc8-995">En este escenario, donde resulta sigue siendo de foco de teclado y el elemento donde un <xref:System.Windows.UIElement.Focus%2A> se llama al método todavía obtiene el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-995">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.UIElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="dfcc8-996">Una interpretación más precisa de este evento es que se produce cuando el valor de la <xref:System.Windows.UIElement.IsFocused%2A> cambios en las propiedades de un elemento en la ruta de `true` a `false`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-996">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.UIElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="dfcc8-997">Como este evento usa el enrutamiento de propagación, el elemento que pierde el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-997">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-998">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que ha obtenido el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-998">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-999">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-999">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1000">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1000">Identifier field</span></span>|<xref:System.Windows.UIElement.LostFocusEvent>|  
|<span data-ttu-id="dfcc8-1001">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1001">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1002">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1002">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1003">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1003">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1004">No hay ningún evento de tunelización correspondiente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1004">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="dfcc8-1005">Invalidar <xref:System.Windows.UIElement.OnLostFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1005">Override <xref:System.Windows.UIElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1006">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1006">Identifies the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1007">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1007">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1008">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1008">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1009">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1009">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1010">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1010">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1011">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1011">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1012">Se produce cuando este elemento deja de recibir el foco del teclado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1012">Occurs when the keyboard is no longer focused on this element,.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1013">Como este evento usa el enrutamiento de propagación, el elemento que perdió el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1013">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-1014">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que perdió el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1014">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="dfcc8-1015">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.LostKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1015">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1016">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.LostKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1016">Event handlers that are attached to the <xref:System.Windows.UIElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1017">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1017">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1018">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1018">Identifier field</span></span>|<xref:System.Windows.UIElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="dfcc8-1019">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1019">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1020">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1020">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1021">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1021">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1022">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1022">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="dfcc8-1023">Invalidar <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1023">Override <xref:System.Windows.UIElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1024">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.LostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1024">Identifies the <see cref="E:System.Windows.UIElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1025">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1025">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1026">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1026">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1027">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1027">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1028">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1028">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1029">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1029">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1030">Se produce cuando este elemento pierde la captura del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1030">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1031">Cuando un elemento captura el mouse, recibe la entrada del mouse incluso si el puntero está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1031">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="dfcc8-1032">Normalmente se captura el mouse sólo durante las operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1032">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="dfcc8-1033">Como este evento usa el enrutamiento de propagación, el elemento que pierde la captura puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1033">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-1034">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que pierde la captura.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1034">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="dfcc8-1035">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.LostMouseCapture> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1035">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1036">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.LostMouseCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1036">Event handlers that are attached to the <xref:System.Windows.UIElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1037">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1037">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1038">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1038">Identifier field</span></span>|<xref:System.Windows.UIElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="dfcc8-1039">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1039">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1040">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1040">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1041">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1041">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1042">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1042">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="dfcc8-1043">Invalidar <xref:System.Windows.UIElement.OnLostMouseCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1043">Override <xref:System.Windows.UIElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1044">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.LostMouseCapture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1044">Identifies the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1045">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1045">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1046">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1046">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1047">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1047">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1048">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1048">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1049">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1049">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1050">Se produce cuando este elemento pierde la captura del lápiz.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1050">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1051">Cuando un elemento captura el lápiz, recibe la entrada de lápiz incluso si el puntero está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1051">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="dfcc8-1052">Normalmente se captura el lápiz sólo durante las operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1052">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="dfcc8-1053">Como este evento usa el enrutamiento de propagación, el elemento que pierde el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1053">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-1054">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que perdió el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1054">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="dfcc8-1055">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.LostStylusCapture> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1055">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1056">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.LostStylusCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1056">Event handlers that are attached to the <xref:System.Windows.UIElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1057">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1057">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1058">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1058">Identifier field</span></span>|<xref:System.Windows.UIElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="dfcc8-1059">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1059">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1060">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1060">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1061">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1061">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1062">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1062">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="dfcc8-1063">Invalidar <xref:System.Windows.UIElement.OnLostStylusCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1063">Override <xref:System.Windows.UIElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1064">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.LostStylusCapture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1064">Identifies the <see cref="E:System.Windows.UIElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1065">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1065">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1066">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1066">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1067">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1067">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1068">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1068">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1069">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1069">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1070">Se produce cuando este elemento pierde una captura táctil.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1070">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1071">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1071">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1072">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1072">Identifier field</span></span>|<xref:System.Windows.UIElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="dfcc8-1073">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1073">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1074">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1074">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1075">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1075">Delegate</span></span>|<span data-ttu-id="dfcc8-1076"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1076"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-1077">Invalidar <xref:System.Windows.UIElement.OnLostTouchCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1077">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1078">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.LostTouchCapture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1078">Identifies the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt; ManipulationBoundaryFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationBoundaryFeedback As EventHandler(Of ManipulationBoundaryFeedbackEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^&gt; ^ ManipulationBoundaryFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationBoundaryFeedbackEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1079">Se produce cuando la manipulación encuentra un límite.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1079">Occurs when the manipulation encounters a boundary.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_ManipulationBoundaryFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1080">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1080">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1081">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1081">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent>|  
|<span data-ttu-id="dfcc8-1082">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1082">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1083">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1083">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1084">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1084">Delegate</span></span>|<span data-ttu-id="dfcc8-1085"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1085"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationBoundaryFeedbackEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationBoundaryFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationBoundaryFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationBoundaryFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationBoundaryFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1086">Identifica el evento <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1086">Identifies the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationCompletedEventArgs&gt; ManipulationCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationCompleted As EventHandler(Of ManipulationCompletedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationCompletedEventArgs ^&gt; ^ ManipulationCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1087">Se produce cuando se han completado una manipulación y la inercia en el objeto <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1087">Occurs when a manipulation and inertia on the <see cref="T:System.Windows.UIElement" /> object is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1088">Puede usar este evento para obtener información acerca de la manipulación cuando se complete.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1088">You can use this event to get information about the manipulation when it completes.</span></span>  <span data-ttu-id="dfcc8-1089">Por ejemplo, puede usar el <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> propiedad para determinar la cantidad total de la posición de la manipulación ha cambiado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1089">For example, you can use the <xref:System.Windows.Input.ManipulationCompletedEventArgs.TotalManipulation%2A?displayProperty=nameWithType> property to determine the total amount the position of the manipulation changed.</span></span>  
  
 <span data-ttu-id="dfcc8-1090">Para obtener más información acerca de las manipulaciones, vea el [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1090">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="dfcc8-1091">Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1091">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationCompleted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1092">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1092">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1093">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1093">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationCompletedEvent>|  
|<span data-ttu-id="dfcc8-1094">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1094">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1095">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1095">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1096">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1096">Delegate</span></span>|<span data-ttu-id="dfcc8-1097"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1097"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationCompletedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationCompletedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationCompletedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationCompletedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationCompletedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationCompletedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationCompletedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1098">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.ManipulationCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1098">Identifies the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDelta">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationDeltaEventArgs&gt; ManipulationDelta" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationDelta" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationDelta As EventHandler(Of ManipulationDeltaEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationDeltaEventArgs ^&gt; ^ ManipulationDelta;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationDeltaEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1099">Se produce cuando el dispositivo de entrada cambia de posición durante una manipulación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1099">Occurs when the input device changes position during a manipulation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1100">El <xref:System.Windows.UIElement.ManipulationDelta> evento aparece varias veces cuando el usuario arrastra dedos sobre la pantalla durante una manipulación y nuevo cuando se produce la inercia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1100">The <xref:System.Windows.UIElement.ManipulationDelta> event occurs multiple times when the user drags fingers over the screen during a manipulation and again when inertia occurs.</span></span>  <span data-ttu-id="dfcc8-1101">Puede usar el <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> propiedad para comprobar si el evento tiene lugar durante la inercia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1101">You can use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial%2A> property to check whether the event is occurring during inertia.</span></span>  
  
 <span data-ttu-id="dfcc8-1102">El elemento con el <xref:System.Windows.UIElement.ManipulationDelta> caso no se ve afectado en modo alguno cuando se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1102">The element on with <xref:System.Windows.UIElement.ManipulationDelta> event occurs is not affected in any way when the event occurs.</span></span>  <span data-ttu-id="dfcc8-1103">Debe proporcionar la lógica para el elemento que se pueden manipular.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1103">You must provide the logic to the element that is to be manipulated.</span></span>  <span data-ttu-id="dfcc8-1104">El <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> y <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propiedades, que son de tipo <xref:System.Windows.Input.ManipulationDelta>, contienen datos acerca de cómo cambiar la posición de las manipulaciones y se interpretan como mover, cambiar el tamaño o girar un objeto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> and <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> properties, which are of type <xref:System.Windows.Input.ManipulationDelta>, contain data about how the position of the manipulations change and interpreted as moving, resizing, or rotating an object.</span></span>  <span data-ttu-id="dfcc8-1105">Esa información se aplican al elemento que es para su manipulación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1105">You apply that information to the element that is to be manipulated.</span></span>  
  
 <span data-ttu-id="dfcc8-1106">Para obtener más información acerca de las manipulaciones, vea el [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1106">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="dfcc8-1107">Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1107">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationDelta"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1108">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1108">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1109">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1109">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationDeltaEvent>|  
|<span data-ttu-id="dfcc8-1110">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1110">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1111">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1111">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1112">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1112">Delegate</span></span>|<span data-ttu-id="dfcc8-1113"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1113"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationDeltaEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-1114">En el ejemplo siguiente se muestra un controlador de eventos para el <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1114">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="dfcc8-1115">El ejemplo se utiliza la <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> propiedad para mover, cambiar el tamaño y girar un <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1115">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span>  <span data-ttu-id="dfcc8-1116">El ejemplo también se comprueba si el <xref:System.Windows.UIElement.ManipulationDelta> se ha producido un evento durante la inercia y si el rectángulo toca el borde de una ventana.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1116">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span>  <span data-ttu-id="dfcc8-1117">Si se cumplen esos casos, la aplicación detiene la manipulación para evitar que el rectángulo deje el área visible de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1117">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="dfcc8-1118">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1118">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationDeltaEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationDeltaEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationDeltaEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationDeltaEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationDeltaEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationDeltaEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1119">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1119">Identifies the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationInertiaStartingEventArgs&gt; ManipulationInertiaStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationInertiaStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationInertiaStarting As EventHandler(Of ManipulationInertiaStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationInertiaStartingEventArgs ^&gt; ^ ManipulationInertiaStarting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationInertiaStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1120">Se produce cuando el dispositivo de entrada pierde el contacto con el objeto <see cref="T:System.Windows.UIElement" /> durante una manipulación y se inicia la inercia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1120">Occurs when the input device loses contact with the <see cref="T:System.Windows.UIElement" /> object during a manipulation and inertia begins.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1121">El <xref:System.Windows.UIElement.ManipulationInertiaStarting> evento tiene lugar cuando el usuario levanta todos los dedos de la pantalla durante una manipulación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1121">The <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs when the user lifts all of the fingers from the screen during a manipulation.</span></span> <span data-ttu-id="dfcc8-1122">Por ejemplo, si un usuario "produce" un <xref:System.Windows.UIElement> a través de una superficie, el usuario tocará los <xref:System.Windows.UIElement> para comenzar la acción, mueva el dedo por la pantalla una distancia corta y, a continuación, suelte el <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1122">For example, if a user "throws" a <xref:System.Windows.UIElement> across a surface, the user will touch the <xref:System.Windows.UIElement> to begin the action, move the finger across the screen for a short distance, and then release the <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="dfcc8-1123">Cuando el usuario suelta el elemento, comienza la inercia y <xref:System.Windows.UIElement.ManipulationInertiaStarting> se produce el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1123">When the user releases the element, inertia begins and the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event occurs.</span></span>  <span data-ttu-id="dfcc8-1124">El <xref:System.Windows.UIElement> continúa recibiendo <xref:System.Windows.UIElement.ManipulationDelta> eventos para indicar que se está produciendo inercia en el elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1124">The <xref:System.Windows.UIElement> continues to receive <xref:System.Windows.UIElement.ManipulationDelta> events to indicate that inertia is occurring on the element.</span></span>  
  
 <span data-ttu-id="dfcc8-1125">Puede usar este evento para especificar el comportamiento de la inercia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1125">You can use this event to specify the behavior of the inertia.</span></span>  <span data-ttu-id="dfcc8-1126">Por ejemplo, puede establecer el progreso inicial que se usa cuando la inercia comienza.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1126">For example, you can set the initial velocity that is used when inertia begins.</span></span>  <span data-ttu-id="dfcc8-1127">También puede especificar la cantidad de inercia estableciendo la desaceleración deseada o estableciendo la posición deseada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1127">You can also specify the amount of inertia by setting the desired deceleration or by setting the desired placement.</span></span>  <span data-ttu-id="dfcc8-1128">Puede establecer estos valores para cada tipo de manipulación (traducción, expansión o giro) de forma independiente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1128">You can set these values for each type of manipulation (translation, expansion, or rotation) independently.</span></span>  <span data-ttu-id="dfcc8-1129">Para obtener más información, vea <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1129">For more information, see <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>  
  
 <span data-ttu-id="dfcc8-1130">Para obtener más información acerca de las manipulaciones, vea el [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1130">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="dfcc8-1131">Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1131">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationInertiaStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1132">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1132">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1133">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1133">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationInertiaStartingEvent>|  
|<span data-ttu-id="dfcc8-1134">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1134">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1135">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1135">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1136">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1136">Delegate</span></span>|<span data-ttu-id="dfcc8-1137"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1137"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationInertiaStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-1138">El siguiente ejemplo se muestra la <xref:System.Windows.UIElement.ManipulationInertiaStarting> controlador de eventos y establece la desaceleración deseada para la traducción, expansión y rotación que se usa durante la inercia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1138">The following example shows the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event handler and sets the desired deceleration for translation, expansion, and rotation that is used during inertia.</span></span> <span data-ttu-id="dfcc8-1139">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1139">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationinertiastarting)]
 [!code-vb[BasicManipulation#ManipulationInertiaStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationinertiastarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationInertiaStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationInertiaStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationInertiaStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationInertiaStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationInertiaStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationInertiaStartingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1140">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1140">Identifies the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartedEventArgs&gt; ManipulationStarted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarted As EventHandler(Of ManipulationStartedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartedEventArgs ^&gt; ^ ManipulationStarted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1141">Se produce cuando un dispositivo de entrada inicia una manipulación en el objeto <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1141">Occurs when an input device begins a manipulation on the <see cref="T:System.Windows.UIElement" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1142">El <xref:System.Windows.UIElement.ManipulationStarted> evento tiene lugar después de la <xref:System.Windows.UIElement.ManipulationStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1142">The <xref:System.Windows.UIElement.ManipulationStarted> event occurs after the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span>  <span data-ttu-id="dfcc8-1143">Puede hacer lo siguiente con el <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1143">You can do the following with the <xref:System.Windows.Input.ManipulationStartedEventArgs>:</span></span>  
  
-   <span data-ttu-id="dfcc8-1144">Obtiene el elemento de la posición de la manipulación es relativo a mediante el <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1144">Get the element that the manipulation's position is relative to by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationContainer%2A> property.</span></span>  
  
-   <span data-ttu-id="dfcc8-1145">Obtener el origen de la manipulación mediante la <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1145">Get the origin of the manipulation by using the <xref:System.Windows.Input.ManipulationStartedEventArgs.ManipulationOrigin%2A> property.</span></span>  
  
-   <span data-ttu-id="dfcc8-1146">Cancele la manipulación mediante una llamada a la <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1146">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartedEventArgs.Complete%2A> method.</span></span>  
  
 <span data-ttu-id="dfcc8-1147">Para obtener más información acerca de las manipulaciones, vea el [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1147">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="dfcc8-1148">Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1148">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarted"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1149">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1149">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1150">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1150">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartedEvent>|  
|<span data-ttu-id="dfcc8-1151">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1151">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1152">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1152">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1153">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1153">Delegate</span></span>|<span data-ttu-id="dfcc8-1154"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1154"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartedEventArgs>.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1155">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.ManipulationStarted" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1155">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStarting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.ManipulationStartingEventArgs&gt; ManipulationStarting" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.ManipulationStarting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ManipulationStarting As EventHandler(Of ManipulationStartingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::ManipulationStartingEventArgs ^&gt; ^ ManipulationStarting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.ManipulationStartingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1156">Se produce cuando se crea por primera vez el procesador de manipulación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1156">Occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1157">El <xref:System.Windows.UIElement.ManipulationStarting> evento se produce en un elemento que tiene el <xref:System.Windows.UIElement.IsManipulationEnabled%2A> propiedad establecida en `true` cuando el usuario coloca un dedo en él.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1157">The <xref:System.Windows.UIElement.ManipulationStarting> event occurs on an element that has the <xref:System.Windows.UIElement.IsManipulationEnabled%2A> property set to `true` when the user puts a finger on it.</span></span> <span data-ttu-id="dfcc8-1158">De forma predeterminada, los eventos de manipulación subsiguientes notifican la posición de la manipulación en relación con el elemento que tiene <xref:System.Windows.UIElement.IsManipulationEnabled%2A> establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1158">By default, subsequent manipulation events report the position of the manipulation relative to the element that has <xref:System.Windows.UIElement.IsManipulationEnabled%2A> set to `true`.</span></span>  <span data-ttu-id="dfcc8-1159">Puede especificar que la posición debe ser relativa a otro elemento estableciendo la <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1159">You can specify that the position should be relative to another element by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> property.</span></span> <span data-ttu-id="dfcc8-1160">Por ejemplo, puede realizar la manipulación en relación con el elemento primario del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1160">For example, you can make the manipulation relative to the parent of the element.</span></span>  
  
 <span data-ttu-id="dfcc8-1161">También puede hacer lo siguiente en un controlador de eventos para <xref:System.Windows.UIElement.ManipulationStarting>:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1161">You can also do the following in an event handler for <xref:System.Windows.UIElement.ManipulationStarting>:</span></span>  
  
-   <span data-ttu-id="dfcc8-1162">Especifique si el usuario necesita más de un solo dedo para realizar las manipulaciones estableciendo la <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1162">Specify whether the user needs more than one finger to perform the manipulations by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.IsSingleTouchEnabled%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dfcc8-1163">Especificar qué tipos de manipulación están habilitados estableciendo la <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> propiedad a un <xref:System.Windows.Input.ManipulationModes> enumeración.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1163">Specify which types of manipulation are enabled by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Mode%2A?displayProperty=nameWithType> property to a <xref:System.Windows.Input.ManipulationModes> enumeration.</span></span>  
  
-   <span data-ttu-id="dfcc8-1164">Especificar el centro de rotación de un solo dedo estableciendo la <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1164">Specify the center of a single-finger rotation by setting the <xref:System.Windows.Input.ManipulationStartingEventArgs.Pivot%2A?displayProperty=nameWithType> property.</span></span>  
  
-   <span data-ttu-id="dfcc8-1165">Cancele la manipulación mediante una llamada a la <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1165">Cancel the manipulation by calling the <xref:System.Windows.Input.ManipulationStartingEventArgs.Cancel%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="dfcc8-1166">Para obtener más información acerca de las manipulaciones, vea el [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1166">For more information about manipulations, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  <span data-ttu-id="dfcc8-1167">Para obtener un ejemplo de una aplicación que responde a manipulaciones, vea [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1167">For an example of an application that responds to manipulations, see [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
<a name="routedEventInfo_ManipulationStarting"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1168">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1168">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1169">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1169">Identifier field</span></span>|<xref:System.Windows.UIElement.ManipulationStartingEvent>|  
|<span data-ttu-id="dfcc8-1170">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1170">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1171">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1171">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1172">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1172">Delegate</span></span>|<span data-ttu-id="dfcc8-1173"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1173"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.ManipulationStartingEventArgs>.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-1174">En el ejemplo siguiente se muestra el controlador de eventos para el <xref:System.Windows.UIElement.ManipulationStarting> eventos y establece el <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> al elemento primario que recibe los eventos de manipulación de modo que las coordenadas de la manipulación en relación con el elemento primario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1174">The following example shows the event handler for the <xref:System.Windows.UIElement.ManipulationStarting> event and sets the <xref:System.Windows.Input.ManipulationStartingEventArgs.ManipulationContainer%2A> to the parent element that receives the manipulation events so that the coordinates of the manipulation are relative to the parent element.</span></span>  <span data-ttu-id="dfcc8-1175">Este ejemplo forma parte de un ejemplo más extenso en [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1175">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationStarting](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationstarting)]
 [!code-vb[BasicManipulation#ManipulationStarting](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationstarting)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationStartingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ManipulationStartingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ManipulationStartingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.ManipulationStartingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ManipulationStartingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ManipulationStartingEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1176">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.ManipulationStarting" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1176">Identifies the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Measure">
      <MemberSignature Language="C#" Value="public void Measure (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Measure(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.Measure(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Measure (availableSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Measure(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="dfcc8-1177">Espacio disponible que un elemento primario puede asignar a un elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1177">The available space that a parent element can allocate a child element.</span></span> <span data-ttu-id="dfcc8-1178">Un elemento secundario puede solicitar un espacio mayor del que está disponible; el tamaño proporcionado podría ajustarse si el desplazamiento es posible en el modelo de contenido del elemento actual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1178">A child element can request a larger space than what is available; the provided size might be accommodated if scrolling is possible in the content model for the current element.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1179">Actualiza la propiedad <see cref="P:System.Windows.UIElement.DesiredSize" /> de <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1179">Updates the <see cref="P:System.Windows.UIElement.DesiredSize" /> of a <see cref="T:System.Windows.UIElement" />.</span></span> <span data-ttu-id="dfcc8-1180">Los elementos primarios llaman a este método desde sus propias implementaciones de <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> para formar una actualización recursiva del diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1180">Parent elements call this method from their own <see cref="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" /> implementations to form a recursive layout update.</span></span> <span data-ttu-id="dfcc8-1181">La llamada a este método constituye el primer paso (el paso de "medida") de una actualización de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1181">Calling this method constitutes the first pass (the "Measure" pass) of a layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1182">Cálculo de colocación del diseño en [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] está formada por un <xref:System.Windows.UIElement.Measure%2A> llamar y un <xref:System.Windows.UIElement.Arrange%2A> llamar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1182">Computation of layout positioning in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] is comprised of a <xref:System.Windows.UIElement.Measure%2A> call and an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span> <span data-ttu-id="dfcc8-1183">Durante la <xref:System.Windows.UIElement.Measure%2A> llamada, un elemento determina sus requisitos de tamaño mediante el uso de un `availableSize` entrada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1183">During the <xref:System.Windows.UIElement.Measure%2A> call, an element determines its size requirements by using an `availableSize` input.</span></span> <span data-ttu-id="dfcc8-1184">Durante el <xref:System.Windows.UIElement.Arrange%2A> se finaliza la llamada, el tamaño del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1184">During the <xref:System.Windows.UIElement.Arrange%2A> call, the element size is finalized.</span></span>  
  
 <span data-ttu-id="dfcc8-1185">`availableSize` puede ser cualquier número de cero a infinito.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1185">`availableSize` can be any number from zero to infinite.</span></span> <span data-ttu-id="dfcc8-1186">Elementos que participan en el diseño deben devolver como mínimo <xref:System.Windows.Size> que necesitan para un determinado `availableSize`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1186">Elements participating in layout should return the minimum <xref:System.Windows.Size> they require for a given `availableSize`.</span></span>  
  
 <span data-ttu-id="dfcc8-1187">Cuando primero se crea una instancia de un diseño, siempre recibe una <xref:System.Windows.UIElement.Measure%2A> llamar antes de <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1187">When a layout is first instantiated, it always receives a <xref:System.Windows.UIElement.Measure%2A> call before <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="dfcc8-1188">Sin embargo, después de la primera fase de diseño, puede recibir un <xref:System.Windows.UIElement.Arrange%2A> llamar sin una <xref:System.Windows.UIElement.Measure%2A>; Esto puede ocurrir cuando una propiedad que solo afecta a <xref:System.Windows.UIElement.Arrange%2A> se modifica (como la alineación), o cuando el elemento primario recibe un <xref:System.Windows.UIElement.Arrange%2A> sin un <xref:System.Windows.UIElement.Measure%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1188">However, after the first layout pass, it may receive an <xref:System.Windows.UIElement.Arrange%2A> call without a <xref:System.Windows.UIElement.Measure%2A>; this can happen when a property that affects only <xref:System.Windows.UIElement.Arrange%2A> is changed (such as alignment), or when the parent receives an <xref:System.Windows.UIElement.Arrange%2A> without a <xref:System.Windows.UIElement.Measure%2A>.</span></span> <span data-ttu-id="dfcc8-1189">A <xref:System.Windows.UIElement.Measure%2A> llamada invalidará automáticamente un <xref:System.Windows.UIElement.Arrange%2A> llamar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1189">A <xref:System.Windows.UIElement.Measure%2A> call will automatically invalidate an <xref:System.Windows.UIElement.Arrange%2A> call.</span></span>  
  
 <span data-ttu-id="dfcc8-1190">Las actualizaciones de diseño se realizan de forma asincrónica, por ejemplo, que el subproceso principal no está esperando para cada cambio de diseño posible.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1190">Layout updates happen asynchronously, such that the main thread is not waiting for every possible layout change.</span></span> <span data-ttu-id="dfcc8-1191">Consultar un elemento a través de la comprobación de los valores de propiedad de código subyacente puede no reflejar inmediatamente los cambios en las propiedades que interactúan con las características de ajuste de tamaño ni el diseño (el <xref:System.Windows.FrameworkElement.Width%2A> propiedad, por ejemplo).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1191">Querying an element via code-behind checking of property values may not immediately reflect changes to properties that interact with the sizing or layout characteristics (the <xref:System.Windows.FrameworkElement.Width%2A> property, for example).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="dfcc8-1192">Actualizaciones del diseño se pueden forzar mediante el uso de la <xref:System.Windows.UIElement.UpdateLayout%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1192">Layout updates can be forced by using the <xref:System.Windows.UIElement.UpdateLayout%2A> method.</span></span> <span data-ttu-id="dfcc8-1193">Sin embargo, al llamar a este método normalmente no es necesario y puede provocar un rendimiento bajo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1193">However, calling this method is usually unnecessary and can cause poor performance.</span></span>  
  
 <span data-ttu-id="dfcc8-1194">El sistema de diseño mantiene dos colas independientes de diseños no válidos, uno para <xref:System.Windows.UIElement.Measure%2A> y otro para <xref:System.Windows.UIElement.Arrange%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1194">The layout system keeps two separate queues of invalid layouts, one for <xref:System.Windows.UIElement.Measure%2A> and one for <xref:System.Windows.UIElement.Arrange%2A>.</span></span> <span data-ttu-id="dfcc8-1195">La cola de diseño se ordena según el orden de los elementos en el árbol visual del elemento que realiza el diseño; son superiores del árbol de elementos en la parte superior de la cola para evitar diseños redundantes producidos por cambios repetidos en los elementos primarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1195">The layout queue is sorted based upon the order of elements in the visual tree of the element performing layout; elements higher in the tree are at the top of the queue, to avoid redundant layouts caused by repeated changes in parents.</span></span> <span data-ttu-id="dfcc8-1196">Las entradas duplicadas se quitan automáticamente de la cola y los elementos se quitan automáticamente de la cola si ya están validados por el diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1196">Duplicate entries are automatically removed from the queue, and elements are automatically removed from the queue if they are already layout-validated.</span></span>  
  
 <span data-ttu-id="dfcc8-1197">Al actualizar el diseño, la <xref:System.Windows.UIElement.Measure%2A> cola se vacía en primer lugar, seguido por el <xref:System.Windows.UIElement.Arrange%2A> cola.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1197">When updating layout, the <xref:System.Windows.UIElement.Measure%2A> queue is emptied first, followed by the <xref:System.Windows.UIElement.Arrange%2A> queue.</span></span> <span data-ttu-id="dfcc8-1198">Un elemento en el <xref:System.Windows.UIElement.Arrange%2A> cola nunca se organizarán si hay un elemento en el <xref:System.Windows.UIElement.Measure%2A> cola.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1198">An element in the <xref:System.Windows.UIElement.Arrange%2A> queue will never be arranged if there is an element in the <xref:System.Windows.UIElement.Measure%2A> queue.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="dfcc8-1199">Tamaño disponible que el elemento primario puede asignar para el elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1199">The available size that the parent element can allocate for the child.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1200">Cuando se invalida en una clase derivada, proporciona la lógica de medida para cambiar correctamente el tamaño este elemento, considerando el tamaño de cualquier contenido del elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1200">When overridden in a derived class, provides measurement logic for sizing this element properly, with consideration of the size of any child element content.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-1201">Tamaño deseado de este elemento en el diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1201">The desired size of this element in layout.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1202">Es más habitual para derivar un elemento de <xref:System.Windows.FrameworkElement> en lugar de <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1202">It is more common to derive an element from <xref:System.Windows.FrameworkElement> rather than <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="dfcc8-1203">Si va a derivar de <xref:System.Windows.FrameworkElement>, tenga en cuenta que una invalidación de <xref:System.Windows.UIElement.MeasureCore%2A> en <xref:System.Windows.FrameworkElement> sellos el <xref:System.Windows.UIElement.MeasureCore%2A> método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1203">If you are deriving from <xref:System.Windows.FrameworkElement>, note that an override of <xref:System.Windows.UIElement.MeasureCore%2A> on <xref:System.Windows.FrameworkElement> seals the <xref:System.Windows.UIElement.MeasureCore%2A> method.</span></span> <span data-ttu-id="dfcc8-1204">Por lo tanto, sólo reemplazar <xref:System.Windows.UIElement.MeasureCore%2A> como un medio para modificar las características de medida del diseño si deriva de <xref:System.Windows.UIElement> a través de una herencia que no incluye <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1204">Therefore, you only override <xref:System.Windows.UIElement.MeasureCore%2A> as a means to alter layout measure characteristics if you derive from <xref:System.Windows.UIElement> through an inheritance that does not include <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="dfcc8-1205">Esto puede suceder si está intentando crear su propia implementación en el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] nivel básico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1205">This might be the case if you are attempting to build your own implementation on the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] core-level.</span></span> <span data-ttu-id="dfcc8-1206">En caso contrario, si va a derivar de <xref:System.Windows.FrameworkElement>, a continuación, la plantilla de implementación para el comportamiento de medida es el <xref:System.Windows.FrameworkElement> implementación de.<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1206">Otherwise, if you are deriving from <xref:System.Windows.FrameworkElement>, then the implementation template for Measure behavior is the <xref:System.Windows.FrameworkElement> implementation of .<xref:System.Windows.FrameworkElement.MeasureOverride%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-1207">Debe llamar un elemento primario con elementos secundarios <xref:System.Windows.UIElement.Measure%2A> en cada elemento secundario, en caso contrario, estos elementos secundarios no o un tamaño organizan y eficazmente desaparecerá del diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1207">A parent element with child elements must call <xref:System.Windows.UIElement.Measure%2A> on each child, otherwise these child elements are not sized or arranged and will effectively disappear from layout.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-1208">Una invalidación típica de <xref:System.Windows.UIElement.MeasureCore%2A> sigue este patrón aproximado (no es una colección integrada denominada `VisualChildren`; `VisualChildren` es un marcador de posición que representa la colección de elementos secundarios mantiene su elemento).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1208">A typical override of <xref:System.Windows.UIElement.MeasureCore%2A> follows this approximate pattern (there is not a built-in collection called `VisualChildren`; `VisualChildren` is a  placeholder that represents whatever child collection your element maintains).</span></span>  
  
 [!code-csharp[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementmeasureoverride)]
 [!code-vb[CorePseudocode#UIElementMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementmeasureoverride)]  
  
-   <span data-ttu-id="dfcc8-1209">Debe llamar a <xref:System.Windows.UIElement.Measure%2A> en cada elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1209">You must call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
-   <span data-ttu-id="dfcc8-1210">Por lo general, la implementación debe almacenar en caché información de medida entre el <xref:System.Windows.UIElement.MeasureCore%2A> y <xref:System.Windows.UIElement.ArrangeCore%2A> llamadas a métodos en el mismo elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1210">Generally, your implementation should cache measurement information between the <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> method calls in the same element.</span></span>  
  
-   <span data-ttu-id="dfcc8-1211">Al llamar a las implementaciones base de <xref:System.Windows.UIElement.MeasureCore%2A> no es necesario, pero podría ser adecuado si la implementación base proporciona una capacidad de distribución deseada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1211">Calling base implementations of <xref:System.Windows.UIElement.MeasureCore%2A> is not required, but might be appropriate if the base implementation provides a desired layout capability.</span></span>  
  
-   <span data-ttu-id="dfcc8-1212">Las llamadas a <xref:System.Windows.UIElement.Measure%2A> en elemento secundario elementos deben pasar la misma `availableSize` como el elemento primario o un subconjunto del área, según el tipo de diseño del elemento primario admite.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1212">Calls to <xref:System.Windows.UIElement.Measure%2A> on child elements should pass either the same `availableSize` as the parent, or a subset of the area, depending on the type of layout the parent element supports.</span></span> <span data-ttu-id="dfcc8-1213">Por ejemplo, sería válido para quitar el área para un borde específico del elemento, relleno, una barra de desplazamiento o un control personalizado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1213">For example, it would be valid to remove the area for an element-specific border or padding, a scrollbar, or a custom control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-1214">Las implementaciones deben ser capaces de procesar un valor proporcionado para <paramref name="availableSize" /> que es infinito.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1214">Implementations must be able to process a value provided for <paramref name="availableSize" /> that is infinite.</span></span> <span data-ttu-id="dfcc8-1215">Un valor infinito indica ninguna restricción solicitada y eficazmente aplaza la opción de medida al elemento primario, a través de recursiva que llama a medida.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1215">An infinite value indicates no requested constraints, and effectively defers measurement choice to the parent element, through recursive Measure calls.</span></span>  
  
 <span data-ttu-id="dfcc8-1216">Las implementaciones pueden considerar el valor proporcionado para <paramref name="availableSize" /> como una restricción de software.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1216">Implementations can consider the value provided for <paramref name="availableSize" /> to be a soft constraint.</span></span> <span data-ttu-id="dfcc8-1217">El elemento secundario podría especificar un tamaño mayor, incluso si otros aspectos del código de aplicación se pudo determinar el tamaño real actual del elemento primario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1217">The child element might specify a larger size, even if other aspects of application code were able to determine the current actual size of the parent element.</span></span> <span data-ttu-id="dfcc8-1218">La solicitud de gran tamaño es una convención que indica que el elemento secundario está consultando si el elemento primario puede admitir contenido que se desplaza dentro de una región de contenido que se muestra.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1218">The large size request is a convention that indicates that the child element is querying whether your parent element can support content scrolling within a content display region.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1219">Se produce al presionar cualquier botón del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1219">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1220">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.MouseDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1220">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1221">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.MouseDown> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1221">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-1222">El <xref:System.Windows.UIElement.MouseDown> evento se genera a menudo junto con cualquiera <xref:System.Windows.UIElement.MouseLeftButtonDown> o <xref:System.Windows.UIElement.MouseRightButtonDown>, que corresponde a una pulsación de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1222">The <xref:System.Windows.UIElement.MouseDown> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="dfcc8-1223"><xref:System.Windows.UIElement.MouseLeftButtonDown> y <xref:System.Windows.UIElement.MouseRightButtonDown> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1223"><xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="dfcc8-1224">Vea la sección Comentarios para <xref:System.Windows.UIElement.MouseLeftButtonDown> o <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1224">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonDown> or <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dfcc8-1225">Algunos controles podrían tener inherentes a control de clases para los eventos de botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1225">Some controls might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="dfcc8-1226">El botón primario del mouse hacia abajo de evento es el caso más probable tener control en un control de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1226">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="dfcc8-1227">La clase de control a menudo marca subyacente <xref:System.Windows.Input.Mouse> eventos de clase como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1227">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="dfcc8-1228">Una vez que el evento está marcado como controlado, no se generan normalmente otros controladores de instancia que están conectados a ese elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1228">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="dfcc8-1229">Cualquier otro controlador instancia o clase que se adjunta a los elementos de la dirección de propagación hacia la raíz en el árbol de la interfaz de usuario también normalmente no se producen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1229">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="dfcc8-1230">Puede resolver el problema que se describe en la sección anterior importante y seguir recibiendo <xref:System.Windows.UIElement.MouseDown> eventos del botón primario del mouse hacia abajo de eventos en una clase derivada que tiene el control de clases, use cualquiera de estas soluciones:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1230">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="dfcc8-1231">Adjuntar controladores para la <xref:System.Windows.UIElement.PreviewMouseDown> evento, que no está marcado como controlado por los controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1231">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="dfcc8-1232">Observe que, dado que se trata de un evento de vista previa, la ruta comienza en la raíz y desciende hasta el control.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1232">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="dfcc8-1233">Registrar un controlador en el control mediante procedimientos llamando <xref:System.Windows.UIElement.AddHandler%2A> y eligiendo la opción de firma que habilita los controladores escuchar eventos incluso si ya está marcados como controlado en los datos del evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1233">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1234">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1234">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1235">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1235">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseDownEvent>|  
|<span data-ttu-id="dfcc8-1236">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1236">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1237">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1237">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1238">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1238">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1239">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1239">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-1240">Invalidar <xref:System.Windows.UIElement.OnMouseDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1240">Override <xref:System.Windows.UIElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1241">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1241">Identifies the <see cref="E:System.Windows.UIElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1242">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1242">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1243">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1243">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1244">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1244">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1245">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1245">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1246">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1246">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1247">Se produce cuando el puntero del mouse entra dentro de los límites de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1247">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1248"><xref:System.Windows.UIElement.MouseEnter> es un objeto que usa la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1248"><xref:System.Windows.UIElement.MouseEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="dfcc8-1249">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1249">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="dfcc8-1250">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1250">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="dfcc8-1251">Aunque <xref:System.Windows.UIElement.MouseEnter> literalmente le hace un seguimiento cuando el puntero del mouse entra en los límites de un elemento, aún más este evento indica que el <xref:System.Windows.UIElement.IsMouseOver%2A> valor de propiedad ha cambiado de `false` a `true` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1251">Although <xref:System.Windows.UIElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="dfcc8-1252">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.MouseEnter> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1252">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1253">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.MouseEnter> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1253">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-1254">A <xref:System.Windows.Controls.Button> (o cualquier <xref:System.Windows.Controls.Primitives.ButtonBase> clase derivada) tiene un control nativo para un <xref:System.Windows.UIElement.KeyDown> eventos cuando el botón tiene el foco y la tecla presionada es la barra espaciadora.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1254">A <xref:System.Windows.Controls.Button> (or any <xref:System.Windows.Controls.Primitives.ButtonBase> derived class) has native handling for a <xref:System.Windows.UIElement.KeyDown> event when the button has focus, and the pressed key is the space bar.</span></span> <span data-ttu-id="dfcc8-1255">El control nativo provoca el <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos con el botón como origen y también captura el mouse, incluso si no aparece el puntero del mouse mover.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1255">The native handling raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event with the button as the source, and also captures the mouse, even though the mouse pointer does not appear to move.</span></span> <span data-ttu-id="dfcc8-1256">Como resultado de la captura del mouse, un <xref:System.Windows.UIElement.MouseEnter> evento también se genera con el botón como origen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1256">As a result of the mouse capture, a <xref:System.Windows.UIElement.MouseEnter> event is also raised with the button as the source.</span></span> <span data-ttu-id="dfcc8-1257">En general, si un elemento captura el mouse, a continuación, <xref:System.Windows.UIElement.MouseEnter> se genera, así como <xref:System.Windows.UIElement.GotMouseCapture> y posiblemente otros eventos específicos del control.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1257">In general, if an element captures the mouse, then <xref:System.Windows.UIElement.MouseEnter> is raised, as well as <xref:System.Windows.UIElement.GotMouseCapture> and possibly other control-specific events.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1258">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1258">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1259">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1259">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseEnterEvent>|  
|<span data-ttu-id="dfcc8-1260">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1260">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1261">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1261">Direct</span></span>|  
|<span data-ttu-id="dfcc8-1262">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1262">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1263">Invalidar <xref:System.Windows.UIElement.OnMouseEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1263">Override <xref:System.Windows.UIElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1264">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseEnter" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1264">Identifies the <see cref="E:System.Windows.UIElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1265">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1265">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1266">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1266">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1267">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1267">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1268">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1268">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1269">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1269">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1270">Se produce cuando el puntero del mouse deja los límites de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1270">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1271"><xref:System.Windows.UIElement.MouseLeave> es un objeto que usa la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1271"><xref:System.Windows.UIElement.MouseLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="dfcc8-1272">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1272">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="dfcc8-1273">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1273">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="dfcc8-1274">Aunque <xref:System.Windows.UIElement.MouseLeave> realiza seguimiento cuando el mouse sale de un elemento, este evento más literalmente informa de que el <xref:System.Windows.UIElement.IsMouseOver%2A> valor de propiedad ha cambiado de `true` a `false` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1274">Although <xref:System.Windows.UIElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="dfcc8-1275">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.MouseLeave> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1275">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1276">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.MouseLeave> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1276">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1277">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1277">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1278">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1278">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeaveEvent>|  
|<span data-ttu-id="dfcc8-1279">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1279">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1280">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1280">Direct</span></span>|  
|<span data-ttu-id="dfcc8-1281">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1281">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1282">Invalidar <xref:System.Windows.UIElement.OnMouseLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1282">Override <xref:System.Windows.UIElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1283">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseLeave" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1283">Identifies the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1284">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1284">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1285">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1285">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1286">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1286">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1287">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1287">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1288">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1288">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1289">Se produce al presionar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1289">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1290">Aunque esto parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1290">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-1291">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1291">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-1292">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1292">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-1293">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1293">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-1294">Si marca <xref:System.Windows.UIElement.MouseLeftButtonDown> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1294">If you mark <xref:System.Windows.UIElement.MouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="dfcc8-1295">Esto posiblemente incluye los eventos generado en el controlador de clase como <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1295">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="dfcc8-1296">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1296">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-1297">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1297">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-1298">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1298">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="dfcc8-1299">Algunas clases de control podrían tener inherentes a control de clases para los eventos de botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1299">Some control classes might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="dfcc8-1300">El botón primario del mouse hacia abajo de evento es el caso más probable tener control en un control de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1300">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="dfcc8-1301">La clase de control a menudo marca subyacente <xref:System.Windows.Input.Mouse> eventos de clase como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1301">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="dfcc8-1302">Una vez que el evento está marcado como controlado, no se generan normalmente otros controladores de instancia que están conectados a ese elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1302">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="dfcc8-1303">Cualquier otro controlador instancia o clase que se adjunta a los elementos de la dirección de propagación hacia la raíz en el árbol de la interfaz de usuario también normalmente no se producen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1303">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="dfcc8-1304">Puede resolver el problema que se describe en la sección anterior importante y seguir recibiendo <xref:System.Windows.UIElement.MouseLeftButtonDown> eventos del botón primario del mouse hacia abajo de eventos en una clase derivada que tiene el control de clases, use cualquiera de estas soluciones:</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1304">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.UIElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="dfcc8-1305">Adjuntar controladores para la <xref:System.Windows.UIElement.PreviewMouseDown> evento, que no está marcado como controlado por los controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1305">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="dfcc8-1306">Observe que, dado que se trata de un evento de vista previa, la ruta comienza en la raíz y desciende hasta el control.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1306">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="dfcc8-1307">Registrar un controlador en el control mediante procedimientos llamando <xref:System.Windows.UIElement.AddHandler%2A> y eligiendo la opción de firma que habilita los controladores escuchar eventos incluso si ya está marcados como controlado en los datos del evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1307">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1308">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1308">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1309">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1309">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="dfcc8-1310">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1310">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1311">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1311">Direct</span></span>|  
|<span data-ttu-id="dfcc8-1312">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1312">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1313">Invalidar <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1313">Override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1314">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1314">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1315">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1316">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1317">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1318">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1319">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1320">Se produce al soltar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1320">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1321">Aunque esto parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1321">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-1322">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1322">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-1323">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1323">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-1324">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1324">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-1325">Si marca <xref:System.Windows.UIElement.MouseLeftButtonUp> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1325">If you mark <xref:System.Windows.UIElement.MouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="dfcc8-1326">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1326">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-1327">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1327">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-1328">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1328">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1329">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1330">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1330">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="dfcc8-1331">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1331">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1332">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1332">Direct</span></span>|  
|<span data-ttu-id="dfcc8-1333">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1333">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1334">Invalidar <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1334">Override <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1335">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1335">Identifies the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1336">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1336">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1337">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1338">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1338">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1339">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1339">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1340">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1340">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1341">Se produce al mover el puntero del mouse mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1341">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1342">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.MouseMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1342">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1343">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.MouseMove> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1343">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1344">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1345">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1345">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseMoveEvent>|  
|<span data-ttu-id="dfcc8-1346">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1346">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1347">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1347">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1348">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1348">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1349">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1349">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-1350">Invalidar <xref:System.Windows.UIElement.OnMouseMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1350">Override <xref:System.Windows.UIElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1351">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1351">Identifies the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1352">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1352">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1353">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1353">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1354">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1354">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1355">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1355">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1356">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1356">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1357">Se produce al pulsar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1357">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1358">Aunque esto parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1358">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-1359">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1359">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-1360">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1360">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-1361">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1361">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-1362">Si marca <xref:System.Windows.UIElement.MouseRightButtonDown> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1362">If you mark <xref:System.Windows.UIElement.MouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="dfcc8-1363">Esto posiblemente incluye los eventos generado en el controlador de clase como <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1363">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.MouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="dfcc8-1364">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1364">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-1365">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1365">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-1366">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1366">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-1367">Eventos del botón secundario del mouse con frecuencia tienen control nativo en escenarios de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1367">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="dfcc8-1368">Por ejemplo, un botón secundario del mouse hacia abajo puede mostrar un menú contextual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1368">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="dfcc8-1369">Vea [información general de ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1369">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1370">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1370">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1371">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1371">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="dfcc8-1372">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1372">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1373">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1373">Direct</span></span>|  
|<span data-ttu-id="dfcc8-1374">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1374">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1375">Invalidar <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1375">Override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1376">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1376">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1377">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1377">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1378">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1378">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1379">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1379">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1380">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1380">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1381">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1381">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1382">Se produce al soltar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1382">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1383">Aunque esto parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1383">Although this  seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-1384">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1384">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-1385">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1385">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-1386">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1386">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-1387">Si marca <xref:System.Windows.UIElement.MouseRightButtonUp> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1387">If you mark <xref:System.Windows.UIElement.MouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="dfcc8-1388">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1388">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-1389">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1389">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-1390">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1390">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1391">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1391">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1392">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1392">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="dfcc8-1393">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1393">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1394">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1394">Direct</span></span>|  
|<span data-ttu-id="dfcc8-1395">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1395">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1396">Invalidar <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1396">Override <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1397">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1397">Identifies the <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1398">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1398">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1399">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1399">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1400">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1400">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1401">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1401">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1402">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1402">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1403">Se produce al soltar cualquier botón del mouse sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1403">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1404">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.MouseUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1404">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1405">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.MouseUp> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1405">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-1406">El <xref:System.Windows.UIElement.MouseUp> evento se genera a menudo junto con cualquiera <xref:System.Windows.UIElement.MouseLeftButtonUp> o <xref:System.Windows.UIElement.MouseRightButtonUp>, que corresponden a una versión de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1406">The <xref:System.Windows.UIElement.MouseUp> event is often raised together with either <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="dfcc8-1407"><xref:System.Windows.UIElement.MouseLeftButtonUp> y <xref:System.Windows.UIElement.MouseRightButtonUp> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1407"><xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="dfcc8-1408">Vea la sección Comentarios para <xref:System.Windows.UIElement.MouseLeftButtonUp> o <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1408">See Remarks for <xref:System.Windows.UIElement.MouseLeftButtonUp> or <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1409">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1410">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1410">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseUpEvent>|  
|<span data-ttu-id="dfcc8-1411">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1411">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1412">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1412">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1413">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1414">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1414">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-1415">Invalidar <xref:System.Windows.UIElement.OnMouseUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1415">Override <xref:System.Windows.UIElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1416">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1416">Identifies the <see cref="E:System.Windows.UIElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1417">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1417">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1418">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1418">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1419">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1419">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1420">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1420">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1421">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1421">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1422">Se produce cuando el usuario gira la rueda del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1422">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1423">Captura del foco o del mouse tienen prioridad sobre dónde está el puntero del mouse; por lo tanto, si recibe el <xref:System.Windows.UIElement.MouseWheel> evento desde un elemento enfocado o capturado, el puntero del mouse podría estar realmente sobre otro elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1423">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.UIElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="dfcc8-1424">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.MouseWheel> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1424">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.MouseWheel> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-1425">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.MouseWheel> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1425">Event handlers that are attached to the <xref:System.Windows.UIElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-1426">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1426">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-1427">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1427">Identifier field</span></span>|<xref:System.Windows.UIElement.MouseWheelEvent>|  
|<span data-ttu-id="dfcc8-1428">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1428">Routing strategy</span></span>|<span data-ttu-id="dfcc8-1429">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1429">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-1430">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1430">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="dfcc8-1431">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1431">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="dfcc8-1432">Invalidar <xref:System.Windows.UIElement.OnMouseWheel%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1432">Override <xref:System.Windows.UIElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-1433">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.MouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1433">Identifies the <see cref="E:System.Windows.UIElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1434">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1434">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-1435">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1435">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-1436">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1436">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-1437">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1437">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-1438">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1438">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="dfcc8-1439">Solicitud de recorrido que contiene una propiedad que indica un modo de recorrido según el orden de tabulación existente o una dirección en la que moverse visualmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1439">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1440">Intenta mover el foco de este elemento a otro elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1440">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="dfcc8-1441">La dirección en la que se mueve el foco viene especificada por una dirección de orientación, que se interpreta dentro de la organización del elemento primario visual de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1441">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-1442">Devuelve <see langword="true" /> si se realizó el recorrido solicitado; de lo contrario, devuelve <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1442"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1443">Asegúrese de que comprobar el valor devuelto de este método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1443">Make sure you check the return value of this method.</span></span> <span data-ttu-id="dfcc8-1444">Un valor devuelto de `false` pueden obtenerse si el recorrido se encuentra con una posición de tabulación definida por la composición de un control y la solicitud de recorrido no incluía el ajuste.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1444">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1445">Datos de evento para el evento de la tecla de acceso.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1445">The event data to the access key event.</span></span> <span data-ttu-id="dfcc8-1446">Los datos de evento informan de qué tecla se invocó e indican si el objeto <see cref="T:System.Windows.Input.AccessKeyManager" /> que controla el envío de estos eventos también envió esta invocación de la tecla de acceso a otros elementos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1446">The event data reports which key was invoked, and indicate whether the <see cref="T:System.Windows.Input.AccessKeyManager" /> object that controls the sending of these events also sent this access key invocation to other elements.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1447">Proporciona el control de clases cuando se invoca una tecla de acceso que es significativa para este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1447">Provides class handling for when an access key that is meaningful for this element is invoked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1448">No hay ningún evento AccessKey real en la <xref:System.Windows.UIElement> clase o en otro lugar, que puede generar o asociar controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1448">There is no actual AccessKey event in the <xref:System.Windows.UIElement> class, or elsewhere, which you can raise or attach handlers for.</span></span> <span data-ttu-id="dfcc8-1449">En su lugar, el evento se origina a través de una clase de administrador dedicada, <xref:System.Windows.Input.AccessKeyManager>, que procesa posteriormente todas las entradas que se buscarán las teclas de acceso que se aplican a todo el modelo de entrada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1449">Instead, the event is originated via a dedicated manager class, <xref:System.Windows.Input.AccessKeyManager>, which post-processes all input to search for access keys that are applicable to the entire input model.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-1450">La implementación predeterminada de este método en <see cref="T:System.Windows.UIElement" /> establece el foco a este elemento del teclado (mediante una llamada a <see cref="M:System.Windows.UIElement.Focus" />).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1450">The default implementation of this method in <see cref="T:System.Windows.UIElement" /> sets keyboard focus to this element (by calling <see cref="M:System.Windows.UIElement.Focus" />).</span></span> <span data-ttu-id="dfcc8-1451">Las implementaciones deben perpetuarse este comportamiento si fueran puede recibir el foco, porque es un comportamiento normal de escenarios de accesibilidad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1451">Implementations should perpetuate this behavior if they are focusable, because it is an expected behavior for accessibility scenarios.</span></span> <span data-ttu-id="dfcc8-1452">Tenga en cuenta que la implementación base no hace nada con los datos de evento pasados y no se genera ningún otro evento; simplemente establece el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1452">Note that the base implementation does nothing with the passed event data and raises no further event; it just sets the focus.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child"><span data-ttu-id="dfcc8-1453">Elemento secundario cuyo tamaño se cambia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1453">The child element that is being resized.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1454">Admite el comportamiento de diseño cuando se cambia el tamaño de un elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1454">Supports layout behavior when a child element is resized.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1455">Normalmente, este método no se llama por el código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1455">This method is typically not called by your application code.</span></span> <span data-ttu-id="dfcc8-1456">Se expone para que ese elemento derivado clases pueden realizar otras comprobaciones en su propio estado de diseño posiblemente no sea válido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1456">It is exposed so that derived element classes can make further checks on their own possibly invalid layout state.</span></span> <span data-ttu-id="dfcc8-1457">Las clases también pudieron intentar optimizaciones para minimizar el tiempo de procesamiento para un paso de diseño según los cambios de tamaño a los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1457">Classes could also attempt optimizations to minimize the processing time for a layout pass based on size changes to child elements.</span></span> <span data-ttu-id="dfcc8-1458">Un ejemplo elemento clase derivada que implementa <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> es el <xref:System.Windows.Controls.Grid> control.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1458">An example derived element class that implements <xref:System.Windows.UIElement.OnChildDesiredSizeChanged%2A> is the <xref:System.Windows.Controls.Grid> control.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-1459">El <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> método tiene la implementación predeterminada de llamar al método <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> por sí sola.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1459">The <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> method has the default implementation of calling <see cref="M:System.Windows.UIElement.InvalidateMeasure" /> on itself.</span></span> <span data-ttu-id="dfcc8-1460">Una implementación típica sería: realice la optimización de su propio elemento admite y, a continuación, normalmente llama a base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> de al menos una de las bifurcaciones de código (lo que indica el estado "sucias" por su propia medida lógica el almacenamiento en caché).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1460">A typical implementation would be: do whatever optimization your own element supports, and then typically call base <see cref="M:System.Windows.UIElement.OnChildDesiredSizeChanged(System.Windows.UIElement)" /> from at least one of the code branches (the one that indicated "dirty" state per your own measure caching logic).</span></span>  
  
 <span data-ttu-id="dfcc8-1461">Solo se llama a este método en el procesamiento del diseño si fue el propio elemento secundario que se originaron los cambios de tamaño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1461">This method is only called in the layout processing if it was the child itself that originated the size changes.</span></span> <span data-ttu-id="dfcc8-1462">En caso contrario, si el elemento primario inicia el <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pasa, según las reglas del sistema de diseño, el elemento primario está actualizando el diseño ya.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1462">Otherwise, if the parent element initiates the <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> pass, according to the layout system rules, the parent is recalculating layout already.</span></span> <span data-ttu-id="dfcc8-1463">El diseño de procesos del sistema de diseño en el orden a-elementos primarios y secundarios, por lo que no es necesario ningún volver al tamaño del elemento primario de las llamadas de diseño del elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1463">The layout system processes layout in the order of child-to-parent, so no return to parent element sizing from the child element layout calls is necessary.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-1464">Devuelve las implementaciones de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específicas de la clase para la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1464">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-1465">Implementación de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica del tipo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1465">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-1466">La implementación de este método suele ser llamar al constructor de un determinado <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementación y devolverlo como el valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1466">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
 <span data-ttu-id="dfcc8-1467">Todos los <see cref="T:System.Windows.UIElement" /> las clases derivadas deben implementar este método para proporcionar sus propios específicos <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> las implementaciones de la [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infraestructura.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1467">All <see cref="T:System.Windows.UIElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="dfcc8-1468">Para obtener más información sobre cómo implementar este patrón, vea <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1468">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1469">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1469">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1470">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragEnter" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1470">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1471">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1471">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1472">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1472">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1473">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1473">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1474">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1474">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1475">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1475">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1476">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1476">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1477">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1477">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1478">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1478">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1479">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1479">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1480">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1480">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1481">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1481">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1482">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragLeave" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1482">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1483">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1483">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1484">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1484">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1485">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1485">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1486">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1486">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1487">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1487">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1488">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1488">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1489">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1489">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1490">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1490">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1491">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1491">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1492">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1492">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1493">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1493">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1494">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragOver" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1494">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1495">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1495">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1496">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1496">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1497">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1497">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1498">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1498">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1499">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1499">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1500">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1500">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1501">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1501">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1502">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1502">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1503">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1503">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1504">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1504">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1505">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1505">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1506">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragEnter" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1506">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1507">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1507">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1508">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1508">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1509">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1509">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1510">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1510">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1511">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1511">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1512">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1512">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1513">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1513">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1514">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1514">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1515">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1515">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1516">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1516">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1517">Objeto <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1517">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1518">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.GiveFeedback" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1518">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1519">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1519">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1520">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1520">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1521">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1521">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1522">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1522">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1523">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1523">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1524">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1524">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1525">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1525">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1526">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1526">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1527">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1527">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1528">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1528">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1529">Objeto <see cref="T:System.Windows.RoutedEventArgs" /> que contiene datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1529">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="dfcc8-1530">Estos datos de evento deben contener el identificador para el evento <see cref="E:System.Windows.UIElement.GotFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1530">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1531">Genera el evento enrutado <see cref="E:System.Windows.UIElement.GotFocus" /> mediante el uso de los datos de eventos proporcionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1531">Raises the <see cref="E:System.Windows.UIElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1532">Este método, aunque sea virtual, tiene una implementación predeterminada que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1532">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="dfcc8-1533">Esto en \* implementación del método está pensada para generar el evento y esta misma implementación del método se invoca internamente para generar el evento cuando la <xref:System.Windows.UIElement.IsFocused%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1533">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="dfcc8-1534">El <xref:System.Windows.UIElement.OnGotFocus%2A> implementación difiere de alguna otra [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] en \* implementaciones, que solo proporcionan una manera cómoda para agregar el control de clases para ese evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1534">The <xref:System.Windows.UIElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-1535">A menos que tenga una necesidad imperiosa y no habitual para no provocar los eventos de foco, asegúrese de la implementación llama a la implementación base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1535">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="dfcc8-1536">En caso contrario, el <see cref="E:System.Windows.UIElement.GotFocus" /> evento no se produce durante las operaciones típicas del usuario que normalmente establecen el foco a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1536">Otherwise, the <see cref="E:System.Windows.UIElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="dfcc8-1537">Si no desea que el elemento que se va a recibir el foco, puede evitar que el elemento que se va a recibir el foco estableciendo <see cref="P:System.Windows.UIElement.Focusable" /> a <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1537">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
        <altmember cref="E:System.Windows.UIElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1538">Objeto <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1538">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1539">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1539">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1540">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1540">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1541">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1541">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1542">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1542">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1543">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1543">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1544">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1544">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1545">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1545">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1546">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1546">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1547">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1547">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1548">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1548">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1549">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1549">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1550">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1550">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1551">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1551">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1552">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1552">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1553">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1553">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1554">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1554">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1555">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1555">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1556">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1556">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1557">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1557">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1558">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1558">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1559">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1559">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1560">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1560">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1561">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1561">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1562">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1562">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1563">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1563">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1564">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1564">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1565">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1565">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1566">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1566">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1567">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1567">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1568">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1568">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1569">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1569">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1570">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1570">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1571">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1571">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1572">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1572">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1573">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1573">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1574">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1574">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1575">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.GotTouchCapture" /> que se produce cuando se captura una entrada táctil en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1575">Provides class handling for the <see cref="E:System.Windows.UIElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1576">El <xref:System.Windows.UIElement.OnGotTouchCapture%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1576">The <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1577">Invalidar <xref:System.Windows.UIElement.OnGotTouchCapture%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.GotTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1577">Override <xref:System.Windows.UIElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.GotTouchCapture> event.</span></span> <span data-ttu-id="dfcc8-1578">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnGotTouchCapture%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1578">Be sure to call the base class’s <xref:System.Windows.UIElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1579">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1579">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1580">Se invoca cuando un evento <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> no administrado se provoca en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1580">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1581">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1581">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1582">Este método virtual se produce cuando el valor de la <xref:System.Windows.UIElement.IsKeyboardFocused%2A> cambios de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1582">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="dfcc8-1583">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1583">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1584">La <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1584">Then the <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1585">Tenga en cuenta que el <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1585">Notice that the  <xref:System.Windows.UIElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="dfcc8-1586">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1586">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1587">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1587">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1588">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1588">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1589">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1589">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1590">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1590">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1591">Se invoca inmediatamente antes de que este elemento provoque el evento <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1591">Invoked just before the <see cref="E:System.Windows.UIElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="dfcc8-1592">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1592">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1593">Este método virtual se produce cuando el valor de la <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> cambios de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1593">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A> dependency property changes .</span></span> <span data-ttu-id="dfcc8-1594">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1594">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1595">La <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1595">Then the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1596">Tenga en cuenta que el <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1596">Notice that the <xref:System.Windows.UIElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="dfcc8-1597">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1597">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1598">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1598">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1599">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1599">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1600">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1600">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1601">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1601">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1602">Se invoca cuando un evento <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> no administrado se provoca en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1602">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1603">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1603">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1604">Este método virtual se produce cuando el valor de la <xref:System.Windows.UIElement.IsMouseCaptured%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1604">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="dfcc8-1605">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1605">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1606">La <xref:System.Windows.UIElement.IsMouseCapturedChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1606">Then the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1607">Tenga en cuenta que el <xref:System.Windows.UIElement.IsMouseCapturedChanged> evento no es un evento enrutado; Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1607">Notice that the <xref:System.Windows.UIElement.IsMouseCapturedChanged> event is not a routed event; Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1608">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1608">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1609">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1609">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1610">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1610">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1611">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1611">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1612">Se invoca cuando un evento <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> no administrado se provoca en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1612">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1613">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1613">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-1614">Este método virtual se produce cuando el valor de la <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1614">This virtual method is raised when the value of the <see cref="P:System.Windows.UIElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="dfcc8-1615">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1615">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1616">La <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1616">Then the <see cref="E:System.Windows.UIElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1617">Observe que el evento no es un evento enrutado; Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1617">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1618">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1618">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1619">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1619">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1620">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1620">You may call base either before or after your special handling, depending on your requirements.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1621">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1621">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1622">Se invoca cuando un evento <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> no administrado se provoca en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1622">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1623">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1623">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1624">Este método virtual se produce cuando el valor de la <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1624">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="dfcc8-1625">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1625">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1626">La <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1626">Then the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1627">Tenga en cuenta que el <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1627">Notice that the <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="dfcc8-1628">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1628">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1629">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1629">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1630">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1630">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1631">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1631">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1632">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1632">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1633">Se invoca cuando un evento <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> no administrado se provoca en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1633">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1634">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1634">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1635">Este método virtual se produce cuando el valor de la <xref:System.Windows.UIElement.IsStylusCaptured%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1635">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="dfcc8-1636">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1636">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1637">La <xref:System.Windows.UIElement.IsStylusCapturedChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1637">Then the <xref:System.Windows.UIElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1638">Observe que el evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1638">Notice that the event is not a routed event.</span></span> <span data-ttu-id="dfcc8-1639">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1639">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1640">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1640">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1641">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1641">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1642">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1642">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1643">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1643">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1644">Se invoca cuando un evento <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> no administrado se provoca en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1644">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1645">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1645">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1646">Este método virtual se produce cuando el valor de la <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1646">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="dfcc8-1647">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1647">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1648">La <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1648">Then the <xref:System.Windows.UIElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1649">Observe que el evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1649">Notice that the event is not a routed event.</span></span> <span data-ttu-id="dfcc8-1650">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1650">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1651">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1651">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1652">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1652">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1653">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1653">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1654">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1654">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1655">Se invoca cuando un evento <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> no administrado se provoca en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1655">Invoked when an unhandled <see cref="E:System.Windows.UIElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1656">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1656">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1657">Este método virtual se produce cuando el valor de la <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1657">This virtual method is raised when the value of the <xref:System.Windows.UIElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="dfcc8-1658">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1658">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="dfcc8-1659">La <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1659">Then the <xref:System.Windows.UIElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="dfcc8-1660">Observe que el evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1660">Notice that the event is not a routed event.</span></span> <span data-ttu-id="dfcc8-1661">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1661">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="dfcc8-1662">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1662">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1663">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1663">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1664">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1664">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1665">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1665">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1666">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1666">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1667">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1667">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1668">Pulsaciones de teclas se controlan mediante un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1668">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="dfcc8-1669">Otras características de programación que se basan en las pulsaciones de tecla, por ejemplo, los enlaces de entrada y de comando, pueden controlar la pulsación de tecla antes de que se expone como una pulsación de tecla general.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1669">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="dfcc8-1670">Si estas características del sistema marcan el evento como controlado, a continuación, de entrada <xref:System.Windows.UIElement.OnKeyDown%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1670">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1671">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1671">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1672">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1672">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1673">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1673">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1674">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1674">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1675">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1675">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1676">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1676">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1677">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1677">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1678">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1678">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1679">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1679">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1680">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1680">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1681">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1681">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1682">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1682">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1683">Pulsaciones de teclas se controlan mediante un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1683">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="dfcc8-1684">Otras características de programación que se basan en las pulsaciones de tecla, por ejemplo, los enlaces de entrada y de comando, pueden controlar la pulsación de tecla antes de que se expone como una pulsación de tecla general.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1684">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="dfcc8-1685">Si estas características del sistema marcan el evento como controlado, a continuación, de entrada <xref:System.Windows.UIElement.OnKeyUp%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1685">If these input system features mark the event as handled, then <xref:System.Windows.UIElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1686">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1686">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1687">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1687">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1688">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1688">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1689">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1689">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1690">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1690">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1691">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1691">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1692">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1692">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1693">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1693">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1694">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1694">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1695">Objeto <see cref="T:System.Windows.RoutedEventArgs" /> que contiene datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1695">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="dfcc8-1696">Estos datos de evento deben contener el identificador para el evento <see cref="E:System.Windows.UIElement.LostFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1696">This event data must contain the identifier for the <see cref="E:System.Windows.UIElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1697">Genera el evento enrutado <see cref="E:System.Windows.UIElement.LostFocus" /> mediante el uso de los datos de eventos proporcionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1697">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1698">Este método, aunque sea virtual, tiene una implementación predeterminada que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1698">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="dfcc8-1699">Esto en \* implementación del método está pensada para generar el evento y esta misma implementación del método se invoca internamente para generar el evento cuando la <xref:System.Windows.UIElement.IsFocused%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1699">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.UIElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="dfcc8-1700">Esta implementación es distinto de alguna otra [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] en \* implementaciones, que solo proporcionan una manera cómoda para agregar el control de clases para ese evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1700">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-1701">A menos que tenga una necesidad imperiosa y no habitual para no provocar los eventos de foco, asegúrese de la implementación llama a la implementación base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1701">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="dfcc8-1702">En caso contrario, el <see cref="E:System.Windows.UIElement.LostFocus" /> evento no se produce durante las operaciones típicas del usuario que normalmente establecen el foco a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1702">Otherwise, the <see cref="E:System.Windows.UIElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="dfcc8-1703">Si no desea que el elemento que se va a recibir el foco, puede evitar que el elemento que se va a recibir el foco estableciendo <see cref="P:System.Windows.UIElement.Focusable" /> a <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1703">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.UIElement.Focusable" /> to <see langword="false" />.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1704"><see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1704">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1705">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1705">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1706">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1706">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1707">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1707">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1708">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1708">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1709">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1709">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1710">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1710">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1711">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1711">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1712">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1712">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1713">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1713">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1714">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1714">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1715">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1715">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1716"><see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1716">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1717">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1717">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1718">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1718">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1719">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1719">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1720">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1720">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1721">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1721">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1722">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1722">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1723">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1723">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1724">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1724">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1725">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1725">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1726">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1726">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1727">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1727">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1728"><see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1728">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1729">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1729">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1730">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1730">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1731">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1731">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1732">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1732">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1733">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1733">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1734">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1734">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1735">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1735">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1736">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1736">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1737">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1737">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1738">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1738">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1739">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1739">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1740">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1740">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1741">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.LostTouchCapture" /> que se produce cuando este elemento pierde una captura de una entrada táctil.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1741">Provides class handling for the <see cref="E:System.Windows.UIElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1742">El <xref:System.Windows.UIElement.OnLostTouchCapture%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1742">The <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1743">Invalidar <xref:System.Windows.UIElement.OnLostTouchCapture%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.LostTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1743">Override <xref:System.Windows.UIElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.UIElement.LostTouchCapture> event.</span></span> <span data-ttu-id="dfcc8-1744">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnLostTouchCapture%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1744">Be sure to call the base class’s <xref:System.Windows.UIElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1745">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1745">The data for the event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1746">Se invoca cuando se produce el evento <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1746">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1747">El <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1747">The <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1748">Invalidar <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1748">Override <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event.</span></span> <span data-ttu-id="dfcc8-1749">No olvide llamar el <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> método de la clase base para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1749">Be sure to call the <xref:System.Windows.UIElement.OnManipulationBoundaryFeedback%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationCompleted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationCompleted (System.Windows.Input.ManipulationCompletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationCompleted(class System.Windows.Input.ManipulationCompletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationCompleted(System.Windows.Input.ManipulationCompletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationCompleted (e As ManipulationCompletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationCompleted(System::Windows::Input::ManipulationCompletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationCompletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1750">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1750">The data for the event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1751">Se invoca cuando se produce el evento <see cref="E:System.Windows.UIElement.ManipulationCompleted" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1751">Called when the <see cref="E:System.Windows.UIElement.ManipulationCompleted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1752">El <xref:System.Windows.UIElement.OnManipulationCompleted%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1752">The <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1753">Invalidar <xref:System.Windows.UIElement.OnManipulationCompleted%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.ManipulationCompleted> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1753">Override <xref:System.Windows.UIElement.OnManipulationCompleted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationCompleted> event.</span></span> <span data-ttu-id="dfcc8-1754">No olvide llamar el <xref:System.Windows.UIElement.OnManipulationCompleted%2A> método de la clase base para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1754">Be sure to call the <xref:System.Windows.UIElement.OnManipulationCompleted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationDelta">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationDelta (System.Windows.Input.ManipulationDeltaEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationDelta(class System.Windows.Input.ManipulationDeltaEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationDelta(System.Windows.Input.ManipulationDeltaEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationDelta (e As ManipulationDeltaEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationDelta(System::Windows::Input::ManipulationDeltaEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationDeltaEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1755">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1755">The data for the event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1756">Se invoca cuando se produce el evento <see cref="E:System.Windows.UIElement.ManipulationDelta" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1756">Called when the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1757">El <xref:System.Windows.UIElement.OnManipulationDelta%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1757">The <xref:System.Windows.UIElement.OnManipulationDelta%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1758">Invalidar <xref:System.Windows.UIElement.OnManipulationDelta%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.ManipulationDelta> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1758">Override <xref:System.Windows.UIElement.OnManipulationDelta%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="dfcc8-1759">No olvide llamar el <xref:System.Windows.UIElement.OnManipulationDelta%2A> método de la clase base para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1759">Be sure to call the <xref:System.Windows.UIElement.OnManipulationDelta%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationInertiaStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationInertiaStarting (System.Windows.Input.ManipulationInertiaStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationInertiaStarting(class System.Windows.Input.ManipulationInertiaStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationInertiaStarting(System.Windows.Input.ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationInertiaStarting (e As ManipulationInertiaStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationInertiaStarting(System::Windows::Input::ManipulationInertiaStartingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationInertiaStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1760">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1760">The data for the event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1761">Se invoca cuando se produce el evento <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1761">Called when the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1762">El <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1762">The <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1763">Invalidar <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.ManipulationInertiaStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1763">Override <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationInertiaStarting> event.</span></span> <span data-ttu-id="dfcc8-1764">No olvide llamar el <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> método de la clase base para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1764">Be sure to call the <xref:System.Windows.UIElement.OnManipulationInertiaStarting%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted (System.Windows.Input.ManipulationStartedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted(class System.Windows.Input.ManipulationStartedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarted(System.Windows.Input.ManipulationStartedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted (e As ManipulationStartedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted(System::Windows::Input::ManipulationStartedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1765">Datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1765">The data for the event.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1766">Se invoca cuando se produce el evento <see cref="E:System.Windows.UIElement.ManipulationStarted" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1766">Called when the <see cref="E:System.Windows.UIElement.ManipulationStarted" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1767">El <xref:System.Windows.UIElement.OnManipulationStarted%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1767">The <xref:System.Windows.UIElement.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1768">Invalidar <xref:System.Windows.UIElement.OnManipulationStarted%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.ManipulationStarted> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1768">Override <xref:System.Windows.UIElement.OnManipulationStarted%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarted> event.</span></span> <span data-ttu-id="dfcc8-1769">No olvide llamar el <xref:System.Windows.UIElement.OnManipulationStarted%2A> método de la clase base para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1769">Be sure to call the <xref:System.Windows.UIElement.OnManipulationStarted%2A> method of the base class so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarting">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarting (System.Windows.Input.ManipulationStartingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarting(class System.Windows.Input.ManipulationStartingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnManipulationStarting(System.Windows.Input.ManipulationStartingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarting (e As ManipulationStartingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarting(System::Windows::Input::ManipulationStartingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationStartingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1770">Objeto <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1770">A <see cref="T:System.Windows.Input.ManipulationStartingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1771">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.ManipulationStarting" /> que se produce cuando se crea por primera vez el procesador de manipulación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1771">Provides class handling for the <see cref="E:System.Windows.UIElement.ManipulationStarting" /> routed event that occurs when the manipulation processor is first created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1772">El <xref:System.Windows.UIElement.OnManipulationStarting%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1772">The <xref:System.Windows.UIElement.OnManipulationStarting%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1773">Invalidar <xref:System.Windows.UIElement.OnManipulationStarting%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.ManipulationStarting> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1773">Override <xref:System.Windows.UIElement.OnManipulationStarting%2A> in a derived class to handle the <xref:System.Windows.UIElement.ManipulationStarting> event.</span></span> <span data-ttu-id="dfcc8-1774">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnManipulationStarting%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1774">Be sure to call the base class’s <xref:System.Windows.UIElement.OnManipulationStarting%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1775">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1775">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-1776">Estos datos de evento informan de detalles sobre el botón del mouse que se presionó y el estado controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1776">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1777">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1777">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1778">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1778">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1779">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1779">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="dfcc8-1780">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1780">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="dfcc8-1781">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.UIElement.OnMouseDown%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1781">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1782">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.UIElement.MouseLeftButtonDown> y <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1782">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="dfcc8-1783">Uno de estos eventos se pueden generar en el elemento receptor cuando <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1783">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="dfcc8-1784">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1784">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="dfcc8-1785">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1785">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="dfcc8-1786">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1786">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="dfcc8-1787">Controlando <xref:System.Windows.UIElement.OnMouseDown%2A>, son lo que implica que el control de clases tiene en cuenta para todas las acciones de presionar el botón del mouse posibles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1787">By handling <xref:System.Windows.UIElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="dfcc8-1788">Este comportamiento puede ser no deseado; Por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1788">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="dfcc8-1789">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1789">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="dfcc8-1790">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1790">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1791">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1791">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1792">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1792">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1793">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1793">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1794">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1794">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1795">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1795">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1796">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1796">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1797">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1797">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1798">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1798">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1799">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1799">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1800">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> no controlado se genera en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1800">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1801">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1801">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1802">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1802">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1803">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1803">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1804">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1804">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="dfcc8-1805">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1805">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1806">En este caso el evento correspondiente es un evento enrutado, con una estrategia de enrutamiento directo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1806">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="dfcc8-1807">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1807">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1808">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1808">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1809">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> no controlado se genera en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1809">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1810">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1810">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1811">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1811">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1812">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1812">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-1813">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1813">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="dfcc8-1814">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1814">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1815">En este caso el evento correspondiente es un evento enrutado, con una estrategia de enrutamiento directo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1815">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="dfcc8-1816">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1816">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1817">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1817">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-1818">Los datos del evento indican que se presionó el botón primario del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1818">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1819">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> no controlado se genera en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1819">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="dfcc8-1820">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1820">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1821">El <xref:System.Windows.UIElement.MouseLeftButtonDown> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1821">The <xref:System.Windows.UIElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-1822"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1822"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="dfcc8-1823">Aunque puede marcar el <xref:System.Windows.UIElement.MouseLeftButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1823">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-1824">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1824">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1825">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1825">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-1826">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1826">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-1827">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1827">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-1828">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1828">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-1829">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1829">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="dfcc8-1830">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1830">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="dfcc8-1831">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1831">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="dfcc8-1832">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Button> e invalide <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> en su clase derivada sin llamar a la implementación base; sin embargo, esta invalidación deshabilita la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1832">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1833">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1833">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-1834">Los datos del evento notifican que se soltó el botón primario del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1834">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1835">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1835">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1836">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1836">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1837">El <xref:System.Windows.UIElement.MouseLeftButtonUp> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1837">The <xref:System.Windows.UIElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-1838"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1838"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="dfcc8-1839">Aunque puede marcar el <xref:System.Windows.UIElement.MouseLeftButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1839">Although you can mark the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-1840">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1840">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1841">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1841">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-1842">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1842">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-1843">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1843">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-1844">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1844">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1845">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1845">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1846">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1846">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1847">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1847">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1848">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1848">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1849">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1849">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1850">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1850">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1851">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1851">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1852">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1852">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1853">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1853">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1854">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1854">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1855">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1855">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1856">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1856">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1857">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1857">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-1858">Los datos del evento indican que se presionó el botón secundario del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1858">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1859">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1859">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1860">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1860">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1861">El <xref:System.Windows.UIElement.MouseRightButtonDown> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1861">The <xref:System.Windows.UIElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-1862"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1862"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="dfcc8-1863">Aunque puede marcar el <xref:System.Windows.UIElement.MouseRightButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1863">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-1864">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1864">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1865">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1865">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-1866">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1866">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-1867">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1867">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-1868">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1868">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-1869">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1869">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="dfcc8-1870">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1870">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="dfcc8-1871">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1871">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="dfcc8-1872">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Control> e invalide <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> en su clase derivada sin base que realiza la llamada; sin embargo, esta invalidación deshabilita los servicios de menú contextual en el control, que forman parte de la <xref:System.Windows.Controls.Control> comportamiento predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1872">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1873">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1873">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-1874">Los datos del evento indican que se soltó el botón derecho del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1874">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1875">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1875">Invoked when an unhandled <see cref="E:System.Windows.UIElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1876">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1876">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1877">El <xref:System.Windows.UIElement.MouseRightButtonUp> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1877">The <xref:System.Windows.UIElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-1878"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1878"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="dfcc8-1879">Aunque puede marcar el <xref:System.Windows.UIElement.MouseRightButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1879">Although you can mark the <xref:System.Windows.UIElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-1880">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1880">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1881">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1881">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-1882">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1882">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-1883">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1883">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-1884">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1884">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1885">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1885">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-1886">Los datos del evento informan de que se soltó el botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1886">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1887">Se invoca cuando un evento enrutado <see cref="E:System.Windows.Input.Mouse.MouseUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1887">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1888">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1888">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1889">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1889">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="dfcc8-1890">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1890">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="dfcc8-1891">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.UIElement.OnMouseUp%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1891">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-1892">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.UIElement.MouseLeftButtonUp> y <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1892">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="dfcc8-1893">Uno de estos eventos puede producir en el elemento receptor cuando <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1893">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="dfcc8-1894">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1894">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="dfcc8-1895">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1895">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="dfcc8-1896">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1896">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="dfcc8-1897">Controlando <xref:System.Windows.UIElement.OnMouseUp%2A>, son lo que implica que el control de clases tiene en cuenta para todos los posibles botón las acciones.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1897">By handling <xref:System.Windows.UIElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="dfcc8-1898">Este comportamiento puede ser no deseado; Por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1898">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="dfcc8-1899">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1899">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="dfcc8-1900">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1900">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1901">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1901">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1902">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1902">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1903">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1903">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1904">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1904">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1905">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1905">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1906">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1906">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1907">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1907">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1908">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1908">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1909">Objeto <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1909">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1910">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1910">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1911">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1911">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1912">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1912">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1913">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1913">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1914">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1914">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1915">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1915">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1916">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1916">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1917">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1917">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1918">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1918">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1919">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1919">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1920">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1920">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1921">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1921">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1922">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1922">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1923">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1923">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1924">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1924">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1925">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1925">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1926">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1926">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1927">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1927">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1928">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1928">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1929">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1929">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1930">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1930">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1931">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1931">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1932">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1932">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-1933">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1933">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1934">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1934">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1935">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1935">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1936">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1936">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1937">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1937">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1938">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1938">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1939">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1939">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1940">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1940">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1941">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1941">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1942">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1942">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1943">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1943">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1944">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1944">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1945">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1945">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-1946">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1946">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1947">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1947">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1948">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1948">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1949">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1949">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1950">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1950">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1951">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1951">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1952">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1952">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1953">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1953">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1954">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1954">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1955">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1955">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1956">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1956">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1957">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1957">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1958">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1958">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-1959">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1959">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1960">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1960">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1961">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDrop" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1961">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1962">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1962">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1963">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1963">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1964">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1964">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1965">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1965">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1966">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1966">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1967">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1967">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1968">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1968">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1969">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1969">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1970">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1970">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1971">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1971">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-1972">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1972">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1973">Objeto <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1973">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1974">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1974">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1975">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1975">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1976">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1976">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1977">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1977">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1978">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1978">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1979">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1979">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1980">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1980">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1981">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1981">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1982">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1982">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1983">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1983">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1984">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1984">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-1985">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1985">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1986">Objeto <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1986">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-1987">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1987">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-1988">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1988">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-1989">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1989">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-1990">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1990">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-1991">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1991">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-1992">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1992">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-1993">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1993">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-1994">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1994">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-1995">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1995">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-1996">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1996">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-1997">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1997">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-1998">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1998">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-1999">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-1999">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2000">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2000">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2001">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2001">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2002">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2002">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2003">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2003">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2004">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2004">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2005">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2005">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2006">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2006">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2007">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2007">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2008">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2008">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2009">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2009">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2010">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2010">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2011">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2011">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2012">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2012">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2013">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2013">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2014">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2014">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2015">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2015">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2016">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2016">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2017">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2017">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2018">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2018">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2019">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2019">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2020">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2020">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2021">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2021">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2022">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2022">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2023">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2023">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2024">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2024">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2025">Objeto <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2025">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2026">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2026">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2027">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2027">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2028">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2028">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2029">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2029">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2030">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2030">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2031">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2031">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2032">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2032">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2033">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2033">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2034">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2034">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2035">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2035">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2036">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2036">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2037">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2037">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2038">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2038">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-2039">Los datos de evento informan de que se presionaron uno o varios botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2039">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2040">Se invoca cuando un evento enrutado adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> no controlado alcanza en su ruta un elemento derivado de esta clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2040">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2041">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2041">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2042">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2042">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="dfcc8-2043">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2043">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="dfcc8-2044">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2044">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-2045">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> y <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2045">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="dfcc8-2046">Uno de estos eventos se pueden generar en el elemento receptor cuando <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2046">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="dfcc8-2047">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2047">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="dfcc8-2048">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2048">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="dfcc8-2049">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2049">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="dfcc8-2050">Controlando <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, son lo que implica que el control de clases tiene en cuenta para todas las acciones de presionar el botón del mouse posibles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2050">By handling <xref:System.Windows.UIElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="dfcc8-2051">Este comportamiento puede ser no deseado; Por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2051">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="dfcc8-2052">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2052">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="dfcc8-2053">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2053">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2054">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2054">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2055">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2055">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2056">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2056">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2057">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2057">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2058">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2058">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2059">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2059">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2060">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2060">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2061">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2061">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2062">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2062">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2063">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2063">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-2064">Los datos del evento indican que se presionó el botón primario del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2064">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2065">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2065">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2066">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2066">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2067">El <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2067">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-2068"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2068"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="dfcc8-2069">Aunque puede marcar el <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2069">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-2070">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2070">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-2071">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2071">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-2072">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2072">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-2073">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2073">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-2074">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2074">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-2075">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2075">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="dfcc8-2076">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2076">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="dfcc8-2077">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2077">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="dfcc8-2078">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Button> e invalide <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> en su clase derivada sin llamar a la implementación base; sin embargo, esta invalidación deshabilita la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2078">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2079">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2079">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-2080">Los datos del evento notifican que se soltó el botón primario del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2080">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2081">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2081">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2082">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2082">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2083">El <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2083">The <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-2084"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2084"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="dfcc8-2085">Aunque puede marcar el <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2085">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-2086">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2086">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-2087">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2087">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-2088">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2088">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-2089">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2089">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-2090">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2090">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2091">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2091">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2092">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2092">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2093">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2093">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2094">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2094">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2095">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2095">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2096">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2096">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2097">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2097">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2098">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2098">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2099">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2099">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2100">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2100">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2101">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2101">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2102">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2102">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2103">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2103">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2104">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2104">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-2105">Los datos del evento indican que se presionó el botón secundario del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2105">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2106">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2106">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2107">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2107">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2108">El <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2108">The <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-2109"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2109"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="dfcc8-2110">Aunque puede marcar el <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2110">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-2111">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2111">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-2112">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2112">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-2113">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2113">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-2114">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2114">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-2115">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2115">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-2116">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2116">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="dfcc8-2117">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2117">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="dfcc8-2118">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2118">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="dfcc8-2119">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Control> e invalide <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> en su clase derivada sin base que realiza la llamada; sin embargo, esta invalidación deshabilita los servicios de menú contextual en el control, que forman parte de la <xref:System.Windows.Controls.Control> comportamiento predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2119">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2120">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2120">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-2121">Los datos del evento indican que se soltó el botón derecho del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2121">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2122">Se invoca cuando un evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2122">Invoked when an unhandled <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2123">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2123">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2124">El <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2124">The <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="dfcc8-2125"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.UIElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2125"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.UIElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="dfcc8-2126">Aunque puede marcar el <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2126">Although you can mark the <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="dfcc8-2127">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2127">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-2128">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.UIElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2128">The default implementation for general mouse event handling in <xref:System.Windows.UIElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="dfcc8-2129">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2129">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="dfcc8-2130">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2130">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="dfcc8-2131">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.UIElement> invalidando <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2131">You cannot change the mouse handling behavior of <xref:System.Windows.UIElement> by overriding <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2132">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2132">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="dfcc8-2133">Los datos de evento informan de que se soltaron uno o varios botones del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2133">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2134">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2134">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2135">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2135">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2136">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2136">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="dfcc8-2137">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2137">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="dfcc8-2138">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2138">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="dfcc8-2139">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> y <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2139">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="dfcc8-2140">Uno de estos eventos puede producir en el elemento receptor cuando <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2140">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="dfcc8-2141">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2141">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="dfcc8-2142">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2142">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="dfcc8-2143">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2143">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="dfcc8-2144">Controlando <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, son lo que implica que el control de clases tiene en cuenta para todos los posibles botón las acciones.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2144">By handling <xref:System.Windows.UIElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="dfcc8-2145">Este comportamiento puede ser no deseado; Por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2145">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="dfcc8-2146">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2146">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="dfcc8-2147">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2147">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2148">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2148">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2149">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2149">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2150">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2150">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2151">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2151">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2152">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2152">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2153">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2153">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2154">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2154">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2155">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2155">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2156">Objeto <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2156">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2157">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2157">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2158">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2158">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2159">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2159">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2160">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2160">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2161">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2161">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2162">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2162">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2163">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2163">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2164">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2164">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2165">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2165">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2166">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2166">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2167">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2167">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2168">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2168">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2169">Objeto <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2169">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2170">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2170">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2171">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2171">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2172">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2172">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2173">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2173">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2174">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2174">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2175">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2175">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2176">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2176">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2177">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2177">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2178">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2178">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2179">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2179">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2180">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2180">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2181">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2181">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2182">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2182">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2183">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2183">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2184">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2184">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2185">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2185">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2186">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2186">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2187">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2187">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2188">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2188">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2189">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2189">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2190">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2190">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2191">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2191">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2192">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2192">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2193">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2193">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2194">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2194">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2195">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2195">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2196">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2196">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2197">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2197">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2198">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2198">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2199">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2199">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2200">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2200">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2201">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2201">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2202">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2202">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2203">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2203">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2204">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2204">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2205">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2205">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2206">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2206">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2207">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2207">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2208">Objeto <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2208">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2209">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2209">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2210">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2210">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2211">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2211">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2212">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2212">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2213">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2213">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2214">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2214">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2215">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2215">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2216">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2216">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2217">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2217">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2218">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2218">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2219">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2219">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2220">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2220">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2221">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2221">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2222">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2222">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2223">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2223">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2224">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2224">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2225">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2225">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2226">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2226">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2227">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2227">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2228">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2228">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2229">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2229">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2230">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2230">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2231">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2231">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2232">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2232">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2233">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2233">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2234">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2234">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2235">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2235">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2236">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2236">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2237">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2237">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2238">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2238">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2239">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2239">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2240">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2240">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2241">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2241">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2242">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2242">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2243">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2243">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2244">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2244">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2245">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2245">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2246">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2246">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2247">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2247">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2248">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2248">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2249">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2249">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2250">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2250">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2251">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2251">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2252">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2252">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2253">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2253">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2254">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2254">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2255">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2255">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2256">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2256">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2257">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2257">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2258">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2258">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2259">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2259">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2260">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2260">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2261">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2261">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2262">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2262">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2263">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2263">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2264">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2264">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2265">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2265">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2266">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2266">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2267">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2267">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2268">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2268">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2269">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2269">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2270">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2270">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2271">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2271">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2272">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2272">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2273">Objeto <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2273">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2274">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2274">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2275">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2275">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2276">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2276">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2277">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2277">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2278">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2278">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2279">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2279">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2280">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2280">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2281">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2281">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2282">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2282">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2283">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2283">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2284">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2284">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2285">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2285">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2286">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2286">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2287">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2287">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2288">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2288">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2289">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2289">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2290">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2290">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2291">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2291">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2292">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2292">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2293">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2293">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2294">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2294">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2295">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2295">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2296">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2296">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2297">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2297">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2298">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2298">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2299">Objeto <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2299">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2300">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2300">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2301">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2301">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2302">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2302">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2303">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2303">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2304">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2304">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2305">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2305">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2306">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2306">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2307">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2307">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2308">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2308">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2309">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2309">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2310">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2310">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="dfcc8-2311">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2311">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2312">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2312">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2313">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> que se produce cuando una entrada táctil presiona este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2313">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2314">El <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2314">The <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2315">Invalidar <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.PreviewTouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2315">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="dfcc8-2316">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2316">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2317">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2317">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2318">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> que se produce cuando se mueve una entrada táctil mientras se está dentro de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2318">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2319">El <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2319">The <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2320">Invalidar <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.PreviewTouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2320">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="dfcc8-2321">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2321">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2322">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2322">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2323">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> que se produce cuando se libera una entrada táctil dentro de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2323">Provides class handling for the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2324">El <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2324">The <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2325">Invalidar <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.PreviewTouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2325">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="dfcc8-2326">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2326">Be sure to call the base class’s <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2327">Objeto <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2327">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2328">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2328">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2329">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2329">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2330">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2330">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2331">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2331">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2332">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2332">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2333">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2333">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2334">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2334">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2335">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2335">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2336">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2336">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2337">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2337">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2338">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2338">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2339">Objeto <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2339">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2340">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2340">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2341">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2341">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2342">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2342">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2343">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2343">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2344">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2344">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2345">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2345">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2346">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2346">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2347">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2347">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2348">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2348">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2349">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2349">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2350">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2350">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnRender">
      <MemberSignature Language="C#" Value="protected virtual void OnRender (System.Windows.Media.DrawingContext drawingContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRender(class System.Windows.Media.DrawingContext drawingContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRender(System::Windows::Media::DrawingContext ^ drawingContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawingContext" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="drawingContext"><span data-ttu-id="dfcc8-2351">Instrucciones de dibujo para un elemento concreto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2351">The drawing instructions for a specific element.</span></span> <span data-ttu-id="dfcc8-2352">Este contexto se proporciona al sistema de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2352">This context is provided to the layout system.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2353">Si se reemplaza en una clase derivada, participa en operaciones de representación que están dirigidas por el sistema de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2353">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="dfcc8-2354">Las instrucciones de representación para este elemento no se usan directamente cuando se invoca este método, en su lugar se conservan para el uso asincrónico posterior por parte del diseño y el dibujo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2354">The rendering instructions for this element are not used directly when this method is invoked, and are instead preserved for later asynchronous use by layout and drawing.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2355">Este método no tiene ninguna implementación predeterminada la <xref:System.Windows.UIElement> clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2355">This method has no default implementation in the <xref:System.Windows.UIElement> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-2356">En el ejemplo de código siguiente se muestra una posible implementación para una clase derivada de panel.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2356">The following code example shows a possible implementation for a panel derived class.</span></span>  
  
 [!code-csharp[LightWeightCustomPanel#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LightWeightCustomPanel/CSharp/OffsetPanel.cs#1)]
 [!code-vb[LightWeightCustomPanel#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LightWeightCustomPanel/visualbasic/offsetpanel.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-2357">El <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> método se puede invalidar para agregar más elementos gráficos (no previamente definidos en un árbol lógico) a un elemento representado, como efectos o adornos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2357">The <see cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" /> method can be overridden to add further graphical elements (not previously defined in a logical tree) to a rendered element, such as effects or adorners.</span></span> <span data-ttu-id="dfcc8-2358">Un <see cref="T:System.Windows.Media.DrawingContext" /> objeto se pasa como argumento, que proporciona métodos para dibujar formas, texto, imágenes o vídeos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2358">A <see cref="T:System.Windows.Media.DrawingContext" /> object is passed as an argument, which provides methods for drawing shapes, text, images or videos.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnRenderSizeChanged (System.Windows.SizeChangedInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnRenderSizeChanged (info As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ info);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="dfcc8-2359">Parámetros empaquetados (<see cref="T:System.Windows.SizeChangedInfo" />) que incluyen los tamaños anteriores y nuevos y qué dimensión cambia realmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2359">The packaged parameters (<see cref="T:System.Windows.SizeChangedInfo" />), which includes old and new sizes, and which dimension actually changes.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2360">Si se reemplaza en una clase derivada, participa en operaciones de representación que están dirigidas por el sistema de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2360">When overridden in a derived class, participates in rendering operations that are directed by the layout system.</span></span> <span data-ttu-id="dfcc8-2361">Este método se invoca después de la actualización del diseño y antes de representarlo si el elemento <see cref="P:System.Windows.UIElement.RenderSize" /> ha cambiado como resultado de la actualización del diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2361">This method is invoked after layout update, and before rendering, if the element's <see cref="P:System.Windows.UIElement.RenderSize" /> has changed as a result of layout update.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2362">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2362">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2363">Un elemento de nivel de marco WPF típico utiliza la implementación de invalidación de <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2363">A typical WPF framework-level element uses the override implementation from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="dfcc8-2364">El <xref:System.Windows.FrameworkElement> implementación invalida la <xref:System.Windows.FrameworkElement.Width%2A> y <xref:System.Windows.FrameworkElement.Height%2A> propiedades e identificadores de los fundamentos de rehacer el diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2364">The <xref:System.Windows.FrameworkElement> implementation invalidates the <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.Height%2A> properties and handles the basics of remaking the layout.</span></span> <span data-ttu-id="dfcc8-2365">Reemplazar <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> en el <xref:System.Windows.UIElement> nivel implica que su implementación de elemento no usa deliberadamente la implementación de nivel de marco WPF, y, por tanto, el elemento debe administrar la lógica de diseño más fácilmente, normalmente mediante la escritura de un sistema de diseño de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2365">Overriding <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> at the <xref:System.Windows.UIElement> level implies that your element implementation is deliberately not using the WPF framework-level implementation, and therefore your element must handle layout logic more directly, typically by writing a replacement layout system.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2366">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2366">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2367">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2367">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2368">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2368">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2369">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2369">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2370">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2370">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2371">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2371">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2372">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2372">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2373">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2373">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2374">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2374">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2375">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2375">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2376">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2376">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2377">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2377">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2378">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2378">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2379">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2379">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2380">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2380">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2381">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2381">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2382">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2382">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2383">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2383">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2384">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2384">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2385">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2385">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2386">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2386">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2387">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2387">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2388">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2388">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2389">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2389">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2390">Objeto <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2390">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2391">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2391">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2392">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2392">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2393">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2393">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2394">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2394">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2395">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2395">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2396">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2396">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2397">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2397">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2398">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2398">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2399">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2399">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2400">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2400">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2401">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2401">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2402">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2402">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2403">Se invoca cuando este elemento genera un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> no controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2403">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="dfcc8-2404">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2404">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2405">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2405">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2406">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2406">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-2407">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2407">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="dfcc8-2408">El propósito de este método es similar a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2408">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2409">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2409">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2410">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2410">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2411">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2411">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2412">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2412">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2413">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2413">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2414">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2414">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2415">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2415">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2416">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2416">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2417">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2417">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2418">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2418">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2419">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2419">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2420">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2420">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2421">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2421">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2422">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2422">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2423">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2423">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2424">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2424">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2425">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2425">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2426">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2426">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2427">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2427">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2428">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2428">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2429">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2429">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2430">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2430">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2431">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2431">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2432">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2432">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2433">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2433">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2434">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2434">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2435">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2435">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2436">Se invoca cuando este elemento genera un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> no controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2436">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="dfcc8-2437">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2437">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2438">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2438">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2439">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2439">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="dfcc8-2440">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2440">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="dfcc8-2441">El propósito de este método es similar a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2441">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2442">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2442">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2443">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2443">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2444">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2444">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2445">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2445">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2446">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2446">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2447">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2447">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2448">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2448">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2449">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2449">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2450">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2450">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2451">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2451">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2452">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2452">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2453">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2453">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2454">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2454">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2455">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2455">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2456">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2456">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2457">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2457">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2458">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2458">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2459">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2459">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2460">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2460">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2461">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2461">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2462">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2462">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2463">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2463">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2464">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2464">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2465">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2465">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2466">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2466">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2467">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2467">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2468">Objeto <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2468">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2469">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2469">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2470">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2470">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2471">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2471">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2472">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2472">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2473">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2473">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2474">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2474">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2475">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2475">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2476">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2476">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2477">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2477">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2478">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2478">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2479">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2479">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2480">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2480">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2481">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2481">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2482">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2482">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2483">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2483">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2484">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2484">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2485">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2485">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2486">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2486">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2487">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2487">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2488">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2488">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2489">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2489">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2490">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2490">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2491">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2491">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2492">Objeto <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2492">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2493">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2493">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="dfcc8-2494">Implemente este método a fin de agregar el control de clases para este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2494">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2495">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2495">This method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2496">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2496">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="dfcc8-2497">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2497">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="dfcc8-2498">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2498">In this case the matching event is a routed event.</span></span> <span data-ttu-id="dfcc8-2499">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2499">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="dfcc8-2500">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2500">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="dfcc8-2501">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2501">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="dfcc8-2502">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.UIElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2502">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.UIElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="dfcc8-2503">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2503">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2504">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2504">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2505">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.TouchDown" /> que se produce cuando una entrada táctil presiona dentro de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2505">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2506">El <xref:System.Windows.UIElement.OnTouchDown%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2506">The <xref:System.Windows.UIElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2507">Invalidar <xref:System.Windows.UIElement.OnTouchDown%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.TouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2507">Override <xref:System.Windows.UIElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="dfcc8-2508">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnTouchDown%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2508">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2509">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2509">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2510">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.TouchEnter" /> que se produce cuando una entrada táctil se mueve de afuera adentro de los límites de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2510">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2511">El <xref:System.Windows.UIElement.OnTouchEnter%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2511">The <xref:System.Windows.UIElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2512">Invalidar <xref:System.Windows.UIElement.OnTouchEnter%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.TouchEnter> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2512">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchEnter> event.</span></span> <span data-ttu-id="dfcc8-2513">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnTouchEnter%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2513">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2514">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2514">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2515">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.TouchLeave" /> que se produce cuando una entrada táctil se mueve de dentro afuera de los límites de este objeto <see cref="T:System.Windows.UIElement" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2515">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this <see cref="T:System.Windows.UIElement" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2516">El <xref:System.Windows.UIElement.OnTouchLeave%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2516">The <xref:System.Windows.UIElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2517">Invalidar <xref:System.Windows.UIElement.OnTouchLeave%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.TouchLeave> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2517">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchLeave> event.</span></span> <span data-ttu-id="dfcc8-2518">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnTouchLeave%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2518">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2519">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2519">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2520">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.TouchMove" /> que se produce cuando se mueve una entrada táctil mientras se está dentro de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2520">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2521">El <xref:System.Windows.UIElement.OnTouchMove%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2521">The <xref:System.Windows.UIElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2522">Invalidar <xref:System.Windows.UIElement.OnTouchMove%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.TouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2522">Override <xref:System.Windows.UIElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchMove> event.</span></span> <span data-ttu-id="dfcc8-2523">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnTouchMove%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2523">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-2524">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2524">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2525">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.UIElement.TouchUp" /> que se produce cuando se libera una entrada táctil dentro de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2525">Provides class handling for the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2526">El <xref:System.Windows.UIElement.OnTouchUp%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2526">The <xref:System.Windows.UIElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="dfcc8-2527">Invalidar <xref:System.Windows.UIElement.OnTouchUp%2A> en una clase derivada para controlar la <xref:System.Windows.UIElement.TouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2527">Override <xref:System.Windows.UIElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="dfcc8-2528">No olvide llamar a la clase base <xref:System.Windows.UIElement.OnTouchUp%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2528">Be sure to call the base class’s <xref:System.Windows.UIElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="dfcc8-2529">Elemento primario anterior.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2529">The previous parent.</span></span> <span data-ttu-id="dfcc8-2530">Este parámetro se puede proporcionar como <see langword="null" /> si <see cref="T:System.Windows.DependencyObject" /> no tenía previamente un elemento primario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2530">This may be provided as <see langword="null" /> if the <see cref="T:System.Windows.DependencyObject" /> did not have a parent element previously.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2531">Se invoca cuando el elemento primario de <see cref="T:System.Windows.UIElement" /> informa de un cambio en su elemento primario visual subyacente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2531">Invoked when the parent element of this <see cref="T:System.Windows.UIElement" /> reports a change to its underlying visual parent.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="dfcc8-2532">Si invalida este método, llame siempre a la implementación base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2532">If you override this method, always call the base implementation.</span></span> <span data-ttu-id="dfcc8-2533">La implementación base predeterminada realiza un mantenimiento interno del estado de propiedad heredado en orden inverso.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2533">The default base implementation performs some internal maintenance of reverse-inherited property state.</span></span> <span data-ttu-id="dfcc8-2534">No puede llamar a la implementación base, se invalidará este estado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2534">Failing to call the base implementation will invalidate this state.</span></span>  
  
 <span data-ttu-id="dfcc8-2535">Este método invalida <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2535">This method overrides <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span></span> <span data-ttu-id="dfcc8-2536"><see cref="T:System.Windows.FrameworkElement" /> y <see cref="T:System.Windows.Window" /> también invalidar el <see cref="T:System.Windows.UIElement" /> implementación de <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, y <see cref="T:System.Windows.Window" /> sella.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2536"><see cref="T:System.Windows.FrameworkElement" /> and <see cref="T:System.Windows.Window" /> both also override the <see cref="T:System.Windows.UIElement" /> implementation of <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />, and <see cref="T:System.Windows.Window" /> seals it.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opacity">
      <MemberSignature Language="C#" Value="public double Opacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Opacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Opacity" />
      <MemberSignature Language="VB.NET" Value="Public Property Opacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Opacity { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2537">Obtiene o establece el factor de opacidad aplicado al objeto <see cref="T:System.Windows.UIElement" /> completo cuando se representa en la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2537">Gets or sets the opacity factor applied to the entire <see cref="T:System.Windows.UIElement" /> when it is rendered in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  <span data-ttu-id="dfcc8-2538">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2538">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-2539">Factor de opacidad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2539">The opacity factor.</span></span> <span data-ttu-id="dfcc8-2540">La opacidad predeterminada es 1.0.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2540">Default opacity is 1.0.</span></span> <span data-ttu-id="dfcc8-2541">Se esperaban valores entre 0.0 y 1.0.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2541">Expected values are between 0.0 and 1.0.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2542">El valor 1,0 predeterminado es el valor predeterminado proporcionado por los metadatos iniciales de esta propiedad de dependencia en el <xref:System.Windows.UIElement> clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2542">The 1.0 default value is the default provided by the initial metadata of this dependency property on the <xref:System.Windows.UIElement> class.</span></span> <span data-ttu-id="dfcc8-2543">Otras clases derivadas potencialmente pueden cambiar este valor predeterminado mediante la invalidación de los metadatos desde dentro de su constructor de clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2543">Other derived classes may potentially change this default value by overriding the metadata from within their class constructor.</span></span>  
  
 <span data-ttu-id="dfcc8-2544">El valor de <xref:System.Windows.UIElement.Opacity%2A> no se aplicará al diseño real a menos que el elemento también es visible (<xref:System.Windows.UIElement.IsVisible%2A> es `true`).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2544">The value of <xref:System.Windows.UIElement.Opacity%2A> won't be applied to actual layout unless the element is also visible (<xref:System.Windows.UIElement.IsVisible%2A> is `true`).</span></span>  
  
 <span data-ttu-id="dfcc8-2545"><xref:System.Windows.UIElement.Opacity%2A> se aplica desde los elementos primarios en profundidad del árbol de elementos a los elementos secundarios, pero los efectos visibles de la configuración no se indica en el valor de propiedad de los elementos secundarios individuales de opacidad anidado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2545"><xref:System.Windows.UIElement.Opacity%2A> is applied from parent elements on down the element tree to child elements, but the visible effects of the nested opacity settings aren't indicated in the property value of individual child elements.</span></span> <span data-ttu-id="dfcc8-2546">Por ejemplo, si una lista tiene una opacidad del 50% (0,5) y uno de sus elementos de lista tiene su propia opacidad establecida en 20% (0,2), la opacidad visible neta para ese elemento de lista se representará como si fuera 10% (0,1), pero el valor de propiedad del elemento de lista <xref:System.Windows.UIElement.Opacity%2A> propiedad todavía sería 0,2 cuando realiza una consulta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2546">For instance, if a list has a 50% (0.5) opacity and one of its list items has its own opacity set to 20% (0.2), the net visible opacity for that list item will be rendered as if it were 10% (0.1), but the property value of the list item <xref:System.Windows.UIElement.Opacity%2A> property would still be 0.2 when queried.</span></span>  
  
 <span data-ttu-id="dfcc8-2547">Aunque la opacidad declarada o evaluada es 0, un elemento todavía participa en los comandos y eventos de entrada y puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2547">Even if the declared or evaluated opacity is 0, an element still participates in input events and commands, and is potentially focusable.</span></span> <span data-ttu-id="dfcc8-2548">Este aspecto puede ser útil, por ejemplo puede utilizar un objeto de opacidad cero (por ejemplo, una forma) para enmascarar los objetos subyacentes con elementos transparentes.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2548">This aspect can be useful, for instance you can use an opacity-zero object (such as a shape) for masking underlying objects with transparent elements.</span></span> <span data-ttu-id="dfcc8-2549">El objeto de opacidad cero, a continuación, puede controlar todo el evento de entrada de procesamiento de un área subyacente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2549">The opacity-zero object can then handle all the input event processing for an underlying area.</span></span> <span data-ttu-id="dfcc8-2550">Sin embargo, el `Background` o `Fill` del objeto o la forma debe establecerse en un valor, incluso si es <xref:System.Windows.Media.Brushes.Transparent%2A>, en caso contrario, la prueba de posicionamiento no está habilitada y no se recibe ningún evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2550">However, the `Background` or `Fill` of the object or shape should be set to a value, even if it is <xref:System.Windows.Media.Brushes.Transparent%2A>, otherwise hit testing is not enabled, and no events are received.</span></span>  
  
<a name="dependencyPropertyInfo_Opacity"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-2551">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2551">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2552">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2552">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityProperty>|  
|<span data-ttu-id="dfcc8-2553">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2553">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-2554">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2554">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.OpacityMask" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMask">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush OpacityMask { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush OpacityMask" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.OpacityMask" />
      <MemberSignature Language="VB.NET" Value="Public Property OpacityMask As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ OpacityMask { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2555">Obtiene o establece una máscara de opacidad, como una implementación de <see cref="T:System.Windows.Media.Brush" /> que se aplica a cualquier máscara del canal alfa para el contenido representado de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2555">Gets or sets an opacity mask, as a <see cref="T:System.Windows.Media.Brush" /> implementation that is applied to any alpha-channel masking for the rendered content of this element.</span></span>  <span data-ttu-id="dfcc8-2556">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2556">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-2557">Pincel que se usará para la máscara de opacidad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2557">The brush to use for opacity masking.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2558">Esta propiedad utiliza solo lo que es el valor de canal alfa para suministrado <xref:System.Windows.Media.Brush>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2558">This property only uses whatever the alpha channel value is for the supplied <xref:System.Windows.Media.Brush>.</span></span> <span data-ttu-id="dfcc8-2559">Los otros canales de la <xref:System.Windows.Media.Brush>de representar el contenido (rojo, verde o azul) se omiten.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2559">The other channels of the <xref:System.Windows.Media.Brush>'s rendered content (Red, Green, or Blue) are ignored.</span></span>  
  
 <span data-ttu-id="dfcc8-2560">Más típico <xref:System.Windows.Media.Brush> para este propósito es un <xref:System.Windows.Media.ImageBrush>, que puede utilizarse para una variedad de técnicas como una viñeta de máscara de foto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2560">The most typical <xref:System.Windows.Media.Brush> for this purpose is an <xref:System.Windows.Media.ImageBrush>, which can be used for a variety of photo masking techniques such as a vignette.</span></span> <span data-ttu-id="dfcc8-2561">Pero los define <xref:System.Windows.Media.Brush> (como <xref:System.Windows.Media.LinearGradientBrush>) se puede utilizar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2561">But any defined <xref:System.Windows.Media.Brush> (such as <xref:System.Windows.Media.LinearGradientBrush>) can be used.</span></span>  
  
 <span data-ttu-id="dfcc8-2562">En [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], este valor de propiedad puede usar una sintaxis insertada específica de cada implementación de la <xref:System.Windows.Media.Brush> clase abstracta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2562">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property value can use an inline syntax that is specific to each implementation of the <xref:System.Windows.Media.Brush> abstract class.</span></span> <span data-ttu-id="dfcc8-2563">Para obtener más información, consulte [pintar con colores sólidos y degradados información general sobre](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2563">For more information, see [Painting with Solid Colors and Gradients Overview](~/docs/framework/wpf/graphics-multimedia/painting-with-solid-colors-and-gradients-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OpacityMask"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-2564">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2564">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2565">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2565">Identifier field</span></span>|<xref:System.Windows.UIElement.OpacityMaskProperty>|  
|<span data-ttu-id="dfcc8-2566">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2566">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-2567">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2567">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-2568">El ejemplo de marcado siguiente se muestra un <xref:System.Windows.Media.ImageBrush> máscara de opacidad aplicada a otra <xref:System.Windows.Controls.Image>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2568">The following markup example shows an <xref:System.Windows.Media.ImageBrush> opacity mask applied to another <xref:System.Windows.Controls.Image>.</span></span>  
  
 [!code-xaml[OpacityMasksSnippet#UIElementOpacityMask](~/samples/snippets/csharp/VS_Snippets_Wpf/OpacityMasksSnippet/CS/ImageBrushExample.xaml#uielementopacitymask)]   
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.Opacity" />
      </Docs>
    </Member>
    <Member MemberName="OpacityMaskProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityMaskProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityMaskProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityMaskProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityMaskProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityMaskProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2569">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.OpacityMask" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2569">Identifies the <see cref="P:System.Windows.UIElement.OpacityMask" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.OpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OpacityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2570">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.Opacity" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2570">Identifies the <see cref="P:System.Windows.UIElement.Opacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistId">
      <MemberSignature Language="C#" Value="public int PersistId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PersistId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.PersistId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PersistId { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("PersistId is an obsolete property and may be removed in a future release.  The value of this property is not defined.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2571">Obtiene un valor que identifica de manera única este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2571">Gets a value that uniquely identifies this element.</span></span></summary>
        <value><span data-ttu-id="dfcc8-2572">Identificador único del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2572">The unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2573"><xref:System.Windows.UIElement.PersistId%2A> identifica de forma exclusiva cada elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2573"><xref:System.Windows.UIElement.PersistId%2A> uniquely identifies each element.</span></span> <span data-ttu-id="dfcc8-2574">Un elemento mantiene el mismo <xref:System.Windows.UIElement.PersistId%2A> cada vez que el mismo [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] se carga (incluidas las representaciones binarias).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2574">An element keeps the same <xref:System.Windows.UIElement.PersistId%2A> every time the same [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] is loaded (including binary representations).</span></span> <span data-ttu-id="dfcc8-2575">Este identificador se usa para los requisitos de carga, análisis y serialización internos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2575">This identifier is used for internal loading, parsing and serialization requirements.</span></span> <span data-ttu-id="dfcc8-2576">No está pensado para utilizarse en el código de aplicación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2576">It is not intended to be used by your application code.</span></span>  
  
 <span data-ttu-id="dfcc8-2577">Esta propiedad no tiene ninguna relación con la <xref:System.Object.GetHashCode%2A> resultado para cualquier instancia dada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2577">This property has no relationship to the <xref:System.Object.GetHashCode%2A> result for any given instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="dfcc8-2578">Dirección del recorrido de foco solicitado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2578">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="dfcc8-2579">Cuando se invalida en una clase derivada, devuelve el elemento que recibiría el foco según la dirección de recorrido de foco especificada, sin mover realmente el foco a ese elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2579">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-2580">Elemento que recibiría el foco si se invocara <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> realmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2580">The element that would have received focus if <see cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2581">La implementación predeterminada de este método en esta clase está incompleta y siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2581">The default implementation of this method in this class is incomplete, and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2582">Se produce cuando el sistema de entrada notifica un evento de arrastre subyacente con este elemento como el destino del arrastre.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2582">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2583">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewDragEnter> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2583">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2584">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewDragEnter> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2584">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2585">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2586">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2586">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="dfcc8-2587">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2587">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2588">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2588">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2589">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2589">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2590">El evento de propagación correspondiente es <xref:System.Windows.UIElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2590">The corresponding bubbling event is <xref:System.Windows.UIElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2591">Invalidar <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2591">Override <xref:System.Windows.UIElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2592">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewDragEnter" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2592">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2593">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2593">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2594">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2594">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2595">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2595">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2596">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2596">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2597">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2597">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2598">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como el origen del arrastre.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2598">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2599">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewDragLeave> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2599">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2600">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewDragLeave> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2600">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2601">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2601">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2602">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2602">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="dfcc8-2603">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2603">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2604">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2604">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2605">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2605">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2606">El evento de propagación correspondiente es <xref:System.Windows.UIElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2606">The corresponding bubbling event is <xref:System.Windows.UIElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2607">Invalidar <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2607">Override <xref:System.Windows.UIElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2608">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewDragLeave" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2608">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2609">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2609">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2610">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2610">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2611">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2611">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2612">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2612">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2613">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2613">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2614">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como destino potencial de la colocación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2614">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2615">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewDragOver> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2615">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2616">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewDragOver> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2616">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2617">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2617">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2618">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2618">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDragOverEvent>|  
|<span data-ttu-id="dfcc8-2619">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2619">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2620">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2620">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2621">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2621">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2622">El evento de propagación correspondiente es <xref:System.Windows.UIElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2622">The corresponding bubbling event is <xref:System.Windows.UIElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2623">Invalidar <xref:System.Windows.UIElement.OnPreviewDragOver%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2623">Override <xref:System.Windows.UIElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2624">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewDragOver" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2624">Identifies the <see cref="E:System.Windows.UIElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2625">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2625">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2626">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2626">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2627">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2627">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2628">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2628">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2629">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2629">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2630">Se produce cuando el sistema de entrada notifica un evento de colocación subyacente con este elemento como el destino de la colocación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2630">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2631">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewDrop> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2631">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewDrop> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2632">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewDrop> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2632">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2633">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2633">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2634">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2634">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewDropEvent>|  
|<span data-ttu-id="dfcc8-2635">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2635">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2636">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2636">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2637">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2637">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2638">El evento de propagación correspondiente es <xref:System.Windows.UIElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2638">The corresponding bubbling event is <xref:System.Windows.UIElement.Drop>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2639">Invalidar <xref:System.Windows.UIElement.OnPreviewDrop%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2639">Override <xref:System.Windows.UIElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2640">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewDrop" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2640">Identifies the <see cref="E:System.Windows.UIElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2641">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2641">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2642">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2642">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2643">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2643">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2644">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2644">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2645">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2645">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2646">Se produce cuando se inicia una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2646">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2647">El <xref:System.Windows.UIElement.PreviewGiveFeedback> evento permite al origen de un evento de arrastre para modificar la apariencia del puntero del mouse (ratón), con el fin de proporcionar información visual al usuario durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2647">The <xref:System.Windows.UIElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="dfcc8-2648">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewGiveFeedback> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2648">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2649">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewGiveFeedback> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2649">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2650">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2650">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2651">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2651">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="dfcc8-2652">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2652">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2653">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2653">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2654">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2654">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2655">El evento de propagación correspondiente es <xref:System.Windows.UIElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2655">The corresponding bubbling event is <xref:System.Windows.UIElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2656">Invalidar <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2656">Override <xref:System.Windows.UIElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2657">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2657">Identifies the <see cref="E:System.Windows.UIElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2658">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2658">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2659">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2659">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2660">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2660">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2661">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2661">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2662">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2662">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2663">Se produce cuando este elemento recibe el foco del teclado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2663">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2664">Dado que este evento usa enrutamiento de túnel, el elemento que tiene el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2664">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-2665">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2665">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="dfcc8-2666">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2666">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2667">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2667">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2668">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2668">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2669">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2669">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="dfcc8-2670">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2670">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2671">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2671">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2672">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2672">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2673">El evento de propagación correspondiente es <xref:System.Windows.UIElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2673">The corresponding bubbling event is <xref:System.Windows.UIElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2674">Invalidar <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2674">Override <xref:System.Windows.UIElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2675">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2675">Identifies the <see cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2676">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2676">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2677">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2677">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2678">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2678">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2679">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2679">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2680">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2680">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2681">Se produce cuando se presiona una tecla mientras el foco está en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2681">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2682">Control de claves interactúa con otras características de la plataforma, como la composición de comandos y el texto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2682">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="dfcc8-2683">El <xref:System.Windows.UIElement.KeyDown> evento es un evento de entrada de texto de nivel inferior que podría no funcionar como se esperaba en ciertos controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2683">The <xref:System.Windows.UIElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="dfcc8-2684">Esto es debido a que algunos controles tienen la composición del control o control de clases que proporciona una versión de un nivel más alto del texto de entrada de control y eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2684">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="dfcc8-2685">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewKeyDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2685">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2686">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewKeyDown> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2686">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2687">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2688">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2688">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="dfcc8-2689">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2689">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2690">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2690">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2691">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2691">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2692">El evento de propagación correspondiente es <xref:System.Windows.UIElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2692">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2693">Invalidar <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2693">Override <xref:System.Windows.UIElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2694">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewKeyDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2694">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2695">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2696">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2697">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2698">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2699">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2700">Se produce al soltar una tecla mientras el foco está en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2700">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2701">Control de claves interactúa con otras características de la plataforma, como la composición de comandos y el texto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2701">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="dfcc8-2702">El <xref:System.Windows.UIElement.KeyUp> evento es un evento de entrada de texto de nivel inferior que podría no funcionar como se esperaba en ciertos controles.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2702">The <xref:System.Windows.UIElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="dfcc8-2703">Esto es debido a que algunos controles tienen la composición del control o control de clases que proporciona una versión de un nivel más alto del texto de entrada de control y eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2703">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="dfcc8-2704">Para obtener más información, consulte la documentación de los controles individuales.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2704">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="dfcc8-2705">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewKeyUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2705">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2706">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewKeyUp> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2706">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2707">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2707">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2708">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2708">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="dfcc8-2709">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2709">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2710">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2710">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2711">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2711">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2712">El evento de propagación correspondiente es <xref:System.Windows.UIElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2712">The corresponding bubbling event is <xref:System.Windows.UIElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2713">Invalidar <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2713">Override <xref:System.Windows.UIElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2714">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewKeyUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2714">Identifies the <see cref="E:System.Windows.UIElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2715">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2715">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2716">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2716">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2717">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2717">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2718">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2718">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2719">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2719">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2720">Se produce cuando este elemento deja de recibir el foco del teclado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2720">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2721">Dado que este evento usa enrutamiento de túnel, el elemento que perdió el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2721">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="dfcc8-2722">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que perdió el foco.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2722">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="dfcc8-2723">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2723">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2724">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2724">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2725">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2725">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2726">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2726">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="dfcc8-2727">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2727">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2728">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2728">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2729">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2729">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2730">El evento de propagación correspondiente es <xref:System.Windows.UIElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2730">The corresponding bubbling event is <xref:System.Windows.UIElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2731">Invalidar <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2731">Override <xref:System.Windows.UIElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2732">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2732">Identifies the <see cref="E:System.Windows.UIElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2733">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2733">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2734">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2734">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2735">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2735">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2736">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2736">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2737">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2737">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2738">Se produce al presionar cualquier botón del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2738">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2739">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewMouseDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2739">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2740">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewMouseDown> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2740">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-2741">El <xref:System.Windows.UIElement.PreviewMouseDown> evento se genera a menudo junto con cualquiera <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> o <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, que corresponde a una pulsación de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2741">The <xref:System.Windows.UIElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="dfcc8-2742"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> y <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2742"><xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="dfcc8-2743">Vea la sección Comentarios para <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> o <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2743">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2744">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2744">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2745">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2745">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="dfcc8-2746">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2746">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2747">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2747">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2748">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2748">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2749">El evento de propagación correspondiente es <xref:System.Windows.UIElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2749">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2750">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2750">Override <xref:System.Windows.UIElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2751">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2751">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2752">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2752">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2753">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2753">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2754">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2754">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2755">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2755">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2756">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2756">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2757">Se produce al presionar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2757">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2758">Aunque esto parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2758">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-2759">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2759">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-2760">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2760">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-2761">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2761">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-2762">Si marca <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2762">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="dfcc8-2763">Esto posiblemente incluye los eventos generado en el controlador de clase como <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2763">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="dfcc8-2764">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2764">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-2765">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2765">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-2766">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2766">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2767">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2767">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2768">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2768">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="dfcc8-2769">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2769">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2770">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2770">Direct</span></span>|  
|<span data-ttu-id="dfcc8-2771">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2771">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2772">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2772">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2773">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2773">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2774">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2774">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2775">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2775">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2776">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2776">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2777">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2777">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2778">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2778">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2779">Se produce al soltar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2779">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2780">Aunque esto parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2780">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-2781">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2781">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-2782">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2782">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-2783">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2783">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-2784">Si marca <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2784">If you mark <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="dfcc8-2785">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2785">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-2786">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2786">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-2787">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2787">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2788">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2788">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2789">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2789">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="dfcc8-2790">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2790">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2791">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2791">Direct</span></span>|  
|<span data-ttu-id="dfcc8-2792">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2792">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2793">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2793">Override <xref:System.Windows.UIElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2794">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2794">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2795">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2795">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2796">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2796">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2797">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2797">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2798">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2798">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2799">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2799">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2800">Se produce al mover el puntero del mouse mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2800">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2801">Este evento produce cuando el puntero del mouse entra por primera vez en los límites del elemento, y también cuando el puntero del mouse se desplaza mientras permanece dentro de los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2801">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="dfcc8-2802">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewMouseMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2802">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2803">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewMouseMove> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2803">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2804">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2804">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2805">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2805">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="dfcc8-2806">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2806">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2807">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2807">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2808">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2808">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2809">El evento de propagación correspondiente es <xref:System.Windows.UIElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2809">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2810">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2810">Override <xref:System.Windows.UIElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2811">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2811">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2812">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2812">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2813">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2813">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2814">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2814">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2815">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2815">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2816">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2816">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2817">Se produce al pulsar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2817">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2818">Aunque esto parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2818">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-2819">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2819">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-2820">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2820">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-2821">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2821">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-2822">Si marca <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2822">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonDown> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span> <span data-ttu-id="dfcc8-2823">Esto posiblemente incluye los eventos generado en el controlador de clase como <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2823">This possibly includes class-handler generated events such as <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.</span></span>  
  
 <span data-ttu-id="dfcc8-2824">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2824">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-2825">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2825">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-2826">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2826">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2827">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2827">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2828">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2828">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="dfcc8-2829">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2829">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2830">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2830">Direct</span></span>|  
|<span data-ttu-id="dfcc8-2831">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2831">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2832">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2832">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2833">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2833">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2834">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2834">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2835">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2835">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2836">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2836">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2837">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2837">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2838">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2838">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2839">Se produce al soltar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2839">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2840">Aunque esto parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2840">Although this  seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-2841">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2841">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="dfcc8-2842">Los datos del evento de este evento exponen los datos del evento de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2842">The event data of this event exposes the event data of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="dfcc8-2843">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.UIElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2843">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.UIElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span> <span data-ttu-id="dfcc8-2844">Si marca <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> controlado, está marcando fundamentalmente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> el sistema controla todos los demás agentes de escucha a lo largo de la ruta y en todos los eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2844">If you mark <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> handled, you are essentially marking <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> handled for all further listeners along the route, and on all related events.</span></span>  
  
 <span data-ttu-id="dfcc8-2845">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.UIElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2845">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.UIElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="dfcc8-2846">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2846">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="dfcc8-2847">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2847">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.UIElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2848">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2848">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2849">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2849">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="dfcc8-2850">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2850">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2851">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2851">Direct</span></span>|  
|<span data-ttu-id="dfcc8-2852">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2852">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2853">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2853">Override <xref:System.Windows.UIElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2854">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2854">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2855">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2855">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2856">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2856">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2857">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2857">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2858">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2858">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2859">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2859">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2860">Se produce al soltar cualquier botón del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2860">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2861">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewMouseUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2861">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2862">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewMouseUp> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2862">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-2863">El <xref:System.Windows.UIElement.PreviewMouseUp> evento se genera a menudo junto con cualquiera <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> o <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, que corresponde a una pulsación de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2863">The <xref:System.Windows.UIElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="dfcc8-2864"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> y <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2864"><xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="dfcc8-2865">Vea la sección Comentarios para <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> o <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2865">See Remarks for <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2866">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2866">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2867">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2867">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="dfcc8-2868">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2868">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2869">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2869">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2870">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2870">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2871">El evento de propagación correspondiente es <xref:System.Windows.UIElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2871">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2872">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2872">Override <xref:System.Windows.UIElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2873">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2873">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2874">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2874">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2875">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2875">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2876">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2876">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2877">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2877">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2878">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2878">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2879">Se produce cuando el usuario gira la rueda del mouse mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2879">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2880">Captura del foco o del mouse tienen prioridad sobre dónde está el puntero del mouse; por lo tanto, si recibe este evento desde un elemento enfocado o capturado, el puntero del mouse podría estar realmente sobre otro elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2880">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="dfcc8-2881">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewMouseMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2881">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2882">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewMouseMove> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2882">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2883">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2883">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2884">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2884">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="dfcc8-2885">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2885">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2886">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2886">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2887">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2887">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2888">El evento de propagación correspondiente es <xref:System.Windows.UIElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2888">The corresponding bubbling event is <xref:System.Windows.UIElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2889">Invalidar <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2889">Override <xref:System.Windows.UIElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2890">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewMouseWheel" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2890">Identifies the <see cref="E:System.Windows.UIElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2891">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2891">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2892">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2892">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2893">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2893">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2894">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2894">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2895">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2895">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2896">Se produce cuando hay algún cambio en el estado del botón del mouse o del teclado durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2896">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2897">El <xref:System.Windows.UIElement.PreviewQueryContinueDrag> evento permite al origen de arrastre declarar si la operación de arrastrar y colocar tiene que cancelarse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2897">The <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="dfcc8-2898">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewQueryContinueDrag> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2898">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2899">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewQueryContinueDrag> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2899">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2900">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2900">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2901">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2901">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="dfcc8-2902">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2902">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2903">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2903">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2904">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2904">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2905">El evento de propagación correspondiente es <xref:System.Windows.UIElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2905">The corresponding bubbling event is <xref:System.Windows.UIElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2906">Invalidar <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2906">Override <xref:System.Windows.UIElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2907">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2907">Identifies the <see cref="E:System.Windows.UIElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2908">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2908">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2909">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2909">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2910">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2910">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2911">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2911">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2912">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2912">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2913">Se produce cuando se presiona el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2913">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2914">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusButtonDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2914">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2915">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusButtonDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2915">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-2916">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2916">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-2917">Para obtener más información, consulte [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) y [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2917">For more information, see [Touch Input Support in Windows Vista](http://msdn.microsoft.com/library/63f1d71f-03d8-4d83-a174-e3dc7c57bad0) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2918">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2918">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2919">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2919">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="dfcc8-2920">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2920">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2921">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2921">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2922">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2922">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2923">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2923">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2924">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2924">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2925">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2925">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2926">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2926">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2927">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2927">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2928">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2928">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2929">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2929">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2930">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2930">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2931">Se produce cuando se suelta el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2931">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2932">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusButtonUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2932">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2933">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusButtonUp> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2933">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-2934">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2934">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-2935">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2935">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2936">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2936">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2937">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2937">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="dfcc8-2938">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2938">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2939">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2939">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2940">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2940">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2941">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2941">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2942">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2942">Override <xref:System.Windows.UIElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2943">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2943">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2944">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2944">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2945">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2945">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2946">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2946">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2947">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2947">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2948">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2948">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2949">Se produce cuando el lápiz toca el digitalizador mientras se encuentra sobre el elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2949">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2950">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2950">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2951">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2951">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-2952">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2952">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-2953">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2953">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2954">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2954">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2955">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2955">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="dfcc8-2956">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2956">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2957">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2957">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2958">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2958">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2959">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2959">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2960">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2960">Override <xref:System.Windows.UIElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2961">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2961">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2962">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2962">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2963">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2963">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2964">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2964">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2965">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2965">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2966">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2966">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2967">Se produce cuando el lápiz se mueve sobre un elemento sin tocar realmente el digitalizador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2967">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2968">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusInAirMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2968">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2969">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusInAirMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2969">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-2970">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2970">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-2971">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2971">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2972">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2972">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2973">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2973">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="dfcc8-2974">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2974">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2975">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2975">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2976">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2976">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2977">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2977">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2978">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2978">Override <xref:System.Windows.UIElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2979">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2979">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2980">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2980">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2981">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2981">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-2982">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2982">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-2983">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2983">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-2984">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2984">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2985">Se produce cuando el lápiz está lo suficientemente cerca del digitalizador para que lo detecte mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2985">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2986">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusInRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2986">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-2987">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusInRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2987">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-2988">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2988">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-2989">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2989">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-2990">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2990">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-2991">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2991">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="dfcc8-2992">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2992">Routing strategy</span></span>|<span data-ttu-id="dfcc8-2993">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2993">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-2994">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2994">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-2995">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2995">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="dfcc8-2996">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2996">Override <xref:System.Windows.UIElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-2997">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2997">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-2998">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2998">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-2999">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-2999">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3000">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3000">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3001">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3001">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3002">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3002">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3003">Se produce cuando se mueve el lápiz mientras se encuentra sobre el elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3003">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="dfcc8-3004">El lápiz se debe mover mientras el digitalizador lo detecta para generar este evento, de lo contrario, se genera <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3004">The stylus must move while being detected by the digitizer to raise this event, otherwise, <see cref="E:System.Windows.UIElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3005">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3005">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3006">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3006">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3007">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3007">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3008">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3008">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3009">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3009">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3010">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3010">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="dfcc8-3011">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3011">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3012">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3012">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3013">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3013">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3014">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3014">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3015">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3015">Override <xref:System.Windows.UIElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3016">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3016">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3017">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3017">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3018">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3018">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3019">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3019">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3020">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3020">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3021">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3021">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3022">Se produce cuando el lápiz está demasiado alejado del digitalizador y no lo detecta.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3022">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3023">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusOutOfRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3023">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3024">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusOutOfRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3024">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3025">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3025">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3026">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3026">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3027">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3027">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3028">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3028">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="dfcc8-3029">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3029">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3030">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3030">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3031">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3031">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3032">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3032">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3033">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3033">Override <xref:System.Windows.UIElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3034">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3034">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3035">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3035">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3036">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3036">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3037">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3037">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3038">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3038">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3039">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3039">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3040">Se produce cuando un usuario realiza uno de varios movimientos con el lápiz.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3040">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3041">Para obtener información acerca de los gestos de lápiz, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3041">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="dfcc8-3042">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusSystemGesture> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3042">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3043">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusSystemGesture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3043">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3044">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3044">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3045">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3045">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3046">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3046">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3047">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3047">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="dfcc8-3048">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3048">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3049">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3049">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3050">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3050">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3051">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3051">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3052">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3052">Override <xref:System.Windows.UIElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3053">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3053">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3054">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3054">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3055">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3055">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3056">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3056">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3057">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3057">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3058">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3058">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3059">Se produce cuando el usuario aleja el lápiz del digitalizador mientras el lápiz se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3059">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3060">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewStylusDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3060">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3061">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewStylusDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3061">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3062">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3062">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3063">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3063">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3064">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3064">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3065">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3065">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="dfcc8-3066">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3066">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3067">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3067">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3068">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3068">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3069">El evento de propagación correspondiente es <xref:System.Windows.UIElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3069">The corresponding bubbling event is <xref:System.Windows.UIElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3070">Invalidar <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3070">Override <xref:System.Windows.UIElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3071">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewStylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3071">Identifies the <see cref="E:System.Windows.UIElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3072">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3072">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3073">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3073">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3074">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3074">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3075">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3075">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3076">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3076">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3077">Se produce cuando este elemento obtiene texto de un modo independiente del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3077">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3078">El <xref:System.Windows.UIElement.PreviewTextInput> evento permite que un componente o una aplicación para realizar escuchas de entrada de texto de una manera independiente del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3078">The <xref:System.Windows.UIElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="dfcc8-3079">El teclado es el medio principal de <xref:System.Windows.UIElement.PreviewTextInput>; pero también pueden generar la voz, escritura a mano y otros dispositivos de entrada <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3079">The keyboard is the primary means of <xref:System.Windows.UIElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="dfcc8-3080">Debido a combinaciones de teclas, ya sea en los teclados predeterminados o a través de los editores de métodos de entrada, varios eventos de tecla pueden producir un solo evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3080">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="dfcc8-3081">Este evento crea un alias para la <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.PreviewTextInput> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3081">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3082">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.PreviewTextInput> eventos están conectados a subyacente <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3082">Event handlers that are attached to the <xref:System.Windows.UIElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3083">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3083">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3084">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3084">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTextInputEvent>|  
|<span data-ttu-id="dfcc8-3085">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3085">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3086">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3086">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3087">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3087">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3088">El evento de propagación correspondiente es <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3088">The corresponding bubbling event is <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3089">Invalidar <xref:System.Windows.UIElement.OnPreviewTextInput%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3089">Override <xref:System.Windows.UIElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3090">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewTextInput" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3090">Identifies the <see cref="E:System.Windows.UIElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3091">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3091">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3092">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3092">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3093">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3093">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3094">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3094">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3095">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3095">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3096">Se produce cuando un dedo toca la pantalla mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3096">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3097">De forma predeterminada, el <xref:System.Windows.UIElement.PreviewTouchDown> y <xref:System.Windows.UIElement.TouchDown> eventos no se producen hasta que un dedo toca la pantalla y se mueve.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3097">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="dfcc8-3098">Si se presiona un dedo en la pantalla y manteniendo sin moverlo hace que la acción de presionar y mantener el comportamiento de un <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3098">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="dfcc8-3099">El comportamiento de presionar y mantener presionado es equivalente a un clic del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3099">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="dfcc8-3100">Para hacer que el <xref:System.Windows.UIElement.PreviewTouchDown> y <xref:System.Windows.UIElement.TouchDown> eventos que se produzca cuando un dedo toca la pantalla, establezca la <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> propiedad adjunta `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3100">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3101">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3101">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3102">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3102">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="dfcc8-3103">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3103">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3104">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3104">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3105">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3105">Delegate</span></span>|<span data-ttu-id="dfcc8-3106"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3106"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3107">El evento de propagación correspondiente es <xref:System.Windows.UIElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3107">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3108">Invalidar <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3108">Override <xref:System.Windows.UIElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3109">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewTouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3109">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3110">Se produce cuando se mueve un dedo en la pantalla mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3110">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3111">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3111">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3112">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3112">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="dfcc8-3113">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3113">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3114">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3114">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3115">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3115">Delegate</span></span>|<span data-ttu-id="dfcc8-3116"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3116"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3117">El evento de propagación correspondiente es <xref:System.Windows.UIElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3117">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3118">Invalidar <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3118">Override <xref:System.Windows.UIElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3119">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewTouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3119">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3120">Se produce cuando se quita un dedo de la pantalla mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3120">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3121">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3121">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3122">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3122">Identifier field</span></span>|<xref:System.Windows.UIElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="dfcc8-3123">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3123">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3124">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3124">Tunneling</span></span>|  
|<span data-ttu-id="dfcc8-3125">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3125">Delegate</span></span>|<span data-ttu-id="dfcc8-3126"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3126"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3127">El evento de propagación correspondiente es <xref:System.Windows.UIElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3127">The corresponding bubbling event is <xref:System.Windows.UIElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3128">Invalidar <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3128">Override <xref:System.Windows.UIElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3129">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.PreviewTouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3129">Identifies the <see cref="E:System.Windows.UIElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3130">Se produce cuando hay algún cambio en el estado del botón del mouse o del teclado durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3130">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3131">El <xref:System.Windows.UIElement.QueryContinueDrag> evento permite al origen de arrastre determinar si la operación de arrastrar y colocar tiene que cancelarse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3131">The <xref:System.Windows.UIElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="dfcc8-3132">Este evento crea un alias para la <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.QueryContinueDrag> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3132">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3133">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.QueryContinueDrag> eventos están conectados a subyacente <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3133">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3134">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3134">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3135">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3135">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryContinueDragEvent>|  
|<span data-ttu-id="dfcc8-3136">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3136">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3137">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3137">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3138">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3138">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3139">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3139">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3140">Invalidar <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3140">Override <xref:System.Windows.UIElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3141">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.QueryContinueDrag" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3141">Identifies the <see cref="E:System.Windows.UIElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3142">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3142">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3143">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3143">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3144">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3144">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3145">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3145">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3146">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3146">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3147">Se produce cuando se solicita que se muestre el cursor.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3147">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="dfcc8-3148">Este evento genera en un elemento cada vez que el puntero del mouse se mueve a una nueva ubicación, lo que significa que es posible que haya que cambiar el objeto del cursor según la nueva posición.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3148">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3149">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.QueryCursor> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3149">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.QueryCursor> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3150">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.QueryCursor> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3150">Event handlers that are attached to the <xref:System.Windows.UIElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3151">El cursor que se va a la que hace referencia a este nombre de evento no es necesariamente el cursor de texto (a veces conocido como el punto de inserción).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3151">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="dfcc8-3152">En su lugar, el cursor en este contexto es el objeto que declara la presentación gráfica en la pantalla relacionados con varios posibles dispositivos relacionados con la entrada o conceptos de programación de Windows.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3152">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="dfcc8-3153">Ese objeto se representa mediante la <xref:System.Windows.Input.Cursor> clase en WPF.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3153">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="dfcc8-3154">El sistema de entrada de WPF permite cambiar este cursor cuando representa la posición en la pantalla del puntero del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3154">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="dfcc8-3155">Puede usar valores predefinidos de la <xref:System.Windows.Input.Cursors> enumeración, o bien puede declarar un cursor personalizado como un archivo de imagen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3155">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="dfcc8-3156">Realizar escuchas para el <xref:System.Windows.UIElement.QueryCursor> evento no es una técnica eficaz para la administración del cursor.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3156">Listening for the <xref:System.Windows.UIElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="dfcc8-3157">En su lugar, cada elemento debe definir su propio comportamiento de cursor con <xref:System.Windows.FrameworkContentElement.Cursor%2A> y <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3157">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="dfcc8-3158">Solo debe confiar en <xref:System.Windows.UIElement.QueryCursor> si no usa los elementos de base de nivel de marco WPF o en extraordinarios circunstancias que definir el comportamiento del cursor en una base por cada elemento no satisfagan sus necesidades.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3158">You should only rely on <xref:System.Windows.UIElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="dfcc8-3159">Para obtener más información sobre cómo implementar el comportamiento del cursor en respuesta a <xref:System.Windows.UIElement.QueryCursor>, consulte <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3159">For more information on implementing cursor behavior in response to <xref:System.Windows.UIElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3160">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3160">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3161">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3161">Identifier field</span></span>|<xref:System.Windows.UIElement.QueryCursorEvent>|  
|<span data-ttu-id="dfcc8-3162">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3162">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3163">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3163">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3164">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3164">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3165">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3165">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="dfcc8-3166">Invalidar <xref:System.Windows.UIElement.OnQueryCursor%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3166">Override <xref:System.Windows.UIElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3167">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.QueryCursor" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3167">Identifies the <see cref="E:System.Windows.UIElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3168">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3168">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3169">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3169">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3170">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3170">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3171">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3171">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3172">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3172">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="dfcc8-3173"><see cref="T:System.Windows.RoutedEventArgs" /> que contiene los datos de evento e identifica el evento que se va a provocar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3173">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="dfcc8-3174">Genera un evento enrutado específico.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3174">Raises a specific routed event.</span></span> <span data-ttu-id="dfcc8-3175">El objeto <see cref="T:System.Windows.RoutedEvent" /> que se provoca se identifica en la instancia de <see cref="T:System.Windows.RoutedEventArgs" /> proporcionada (como la propiedad <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> de los datos de evento).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3175">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3176">El `e` parámetro se escribe como el tipo base común para todos los datos del evento enrutado; sin embargo, se deben proporcionar los datos del evento como el tipo de datos de evento más específico que está disponible para el evento que se está generando, porque <xref:System.Windows.RoutedEventArgs> las clases derivadas contienen las propiedades de datos concretas que están diseñadas para el evento específico cuando se genera.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3176">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="dfcc8-3177"><xref:System.Windows.RoutedEventArgs> no es simplemente las propiedades de estado para el evento; También identifica qué evento enrutado que se va a generar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3177"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="dfcc8-3178">Este patrón cuando se genera el evento y los datos del evento enrutado ambos diferencian [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] eventos y clases de datos, que normalmente sólo contienen las propiedades que están relacionados con el evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3178">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-3179">En el ejemplo siguiente se crea datos de eventos, anexa el identificador de evento a los datos y, a continuación, usa la instancia de datos de evento para provocar un evento enrutado personalizado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3179">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[RoutedEventCustom#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#raiseevent)]
 [!code-vb[RoutedEventCustom#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-3180">Libera todos los dispositivos táctiles capturados desde este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3180">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-3181">Libera la captura del mouse si este elemento la tiene.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3181">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3182">Si este elemento no tiene la captura, llamar a este método no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3182">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="dfcc8-3183">Considere la posibilidad de comprobar el valor de <xref:System.Windows.UIElement.IsMouseCaptured%2A> antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3183">Consider checking the value of <xref:System.Windows.UIElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-3184">El ejemplo siguiente es el paralelo en el ejemplo presentado para <xref:System.Windows.UIElement.CaptureMouse%2A>: lo controla el botón del mouse hasta la captura del mouse de versión y volver a habilitar mueve el mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3184">The following example is the parallel to the example given for <xref:System.Windows.UIElement.CaptureMouse%2A>: it handles mouse button up to release mouse capture and re-enable moving the mouse.</span></span>  
  
 [!code-csharp[CubeAnimation#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[CubeAnimation#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-3185">Libera la captura del dispositivo de lápiz óptico si este elemento la tiene.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3185">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3186">Si este elemento no tiene la captura, llamar a este método no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3186">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="dfcc8-3187">Considere la posibilidad de comprobar el valor de <xref:System.Windows.UIElement.IsStylusCaptured%2A> antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3187">Consider checking the value of <xref:System.Windows.UIElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="dfcc8-3188">Dispositivo que se va a liberar.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3188">The device to release.</span></span></param>
        <summary><span data-ttu-id="dfcc8-3189">Intenta liberar el dispositivo táctil especificado de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3189">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-3190">Es <see langword="true" /> si se libera el dispositivo táctil; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3190"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dfcc8-3191"><paramref name="touchDevice" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3191"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="dfcc8-3192">Identificador del evento enrutado al que se adjunta el controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3192">The identifier of the routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="dfcc8-3193">Implementación de controlador específica que se va a quitar de la colección de controladores de eventos de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3193">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="dfcc8-3194">Quita el controlador de eventos enrutados especificado de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3194">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3195">El escenario más común para usar este [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] es al implementar la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] evento "contenedor" que está asociado a un evento enrutado personalizado, específicamente al implementar la lógica de "quitar" para los controladores de la [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] nivel.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3195">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="dfcc8-3196">El ejemplo que sigue a esta sección Comentarios muestra este escenario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3196">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="dfcc8-3197">Llamar a este método no tiene ningún efecto si se ha registrado ningún controlador con criterios que coincidan con los parámetros de entrada para la llamada al método.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3197">Calling this method has no effect if there were no handlers registered with criteria that matches the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="dfcc8-3198">Si hay más de un controlador asociado que coincide con los criterios, solo el primer controlador en caso de que se quita el almacén de controladores.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3198">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="dfcc8-3199">Este comportamiento es coherente con [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] comportamiento de la `-=` operador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3199">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="dfcc8-3200">Ni `routedEvent` ni `handler` puede ser `null`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3200">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="dfcc8-3201">Se intenta proporcionar cualquier valor como `null` , se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3201">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="dfcc8-3202">Este método omite la `handledEventsToo` agrega información de parámetros, que se proporciona si el controlador fue el primero con el <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma que habilita el control de eventos ya controlados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3202">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="dfcc8-3203">Se quita cualquier tipo de controlador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3203">Either type of handler is removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-3204">En el ejemplo siguiente se usa <xref:System.Windows.UIElement.RemoveHandler%2A> como parte de una definición de contenedor de eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3204">The following example uses <xref:System.Windows.UIElement.RemoveHandler%2A> as part of an event wrapper definition.</span></span>  
  
 [!code-csharp[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/RoutedEventCustom/CSharp/SDKSampleLibrary/class1.cs#addremovehandler)]
 [!code-vb[RoutedEventCustom#AddRemoveHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RoutedEventCustom/VB/SDKSampleLibrary/Class1.vb#addremovehandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="RenderSize">
      <MemberSignature Language="C#" Value="public System.Windows.Size RenderSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Size RenderSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderSize" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderSize As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Size RenderSize { System::Windows::Size get(); void set(System::Windows::Size value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3205">Obtiene (o establece) el tamaño final de presentación de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3205">Gets (or sets) the final render size of this element.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3206">Tamaño presentado para este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3206">The rendered size for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="dfcc8-3207">No intente establecer esta propiedad, ya sea en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] o en el código, si utiliza el sistema de diseño de nivel de marco WPF.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3207">Do not attempt to set this property, either in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or in code, if using the WPF framework-level layout system.</span></span> <span data-ttu-id="dfcc8-3208">Casi todos los escenarios de aplicación típica utilizará este sistema de diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3208">Nearly all typical application scenarios will use this layout system.</span></span> <span data-ttu-id="dfcc8-3209">El sistema de diseño no respeta los tamaños establecidos en el <xref:System.Windows.UIElement.RenderSize%2A> propiedad directamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3209">The layout system will not respect sizes set in the <xref:System.Windows.UIElement.RenderSize%2A> property directly.</span></span> <span data-ttu-id="dfcc8-3210">El <xref:System.Windows.UIElement.RenderSize%2A> propiedad se declara como grabable solo para habilitar cierto casos que evitan deliberadamente los protocolos de diseño típico, como la compatibilidad con el protocolo de puente de nivel de núcleo WPF el <xref:System.Windows.Documents.Adorner> clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3210">The <xref:System.Windows.UIElement.RenderSize%2A> property is declared writable only to enable certain WPF core-level bridging cases that deliberately circumvent the typical layout protocols, such as support for the <xref:System.Windows.Documents.Adorner> class.</span></span>  
  
 <span data-ttu-id="dfcc8-3211">Esta propiedad puede usarse para comprobar el tamaño de representación aplicable en el sistema de diseño como invalida <xref:System.Windows.UIElement.OnRender%2A> o <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3211">This property can be used for checking the applicable render size within layout system overrides such as <xref:System.Windows.UIElement.OnRender%2A> or <xref:System.Windows.UIElement.GetLayoutClip%2A>.</span></span>  
  
 <span data-ttu-id="dfcc8-3212">Un escenario muy común lleva a cabo la <xref:System.Windows.FrameworkElement.SizeChanged> invalidar el evento con el controlador de clase o la <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3212">A more common scenario is handling the <xref:System.Windows.FrameworkElement.SizeChanged> event with the class handler override or the <xref:System.Windows.UIElement.OnRenderSizeChanged%2A> event.</span></span>  
  
## Examples  
 <span data-ttu-id="dfcc8-3213">En el ejemplo siguiente se muestra cómo un adorno personalizado usa el <xref:System.Windows.UIElement.RenderSize%2A> valor con el fin de crear y cambiar el tamaño del gráfico de rectángulo que define el adorno, como parte de su <xref:System.Windows.UIElement.OnRender%2A> implementación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3213">The following example shows how a custom adorner uses the <xref:System.Windows.UIElement.RenderSize%2A> value in order to create and size the rectangle graphic that defines the adorner, as part of its <xref:System.Windows.UIElement.OnRender%2A> implementation.</span></span>  
  
 [!code-csharp[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/csharp/VS_Snippets_Wpf/AdornersMiscCode/CSharp/Window1.xaml.cs#uielementdesiredsize)]
 [!code-vb[AdornersMiscCode#UIElementDesiredSize](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AdornersMiscCode/visualbasic/window1.xaml.vb#uielementdesiredsize)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.UpdateLayout" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform RenderTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform RenderTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ RenderTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3214">Obtiene o establece información de transformación que afecta a la posición de representación de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3214">Gets or sets transform information that affects the rendering position of this element.</span></span>  <span data-ttu-id="dfcc8-3215">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3215">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3216">Describe los detalles de la transformación de representación deseada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3216">Describes the specifics of the desired render transform.</span></span> <span data-ttu-id="dfcc8-3217">El valor predeterminado es <see cref="P:System.Windows.Media.Transform.Identity" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3217">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3218">Una transformación de representación no regenerar el tamaño de presentación o presentar información de tamaño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3218">A render transform does not regenerate layout size or render size information.</span></span> <span data-ttu-id="dfcc8-3219">Representar transformaciones normalmente están pensadas para animar o aplicar un efecto temporal a un elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3219">Render transforms are typically intended for animating or applying a temporary effect to an element.</span></span> <span data-ttu-id="dfcc8-3220">Por ejemplo, puede ampliar el elemento cuando centrado o colocado el puntero sobre o podría vibración en carga para dibujar el ojo en esa parte de la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3220">For example, the element might zoom when focused or moused over, or might jitter on load to draw the eye to that part of the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-3221">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3221">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3222">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3222">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformProperty>|  
|<span data-ttu-id="dfcc8-3223">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3223">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-3224">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3224">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point RenderTransformOrigin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point RenderTransformOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.RenderTransformOrigin" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderTransformOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point RenderTransformOrigin { System::Windows::Point get(); void set(System::Windows::Point value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3225">Obtiene o establece el punto central de cualquier posible transformación de representación declarada por <see cref="P:System.Windows.UIElement.RenderTransform" />, relativo a los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3225">Gets or sets the center point of any possible render transform declared by <see cref="P:System.Windows.UIElement.RenderTransform" />, relative to the bounds of the element.</span></span>  <span data-ttu-id="dfcc8-3226">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3226">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3227">El valor que declara la transformación de representación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3227">The value that declares the render transform.</span></span> <span data-ttu-id="dfcc8-3228">El valor predeterminado es un objeto <see cref="T:System.Windows.Point" /> con las coordenadas (0,0).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3228">The default value is a <see cref="T:System.Windows.Point" /> with coordinates (0,0).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3229"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> tiene un uso de algún modo no estándar de la <xref:System.Windows.Point> estructura valor, en el que el <xref:System.Windows.Point> no representa una ubicación absoluta en un sistema de coordenadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3229"><xref:System.Windows.UIElement.RenderTransformOrigin%2A> has a somewhat nonstandard use of the <xref:System.Windows.Point> structure value, in that the <xref:System.Windows.Point> does not represent an absolute location in a coordinate system.</span></span> <span data-ttu-id="dfcc8-3230">En su lugar, los valores entre 0 y 1 se interpretan como un factor para el intervalo del elemento actual en cada eje x, y.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3230">Instead, values between 0 and 1 are interpreted as a factor for the range of the current element in each x,y axis.</span></span> <span data-ttu-id="dfcc8-3231">Por ejemplo, (0,5.0,5) hace que la transformación de representación se centre en el elemento o (1,1), debe colocar la transformación de representación en la parte inferior derecha del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3231">For example, (0.5,0.5) will cause the render transform to be centered on the element, or (1,1) would place the render transform at the bottom right corner of the element.</span></span> <span data-ttu-id="dfcc8-3232"><xref:System.Double.NaN> no es un valor aceptado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3232"><xref:System.Double.NaN> is not an accepted value.</span></span>  
  
 <span data-ttu-id="dfcc8-3233">Los valores superiores a 0 y 1 también se aceptan y producirán más efectos de transformación no convencionales.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3233">Values beyond 0 and 1 are also accepted, and will result in more unconventional transform effects.</span></span> <span data-ttu-id="dfcc8-3234">Por ejemplo, si establece <xref:System.Windows.UIElement.RenderTransformOrigin%2A> (5,5) y, a continuación, aplique un <xref:System.Windows.Media.RotateTransform>, el punto de giro estará completamente fuera de los límites del propio elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3234">For instance, if you set <xref:System.Windows.UIElement.RenderTransformOrigin%2A> to be (5,5), and then apply a <xref:System.Windows.Media.RotateTransform>, the rotation point will be well outside the bounds of the element itself.</span></span> <span data-ttu-id="dfcc8-3235">La transformación girará el elemento alrededor de un círculo grande que se origina más allá de la parte inferior derecha.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3235">The transform will spin your element around in a big circle that originates beyond bottom right.</span></span> <span data-ttu-id="dfcc8-3236">El origen puede estar en algún lugar dentro de su elemento primario y posiblemente podría estar fuera del marco o vista.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3236">The origin might be somewhere inside its parent element and could possibly be possibly out of frame or view.</span></span> <span data-ttu-id="dfcc8-3237">Valores de punto negativos son similares, estos irá más allá de la parte superior izquierda de límites.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3237">Negative point values are similar, these will go beyond the top left bounds.</span></span>  
  
 <span data-ttu-id="dfcc8-3238">Representar transformaciones no afectan al diseño y se utiliza normalmente para animar o aplicar un efecto temporal a un elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3238">Render transforms do not affect layout, and are typically used to animate or apply a temporary effect to an element.</span></span>  
  
<a name="xamlAttributeUsage_RenderTransformOrigin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="dfcc8-3239">Uso de atributos XAML</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3239">XAML Attribute Usage</span></span>  
  
```  
<object RenderTransformOrigin="xOrigin, yOrigin"/>  
```  
  
<a name="xamlPropertyElementUsage_RenderTransformOrigin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="dfcc8-3240">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3240">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.RenderTransformOrigin>  
    <Point X=" xOrigin " Y=" yOrigin "/>  
  </object.RenderTransformOrigin>  
</object>  
```  
  
<a name="xamlValues_RenderTransformOrigin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dfcc8-3241">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3241">XAML Values</span></span>  
 <span data-ttu-id="dfcc8-3242">*xOrigin*</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3242">*xOrigin*</span></span>  
 <span data-ttu-id="dfcc8-3243">El factor de origen horizontal.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3243">The horizontal origin factor.</span></span> <span data-ttu-id="dfcc8-3244">Esto normalmente se proporciona como un valor entre 0 y 1.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3244">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="dfcc8-3245">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3245">See Remarks.</span></span>  
  
 <span data-ttu-id="dfcc8-3246">*yOrigin*</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3246">*yOrigin*</span></span>  
 <span data-ttu-id="dfcc8-3247">El factor de origen vertical.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3247">The vertical origin factor.</span></span> <span data-ttu-id="dfcc8-3248">Esto normalmente se proporciona como un valor entre 0 y 1.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3248">This is typically given as a value between 0 and 1.</span></span> <span data-ttu-id="dfcc8-3249">Vea la sección Comentarios.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3249">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_RenderTransformOrigin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-3250">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3250">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3251">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3251">Identifier field</span></span>|<xref:System.Windows.UIElement.RenderTransformOriginProperty>|  
|<span data-ttu-id="dfcc8-3252">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3252">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-3253">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3253">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-3254">En el ejemplo siguiente se crea elementos de código, se aplica un <xref:System.Windows.UIElement.RenderTransformOrigin%2A>y, a continuación, se aplica un <xref:System.Windows.UIElement.RenderTransform%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3254">The following example builds up elements in code, applies a <xref:System.Windows.UIElement.RenderTransformOrigin%2A>, and then applies a  <xref:System.Windows.UIElement.RenderTransform%2A>.</span></span>  
  
 [!code-csharp[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/csharp/VS_Snippets_Wpf/transformanimations_snip/CSharp/RotateAboutCenterExample.cs#uielementrendertransformorigin)]
 [!code-vb[transformanimations_snip#UIElementRenderTransformOrigin](~/samples/snippets/visualbasic/VS_Snippets_Wpf/transformanimations_snip/visualbasic/rotateaboutcenterexample.vb#uielementrendertransformorigin)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.RenderTransform" />
      </Docs>
    </Member>
    <Member MemberName="RenderTransformOriginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformOriginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformOriginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformOriginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformOriginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformOriginProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3255">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.RenderTransformOrigin" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3255">Identifies the <see cref="P:System.Windows.UIElement.RenderTransformOrigin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty RenderTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty RenderTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.RenderTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RenderTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ RenderTransformProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3256">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.RenderTransform" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3256">Identifies the <see cref="P:System.Windows.UIElement.RenderTransform" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-3257">Devuelve un valor que indica si los procesos de serialización deben serializar el contenido de la propiedad <see cref="P:System.Windows.UIElement.CommandBindings" /> en las instancias de esta clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3257">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-3258">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.Windows.UIElement.CommandBindings" /> debe serializarse; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3258"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3259">El valor devuelto será `true` si <xref:System.Windows.UIElement.CommandBindings%2A> se establece localmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3259">This will return `true` if <xref:System.Windows.UIElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="dfcc8-3260">Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.UIElement.CommandBindings%2A> propiedad no tiene un valor predeterminado simple.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3260">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="dfcc8-3261">Este método indica si la propiedad ha cambiado respecto de su valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3261">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="dfcc8-3262">Normalmente se invoca este método si se desarrolla un diseñador o desarrollar su propio control que incorpore un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3262">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-3263">Para obtener más información, consulte [definir valores predeterminados con los métodos ShouldSerialize y Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3263">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-3264">Devuelve un valor que indica si los procesos de serialización deben serializar el contenido de la propiedad <see cref="P:System.Windows.UIElement.InputBindings" /> en las instancias de esta clase.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3264">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.UIElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns>
          <span data-ttu-id="dfcc8-3265">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.Windows.UIElement.InputBindings" /> debe serializarse; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3265"><see langword="true" /> if the <see cref="P:System.Windows.UIElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3266">El valor devuelto será `true` si <xref:System.Windows.UIElement.InputBindings%2A> se establece localmente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3266">This will return `true` if <xref:System.Windows.UIElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="dfcc8-3267">Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.UIElement.InputBindings%2A> propiedad no tiene un valor predeterminado simple.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3267">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="dfcc8-3268">Este método indica si la propiedad ha cambiado respecto de su valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3268">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="dfcc8-3269">Normalmente se invoca este método si se desarrolla un diseñador o desarrollar su propio control que incorpore un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3269">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="dfcc8-3270">Para obtener más información, consulte [definir valores predeterminados con los métodos ShouldSerialize y Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3270">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixels">
      <MemberSignature Language="C#" Value="public bool SnapsToDevicePixels { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SnapsToDevicePixels" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.SnapsToDevicePixels" />
      <MemberSignature Language="VB.NET" Value="Public Property SnapsToDevicePixels As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SnapsToDevicePixels { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3271">Obtiene o establece un valor que determina si la representación de este elemento debe usar configuración de píxel específica del dispositivo durante la representación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3271">Gets or sets a value that determines whether rendering for this element should use device-specific pixel settings during rendering.</span></span>  <span data-ttu-id="dfcc8-3272">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3272">This is a dependency property.</span></span></summary>
        <value>
          <span data-ttu-id="dfcc8-3273"><see langword="true" /> si el elemento debe representarse de acuerdo con los píxeles del dispositivo; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3273"><see langword="true" /> if the element should render in accordance to device pixels; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="dfcc8-3274">El valor predeterminado, tal como se declara en <see cref="T:System.Windows.UIElement" />, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3274">The default as declared on <see cref="T:System.Windows.UIElement" /> is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3275">Puede establecer esta propiedad en `true` en el elemento raíz para habilitar píxel de ajuste de representación a lo largo de la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3275">You can set this property to `true` on your root element to enable pixel snap rendering throughout the UI.</span></span> <span data-ttu-id="dfcc8-3276">Para dispositivos que funcionan con más de 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], píxel ajustar representación puede minimizar los artefactos visuales del suavizado en la proximidad de líneas sólidas sola unidad.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3276">For devices operating at greater than 96 [!INCLUDE[TLA#tla_dpi](~/includes/tlasharptla-dpi-md.md)], pixel snap rendering can minimize anti-aliasing visual artifacts in the vicinity of single-unit solid lines.</span></span>  
  
 <span data-ttu-id="dfcc8-3277">Cuando hereda <xref:System.Windows.FrameworkElement> o posibles las clases derivadas, <xref:System.Windows.FrameworkElement> invalida los metadatos de esta propiedad de dependencia para establecer el <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> propiedad de metadatos para `true`.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3277">When inherited by <xref:System.Windows.FrameworkElement> or any possible derived classes, <xref:System.Windows.FrameworkElement> overrides the metadata for this dependency property to set the <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> metadata property to `true`.</span></span> <span data-ttu-id="dfcc8-3278">¿Qué se obtiene es que debe especificar solo el elemento más externo en un subárbol <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> como `true`, y, a continuación, va a notificar todos los elementos secundarios de ese subárbol <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> como `true` y tendrá el <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> efecto visual posible.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3278">What this achieves is that only the outermost element in a subtree needs to specify <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true`, and all child elements of that subtree will then report <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> as `true` and will have the <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> visual effect.</span></span>  
  
<a name="dependencyPropertyInfo_SnapsToDevicePixels"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-3279">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3279">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3280">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3280">Identifier field</span></span>|<xref:System.Windows.UIElement.SnapsToDevicePixelsProperty>|  
|<span data-ttu-id="dfcc8-3281">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3281">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-3282">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3282">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SnapsToDevicePixelsProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SnapsToDevicePixelsProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SnapsToDevicePixelsProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.SnapsToDevicePixelsProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SnapsToDevicePixelsProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SnapsToDevicePixelsProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3283">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3283">Identifies the <see cref="P:System.Windows.UIElement.SnapsToDevicePixels" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3284">Se produce cuando se presiona el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3284">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3285">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusButtonDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3285">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3286">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusButtonDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3286">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3287">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3287">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3288">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3288">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3289">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3290">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3290">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonDownEvent>|  
|<span data-ttu-id="dfcc8-3291">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3291">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3292">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3292">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3293">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3293">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3294">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3294">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3295">Invalidar <xref:System.Windows.UIElement.OnStylusButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3295">Override <xref:System.Windows.UIElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3296">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusButtonDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3296">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3297">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3297">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3298">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3298">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3299">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3299">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3300">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3300">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3301">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3301">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3302">Se produce cuando se suelta el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3302">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3303">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusButtonUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3303">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3304">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusButtonUp> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3304">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3305">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3305">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3306">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3306">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3307">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3307">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3308">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3308">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusButtonUpEvent>|  
|<span data-ttu-id="dfcc8-3309">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3309">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3310">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3310">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3311">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3311">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3312">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3312">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3313">Invalidar <xref:System.Windows.UIElement.OnStylusButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3313">Override <xref:System.Windows.UIElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3314">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusButtonUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3314">Identifies the <see cref="E:System.Windows.UIElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3315">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3315">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3316">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3316">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3317">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3317">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3318">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3318">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3319">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3319">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3320">Se produce cuando el lápiz toca el digitalizador mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3320">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3321">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3321">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusDown> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3322">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3322">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3323">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3323">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3324">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3324">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3325">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3325">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3326">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3326">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusDownEvent>|  
|<span data-ttu-id="dfcc8-3327">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3327">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3328">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3328">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3329">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3329">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3330">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3330">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3331">Invalidar <xref:System.Windows.UIElement.OnStylusDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3331">Override <xref:System.Windows.UIElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3332">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3332">Identifies the <see cref="E:System.Windows.UIElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3333">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3333">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3334">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3334">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3335">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3335">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3336">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3336">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3337">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3337">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3338">Se produce cuando el lápiz entra dentro de los límites de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3338">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3339"><xref:System.Windows.UIElement.StylusEnter> es un objeto que usa la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3339"><xref:System.Windows.UIElement.StylusEnter> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="dfcc8-3340">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3340">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="dfcc8-3341">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3341">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="dfcc8-3342">Aunque <xref:System.Windows.UIElement.StylusEnter> literalmente le hace un seguimiento cuando el lápiz entra en los límites de un elemento, aún más este evento indica que el <xref:System.Windows.UIElement.IsStylusOver%2A> valor de propiedad ha cambiado de `false` a `true` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3342">Although <xref:System.Windows.UIElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="dfcc8-3343">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusEnter> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3343">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusEnter> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3344">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusEnter> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3344">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3345">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3345">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3346">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3346">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3347">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3347">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3348">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3348">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusEnterEvent>|  
|<span data-ttu-id="dfcc8-3349">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3349">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3350">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3350">Direct</span></span>|  
|<span data-ttu-id="dfcc8-3351">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3351">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3352">Invalidar <xref:System.Windows.UIElement.OnStylusEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3352">Override <xref:System.Windows.UIElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3353">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusEnter" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3353">Identifies the <see cref="E:System.Windows.UIElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3354">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3354">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3355">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3355">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3356">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3356">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3357">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3357">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3358">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3358">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3359">Se produce cuando el lápiz se mueve sobre un elemento sin tocar realmente el digitalizador.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3359">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3360">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusInAirMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3360">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3361">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusInAirMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3361">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3362">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3362">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3363">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3363">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3364">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3364">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3365">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3365">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="dfcc8-3366">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3366">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3367">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3367">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3368">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3368">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3369">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3369">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3370">Invalidar <xref:System.Windows.UIElement.OnStylusInAirMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3370">Override <xref:System.Windows.UIElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3371">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3371">Identifies the <see cref="E:System.Windows.UIElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3372">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3372">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3373">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3373">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3374">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3374">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3375">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3375">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3376">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3376">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3377">Se produce cuando el lápiz está lo suficientemente cerca del digitalizador para que lo detecte mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3377">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3378">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusInRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3378">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusInRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3379">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusInRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3379">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3380">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3380">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3381">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3381">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3382">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3382">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3383">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3383">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusInRangeEvent>|  
|<span data-ttu-id="dfcc8-3384">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3384">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3385">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3385">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3386">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3386">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3387">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3387">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3388">Invalidar <xref:System.Windows.UIElement.OnStylusInRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3388">Override <xref:System.Windows.UIElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3389">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusInRange" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3389">Identifies the <see cref="E:System.Windows.UIElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3390">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3390">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3391">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3391">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3392">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3392">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3393">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3393">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3394">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3394">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3395">Se produce cuando el lápiz sale de los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3395">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3396"><xref:System.Windows.UIElement.StylusLeave> es un objeto que usa la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3396"><xref:System.Windows.UIElement.StylusLeave> is a  that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="dfcc8-3397">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3397">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="dfcc8-3398">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3398">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="dfcc8-3399">Aunque <xref:System.Windows.UIElement.StylusLeave> realiza seguimiento cuando el lápiz sale de los límites de un elemento, este evento más literalmente informa de que el <xref:System.Windows.UIElement.IsStylusOver%2A> valor de propiedad ha cambiado de `true` a `false` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3399">Although <xref:System.Windows.UIElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.UIElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="dfcc8-3400">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusLeave> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3400">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusLeave> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3401">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusLeave> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3401">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3402">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3402">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3403">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3403">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3404">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3405">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3405">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusLeaveEvent>|  
|<span data-ttu-id="dfcc8-3406">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3406">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3407">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3407">Direct</span></span>|  
|<span data-ttu-id="dfcc8-3408">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3408">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3409">Invalidar <xref:System.Windows.UIElement.OnStylusLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3409">Override <xref:System.Windows.UIElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3410">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusLeave" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3410">Identifies the <see cref="E:System.Windows.UIElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3411">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3411">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3412">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3412">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3413">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3413">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3414">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3414">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3415">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3415">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3416">Se produce cuando el lápiz se mueve sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3416">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="dfcc8-3417">El lápiz debe moverse mientras se encuentra sobre el digitalizador para que se genere este evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3417">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="dfcc8-3418">De lo contrario, se provoca el evento <see cref="E:System.Windows.UIElement.StylusInAirMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3418">Otherwise, <see cref="E:System.Windows.UIElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3419">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3419">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusMove> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3420">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3420">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3421">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3421">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3422">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3422">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3423">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3423">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3424">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3424">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusMoveEvent>|  
|<span data-ttu-id="dfcc8-3425">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3425">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3426">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3426">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3427">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3427">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3428">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3428">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3429">Invalidar <xref:System.Windows.UIElement.OnStylusMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3429">Override <xref:System.Windows.UIElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3430">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3430">Identifies the <see cref="E:System.Windows.UIElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3431">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3431">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3432">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3432">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3433">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3433">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3434">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3434">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3435">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3435">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3436">Se produce cuando el lápiz está demasiado alejado del digitalizador y no se detecta, mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3436">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3437">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusOutOfRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3437">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3438">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusOutOfRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3438">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3439">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3439">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3440">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3440">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3441">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3441">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3442">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3442">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="dfcc8-3443">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3443">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3444">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3444">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3445">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3445">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3446">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3446">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3447">Invalidar <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3447">Override <xref:System.Windows.UIElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3448">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusOutOfRange" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3448">Identifies the <see cref="E:System.Windows.UIElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3449">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3449">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3450">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3450">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3451">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3451">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3452">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3452">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3453">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3453">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusPlugIns">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.StylusPlugIns.StylusPlugInCollection StylusPlugIns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.StylusPlugIns" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StylusPlugIns As StylusPlugInCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ StylusPlugIns { System::Windows::Input::StylusPlugIns::StylusPlugInCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusPlugIns.StylusPlugInCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3454">Obtiene una colección de todos los objetos de complemento (personalización) del lápiz asociados a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3454">Gets a collection of all stylus plug-in (customization) objects associated with this element.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3455">Colección de complementos del lápiz, por ejemplo una colección especializada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3455">The collection of stylus plug-ins, as a specialized collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3456">Un ejemplo de un control que rellena esta colección es <xref:System.Windows.Controls.InkCanvas>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3456">An example of a control that populates this collection is <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="dfcc8-3457"><xref:System.Windows.Controls.InkCanvas> Agrega el <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> como un elemento de recopilación, lo que permite el <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> para interactuar con la entrada de lápiz y genera una representación única en respuesta a eventos controlados por el lápiz.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3457"><xref:System.Windows.Controls.InkCanvas> adds the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> as a collection item, which enables the <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> to interact with stylus input and produce the unique rendering in response to stylus driven events.</span></span>  
  
 <span data-ttu-id="dfcc8-3458">Para obtener información acerca de cómo crear complementos personalizados que puede recibir e interpretar la entrada de lápiz, consulte [interceptando entrada del lápiz óptico](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3458">For information on creating custom plug-ins that can receive and interpret stylus input, see [Intercepting Input from the Stylus](~/docs/framework/wpf/advanced/intercepting-input-from-the-stylus.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-3459">En el ejemplo siguiente se crea un <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instancia y lo agrega a la <xref:System.Windows.UIElement.StylusPlugIns%2A> colección para una control de control de tinta personalizados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3459">The following example creates a <xref:System.Windows.Input.StylusPlugIns.DynamicRenderer> instance and adds it to the <xref:System.Windows.UIElement.StylusPlugIns%2A> collection for a custom ink handling control.</span></span>  
  
 [!code-csharp[StylusPluginSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusPluginSamples/CSharp/StylusControl.cs#3)]
 [!code-vb[StylusPluginSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusPluginSamples/VisualBasic/StylusControl.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.StylusPlugIns.DynamicRenderer" />
        <altmember cref="T:System.Windows.Controls.InkCanvas" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3460">Se produce cuando un usuario realiza uno de varios movimientos con el lápiz.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3460">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3461">Para obtener más información acerca de los gestos de lápiz, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3461">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="dfcc8-3462">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusSystemGesture> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3462">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3463">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusSystemGesture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3463">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3464">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3464">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3465">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3465">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3466">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3467">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3467">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="dfcc8-3468">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3468">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3469">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3469">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3470">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3470">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3471">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3471">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3472">Invalidar <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3472">Override <xref:System.Windows.UIElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3473">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusSystemGesture" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3473">Identifies the <see cref="E:System.Windows.UIElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3474">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3474">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3475">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3475">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3476">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3476">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3477">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3477">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3478">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3478">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3479">Se produce cuando el usuario aleja el lápiz del digitalizador mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3479">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3480">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.StylusUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3480">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.StylusUp> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3481">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.StylusUp> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3481">Event handlers that are attached to the <xref:System.Windows.UIElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="dfcc8-3482">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3482">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="dfcc8-3483">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3483">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3484">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3485">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3485">Identifier field</span></span>|<xref:System.Windows.UIElement.StylusUpEvent>|  
|<span data-ttu-id="dfcc8-3486">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3486">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3487">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3487">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3488">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3488">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3489">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3489">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3490">Invalidar <xref:System.Windows.UIElement.OnStylusUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3490">Override <xref:System.Windows.UIElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3491">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.StylusUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3491">Identifies the <see cref="E:System.Windows.UIElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3492">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3492">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3493">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3493">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3494">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3494">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3495">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3495">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3496">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3496">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3497">Se produce cuando este elemento obtiene texto de un modo independiente del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3497">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="dfcc8-3498">Este evento ya podría marcarse como controlado por las implementaciones internas de controles compuestos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3498">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="dfcc8-3499">Vea la sección comentarios a continuación.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3499">See Remark below.</span></span>  
  
 <span data-ttu-id="dfcc8-3500">El <xref:System.Windows.UIElement.TextInput> eventos ya podrán estar marcado como controlado por las implementaciones internas de controles compuestos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3500">The <xref:System.Windows.UIElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="dfcc8-3501">Por ejemplo, un <xref:System.Windows.Controls.TextBox> es un control compuesto donde el <xref:System.Windows.UIElement.TextInput> eventos ya está marcado como controlado; en su composición.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3501">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.UIElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="dfcc8-3502">Controles de hacen esto, dado que el control debe interpretar algunos tipos de entrada, como las teclas de flecha, que tienen un significado especial para ese control.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3502">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="dfcc8-3503">Si usa <xref:System.Windows.UIElement.PreviewTextInput> como el evento donde adjunta los controladores para la entrada de texto, puede obtener mejores resultados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3503">If you use <xref:System.Windows.UIElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="dfcc8-3504">Esta técnica, evita la mayoría de los casos donde la composición de controles ya ha marcado este evento como controlado y evita que el controlador de recibir el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3504">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="dfcc8-3505">El <xref:System.Windows.UIElement.TextInput> evento permite que un componente o una aplicación para realizar escuchas de entrada de texto de una manera independiente del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3505">The <xref:System.Windows.UIElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="dfcc8-3506">El teclado es el medio principal de <xref:System.Windows.UIElement.TextInput>, pero también pueden generar la voz, escritura a mano y otros dispositivos de entrada <xref:System.Windows.UIElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3506">The keyboard is the primary means of <xref:System.Windows.UIElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.UIElement.TextInput>.</span></span>  
  
 <span data-ttu-id="dfcc8-3507">Debido a combinaciones de teclas, ya sea en los teclados predeterminados o a través de los editores de métodos de entrada, varios eventos claves podrían provocar un solo evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3507">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="dfcc8-3508">Este evento crea un alias para la <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.UIElement.TextInput> forma parte lista los miembros de la clase cuando <xref:System.Windows.UIElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3508">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.UIElement.TextInput> is part of the class members list when <xref:System.Windows.UIElement> is inherited as a base element.</span></span> <span data-ttu-id="dfcc8-3509">Controladores de eventos que están conectados a la <xref:System.Windows.UIElement.TextInput> eventos están conectados a subyacente <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3509">Event handlers that are attached to the <xref:System.Windows.UIElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3510">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3510">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3511">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3511">Identifier field</span></span>|<xref:System.Windows.UIElement.TextInputEvent>|  
|<span data-ttu-id="dfcc8-3512">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3512">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3513">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3513">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3514">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3514">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="dfcc8-3515">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3515">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3516">Invalidar <xref:System.Windows.UIElement.OnTextInput%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3516">Override <xref:System.Windows.UIElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3517">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.TextInput" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3517">Identifies the <see cref="E:System.Windows.UIElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3518">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3518">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="dfcc8-3519">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3519">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="dfcc8-3520">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3520">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="dfcc8-3521">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3521">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="dfcc8-3522">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3522">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3523">Se produce cuando un dedo toca la pantalla mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3523">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3524">De forma predeterminada, el <xref:System.Windows.UIElement.PreviewTouchDown> y <xref:System.Windows.UIElement.TouchDown> eventos no se producen hasta que un dedo toca la pantalla y se mueve.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3524">By default, the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="dfcc8-3525">Si se presiona un dedo en la pantalla y manteniendo sin moverlo hace que la acción de presionar y mantener el comportamiento de un <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3525">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="dfcc8-3526">El comportamiento de presionar y mantener presionado es equivalente a un clic del mouse.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3526">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="dfcc8-3527">Para hacer que el <xref:System.Windows.UIElement.PreviewTouchDown> y <xref:System.Windows.UIElement.TouchDown> eventos que se produzca cuando un dedo toca la pantalla, establezca la <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> propiedad adjunta `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3527">To cause the <xref:System.Windows.UIElement.PreviewTouchDown> and <xref:System.Windows.UIElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3528">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3528">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3529">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3529">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchDownEvent>|  
|<span data-ttu-id="dfcc8-3530">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3530">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3531">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3531">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3532">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3532">Delegate</span></span>|<span data-ttu-id="dfcc8-3533"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3533"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3534">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3534">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3535">Invalidar <xref:System.Windows.UIElement.OnTouchDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3535">Override <xref:System.Windows.UIElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3536">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.TouchDown" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3536">Identifies the <see cref="E:System.Windows.UIElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3537">Se produce cuando una entrada táctil se mueve afuera adentro de los límites de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3537">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3538">Siempre se genera este evento, si no se captura el dispositivo táctil a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3538">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3539">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3539">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3540">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3540">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchEnterEvent>|  
|<span data-ttu-id="dfcc8-3541">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3541">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3542">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3542">Direct</span></span>|  
|<span data-ttu-id="dfcc8-3543">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3543">Delegate</span></span>|<span data-ttu-id="dfcc8-3544"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3544"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3545">Invalidar <xref:System.Windows.UIElement.OnTouchEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3545">Override <xref:System.Windows.UIElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3546">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.TouchEnter" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3546">Identifies the <see cref="E:System.Windows.UIElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3547">Obtiene todos los dispositivos táctiles que se capturan en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3547">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3548">Enumeración de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que se capturan en este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3548">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3549">Obtiene todos los dispositivos táctiles que se capturan en este elemento o en cualquier elemento secundario de su árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3549">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3550">Enumeración de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que se capturan en este elemento o en cualquier elemento secundario de su árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3550">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3551">Obtiene todos los dispositivos táctiles que están sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3551">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3552">Enumeración de los objetos <see cref="T:System.Windows.Input.TouchDevice" /> que están sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3552">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3553">Obtiene todos los dispositivos táctiles que están sobre este elemento o sobre cualquier elemento secundario de su árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3553">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3554">Enumeración de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que están sobre este elemento o sobre cualquier elemento secundario de su árbol visual.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3554">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3555">Se produce cuando una entrada táctil se mueve de dentro afuera de los límites de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3555">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3556">Siempre se genera este evento, si no se captura el dispositivo táctil a este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3556">This event is always raised, whether or not the touch device is captured to this element.</span></span>  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3557">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3557">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3558">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3558">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchLeaveEvent>|  
|<span data-ttu-id="dfcc8-3559">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3559">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3560">Directa</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3560">Direct</span></span>|  
|<span data-ttu-id="dfcc8-3561">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3561">Delegate</span></span>|<span data-ttu-id="dfcc8-3562"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3562"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3563">Invalidar <xref:System.Windows.UIElement.OnTouchLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3563">Override <xref:System.Windows.UIElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3564">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.TouchLeave" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3564">Identifies the <see cref="E:System.Windows.UIElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3565">Se produce cuando se mueve un dedo en la pantalla mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3565">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3566">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3566">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3567">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3567">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchMoveEvent>|  
|<span data-ttu-id="dfcc8-3568">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3568">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3569">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3569">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3570">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3570">Delegate</span></span>|<span data-ttu-id="dfcc8-3571"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3571"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3572">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3572">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3573">Invalidar <xref:System.Windows.UIElement.OnTouchMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3573">Override <xref:System.Windows.UIElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3574">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.TouchMove" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3574">Identifies the <see cref="E:System.Windows.UIElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3575">Se produce cuando se quita un dedo de la pantalla mientras se encuentra sobre este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3575">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dfcc8-3576">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3576">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3577">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3577">Identifier field</span></span>|<xref:System.Windows.UIElement.TouchUpEvent>|  
|<span data-ttu-id="dfcc8-3578">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3578">Routing strategy</span></span>|<span data-ttu-id="dfcc8-3579">Propagación</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3579">Bubbling</span></span>|  
|<span data-ttu-id="dfcc8-3580">delegado</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3580">Delegate</span></span>|<span data-ttu-id="dfcc8-3581"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3581"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="dfcc8-3582">El evento de tunelización correspondiente es <xref:System.Windows.UIElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3582">The corresponding tunneling event is <xref:System.Windows.UIElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="dfcc8-3583">Invalidar <xref:System.Windows.UIElement.OnTouchUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3583">Override <xref:System.Windows.UIElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3584">Identifica el evento enrutado <see cref="E:System.Windows.UIElement.TouchUp" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3584">Identifies the <see cref="E:System.Windows.UIElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TranslatePoint">
      <MemberSignature Language="C#" Value="public System.Windows.Point TranslatePoint (System.Windows.Point point, System.Windows.UIElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point TranslatePoint(valuetype System.Windows.Point point, class System.Windows.UIElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.TranslatePoint(System.Windows.Point,System.Windows.UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point TranslatePoint(System::Windows::Point point, System::Windows::UIElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="relativeTo" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="dfcc8-3585">Valor de punto en relación con este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3585">The point value, as relative to this element.</span></span></param>
        <param name="relativeTo"><span data-ttu-id="dfcc8-3586">Elemento al que se va a trasladar el punto proporcionado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3586">The element to translate the given point into.</span></span></param>
        <summary><span data-ttu-id="dfcc8-3587">Traslada un punto relativo a este elemento a las coordenadas relativas al elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3587">Translates a point relative to this element to coordinates that are relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="dfcc8-3588">Valor de punto, ahora en relación con el elemento de destino en lugar de este elemento de origen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3588">A point value, now relative to the target element rather than this source element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3589">Pasar `null` para `relativeTo` se permite y se indica que deberían estar coordenadas en relación con el elemento raíz del árbol lógico que pertenece este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3589">Passing `null` for `relativeTo` is permitted, and indicates that coordinates should be relative to the root element in the logical tree that this element belongs to.</span></span>  
  
 <span data-ttu-id="dfcc8-3590">Este método se usa para traducir los valores de punto de prueba de aciertos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3590">This method is used for translating hit test point values.</span></span> <span data-ttu-id="dfcc8-3591">Llamar a este método es principalmente relevante si va a crear un control y necesita procesar las entradas en un nivel inferior.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3591">Calling this method is mainly relevant if you are authoring a control and need to process input at a lower level.</span></span> <span data-ttu-id="dfcc8-3592">Si usas los controles existentes, generalmente puede suponer que controles completados notificará los resultados de la prueba de posicionamiento traducidos correctamente.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3592">If you are using existing controls, you can generally assume that completed controls will report correctly translated hit test results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uid">
      <MemberSignature Language="C#" Value="public string Uid { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Uid" />
      <MemberSignature Language="VB.NET" Value="Public Property Uid As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Uid { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3593">Obtiene o establece el identificador único (para la localización) de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3593">Gets or sets the unique identifier (for localization) for this element.</span></span> <span data-ttu-id="dfcc8-3594">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3594">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3595">Cadena que es el identificador único de este elemento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3595">A string that is the unique identifier for this element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3596">Utilizan los diseñadores para obtener el `x:Uid` valor (vea [información general de localización y globalización de WPF](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) para obtener más información).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3596">Used by designers to get the `x:Uid` value (see [WPF Globalization and Localization Overview](~/docs/framework/wpf/advanced/wpf-globalization-and-localization-overview.md) for more information).</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-3597">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3597">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3598">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3598">Identifier field</span></span>|<xref:System.Windows.UIElement.UidProperty>|  
|<span data-ttu-id="dfcc8-3599">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3599">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-3600">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3600">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UidProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UidProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UidProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.UidProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UidProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UidProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3601">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.Uid" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3601">Identifies the <see cref="P:System.Windows.UIElement.Uid" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateLayout">
      <MemberSignature Language="C#" Value="public void UpdateLayout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateLayout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement.UpdateLayout" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateLayout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateLayout();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dfcc8-3602">Garantiza que todos los elementos secundarios visuales de este elemento se actualizan correctamente para el diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3602">Ensures that all visual child elements of this element are properly updated for layout.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3603">Cuando se llama a este método, los elementos con <xref:System.Windows.UIElement.IsMeasureValid%2A> `false` o <xref:System.Windows.UIElement.IsArrangeValid%2A> `false` llamará específico del elemento <xref:System.Windows.UIElement.MeasureCore%2A> y <xref:System.Windows.UIElement.ArrangeCore%2A> actualizan métodos, lo que obliga al diseño y se validarán todos los tamaños calculados.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3603">When you call this method, elements with <xref:System.Windows.UIElement.IsMeasureValid%2A>`false` or <xref:System.Windows.UIElement.IsArrangeValid%2A>`false` will call element-specific <xref:System.Windows.UIElement.MeasureCore%2A> and <xref:System.Windows.UIElement.ArrangeCore%2A> methods, which forces layout update, and all computed sizes will be validated.</span></span>  
  
 <span data-ttu-id="dfcc8-3604">Llamar a este método no tiene ningún efecto si no se ha modificado el diseño, o si estado organización ni medida de un diseño no es válido.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3604">Calling this method has no effect if layout is unchanged, or if neither arrangement nor measurement state of a layout is invalid.</span></span> <span data-ttu-id="dfcc8-3605">Sin embargo, si el diseño no es válido en cualquier sentido, el <xref:System.Windows.UIElement.UpdateLayout%2A> llamada Rehacer todo el diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3605">However, if layout is invalid in either respect, the <xref:System.Windows.UIElement.UpdateLayout%2A> call will redo the entire layout.</span></span> <span data-ttu-id="dfcc8-3606">Por lo tanto, debe evitar llamar a <xref:System.Windows.UIElement.UpdateLayout%2A> después de cada cambio incremental y secundario en el árbol de elementos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3606">Therefore, you should avoid calling <xref:System.Windows.UIElement.UpdateLayout%2A> after each incremental and minor change in the element tree.</span></span> <span data-ttu-id="dfcc8-3607">El sistema de diseño realizará el diseño de un elemento de forma diferida, mediante un algoritmo que equilibra rendimiento y la divisa, y con una estrategia de ponderación para aplazar los cambios en las raíces hasta que todos los elementos secundarios son válidos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3607">The layout system will perform element layout in a deferred manner, using an algorithm that balances performance and currency, and with a weighting strategy to defer changes to roots until all child elements are valid.</span></span> <span data-ttu-id="dfcc8-3608">Sólo debe llamar a <xref:System.Windows.UIElement.UpdateLayout%2A> si necesita realmente tamaños y posiciones actualizados, y solo después de que esté seguro de que se completan todos los cambios de propiedades que controla y que puede afectar al diseño.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3608">You should only call <xref:System.Windows.UIElement.UpdateLayout%2A> if you absolutely need updated sizes and positions, and only after you are certain that all changes to properties that you control and that may affect layout are completed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3609">Obtiene o establece la visibilidad de este elemento en la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3609">Gets or sets the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] visibility of this element.</span></span>  <span data-ttu-id="dfcc8-3610">Es una propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3610">This is a dependency property.</span></span></summary>
        <value><span data-ttu-id="dfcc8-3611">Valor de la enumeración.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3611">A value of the enumeration.</span></span> <span data-ttu-id="dfcc8-3612">El valor predeterminado es <see cref="F:System.Windows.Visibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3612">The default value is <see cref="F:System.Windows.Visibility.Visible" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dfcc8-3613">Al establecer esta propiedad afecta al valor de <xref:System.Windows.UIElement.IsVisible%2A>, que a su vez pueden producir el <xref:System.Windows.UIElement.IsVisibleChanged> eventos.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3613">Setting this property affects the value of <xref:System.Windows.UIElement.IsVisible%2A>, which in turn may raise the <xref:System.Windows.UIElement.IsVisibleChanged> event.</span></span> <span data-ttu-id="dfcc8-3614">Sin embargo, <xref:System.Windows.UIElement.IsVisible%2A> tiene otros factores que influyen en él, por ejemplo, la configuración de visibilidad de los elementos primarios que lo contienen.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3614">However, <xref:System.Windows.UIElement.IsVisible%2A> has other factors that influence it, for instance the visibility settings of parents that contain it.</span></span>  
  
 <span data-ttu-id="dfcc8-3615">Elementos donde <xref:System.Windows.UIElement.Visibility%2A> no es <xref:System.Windows.Visibility.Visible> no participan en eventos de entrada (o comandos), no influyen en las fases de la medida o la organización del diseño, no están en una secuencia de tabulación y no se incluirán en la prueba de posicionamiento.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3615">Elements where <xref:System.Windows.UIElement.Visibility%2A> is not <xref:System.Windows.Visibility.Visible> do not participate in input events (or commands), do not influence either the Measure or Arrange passes of layout, are not in a tab sequence, and will not be reported in hit testing.</span></span>  
  
 <span data-ttu-id="dfcc8-3616">Cuando hereda <xref:System.Windows.Window> o sus clases derivadas, <xref:System.Windows.Window> vuelve a definir el valor predeterminado de esta propiedad para que sea <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3616">When inherited by <xref:System.Windows.Window> or its derived classes, <xref:System.Windows.Window> redefines the default value of this property to be <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="dfcc8-3617">Esto tiene el efecto de no ejecutar el paso de medición del diseño en creado inicialmente <xref:System.Windows.Window>, y <xref:System.Windows.UIElement.RenderSize%2A> devuelve (0,0).</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3617">This has the effect of not running the Measure pass of layout on an initially created <xref:System.Windows.Window>, and <xref:System.Windows.UIElement.RenderSize%2A> returns (0,0).</span></span> <span data-ttu-id="dfcc8-3618">Para obtener información detallada, vea <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3618">For details, see <xref:System.Windows.Window>.</span></span> <span data-ttu-id="dfcc8-3619"><xref:System.Windows.Controls.Primitives.Popup> También redefine el valor predeterminado para que sea <xref:System.Windows.Visibility.Collapsed>, con un comportamiento resultante similar para <xref:System.Windows.Controls.Primitives.Popup> y sus clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3619"><xref:System.Windows.Controls.Primitives.Popup> also redefines the default value to be <xref:System.Windows.Visibility.Collapsed>, with similar resulting behavior for <xref:System.Windows.Controls.Primitives.Popup> and its derived classes.</span></span>  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dfcc8-3620">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3620">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dfcc8-3621">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3621">Identifier field</span></span>|<xref:System.Windows.UIElement.VisibilityProperty>|  
|<span data-ttu-id="dfcc8-3622">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3622">Metadata properties set to `true`</span></span>|<span data-ttu-id="dfcc8-3623">None</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3623">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dfcc8-3624">En el ejemplo siguiente se implementa un controlador que hace referencia a dos botones con nombre diferentes que están pensadas para formar un par mutuamente excluyente en la interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3624">The following example implements a handler that references two different named buttons that are intended to be a mutually exclusive pair in the user interface.</span></span> <span data-ttu-id="dfcc8-3625">Antes de ejecutar la lógica del programa real asociada con el botón, el propio botón se establece como <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, y el otro botón del par se establece en <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3625">Prior to running the actual program logic associated with the button, the button itself is set to be <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>, and the other button in the pair is set to <xref:System.Windows.Visibility.Visible?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[MediaElement_snip#UIElementVisibility](~/samples/snippets/csharp/VS_Snippets_Wpf/MediaElement_snip/CSharp/PlaybackExample.cs#uielementvisibility)]
 [!code-vb[MediaElement_snip#UIElementVisibility](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MediaElement_snip/VB/PlaybackExample.vb#uielementvisibility)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dfcc8-3626">Identifica la propiedad de dependencia <see cref="P:System.Windows.UIElement.Visibility" />.</span><span class="sxs-lookup"><span data-stu-id="dfcc8-3626">Identifies the <see cref="P:System.Windows.UIElement.Visibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>