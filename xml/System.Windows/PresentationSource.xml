<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PresentationSource.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.PresentationSource">
          <source>Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</source>
          <target state="translated">Proporciona una base abstracta para las clases que presentan contenido de otra tecnología como parte de un escenario de interoperación.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.PresentationSource">
          <source>In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</source>
          <target state="translated">Además, esta clase proporciona métodos estáticos para trabajar con estos orígenes, así como la arquitectura de presentación básica de nivel visual.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PresentationSource">
          <source>to derive from this class.</source>
          <target state="translated">al derivar de esta clase.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PresentationSource">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.#ctor">
          <source>Provides initialization for base class values when called by the constructor of a derived class.</source>
          <target state="translated">Proporciona la inicialización de los valores de clase base cuando lo invoca el constructor de una clase derivada.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSource">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> derived class instance to the list of known presentation sources.</source>
          <target state="translated">Agrega una instancia de clase derivada de <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> a la lista de orígenes de presentación conocidos.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSource">
          <source>This method should be called by derived classes to indicate that they need to be tracked.</source>
          <target state="translated">Este método debe llamarse por las clases derivadas para indicar que necesitan para realizar su seguimiento.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The element to add the handler to.</source>
          <target state="translated">Elemento al que se va a agregar el controlador.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The hander implementation to add.</source>
          <target state="translated">Implementación del controlador que se va a agregar.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Adds a handler for the <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> event to the provided element.</source>
          <target state="translated">Agrega un controlador para el evento <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> al elemento proporcionado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Despite what the syntax block for this event states, there is no legitimate <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> attached property usage.</source>
          <target state="translated">A pesar de los Estados que el bloque de sintaxis de este evento, hay no legítimo <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph> adjunta el uso de la propiedad.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You should not attempt to add handlers in <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, and handlers in code should only be placed on objects that serve as hosts for presentation (<ph id="ph2">&lt;xref:System.Windows.PresentationSource&gt;</ph> ) content.</source>
          <target state="translated">No debe intentar agregar controladores en <ph id="ph1">[!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]</ph>, y solo se deben colocar controladores en el código en objetos que actúan como hosts de presentación (<ph id="ph2">&lt;xref:System.Windows.PresentationSource&gt;</ph> ) contenido.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</source>
          <target state="translated">Tales controladores sólo deben asociarse durante la inicialización del objeto y deben quitarse explícitamente en un método Dispose o la limpieza del objeto equivalente.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">Aunque se trata de un evento enrutado, hay las restricciones especiales que difieren de comportamiento de los eventos enrutados normal, debido al número relativamente pequeño de elementos en un escenario de aplicación típica que debería preocuparse de controlar este evento.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;</ph> methods to add handlers.</source>
          <target state="translated">No se puede utilizar el <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.AddHandler%2A&gt;</ph> métodos para agregar controladores.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You must use <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A&gt;</ph>.</source>
          <target state="translated">Debe usar <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">El <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> y <ph id="ph3">`-=`</ph> sintaxis de controlador de eventos y sintaxis de controlador específico del lenguaje relacionado, no se admiten, porque el propio evento no se expone como público.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Only the <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">Solo el <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> métodos de utilidad para agregar y quitar los controladores directamente son compatibles.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Class handlers are not allowed.</source>
          <target state="translated">No se permiten los controladores de clases.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Specifically, you cannot call <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</source>
          <target state="translated">En concreto, no puede llamar a <ph id="ph1">&lt;xref:System.Windows.EventManager.RegisterClassHandler%2A&gt;</ph> en este evento en un constructor de clase que aunque un campo de identificador existe para SourceChanged, el identificador no es público.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</source>
          <target state="translated">Todos los controladores registrados recibirán el evento SourceChanged incluso si uno de los controladores intente marcar los argumentos como controlado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>to call or implement this method.</source>
          <target state="translated">para llamar a o implementar este método.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.ClearContentRenderedListeners">
          <source>Sets the list of listeners for the <ph id="ph1">&lt;see cref="E:System.Windows.PresentationSource.ContentRendered" /&gt;</ph> event to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Establece la lista de agentes de escucha para el evento <ph id="ph1">&lt;see cref="E:System.Windows.PresentationSource.ContentRendered" /&gt;</ph> en <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>Gets the visual target for the visuals being presented in the source.</source>
          <target state="translated">Obtiene el destino visual para los objetos visuales que se presentan en el origen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>A visual target (instance of a <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> derived class).</source>
          <target state="translated">Un destino visual (instancia de una clase derivada de <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> ).</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>The return of this property relies on an implementation of <ph id="ph1">&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;</ph>.</source>
          <target state="translated">El valor devuelto de esta propiedad se basa en una implementación de <ph id="ph1">&lt;xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CompositionTarget">
          <source>Derived classes can choose to shadow this property to offer a type-specific value.</source>
          <target state="translated">Las clases derivadas pueden optar por ocultar esta propiedad para proporcionar un valor específico del tipo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="E:System.Windows.PresentationSource.ContentRendered">
          <source>Occurs when content is rendered and ready for user interaction.</source>
          <target state="translated">Se produce cuando se representa el contenido y está listo para la interacción del usuario.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>Returns a list of sources.</source>
          <target state="translated">Devuelve una lista de orígenes.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>A list of weak references.</source>
          <target state="translated">Lista de referencias débiles.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;</ph>.</source>
          <target state="translated">La lista devuelta admite un enumerador sobre una copia segura para subprocesos de solo lectura de la lista de orígenes a medida que agregan con <ph id="ph1">&lt;xref:System.Windows.PresentationSource.AddSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>The enumerator skips any dead weak references in the list.</source>
          <target state="translated">El enumerador omite cualquier referencia débil muerta en la lista.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>to get sources.</source>
          <target state="translated">Para obtener los orígenes.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.CurrentSources">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> to find the source for.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> cuyo origen se va a buscar.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>Returns the source in which a provided <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> is presented.</source>
          <target state="translated">Devuelve el origen en el que se presenta el objeto <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> in which the dependency object is being presented.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> en el que se presenta el objeto de dependencia.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>to call or implement this method.</source>
          <target state="translated">para llamar a o implementar este método.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> to find the source for.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> cuyo origen se va a buscar.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>Returns the source in which a provided <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> is presented.</source>
          <target state="translated">Devuelve el origen en el que se presenta el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> in which the visual is being presented, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="visual" /&gt;</ph> is disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> en que se presenta el elemento visual, o <ph id="ph2">&lt;see langword="null" /&gt;</ph> si se elimina <ph id="ph3">&lt;paramref name="visual" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="visual" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>to call or implement this method.</source>
          <target state="translated">para llamar a o implementar este método.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>When overridden in a derived class, returns a visual target for the given source.</source>
          <target state="translated">Cuando se invalida en una clase derivada, devuelve un destino visual para el origen dado.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> that is target for rendering the visual.</source>
          <target state="translated">Devuelve un objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> que es el destino para representar el objeto visual.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Override this method to declare the value that the <ph id="ph1">&lt;see cref="P:System.Windows.PresentationSource.CompositionTarget" /&gt;</ph> read-only property will return.</source>
          <target state="translated">Invalide este método para declarar el valor que el <ph id="ph1">&lt;see cref="P:System.Windows.PresentationSource.CompositionTarget" /&gt;</ph> devolverá la propiedad de solo lectura.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.GetCompositionTargetCore">
          <source>Your override should return type-specific instances of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> derived class type that is used for your interoperation scenario.</source>
          <target state="translated">La invalidación debe devolver instancias específicas de tipo de la <ph id="ph1">&lt;see cref="T:System.Windows.Media.CompositionTarget" /&gt;</ph> deriva el tipo de clase que se usa para el escenario de interoperación.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source>When overridden in a derived class, gets a value that declares whether the object is disposed.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene un valor que declara si el objeto se ha eliminado.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is disposed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, si el objeto se desecha; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.IsDisposed">
          <source>Derived classes are expected to implement <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> or provide equivalent behavior.</source>
          <target state="translated">Se esperan que las clases derivadas implementan <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> o proporcionar un comportamiento equivalente.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSource">
          <source>Removes a <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> derived class instance from the list of known presentation sources.</source>
          <target state="translated">Quita una instancia de clase derivada de <ph id="ph1">&lt;see cref="T:System.Windows.PresentationSource" /&gt;</ph> de la lista de orígenes de presentación conocidos.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The element to remove the handler from.</source>
          <target state="translated">Elemento del que se va a quitar el controlador.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The handler implementation to remove.</source>
          <target state="translated">Implementación de controlador que se va a quitar.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Removes a handler for the <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> event from the provided element.</source>
          <target state="translated">Quita un controlador para el evento <ph id="ph1">&lt;see langword="SourceChanged" /&gt;</ph> del elemento proporcionado.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</source>
          <target state="translated">Aunque se trata de un evento enrutado, hay las restricciones especiales que difieren de comportamiento de los eventos enrutados normal, debido al número relativamente pequeño de elementos en un escenario de aplicación típica que debería preocuparse de controlar este evento.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You cannot use the <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;</ph> methods to remove handlers.</source>
          <target state="translated">No se puede utilizar el <ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph> o <ph id="ph2">&lt;xref:System.Windows.ContentElement&gt;</ph> <ph id="ph3">&lt;xref:System.Windows.UIElement.RemoveHandler%2A&gt;</ph> métodos para quitar controladores.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>You must use <ph id="ph1">&lt;xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A&gt;</ph>.</source>
          <target state="translated">Debe usar <ph id="ph1">&lt;xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>The <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> and <ph id="ph3">`-=`</ph> event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</source>
          <target state="translated">El <ph id="ph1">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)]</ph> <ph id="ph2">`+=`</ph> y <ph id="ph3">`-=`</ph> sintaxis de controlador de eventos y otras sintaxis de controlador específico del lenguaje, no se admiten, porque el propio evento no se expone como público.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)">
          <source>Only the <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> utility methods for adding and removing the handlers directly are supported.</source>
          <target state="translated">Solo el <ph id="ph1">&lt;xref:System.Windows.PresentationSource&gt;</ph> métodos de utilidad para agregar y quitar los controladores directamente son compatibles.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The old root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">Anterior objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> raíz.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The new root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph>.</source>
          <target state="translated">Nuevo objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> raíz.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Provides notification that the root <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> has changed.</source>
          <target state="translated">Proporciona notificación de que el objeto <ph id="ph1">&lt;see cref="T:System.Windows.Media.Visual" /&gt;</ph> raíz ha cambiado.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Derived classes should call this method to indicate that their root <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> has changed.</source>
          <target state="translated">Las clases derivadas deben llamar a este método para indicar que su raíz <ph id="ph1">&lt;xref:System.Windows.Media.Visual&gt;</ph> ha cambiado.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> derived classes.</source>
          <target state="translated">Llamar a este método hace que dos eventos de duración de objeto que se genera en los objetos visuales raíz especificados, si y solo si esos objetos visuales de raíz son <ph id="ph1">&lt;xref:System.Windows.FrameworkElement&gt;</ph> las clases derivadas.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The old root visual will raise the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">El objeto visual raíz anterior, se producirá la <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Unloaded&gt;</ph> eventos y procesará su árbol de elementos hacia abajo, difundir este evento a cada elemento secundario.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)">
          <source>The new root visual will raise the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event, and will process its tree of elements downward, broadcasting this event to each child element.</source>
          <target state="translated">El objeto visual raíz, se producirá la <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> eventos y procesará su árbol de elementos hacia abajo, difundir este evento a cada elemento secundario.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>When overridden in a derived class, gets or sets the root visual being presented in the source.</source>
          <target state="translated">Cuando se invalida en una clase derivada, obtiene o establece el objeto visual raíz que se presenta en el origen.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>The root visual.</source>
          <target state="translated">Raíz visual.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>to override the property (<ph id="ph1">&lt;see langword="InheritanceDemand" /&gt;</ph>).</source>
          <target state="translated">para invalidar la propiedad (<ph id="ph1">&lt;see langword="InheritanceDemand" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PresentationSource.RootVisual">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</source>
          <target state="translated">Enumeración asociada: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>