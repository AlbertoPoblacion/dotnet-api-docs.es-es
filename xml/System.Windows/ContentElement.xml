<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ead77d5c5a1444bb78a389f6dd17f78c4fdbd08" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="43336-101">Proporciona una clase base de nivel principal de WPF para los elementos de contenido.</span>
      <span class="sxs-lookup">
        <span data-stu-id="43336-101">Provides a WPF core-level base class for content elements.</span>
      </span>
      <span data-ttu-id="43336-102">Los elementos de contenido están diseñados para la presentación del estilo de flujo, mediante un modelo de diseño orientado a marcado intuitivo y un modelo de objetos deliberadamente simple.</span>
      <span class="sxs-lookup">
        <span data-stu-id="43336-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-103"><xref:System.Windows.ContentElement> define las características de contenido comunes siguientes:</span><span class="sxs-lookup"><span data-stu-id="43336-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="43336-104">Entrada: Todas las <xref:System.Windows.ContentElement> las clases derivadas proporcionan compatibilidad para la captura de entrada básica del teclado, mouse, operaciones de arrastrar y colocar, controles de lápiz y aceleradores.</span><span class="sxs-lookup"><span data-stu-id="43336-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="43336-105">Foco: Todas <xref:System.Windows.ContentElement> clases derivadas son potencialmente puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="43336-106">(Sin embargo, el estado puede recibir el foco predeterminado para la <xref:System.Windows.ContentElement> clase base es `false`.</span><span class="sxs-lookup"><span data-stu-id="43336-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="43336-107">Para obtener más información sobre cómo tomar una <xref:System.Windows.ContentElement> puede recibir el foco, vea <xref:System.Windows.ContentElement.Focusable%2A>.) Además, esta clase contiene [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] que puede usar para recorrer el foco por los elementos relacionados.</span><span class="sxs-lookup"><span data-stu-id="43336-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="43336-108">Eventos: <xref:System.Windows.ContentElement> incluye eventos que están relacionadas con entrada y el foco; también incluye eventos para cambios de estado.</span><span class="sxs-lookup"><span data-stu-id="43336-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="43336-109">En muchos casos, la <xref:System.Windows.ContentElement> eventos son eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="43336-110">En algunos casos, los eventos enrutados tienen túneles y de propagación estrategias de enrutamiento, genera como eventos independientes en respuesta al mismo estado o condición.</span><span class="sxs-lookup"><span data-stu-id="43336-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="43336-111">Además, <xref:System.Windows.ContentElement> define [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] que puede generar dirige los eventos y que puede agregar o quitar controladores de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="43336-112"><xref:System.Windows.ContentElement> comparte muchas común [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] con <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="43336-113">Estos comunes [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] no proceden de una herencia de clases compartidas.</span><span class="sxs-lookup"><span data-stu-id="43336-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="43336-114">Pero comparten una denominación común, un comportamiento similar y una implementación interna similar de [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] en cada clase.</span><span class="sxs-lookup"><span data-stu-id="43336-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="43336-115">La similitud es porque <xref:System.Windows.ContentElement> y <xref:System.Windows.UIElement> son cada clases que constituyen un elemento base, aunque cada uno tiene distintas intenciones para su comportamiento del modelo de objetos de marcado.</span><span class="sxs-lookup"><span data-stu-id="43336-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="43336-116">En concreto, <xref:System.Windows.UIElement> desciende del <xref:System.Windows.Media.Visual>, que proporciona compatibilidad con los gráficos de nivel inferior para la representación un <xref:System.Windows.ContentElement> a una región rectangular dentro de una ventana compuesta, mientras que <xref:System.Windows.ContentElement> aplaza la representación para que los conceptos más comunes a los escenarios de documento, como flujo y ajuste, se admiten más fácilmente.</span><span class="sxs-lookup"><span data-stu-id="43336-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="43336-117">Estos dos relacionados con las clases también implementan las interfaces comunes <xref:System.Windows.IInputElement> y <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="43336-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="43336-118">La <see cref="T:System.Windows.ContentElement" /> clase todavía no define todos los aspectos de un elemento de contenido completo para presentación del estilo de flujo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="43336-118">The <see cref="T:System.Windows.ContentElement" /> class does not yet define all aspects of a complete content element for flow-style presentation.</span>
        </span>
        <span data-ttu-id="43336-119">
          <see cref="T:System.Windows.FrameworkContentElement" /> es una clase derivada inmediatamente de <see cref="T:System.Windows.ContentElement" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="43336-119">
            <see cref="T:System.Windows.FrameworkContentElement" /> is an immediately derived class of <see cref="T:System.Windows.ContentElement" />.</span>
        </span>
        <span data-ttu-id="43336-120">
          <see cref="T:System.Windows.FrameworkContentElement" /> incluye un conjunto más completo de miembros adicionales que admite el procesamiento de un <see cref="T:System.Windows.FrameworkContentElement" /> dentro de un host de contenido y usa el sistema de diseño de nivel de marco WPF.</span>
        <span class="sxs-lookup">
          <span data-stu-id="43336-120">
            <see cref="T:System.Windows.FrameworkContentElement" /> includes a more complete set of additional members that support rendering a <see cref="T:System.Windows.FrameworkContentElement" /> within a content host and using the WPF framework-level layout system.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-121">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-121">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43336-122">Agrega un controlador de eventos enrutados para un evento enrutado especificado. Para ello, agrega el controlador a la colección de controladores en el elemento actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-122">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="43336-123">Identificador del evento enrutado que se va a controlar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-123">An identifier for the routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43336-124">Referencia a la implementación del controlador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-124">A reference to the handler implementation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-125">Agrega un controlador de eventos enrutados para un evento enrutado especificado. Para ello, agrega el controlador a la colección de controladores en el elemento actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-125">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-126">Puede agregar el mismo controlador para el mismo evento varias veces sin que se produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="43336-126">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="43336-127">Sin embargo, realmente se invoca varias veces cuando se controla el evento al controlador.</span><span class="sxs-lookup"><span data-stu-id="43336-127">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="43336-128">Por lo tanto, tenga en cuenta cómo este comportamiento podría tener efectos secundarios que deben tenerse en cuenta en la implementación del controlador.</span><span class="sxs-lookup"><span data-stu-id="43336-128">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="43336-129">Este método se utiliza normalmente para proporcionar la implementación del descriptor de acceso "Agregar" para el [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] patrón de acceso de eventos de un evento enrutado personalizado.</span><span class="sxs-lookup"><span data-stu-id="43336-129">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="43336-130">Identificador del evento enrutado que se va a controlar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-130">An identifier for the.routed event to be handled.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43336-131">Referencia a la implementación del controlador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-131">A reference to the handler implementation.</span>
          </span>
        </param>
        <param name="handledEventsToo">
          <span data-ttu-id="43336-132">
            <see langword="true" /> para registrar el controlador invocado, aunque el evento enrutado esté marcado como controlado en los datos de evento; <see langword="false" /> para registrar el controlador con la condición predeterminada de que no se invocará si el evento enrutado ya está marcado como controlado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-132">
              <see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span>
          </span>
          <span data-ttu-id="43336-133">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-133">The default is <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-134">No solicite de manera rutinaria volver a controlar un evento enrutado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-134">Do not routinely ask to rehandle a routed event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-135">Agrega un controlador de eventos enrutados para un evento enrutado especificado. Para ello, agrega el controlador a la colección de controladores en el elemento actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-135">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span>
          </span>
          <span data-ttu-id="43336-136">Especifique <paramref name="handledEventsToo" /> como <see langword="true" /> para que el controlador proporcionado se invoque para eventos enrutados que estén marcados como controlados por otro elemento en la ruta del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-136">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-137">Procesamiento de eventos de entrada de bajo nivel de una manera práctica es una tarea compleja.</span><span class="sxs-lookup"><span data-stu-id="43336-137">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="43336-138">Muchos controles implementan el comportamiento en un determinado evento está marcado como controlado y se reemplaza por otro evento más intuitivo.</span><span class="sxs-lookup"><span data-stu-id="43336-138">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="43336-139">Por lo general, un control solo marcar un evento de entrada de plataforma como controlado si hay alguna intención de diseño para hacerlo.</span><span class="sxs-lookup"><span data-stu-id="43336-139">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="43336-140">En determinados escenarios, esas intenciones de diseño podrían no ser lo que requiere el control concreto del evento de entrada.</span><span class="sxs-lookup"><span data-stu-id="43336-140">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="43336-141">Para estos escenarios es que registrar los controladores `handledEventsToo` como `true` es adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-141">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="43336-142">Pero no debe hacerlo periódicamente.</span><span class="sxs-lookup"><span data-stu-id="43336-142">But you should not do this routinely.</span></span> <span data-ttu-id="43336-143">Invocar los controladores en respuesta a todos los eventos aunque controlen se complican su propia lógica de procesamiento de eventos de aplicación.</span><span class="sxs-lookup"><span data-stu-id="43336-143">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="43336-144">Puede ver una disminución del rendimiento si la lógica de controlador es sustancial.</span><span class="sxs-lookup"><span data-stu-id="43336-144">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="43336-145">Debe reservar el uso de adjuntar controladores de eventos ya controlados para las situaciones donde ya ha detectado durante el proceso de desarrollo que ciertos controles están controlando eventos que desea administrar con lógica de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="43336-145">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="43336-146">Otra técnica para evitar el uso de la clase de comportamiento de ciertas combinaciones de control de eventos de control consiste en utilizar alternativa de vista previa de ese evento.</span><span class="sxs-lookup"><span data-stu-id="43336-146">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="43336-147">Por ejemplo, si <xref:System.Windows.ContentElement.MouseLeftButtonDown> está marcado como controlado por el control de clases, es posible que pueda agregar controladores para <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="43336-147">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="43336-148">Puede agregar el mismo controlador para el mismo evento varias veces sin que se produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="43336-148">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="43336-149">Sin embargo, realmente se invoca varias veces cuando se controla el evento al controlador.</span><span class="sxs-lookup"><span data-stu-id="43336-149">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="43336-150">Por lo tanto, tenga en cuenta cómo este comportamiento podría tener efectos secundarios que deben tenerse en cuenta en la implementación del controlador.</span><span class="sxs-lookup"><span data-stu-id="43336-150">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="43336-151">Este método se utiliza normalmente para proporcionar la implementación del descriptor de acceso "Agregar" para el [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] patrón de acceso de eventos de un evento enrutado personalizado.</span><span class="sxs-lookup"><span data-stu-id="43336-151">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43336-152">En el ejemplo siguiente se implementa un controlador que se invoca en el <xref:System.Windows.FrameworkElement.Initialized> eventos en una página que asocia un controlador definido a uno de los elementos con nombre en la página mediante `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-152">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="43336-153">Este controlador se invocaría incluso si los datos del evento compartidos como administrados antes de alcanzar el elemento de control de la ruta de marcado de otro elemento en la ruta.</span><span class="sxs-lookup"><span data-stu-id="43336-153">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">
          <span data-ttu-id="43336-154">Ruta de evento a la que se agregan los controladores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-154">The event route that handlers are added to.</span>
          </span>
        </param>
        <param name="e">
          <span data-ttu-id="43336-155">Datos de evento que se usan para agregar los controladores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-155">The event data that is used to add the handlers.</span>
          </span>
          <span data-ttu-id="43336-156">Este método utiliza la propiedad <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> de los argumentos para crear los controladores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-156">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-157">Agregue controladores al objeto <see cref="T:System.Windows.EventRoute" /> especificado para la colección de controladores de eventos <see cref="T:System.Windows.ContentElement" /> actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-157">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-158">Utilice este método para los elementos host de contenido (sin tener en cuenta si implementan <xref:System.Windows.IContentHost>) con el fin de agregar controladores para los elementos secundarios de host de contenido en el host <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="43336-158">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-159">Obtiene o establece un valor que indica si este elemento se puede usar como destino de una operación de arrastrar y colocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-159">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-160">Es <see langword="true" /> si este elemento se puede usar como destino de una operación de arrastrar y colocar; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-160">
              <see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-161">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-161">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-162">Operaciones de arrastrar y colocar no están habilitadas de forma predeterminada y debe habilitarse deliberadamente estableciendo <xref:System.Windows.ContentElement.AllowDrop%2A> a `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-162">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="43336-163">Más allá de esta configuración básica, el comportamiento de arrastrar y colocar es totalmente específico de la implementación y no está definido por <xref:System.Windows.ContentElement> o cualquier otra clase de elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-163">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="43336-164">Determinados controles como, por ejemplo, <xref:System.Windows.Controls.RichTextBox>, tiene un comportamiento predeterminado, pero no <xref:System.Windows.ContentElement> las clases derivadas tengan este tipo de comportamiento.</span><span class="sxs-lookup"><span data-stu-id="43336-164">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="43336-165">Para obtener más información acerca de arrastrar y colocar, vea [de arrastrar y colocar, información general sobre](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-165">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="43336-166"><xref:System.Windows.FrameworkContentElement> invalida los metadatos de esta propiedad de dependencia en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-166"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="43336-167">En concreto, <xref:System.Windows.FrameworkContentElement> indica que esta propiedad permite herencia del valor de propiedad (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> es `true` en los metadatos).</span><span class="sxs-lookup"><span data-stu-id="43336-167">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="43336-168">Herencia de valores de propiedad en este contexto significa que si hay elementos secundarios con ningún otro valor para <xref:System.Windows.ContentElement.AllowDrop%2A> asignado a través de valores o estilos, el valor del elemento primario más cercano que tenga asignado este valor (de nuevo, ya sea en estilos, valores predeterminados o un valor local), locales, a continuación, el valor de ese elemento primario se asigna a todos los elementos secundarios no asignados por el sistema de propiedades.</span><span class="sxs-lookup"><span data-stu-id="43336-168">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="43336-169">Esto significa que puede especificar si desea permitir que las operaciones de colocar en el elemento raíz y, a continuación, propagar el valor a todos los <xref:System.Windows.FrameworkContentElement> elementos secundarios que no lo han específicamente asignado un valor de `false`.</span><span class="sxs-lookup"><span data-stu-id="43336-169">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-170">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-171">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-171">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="43336-172">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-173">None</span><span class="sxs-lookup"><span data-stu-id="43336-173">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="43336-174">El siguiente ejemplo se establece <xref:System.Windows.ContentElement.AllowDrop%2A> en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="43336-174">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-175">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.AllowDrop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-175">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43336-176">Aplica una animación a una propiedad de dependencia especificada en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-176">Applies an animation to a specified dependency property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="43336-177">Identificador de la propiedad que se animará.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-177">The identifier for the property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="43336-178">Reloj de animación que controla y declara la animación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-178">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-179">Aplica una animación a una propiedad de dependencia especificada en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-179">Applies an animation to a specified dependency property on this element.</span>
          </span>
          <span data-ttu-id="43336-180">Se detiene cualquier animación existente y se reemplaza con la nueva animación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-180">Any existing animations are stopped and replaced with the new animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-181">Para quitar una animación de una propiedad, especifique el identificador de esa propiedad como `dp` y especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="43336-181">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="43336-182">Esto quita la animación y la propiedad animada se establece en su valor base.</span><span class="sxs-lookup"><span data-stu-id="43336-182">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="43336-183">Sin embargo, no se detiene el reloj de animación asociada originalmente.</span><span class="sxs-lookup"><span data-stu-id="43336-183">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="43336-184">Cualquier otra animación asignada a ese reloj continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="43336-184">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="43336-185">Propiedad que se va a animar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-185">The property to animate.</span>
          </span>
        </param>
        <param name="clock">
          <span data-ttu-id="43336-186">Reloj de animación que controla y declara la animación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-186">The animation clock that controls and declares the animation.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="43336-187">Valor de la enumeración.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-187">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="43336-188">El valor predeterminado es <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, que detendrá cualquier animación existente y la reemplazará por una nueva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-188">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-189">Aplica una animación a una propiedad de dependencia especificada en este elemento, con capacidad para especificar lo que ocurre si la propiedad ya tiene una animación en ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-189">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-190">Para quitar una animación de una propiedad, especifique el identificador de esa propiedad como `dp` y especifique `clock` como `null`.</span><span class="sxs-lookup"><span data-stu-id="43336-190">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="43336-191">Esto quita la animación y la propiedad animada se establece en su valor base.</span><span class="sxs-lookup"><span data-stu-id="43336-191">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="43336-192">Sin embargo, no se detiene el reloj de animación asociada originalmente.</span><span class="sxs-lookup"><span data-stu-id="43336-192">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="43336-193">Cualquier otra animación asignada a ese reloj continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="43336-193">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-194">Obtiene un valor que indica si se captura al menos una entrada táctil en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-194">Gets a value that indicates whether at least one touch is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-195">Es <see langword="true" /> si se captura al menos una entrada táctil en este elemento; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-195">
              <see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-196">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-196">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-197">Obtiene un valor que indica si se captura al menos una entrada táctil en este elemento o en cualquier elemento secundario de su árbol visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-197">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-198">Es <see langword="true" /> si se captura al menos una entrada táctil en este elemento o en cualquier elemento secundario de su árbol visual; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-198">
              <see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-199">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-199">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-200">Obtiene un valor que indica si se presiona al menos una entrada táctil sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-200">Gets a value that indicates whether at least one touch is pressed over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-201">Es <see langword="true" /> si se presiona al menos una entrada táctil sobre este elemento; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-201">
              <see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-202">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-202">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-203">Obtiene un valor que indica si se presiona al menos una entrada táctil sobre este elemento o sobre cualquier elemento secundario de su árbol visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-203">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-204">Es <see langword="true" /> si se presiona al menos una entrada táctil sobre este elemento o sobre cualquier elemento secundario de su árbol visual; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-204">
              <see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-205">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-205">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="43336-206">Inicia una animación para una propiedad animada especificada en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-206">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="43336-207">Propiedad que se va a animar, que se especifica como un identificador de propiedad de dependencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-207">The property to animate, which is specified as a dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="43336-208">Escala de tiempo de la animación que se va a iniciar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-208">The timeline of the animation to start.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-209">Inicia una animación para una propiedad animada especificada en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-209">Starts an animation for a specified animated property on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-210">Al comprobar si una propiedad está animada, tenga en cuenta que la animación se iniciará y se considera como animada cuando se represente el primer fotograma más allá del punto de partida no animadas.</span><span class="sxs-lookup"><span data-stu-id="43336-210">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="43336-211">Si el <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` es `null`, a continuación, se quitan las animaciones actuales y se mantiene el valor actual de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="43336-211">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="43336-212">Si toda la `animation` valor es `null`, todas las animaciones se quitan de la propiedad y el valor de propiedad se revierte a su valor base.</span><span class="sxs-lookup"><span data-stu-id="43336-212">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="43336-213">Sin embargo, la escala de tiempo de animación asociada originalmente no se detiene.</span><span class="sxs-lookup"><span data-stu-id="43336-213">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="43336-214">Cualquier otra animación asignada a esa escala de tiempo continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="43336-214">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="43336-215">Propiedad que se va a animar, que se especifica como el identificador de propiedad de dependencia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-215">The property to animate, which is specified as the dependency property identifier.</span>
          </span>
        </param>
        <param name="animation">
          <span data-ttu-id="43336-216">Escala de tiempo de la animación que va a aplicarse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-216">The timeline of the animation to be applied.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="43336-217">Valor de la enumeración que especifica la interacción de la nueva animación con cualquier animación actual (en ejecución) que ya afecte el valor de propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-217">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-218">Inicia una animación concreta para una propiedad animada especificada en este elemento, con la opción de especificar lo que ocurre si la propiedad ya tiene una animación en ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-218">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-219">Al comprobar si una propiedad está animada, tenga en cuenta que la animación se iniciará y se considera como animada cuando se represente el primer fotograma más allá del punto de partida no animadas.</span><span class="sxs-lookup"><span data-stu-id="43336-219">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="43336-220">Si el <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> para `animation` es `null`, a continuación, se quitan las animaciones actuales y se mantiene el valor actual de la propiedad.</span><span class="sxs-lookup"><span data-stu-id="43336-220">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="43336-221">Si toda la `animation` valor es `null`, todas las animaciones se quitan de la propiedad y el valor de propiedad se revierte a su valor base.</span><span class="sxs-lookup"><span data-stu-id="43336-221">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="43336-222">Sin embargo, la escala de tiempo de animación asociada originalmente no se detiene.</span><span class="sxs-lookup"><span data-stu-id="43336-222">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="43336-223">Cualquier otra animación asignada a esa escala de tiempo continuarán ejecutándose.</span><span class="sxs-lookup"><span data-stu-id="43336-223">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-224">Intenta forzar la captura del mouse en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-224">Attempts to force capture of the mouse to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-225">Es <see langword="true" /> si se captura el mouse correctamente; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-225">
              <see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-226">Para ser capturado, un elemento debe estar habilitado.</span><span class="sxs-lookup"><span data-stu-id="43336-226">To be captured, an element must be enabled.</span></span> <span data-ttu-id="43336-227">Compruebe si <xref:System.Windows.ContentElement.IsEnabled%2A> es `true` antes de llamar a <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-227">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="43336-228">Si una llamada a <xref:System.Windows.ContentElement.CaptureMouse%2A> devuelve `true`, a continuación, <xref:System.Windows.ContentElement.IsMouseCaptured%2A> también es `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-228">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="43336-229">Si una llamada a <xref:System.Windows.ContentElement.CaptureMouse%2A> devuelve `true`, la <xref:System.Windows.ContentElement.GotMouseCapture> y <xref:System.Windows.ContentElement.IsMouseCapturedChanged> se generan eventos, con <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> en el evento informa de los datos como el elemento donde el <xref:System.Windows.ContentElement.CaptureMouse%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="43336-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="43336-230">Si se fuerza la captura, que podría interferir con las capturas existentes, especialmente con las capturas que se relacionan con arrastrar y colocar con el mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-230">If you force capture, you might interfere with existing captures—especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="43336-231">Para borrar la captura del mouse de todos los elementos, llame a <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> con el `element` parámetro proporcionado como `null`.</span><span class="sxs-lookup"><span data-stu-id="43336-231">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43336-232">En el ejemplo siguiente se captura el mouse o libera la captura, en función de si el elemento ya ha capturado el mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-232">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="43336-233">Tenga en cuenta que este ejemplo convierte el elemento de destino de captura probable para la <xref:System.Windows.IInputElement> de interfaz y, por tanto, una llamada a inicialmente el <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="43336-233">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="43336-234">Convertir a <xref:System.Windows.IInputElement> es una técnica que resulta útil si no está seguro de si el elemento que desea que captura el mouse es un <xref:System.Windows.UIElement> o <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-234">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="43336-235">La conversión de tipos de interfaz y el método de interfaz llamar, a continuación, llamadas a la implementación de CaptureMouse específica del tipo adecuada internamente sin necesidad de una versión de prueba que se convierte en una <xref:System.Windows.UIElement> o <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-235">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="43336-236">Esta misma técnica de conversión funciona con otros miembros que <xref:System.Windows.IInputElement> define, por ejemplo muchos de los eventos relacionados con la entrada y otros métodos relacionados con la entrada.</span><span class="sxs-lookup"><span data-stu-id="43336-236">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-237">Intenta forzar la captura del lápiz óptico en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-237">Attempts to force capture of the stylus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-238">
            <see langword="true" /> si el lápiz se captura correctamente; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-238">
              <see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-239">La implementación predeterminada basada en el dispositivo de lápiz predeterminado subyacente siempre devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-239">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="43336-240">Sin embargo, si está ampliando los dispositivos de entrada que proporcionan la implementación de dispositivo para el sistema de entrada, es posible crear un sistema con una implementación de dispositivo de lápiz alternativo que podría devolver resultados diferentes.</span><span class="sxs-lookup"><span data-stu-id="43336-240">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="43336-241">Cuando un elemento captura el lápiz, recibe la entrada de lápiz incluso si el lápiz está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="43336-241">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="43336-242">Normalmente se captura el lápiz sólo durante las operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43336-242">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="43336-243">Llamar a este método llama a una subyacente estático <xref:System.Windows.Input.Stylus> método <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-243">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="43336-244">El comportamiento de captura real se implementa mediante la implementación de dispositivo de lápiz óptico activo.</span><span class="sxs-lookup"><span data-stu-id="43336-244">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="43336-245">Para ser capturado, un elemento debe estar habilitado.</span><span class="sxs-lookup"><span data-stu-id="43336-245">To be captured, an element must be enabled.</span></span> <span data-ttu-id="43336-246">Compruebe si <xref:System.Windows.ContentElement.IsEnabled%2A> es `true` devolver antes de llamar a <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-246">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="43336-247">Si una llamada a <xref:System.Windows.ContentElement.CaptureStylus%2A> devuelve `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> también es `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-247">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="43336-248">Dispositivo que se va a capturar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-248">The device to capture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-249">Intenta forzar la captura de una entrada táctil en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-249">Attempts to force capture of a touch to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-250">Es <see langword="true" /> si la entrada táctil especificada se capturó en este elemento; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-250">
              <see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> devolverá `false` si el <xref:System.Windows.Input.TouchDevice> se captura actualmente en otro elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="43336-252">Si <xref:System.Windows.ContentElement.CaptureTouch%2A> devuelve `true`, la <xref:System.Windows.ContentElement.GotTouchCapture> evento se desencadena.</span><span class="sxs-lookup"><span data-stu-id="43336-252">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="43336-253">Para liberar la captura de un solo punto táctil de este elemento, utilice la <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> método y especifique el dispositivo táctil para liberar.</span><span class="sxs-lookup"><span data-stu-id="43336-253">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="43336-254">Para liberar todos los dispositivos táctiles de este elemento, utilice la <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> método.</span><span class="sxs-lookup"><span data-stu-id="43336-254">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="43336-255">
            <paramref name="touchDevice" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-255">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-256">Obtiene la colección de objetos <see cref="T:System.Windows.Input.CommandBinding" /> asociados a este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-256">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-257">Colección de todos los objetos <see cref="T:System.Windows.Input.CommandBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-257">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-258">Un <xref:System.Windows.Input.CommandBinding> habilita el control de un comando específico para este elemento y declara la vinculación entre un comando, sus eventos y los controladores que están conectados a este elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-258">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="43336-259">Otra forma habitual para rellenar el <xref:System.Windows.ContentElement.CommandBindings%2A> colección consiste en usar <xref:System.Windows.Input.CommandManager> métodos mediante programación.</span><span class="sxs-lookup"><span data-stu-id="43336-259">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="43336-260">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="43336-260">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="43336-261">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="43336-261">XAML Values</span></span>  
 <span data-ttu-id="43336-262">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="43336-262">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="43336-263">Uno o más <xref:System.Windows.Input.CommandBinding> elementos.</span><span class="sxs-lookup"><span data-stu-id="43336-263">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="43336-264">Cada uno de ellos debe tener un <xref:System.Windows.Input.CommandBinding.Command%2A> atributo establecido en un comando conocido y atributos establecidos para el <xref:System.Windows.Input.CommandBinding.CanExecute> y <xref:System.Windows.Input.CommandBinding.Executed> las implementaciones de controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-264">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="43336-265">Para obtener más información, vea <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="43336-265">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-266">Se produce cuando el sistema de entrada notifica un evento de arrastre subyacente con este elemento como el destino del arrastre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-266">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-267">Este evento crea un alias para la <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-267">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-268">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.DragEnter> eventos están conectados a subyacente <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-268">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-269">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-270">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-270">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="43336-271">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-271">Routing strategy</span></span>|<span data-ttu-id="43336-272">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-272">Bubbling</span></span>|  
|<span data-ttu-id="43336-273">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-273">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-274">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="43336-274">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="43336-275">Invalidar <xref:System.Windows.ContentElement.OnDragEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-275">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-276">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.DragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-276">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-277">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-278">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-279">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-280">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-281">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-282">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como el origen del arrastre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-282">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-283">Este evento crea un alias para la <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-283">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-284">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.DragLeave> eventos están conectados a subyacente <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-284">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-285">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-285">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-286">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-286">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="43336-287">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-287">Routing strategy</span></span>|<span data-ttu-id="43336-288">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-288">Bubbling</span></span>|  
|<span data-ttu-id="43336-289">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-289">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-290">El evento de tunelización correspondiente es <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="43336-290">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="43336-291">Invalidar <xref:System.Windows.ContentElement.OnDragLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-291">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-292">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.DragLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-292">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-293">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-293">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-294">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-294">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-295">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-295">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-296">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-296">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-297">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-297">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-298">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como destino potencial de la colocación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-298">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-299">Este evento se produce incluso si la operación de arrastre se origine en los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-299">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="43336-300">Si la operación de arrastre inicia fuera de los límites y, a continuación, se mueve dentro, también se genera este evento, así como <xref:System.Windows.ContentElement.DragEnter> y eventos de vista previa relacionados.</span><span class="sxs-lookup"><span data-stu-id="43336-300">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="43336-301">Este evento crea un alias para la <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-301">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-302">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.DragOver> eventos están conectados a subyacente <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-302">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-303">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-303">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-304">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-304">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="43336-305">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-305">Routing strategy</span></span>|<span data-ttu-id="43336-306">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-306">Bubbling</span></span>|  
|<span data-ttu-id="43336-307">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-307">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-308">El evento de tunelización correspondiente es <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="43336-308">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="43336-309">Invalidar <xref:System.Windows.ContentElement.OnDragOver%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-309">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-310">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.DragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-310">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-311">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-311">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-312">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-312">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-313">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-313">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-314">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-314">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-315">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-315">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-316">Se produce cuando el sistema de entrada notifica un evento de colocación subyacente con este elemento como el destino de la colocación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-316">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-317">Este evento crea un alias para la <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-317">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-318">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.Drop> eventos están conectados a subyacente <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-318">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-319">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-319">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-320">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-320">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="43336-321">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-321">Routing strategy</span></span>|<span data-ttu-id="43336-322">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-322">Bubbling</span></span>|  
|<span data-ttu-id="43336-323">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-323">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-324">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="43336-324">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="43336-325">Invalidar <xref:System.Windows.ContentElement.OnDrop%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-325">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-326">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.Drop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-326">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-327">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-327">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-328">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-328">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-329">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-329">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-330">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-330">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-331">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-331">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-332">Intenta establecer el foco en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-332">Attempts to set focus to this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-333">
            <see langword="true" /> si el foco del teclado se pudo establecer en este elemento; <see langword="false" /> si esta llamada al método no forzó el foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-333">
              <see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-334">Para poder recibir el foco, <xref:System.Windows.ContentElement.Focusable%2A> y <xref:System.Windows.ContentElement.IsEnabled%2A> deben ser `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-334">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="43336-335">Tenga en cuenta que casi todos los <xref:System.Windows.ContentElement> las clases derivadas no son <xref:System.Windows.ContentElement.Focusable%2A> de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-335">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="43336-336">Incluso si un elemento es el control de eventos puede recibir el foco y están habilitados, dentro de un árbol concreto, (por ejemplo, para un control compuesto) podría responder a los eventos de foco de vista previa no permitiendo foco allí, lo que este método devolvería `false`.</span><span class="sxs-lookup"><span data-stu-id="43336-336">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="43336-337">Foco en general se rige por dos conceptos independientes: foco del teclado y el foco lógico, que no siempre son idénticos.</span><span class="sxs-lookup"><span data-stu-id="43336-337">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="43336-338">Este método establece el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="43336-338">This method sets the logical focus.</span></span> <span data-ttu-id="43336-339">No hay ningún medio de programación para establecer el foco de teclado específicamente; el foco de teclado se determina mediante la entrada del usuario.</span><span class="sxs-lookup"><span data-stu-id="43336-339">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="43336-340">Para obtener más información, consulte [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) y [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-340">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="43336-341">Si una llamada a <xref:System.Windows.ContentElement.Focus%2A> devuelve `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> y <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> también son `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-341">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="43336-342">Si las propiedades relacionadas ya no están `true`, al llamar a <xref:System.Windows.ContentElement.Focus%2A>, uno o varios de los siguientes eventos se producen en el siguiente orden: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (el origen es el nuevo destino del foco), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (el origen es el nuevo destino del foco).</span><span class="sxs-lookup"><span data-stu-id="43336-342">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43336-343">En el ejemplo siguiente es un controlador de eventos de carga de página que busca un determinado con el nombre de párrafo del documento y establece el foco a ella.</span><span class="sxs-lookup"><span data-stu-id="43336-343">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="43336-344">Párrafos no son puede recibir el foco de forma predeterminada; este párrafo concreto ha aplicado un estilo (no mostrado) que utiliza un estilo <xref:System.Windows.Setter> para que sea puede recibir el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-344">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-345">Obtiene o establece un valor que indica si el elemento puede recibir el foco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-345">Gets or sets a value that indicates whether the element can receive focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-346">Es <see langword="true" /> si el elemento puede tener el foco; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-346">
              <see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-347">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-347">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-348">Sólo el elemento enfocado recibe la entrada de teclado.</span><span class="sxs-lookup"><span data-stu-id="43336-348">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="43336-349">Ciertas clases derivadas podrían invalidar los metadatos de esta propiedad de dependencia tal manera que la clase derivada se puede recibir el foco de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-349">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="43336-350">Cuando hereda <xref:System.Windows.Documents.Hyperlink> o sus clases derivadas, <xref:System.Windows.Documents.Hyperlink> invalida los metadatos de esta propiedad de dependencia y vuelve a definir el valor predeterminado de esta propiedad para que sea `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-350">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-351">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-351">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-352">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-352">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="43336-353">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-353">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-354">None</span><span class="sxs-lookup"><span data-stu-id="43336-354">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="43336-355">En el ejemplo siguiente se crea un estilo que realiza una <xref:System.Windows.Documents.Paragraph> puede recibir el foco de forma predeterminada y le da un comportamiento visual cuando recibe el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-355">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="43336-356">Al derivar de <see cref="T:System.Windows.ContentElement" />, tenga en cuenta si desea que el elemento que se va a recibir el foco, porque de forma predeterminada no se puede recibir el foco.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-356">When you derive from <see cref="T:System.Windows.ContentElement" />, consider whether you want your element to be focusable, because by default it will not be focusable.</span>
            </span>
            <span data-ttu-id="43336-357">Si desea que el elemento que se va a recibir el foco, invalide los metadatos de esta propiedad en el constructor estático de la clase derivada como se indica a continuación:</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-357">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span>
            </span>  
  
 [!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)]
 [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]  
  
 <span data-ttu-id="43336-358">donde <paramref name="myElement" /> es el nombre de clase del tipo que se va a reemplazar el valor de metadatos.</span><span class="sxs-lookup"><span data-stu-id="43336-358">where <paramref name="myElement" /> is the class name of the type that you are overriding the metadata value on.</span></span></para>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-359">Se produce cuando cambia el valor de la propiedad <see cref="P:System.Windows.ContentElement.Focusable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-359">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-360">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-360">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-361">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.Focusable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-361">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="43336-362">Propiedad de dependencia que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-362">The.dependency property to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-363">Devuelve el valor de la propiedad base para la propiedad especificada en este elemento, sin tener en cuenta ningún valor animado posible desde una animación en ejecución o detenida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-363">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-364">Valor de la propiedad como si no hubiera ninguna animación asociada a la propiedad de dependencia especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-364">The property value as if no animations are attached to the specified dependency property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-365">Si no hubiera ninguna animación asociada a la propiedad, el <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> valor devuelto siempre es idéntica a la <xref:System.Windows.DependencyObject.GetValue%2A> valor devuelto.</span><span class="sxs-lookup"><span data-stu-id="43336-365">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="43336-366">Si hay animaciones asociadas, a continuación, derivados valores, incluidos el inicio de la animación posibles todos los valores de detención se omiten y el valor de propiedad se determina basándose en todas las demás entradas posibles.</span><span class="sxs-lookup"><span data-stu-id="43336-366">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="43336-367">Para obtener más información, consulte [Prioridad de los valores de propiedades de dependencia](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="43336-367">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-368">Cuando se invalida en una clase derivada, devuelve un elemento primario alternativo de la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] para este elemento si no existe ningún elemento primario visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-368">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-369">Devuelve un objeto si la implementación de una clase derivada tiene una conexión primaria alternativa.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-369">An object, if implementation of a derived class has an alternate parent connection to report.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-370">La implementación virtual predeterminada de este método devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="43336-370">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="43336-371"><xref:System.Windows.FrameworkContentElement> Proporciona una implementación práctica.</span><span class="sxs-lookup"><span data-stu-id="43336-371"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="43336-372">Los elementos primarios alternativos se usan para el enrutamiento de eventos, en los casos donde un elemento crea una estructura primaria alternativa para que sus eventos se enruten de forma que difiera el patrón estándar de enrutamiento el árbol visual para el elemento primario estándar o hacia abajo en la estrategia de enrutamiento de vista previa.</span><span class="sxs-lookup"><span data-stu-id="43336-372">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-373">Se produce cuando el sistema de entrada informa de un evento de arrastrar y colocar subyacente que afecta a este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-373">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-374">El <xref:System.Windows.ContentElement.GiveFeedback> evento permite al origen de un evento de arrastre para modificar la apariencia del puntero del mouse con el fin de proporcionar información visual al usuario durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43336-374">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="43336-375">Los comentarios visuales refuerzan que una operación de arrastrar y colocar está en proceso.</span><span class="sxs-lookup"><span data-stu-id="43336-375">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="43336-376">Este evento crea un alias para la <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.GiveFeedback> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-376">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-377">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.GiveFeedback> eventos están conectados a subyacente <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-377">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-378">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-378">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-379">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-379">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="43336-380">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-380">Routing strategy</span></span>|<span data-ttu-id="43336-381">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-381">Bubbling</span></span>|  
|<span data-ttu-id="43336-382">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-382">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="43336-383">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="43336-383">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="43336-384">Invalidar <xref:System.Windows.ContentElement.OnGiveFeedback%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-384">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-385">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.GiveFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-385">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-386">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-386">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-387">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-387">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-388">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-388">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-389">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-389">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-390">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-390">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-391">Se produce cuando este elemento recibe el foco lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-391">Occurs when this element gets logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-392">El foco lógico es diferente del foco de teclado si el foco se impone deliberadamente mediante una llamada al método pero el foco de teclado anterior existe en otro ámbito.</span><span class="sxs-lookup"><span data-stu-id="43336-392">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="43336-393">En este escenario, el foco de teclado permanece donde está y el elemento donde un <xref:System.Windows.ContentElement.Focus%2A> se llama al método todavía obtiene el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="43336-393">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="43336-394">Una interpretación más precisa de este evento es que se produce cuando el valor de la <xref:System.Windows.ContentElement.IsFocused%2A> se cambia la propiedad de un elemento en la ruta de `false` a `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-394">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="43336-395">Como este evento usa el enrutamiento de propagación, el elemento que recibe el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-395">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-396">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que ha obtenido el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-396">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-397">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-397">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-398">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-398">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="43336-399">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-399">Routing strategy</span></span>|<span data-ttu-id="43336-400">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-400">Bubbling</span></span>|  
|<span data-ttu-id="43336-401">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-401">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="43336-402">No hay ningún evento de tunelización correspondiente.</span><span class="sxs-lookup"><span data-stu-id="43336-402">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="43336-403">Invalidar <xref:System.Windows.ContentElement.OnGotFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-403">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-404">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-404">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-405">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-405">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-406">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-406">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-407">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-407">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-408">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-408">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-409">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-409">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-410">Se produce cuando este elemento recibe el foco del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-410">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-411"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> es un evento similar que realiza el seguimiento de cambios de estado en una propiedad que mantiene el estado del foco para un elemento; el <xref:System.Windows.ContentElement.GotKeyboardFocus> evento se provoca en muchas de las mismas circunstancias.</span><span class="sxs-lookup"><span data-stu-id="43336-411"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="43336-412">Como este evento usa el enrutamiento de propagación, el elemento que tiene el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-412">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-413">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-413">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="43336-414">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.GotKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-414">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-415">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.GotKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-415">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-416">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-416">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-417">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-417">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="43336-418">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-418">Routing strategy</span></span>|<span data-ttu-id="43336-419">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-419">Bubbling</span></span>|  
|<span data-ttu-id="43336-420">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-420">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="43336-421">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="43336-421">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="43336-422">Invalidar <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-422">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-423">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-423">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-424">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-424">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-425">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-425">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-426">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-426">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-427">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-427">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-428">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-428">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-429">Se produce cuando este elemento captura el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-429">Occurs when this element captures the mouse.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-430">Cuando un elemento captura el mouse, recibe la entrada del mouse incluso si el puntero del mouse está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="43336-430">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="43336-431">El mouse se suele capturar sólo durante las operaciones de arrastrar y colocar y capturado se mantiene hasta que se produce la acción de colocación de la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43336-431">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="43336-432">Como este evento usa el enrutamiento de propagación, el elemento que tiene la captura puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-432">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-433">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en el evento de captura de datos para determinar el elemento real que tiene un mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-433">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="43336-434">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.GotMouseCapture> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-434">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-435">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.GotMouseCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-435">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-436">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-436">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-437">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-437">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="43336-438">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-438">Routing strategy</span></span>|<span data-ttu-id="43336-439">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-439">Bubbling</span></span>|  
|<span data-ttu-id="43336-440">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-440">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="43336-441">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="43336-441">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="43336-442">Invalidar <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-442">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-443">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.GotMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-443">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-444">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-444">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-445">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-445">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-446">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-446">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-447">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-447">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-448">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-448">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-449">Se produce cuando este elemento captura el lápiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-449">Occurs when this element captures the stylus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-450">Cuando un elemento captura el lápiz, recibe la entrada de lápiz incluso si el puntero está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="43336-450">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="43336-451">El lápiz se suele capturar sólo durante las operaciones de arrastrar y colocar y retiene la captura hasta que se produce la acción de colocación de la operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43336-451">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="43336-452">Como este evento usa el enrutamiento de propagación, el elemento que tiene la captura puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-452">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-453">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que tiene la captura.</span><span class="sxs-lookup"><span data-stu-id="43336-453">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="43336-454">Este evento crea un alias para el evento adjunto para esta clase para que <xref:System.Windows.ContentElement.GotStylusCapture> forma parte de la clase miembros lista cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-454">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-455">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.GotStylusCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-455">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-456">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-456">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-457">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-457">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="43336-458">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-458">Routing strategy</span></span>|<span data-ttu-id="43336-459">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-459">Bubbling</span></span>|  
|<span data-ttu-id="43336-460">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-460">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-461">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="43336-461">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="43336-462">Invalidar <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-462">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-463">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.GotStylusCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-463">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-464">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-464">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-465">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-465">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-466">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-466">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-467">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-467">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-468">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-468">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-469">Se produce cuando se captura una entrada táctil en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-469">Occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-470">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-470">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-471">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-471">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="43336-472">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-472">Routing strategy</span></span>|<span data-ttu-id="43336-473">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-473">Bubbling</span></span>|  
|<span data-ttu-id="43336-474">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-474">Delegate</span></span>|<span data-ttu-id="43336-475"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-475"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-476">Invalidar <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-476">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-477">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.GotTouchCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-477">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-478">Obtiene un valor que indica si este elemento tiene propiedades animadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-478">Gets a value that indicates whether this element has any animated properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-479">
            <see langword="true" /> si este elemento tiene animaciones asociadas a cualquiera de sus propiedades; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-479">
              <see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-480">Esta propiedad devuelve `true` para las animaciones persistentes (no bloqueadas, siempre en ejecución) o para las animaciones que tienen una escala de tiempo específico.</span><span class="sxs-lookup"><span data-stu-id="43336-480">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-481">Obtiene la colección de enlaces de entrada asociada a este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-481">Gets the collection of input bindings that are associated with this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-482">Colección de enlaces de entrada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-482">The collection of input bindings.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-483">Enlaces de entrada admiten el enlace de comandos para dispositivos de entrada.</span><span class="sxs-lookup"><span data-stu-id="43336-483">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="43336-484">Por ejemplo, <xref:System.Windows.Input.MouseBinding> implementa enlaces que incluyan las propiedades que son específicas de los dispositivos de mouse de entrada.</span><span class="sxs-lookup"><span data-stu-id="43336-484">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="43336-485">La colección de enlaces de entrada incluye tanto los enlaces de entrada que pertenecen al tipo así como los enlaces de entrada que se declaran en la instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-485">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="43336-486">Una propiedad relacionada, <xref:System.Windows.ContentElement.CommandBindings%2A>, mantiene una colección de enlaces de comando.</span><span class="sxs-lookup"><span data-stu-id="43336-486">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="43336-487">Estos enlaces se diferencian de los enlaces de entrada en que representan el siguiente nivel hacia abajo del procesamiento de comandos - las acciones que están asociados a comandos conocidos y los controladores específicos de la clase para ellos.</span><span class="sxs-lookup"><span data-stu-id="43336-487">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="43336-488">Uso de elementos de propiedad XAML</span><span class="sxs-lookup"><span data-stu-id="43336-488">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="43336-489">Valores XAML</span><span class="sxs-lookup"><span data-stu-id="43336-489">XAML Values</span></span>  
 <span data-ttu-id="43336-490">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="43336-490">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="43336-491">Uno o varios <xref:System.Windows.Input.InputBinding> elementos (normalmente el <xref:System.Windows.Input.KeyBinding> o <xref:System.Windows.Input.MouseBinding> las clases derivadas).</span><span class="sxs-lookup"><span data-stu-id="43336-491">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="43336-492">Se espera que cada uno de ellos tenga un <xref:System.Windows.Input.InputBinding.Command%2A> y <xref:System.Windows.Input.InputBinding.Gesture%2A> conjunto de atributos.</span><span class="sxs-lookup"><span data-stu-id="43336-492">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-493">Obtiene o establece un valor que indica si este elemento se habilita en la [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-493">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-494">
            <see langword="true" /> si el elemento está habilitado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-494">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-495">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-495">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-496">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-496">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-497">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-497">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="43336-498">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-498">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-499">None</span><span class="sxs-lookup"><span data-stu-id="43336-499">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="43336-500">En el ejemplo siguiente se crea un estilo que incluye un establecedor de propiedad que proporciona un comportamiento visual alternativo cuando un <xref:System.Windows.Documents.Hyperlink> está establecido en <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="43336-500">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-501">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.ContentElement.IsEnabled" /> de este elemento cambia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-501">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-502">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-502">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-503">Obtiene un valor que se convierte en el valor devuelto de <see cref="P:System.Windows.ContentElement.IsEnabled" /> en las clases derivadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-503">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-504">
            <see langword="true" /> si el elemento está habilitado; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-504">
              <see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="43336-505">La implementación predeterminada de esta propiedad se almacena en caché el valor y también calcula si el elemento primario de este elemento está habilitado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-505">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span>
            </span>
            <span data-ttu-id="43336-506">(Si el elemento primario no está habilitado, el elemento secundario no podrá habilitarse eficazmente en aplicaciones prácticas [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Si opta por invalidar esta implementación, asegúrese de que se llame a la implementación base para conservar este comportamiento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-506">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-507">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsEnabled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-507">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-508">Obtiene un valor que determina si este elemento tiene foco lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-508">Gets a value that determines whether this element has logical focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-509">Devuelve <see langword="true" /> si el elemento tiene el foco lógico; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-509">
              <see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-510">El foco lógico puede diferir del foco de teclado si una aplicación tiene varias divisiones de foco, por ejemplo, entre el contenido del menú y el resto de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="43336-510">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="43336-511">En este escenario, el foco de teclado sólo puede estar en un elemento del interfaz de usuario de la aplicación, sin embargo, ciertos elementos en otras divisiones de foco pueden retener el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="43336-511">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="43336-512">Para obtener más información sobre el foco lógico, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) y [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-512">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-513">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-513">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-514">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-514">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="43336-515">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-515">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-516">None</span><span class="sxs-lookup"><span data-stu-id="43336-516">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="43336-517">En el ejemplo siguiente se crea un estilo que realiza una <xref:System.Windows.Documents.Paragraph> puede recibir el foco de forma predeterminada y le da un comportamiento visual cuando recibe el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-517">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-518">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsFocused" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-518">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-519">Obtiene un valor que indica si se habilita un sistema de métodos de entrada, como [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], para procesar la entrada a este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-519">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-520">
            <see langword="true" /> si hay un método de entrada activo; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-520">
              <see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-521">El valor predeterminado de la propiedad adjunta subyacente es <see langword="true" />; sin embargo, este valor se ve afectado por el estado de los métodos de entrada en tiempo de ejecución.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-521">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-522">Esta propiedad devuelve el valor devuelto por la propiedad adjunta <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> para los métodos de entrada actualmente habilitados (teclado, voz y otros dispositivos de entrada).</span><span class="sxs-lookup"><span data-stu-id="43336-522">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-523">Obtiene un valor que indica si este elemento tiene foco de teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-523">Gets a value that indicates whether this element has keyboard focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-524">Es <see langword="true" /> si el elemento tiene el foco del teclado; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-524">
              <see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-525">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-525">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-526">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-526">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-527">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-527">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="43336-528">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-528">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-529">None</span><span class="sxs-lookup"><span data-stu-id="43336-529">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-530">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-530">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-531">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-531">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-532">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-532">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-533">Obtiene un valor que indica si el foco del teclado está en cualquier parte del elemento o de los elementos secundarios.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-533">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-534">Es <see langword="true" /> si el foco del teclado está en el elemento o en sus elementos secundarios; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-534">
              <see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-535">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-535">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-536">Los cambios en el valor de esta propiedad normalmente provocan el <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> eventos, a menos que una clase derivada invalide <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> para suprimir el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-536">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="43336-537">Esta propiedad no se establece directamente, pero puede establecer el foco al elemento mediante una llamada a <xref:System.Windows.ContentElement.Focus%2A>, o realizando una <xref:System.Windows.ContentElement.MoveFocus%2A> solicitud.</span><span class="sxs-lookup"><span data-stu-id="43336-537">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="43336-538">Cualquiera de estas llamadas al método puede cambiar este valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="43336-538">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-539">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-539">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-540">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-540">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="43336-541">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-541">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-542">None</span><span class="sxs-lookup"><span data-stu-id="43336-542">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-543">Se produce cuando el valor de la propiedad <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-543">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-544">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-544">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-545">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-545">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-546">Obtiene un valor que indica si este elemento captura el mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-546">Gets a value that indicates whether the mouse is captured by this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-547">Es <see langword="true" /> si el elemento tiene la captura del mouse; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-547">
              <see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-548">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-548">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-549">Estado de la captura del mouse está relacionado con las operaciones de arrastrar y colocar en proceso.</span><span class="sxs-lookup"><span data-stu-id="43336-549">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-550">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-550">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-551">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-551">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="43336-552">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-552">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-553">None</span><span class="sxs-lookup"><span data-stu-id="43336-553">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="43336-554">El ejemplo siguiente activa el estado de la captura del mouse o desactivar en función de si el elemento ya ha capturado el mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-554">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-555">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-555">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-556">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-556">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-557">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsMouseCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-557">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-558">Obtiene un valor que determina si la captura del mouse se retiene por este elemento o los elementos secundarios de su árbol de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-558">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-559">Es <see langword="true" /> si este elemento o un elemento que contiene tiene la captura del mouse; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-559">
              <see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-560">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-560">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-561">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-561">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-562">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-562">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="43336-563">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-563">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-564">None</span><span class="sxs-lookup"><span data-stu-id="43336-564">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-565">Se produce cuando el valor de <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-565">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-566">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-566">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-567">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-567">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-568">Obtiene un valor que indica si la posición del puntero del mouse corresponde a los resultados de las pruebas de posicionamiento, que tienen en cuenta la composición del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-568">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-569">
            <see langword="true" /> Si el puntero del mouse está sobre el mismo resultado del elemento que una prueba de posicionamiento; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-569">
              <see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-570">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-570">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-571">A diferencia de <xref:System.Windows.ContentElement.IsMouseOver%2A>, esta propiedad sólo es `true` si el puntero del mouse está sobre el elemento literal, ya que es para una prueba de posicionamiento.</span><span class="sxs-lookup"><span data-stu-id="43336-571">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element—as it is for a hit test.</span></span> <span data-ttu-id="43336-572">Si el puntero del mouse está sobre un elemento secundario, en particular sobre los elementos que forman parte de un elemento de la plantilla más profunda y la composición, esta propiedad será `false`.</span><span class="sxs-lookup"><span data-stu-id="43336-572">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="43336-573">A menos que sepa cómo un control es compuesto (por ejemplo, utilice esta propiedad en una plantilla de control personalizado para un control que defina), esta propiedad podría devolver resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="43336-573">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="43336-574">Para la mayoría de los escenarios donde no esté creando controles, use <xref:System.Windows.ContentElement.IsMouseOver%2A> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="43336-574">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="43336-575">Si este elemento captura el mouse, y esta propiedad es `true` en el momento de la captura, esta propiedad continuará devolviendo `true` hasta que se pierda la captura del mouse y el puntero no es a través de sus límites.</span><span class="sxs-lookup"><span data-stu-id="43336-575">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-576">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-576">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-577">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-577">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="43336-578">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-578">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-579">None</span><span class="sxs-lookup"><span data-stu-id="43336-579">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-580">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-580">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-581">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-581">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-582">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-582">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-583">Obtiene un valor que indica si el puntero del mouse está sobre este elemento (incluidos los elementos visuales secundarios o la composición de su control).</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-583">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-584">Es <see langword="true" /> si el puntero del mouse está sobre el elemento o sus elementos secundarios; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-584">
              <see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-585">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-585">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-586">Aunque no exista un evento "IsMouseOverChanged análogo" análogo, realice varios eventos similares.</span><span class="sxs-lookup"><span data-stu-id="43336-586">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="43336-587">Por ejemplo, puede usar <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, y <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="43336-587">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="43336-588">Si este elemento captura el mouse, esta propiedad permanece `true` hasta que se pierda la captura del mouse y el puntero del mouse deja los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-588">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-589">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-589">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-590">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-590">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="43336-591">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-591">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-592">None</span><span class="sxs-lookup"><span data-stu-id="43336-592">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="43336-593">En el ejemplo siguiente se crea un estilo que incluye un establecedor de propiedad que proporciona un comportamiento visual alternativo cuando un <xref:System.Windows.Documents.Hyperlink> informes <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-593">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-594">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsMouseOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-594">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-595">Obtiene un valor que indica si se captura el lápiz en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-595">Gets a value that indicates whether the stylus is captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-596">Es <see langword="true" /> si el elemento tiene la captura del lápiz óptico; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-596">
              <see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-597">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-597">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-598">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-598">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-599">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-599">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-600">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-600">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-601">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-601">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="43336-602">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-602">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-603">None</span><span class="sxs-lookup"><span data-stu-id="43336-603">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-604">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-604">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-605">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-605">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-606">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsStylusCaptured" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-606">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-607">Obtiene un valor que determina si este elemento, incluidos los elementos secundarios y la composición del control, contiene la captura del lápiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-607">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-608">
            <see langword="true" /> si la captura del lápiz se incluye en este elemento; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-608">
              <see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-609">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-609">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-610">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-610">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-611">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-611">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-612">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-612">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="43336-613">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-613">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-614">None</span><span class="sxs-lookup"><span data-stu-id="43336-614">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-615">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-615">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-616">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-616">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-617">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-617">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-618">Obtiene un valor que indica si la posición del lápiz corresponde a los resultados de las pruebas de posicionamiento, que tienen en cuenta la composición del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-618">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-619">
            <see langword="true" /> si el lápiz está encima del mismo elemento que una prueba de posicionamiento; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-619">
              <see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-620">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-620">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-621">A diferencia de <xref:System.Windows.ContentElement.IsStylusOver%2A>, esta propiedad sólo es `true` si el lápiz está sobre el elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-621">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="43336-622">Si en su lugar, el lápiz está sobre un elemento secundario o sobre los elementos que forman parte de la composición más profunda de un elemento, esta propiedad será `false`.</span><span class="sxs-lookup"><span data-stu-id="43336-622">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="43336-623">A menos que sepa cómo un control es compuesto (por ejemplo, utilice esta propiedad en una plantilla de control personalizado para un control que defina), esta propiedad podría devolver resultados inesperados.</span><span class="sxs-lookup"><span data-stu-id="43336-623">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="43336-624">Para la mayoría de los escenarios donde no esté creando controles, use <xref:System.Windows.ContentElement.IsStylusOver%2A> en su lugar.</span><span class="sxs-lookup"><span data-stu-id="43336-624">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="43336-625">Si este elemento tiene la captura del lápiz y esta propiedad es `true` en el momento de la captura, esta propiedad permanece `true` hasta que se pierde la captura del lápiz y el lápiz no está por encima de sus límites.</span><span class="sxs-lookup"><span data-stu-id="43336-625">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="43336-626">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-626">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-627">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-627">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-628">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-628">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-629">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-629">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="43336-630">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-630">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-631">None</span><span class="sxs-lookup"><span data-stu-id="43336-631">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-632">Se produce cuando el valor de la propiedad <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> cambia en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-632">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-633">Este miembro es una [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] evento, no un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-633">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-634">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-634">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-635">Obtiene un valor que indica si el lápiz se encuentra sobre este elemento (incluidos los elementos secundarios visuales).</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-635">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-636">
            <see langword="true" /> si el lápiz está sobre el elemento o sus elementos secundarios; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-636">
              <see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="43336-637">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-637">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-638">Si este elemento tiene la captura del lápiz, esta propiedad permanece `true` hasta que se pierde la captura del lápiz y el puntero está fuera de sus límites.</span><span class="sxs-lookup"><span data-stu-id="43336-638">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="43336-639">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-639">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-640">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-640">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="43336-641">Información sobre propiedades de dependencia</span><span class="sxs-lookup"><span data-stu-id="43336-641">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-642">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-642">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="43336-643">Propiedades de metadatos establecidos en `true`</span><span class="sxs-lookup"><span data-stu-id="43336-643">Metadata properties set to `true`</span></span>|<span data-ttu-id="43336-644">None</span><span class="sxs-lookup"><span data-stu-id="43336-644">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-645">Identifica la propiedad de dependencia <see cref="P:System.Windows.ContentElement.IsStylusOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-645">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-646">Se produce cuando se presiona una tecla mientras el foco está en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-646">Occurs when a key is pressed while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-647">Control de claves interactúa con otras características de la plataforma, como la composición de comandos y el texto.</span><span class="sxs-lookup"><span data-stu-id="43336-647">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="43336-648">El <xref:System.Windows.ContentElement.KeyDown> evento es un evento de entrada de texto de nivel inferior que podría no funcionar como se esperaba en ciertos controles.</span><span class="sxs-lookup"><span data-stu-id="43336-648">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="43336-649">Esto es debido a que algunos controles tienen la composición del control o control de clases que proporciona una versión de un nivel más alto del texto de entrada de control y eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="43336-649">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="43336-650">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.KeyDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-650">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-651">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.KeyDown> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-651">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-652">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-652">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-653">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-653">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="43336-654">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-654">Routing strategy</span></span>|<span data-ttu-id="43336-655">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-655">Bubbling</span></span>|  
|<span data-ttu-id="43336-656">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-656">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="43336-657">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-657">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="43336-658">Invalidar <xref:System.Windows.ContentElement.OnKeyDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-658">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-659">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.KeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-659">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-660">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-660">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-661">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-661">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-662">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-662">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-663">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-663">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-664">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-664">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-665">Se produce al soltar una tecla mientras el foco está en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-665">Occurs when a key is released while focus is on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-666">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> adjunta eventos para esta clase para que <xref:System.Windows.ContentElement.KeyUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-666">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-667">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.KeyUp> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-667">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-668">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-668">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-669">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-669">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="43336-670">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-670">Routing strategy</span></span>|<span data-ttu-id="43336-671">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-671">Bubbling</span></span>|  
|<span data-ttu-id="43336-672">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-672">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="43336-673">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-673">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="43336-674">Invalidar <xref:System.Windows.ContentElement.OnKeyUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-674">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-675">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.KeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-675">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-676">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-676">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-677">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-677">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-678">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-678">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-679">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-679">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-680">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-680">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-681">Se produce cuando este elemento pierde el foco lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-681">Occurs when this element loses logical focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-682">El foco lógico es diferente del foco de teclado si el foco se aleja deliberadamente mediante una llamada a un método pero el foco de teclado anterior existe en otro ámbito.</span><span class="sxs-lookup"><span data-stu-id="43336-682">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="43336-683">En este escenario, donde resulta sigue siendo de foco de teclado y el elemento donde un <xref:System.Windows.ContentElement.Focus%2A> se llama al método todavía obtiene el foco lógico.</span><span class="sxs-lookup"><span data-stu-id="43336-683">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="43336-684">Una interpretación más precisa de este evento es que se produce cuando el valor de la <xref:System.Windows.ContentElement.IsFocused%2A> cambios en las propiedades de un elemento en la ruta de `true` a `false`.</span><span class="sxs-lookup"><span data-stu-id="43336-684">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="43336-685">Como este evento usa el enrutamiento de propagación, el elemento que pierde el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-685">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-686">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que ha obtenido el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-686">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-687">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-687">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-688">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-688">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="43336-689">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-689">Routing strategy</span></span>|<span data-ttu-id="43336-690">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-690">Bubbling</span></span>|  
|<span data-ttu-id="43336-691">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-691">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="43336-692">No hay ningún evento de tunelización correspondiente.</span><span class="sxs-lookup"><span data-stu-id="43336-692">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="43336-693">Invalidar <xref:System.Windows.ContentElement.OnLostFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-693">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-694">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-694">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-695">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-695">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-696">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-696">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-697">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-697">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-698">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-698">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-699">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-699">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-700">Se produce cuando este elemento deja de recibir el foco del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-700">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-701">Como este evento usa el enrutamiento de propagación, el elemento que perdió el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-701">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-702">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que perdió el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-702">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="43336-703">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.LostKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-703">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-704">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.LostKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-704">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-705">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-705">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-706">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-706">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="43336-707">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-707">Routing strategy</span></span>|<span data-ttu-id="43336-708">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-708">Bubbling</span></span>|  
|<span data-ttu-id="43336-709">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-709">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="43336-710">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="43336-710">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="43336-711">Invalidar <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-711">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-712">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-712">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-713">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-713">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-714">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-714">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-715">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-715">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-716">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-716">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-717">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-717">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-718">Se produce cuando este elemento pierde la captura del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-718">Occurs when this element loses mouse capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-719">Cuando un elemento captura el mouse, recibe la entrada del mouse incluso si el puntero está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="43336-719">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="43336-720">Normalmente se captura el mouse sólo durante las operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43336-720">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="43336-721">Como este evento usa el enrutamiento de propagación, el elemento que pierde la captura puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-721">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-722">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que pierde la captura.</span><span class="sxs-lookup"><span data-stu-id="43336-722">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="43336-723">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.LostMouseCapture> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-723">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-724">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.LostMouseCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-724">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-725">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-725">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-726">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-726">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="43336-727">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-727">Routing strategy</span></span>|<span data-ttu-id="43336-728">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-728">Bubbling</span></span>|  
|<span data-ttu-id="43336-729">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-729">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="43336-730">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="43336-730">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="43336-731">Invalidar <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-731">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-732">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.LostMouseCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-732">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-733">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-733">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-734">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-734">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-735">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-735">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-736">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-736">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-737">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-737">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-738">Se produce cuando este elemento pierde la captura del lápiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-738">Occurs when this element loses stylus capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-739">Cuando un elemento captura el lápiz, recibe la entrada de lápiz incluso si el puntero está fuera de los límites.</span><span class="sxs-lookup"><span data-stu-id="43336-739">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="43336-740">Normalmente se captura el lápiz sólo durante las operaciones de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43336-740">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="43336-741">Como este evento usa el enrutamiento de propagación, el elemento que pierde el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-741">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-742">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que perdió el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-742">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="43336-743">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.LostStylusCapture> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-743">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-744">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.LostStylusCapture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-744">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-745">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-745">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-746">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-746">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="43336-747">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-747">Routing strategy</span></span>|<span data-ttu-id="43336-748">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-748">Bubbling</span></span>|  
|<span data-ttu-id="43336-749">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-749">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-750">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="43336-750">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="43336-751">Invalidar <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-751">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-752">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.LostStylusCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-752">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-753">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-753">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-754">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-754">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-755">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-755">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-756">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-756">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-757">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-757">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-758">Se produce cuando este elemento pierde una captura táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-758">Occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-759">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-759">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-760">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-760">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="43336-761">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-761">Routing strategy</span></span>|<span data-ttu-id="43336-762">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-762">Bubbling</span></span>|  
|<span data-ttu-id="43336-763">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-763">Delegate</span></span>|<span data-ttu-id="43336-764"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-764"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-765">Invalidar <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-765">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-766">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.LostTouchCapture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-766">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-767">Se produce al presionar cualquier botón del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-767">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-768">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.MouseDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-768">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-769">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.MouseDown> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-769">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-770">El <xref:System.Windows.ContentElement.MouseDown> evento se genera a menudo junto con cualquiera <xref:System.Windows.ContentElement.MouseLeftButtonDown> o <xref:System.Windows.ContentElement.MouseRightButtonDown>, que corresponde a una pulsación de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="43336-770">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="43336-771"><xref:System.Windows.ContentElement.MouseLeftButtonDown> y <xref:System.Windows.ContentElement.MouseRightButtonDown> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-771"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="43336-772">Vea la sección Comentarios para <xref:System.Windows.ContentElement.MouseLeftButtonDown> o <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-772">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43336-773">Unos <xref:System.Windows.ContentElement> las clases derivadas que tienen un comportamiento similar al control, por ejemplo, <xref:System.Windows.Documents.Hyperlink>, podría tener inherentes a control de clases para los eventos de botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-773">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="43336-774">El botón primario del mouse hacia abajo de evento es el caso más probable tener control en un control de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-774">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="43336-775">La clase de control a menudo marca subyacente <xref:System.Windows.Input.Mouse> eventos de clase como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-775">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="43336-776">Una vez que el evento está marcado como controlado, no se generan normalmente otros controladores de instancia que están conectados a ese elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-776">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="43336-777">Cualquier otro controlador instancia o clase que se adjunta a los elementos de la dirección de propagación hacia la raíz en el árbol de la interfaz de usuario también normalmente no se producen.</span><span class="sxs-lookup"><span data-stu-id="43336-777">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="43336-778">Puede resolver el problema que se describe en la sección anterior importante y seguir recibiendo <xref:System.Windows.ContentElement.MouseDown> eventos del botón primario del mouse hacia abajo de eventos en una clase derivada que tiene el control de clases, use cualquiera de estas soluciones:</span><span class="sxs-lookup"><span data-stu-id="43336-778">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="43336-779">Adjuntar controladores para la <xref:System.Windows.ContentElement.PreviewMouseDown> evento, que no está marcado como controlado por los controles.</span><span class="sxs-lookup"><span data-stu-id="43336-779">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="43336-780">Observe que, dado que se trata de un evento de vista previa, la ruta comienza en la raíz y desciende hasta el control.</span><span class="sxs-lookup"><span data-stu-id="43336-780">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="43336-781">Registrar un controlador en el control mediante procedimientos llamando <xref:System.Windows.ContentElement.AddHandler%2A> y eligiendo la opción de firma que habilita los controladores escuchar eventos incluso si ya está marcados como controlado en los datos del evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-781">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-782">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-782">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-783">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-783">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="43336-784">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-784">Routing strategy</span></span>|<span data-ttu-id="43336-785">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-785">Bubbling</span></span>|  
|<span data-ttu-id="43336-786">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-786">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-787">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-787">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="43336-788">Invalidar <xref:System.Windows.ContentElement.OnMouseDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-788">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-789">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-789">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-790">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-790">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-791">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-791">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-792">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-792">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-793">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-793">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-794">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-794">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-795">Se produce cuando el puntero del mouse entra dentro de los límites de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-795">Occurs when the mouse pointer enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-796"><xref:System.Windows.ContentElement.MouseEnter> es un [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) que utiliza la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="43336-796"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="43336-797">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="43336-797">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="43336-798">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="43336-798">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="43336-799">Aunque <xref:System.Windows.ContentElement.MouseEnter> literalmente le hace un seguimiento cuando el puntero del mouse entra en los límites de un elemento, aún más este evento indica que el <xref:System.Windows.ContentElement.IsMouseOver%2A> valor de propiedad ha cambiado de `false` a `true` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-799">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="43336-800">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.MouseEnter> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-800">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-801">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.MouseEnter> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-801">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-802">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-802">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-803">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-803">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="43336-804">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-804">Routing strategy</span></span>|<span data-ttu-id="43336-805">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-805">Direct</span></span>|  
|<span data-ttu-id="43336-806">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-806">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="43336-807">Invalidar <xref:System.Windows.ContentElement.OnMouseEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-807">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-808">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-808">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-809">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-809">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-810">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-810">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-811">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-811">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-812">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-812">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-813">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-813">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-814">Se produce cuando el puntero del mouse deja los límites de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-814">Occurs when the mouse pointer leaves the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-815"><xref:System.Windows.ContentElement.MouseLeave> es un [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) que utiliza la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="43336-815"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="43336-816">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="43336-816">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="43336-817">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="43336-817">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="43336-818">Aunque <xref:System.Windows.ContentElement.MouseLeave> realiza seguimiento cuando el mouse sale de un elemento, este evento más literalmente informa de que el <xref:System.Windows.ContentElement.IsMouseOver%2A> valor de propiedad ha cambiado de `true` a `false` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-818">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="43336-819">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.MouseLeave> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-819">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-820">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.MouseLeave> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-820">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-821">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-821">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-822">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-822">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="43336-823">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-823">Routing strategy</span></span>|<span data-ttu-id="43336-824">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-824">Direct</span></span>|  
|<span data-ttu-id="43336-825">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-825">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="43336-826">Invalidar <xref:System.Windows.ContentElement.OnMouseLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-826">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-827">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-827">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-828">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-828">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-829">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-829">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-830">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-830">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-831">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-831">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-832">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-832">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-833">Se produce al presionar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-833">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-834">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-834">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-835">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-835">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-836">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-836">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-837">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-837">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-838">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-838">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-839">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-839">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-840">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-840">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="43336-841">Unos <xref:System.Windows.ContentElement> las clases derivadas que tienen un comportamiento similar al control, por ejemplo, <xref:System.Windows.Documents.Hyperlink>, podría tener inherentes a control de clases para los eventos de botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-841">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="43336-842">El botón primario del mouse hacia abajo de evento es el caso más probable tener control en un control de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-842">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="43336-843">La clase de control a menudo marca subyacente <xref:System.Windows.Input.Mouse> eventos de clase como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-843">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="43336-844">Una vez que el evento está marcado como controlado, no se generan normalmente otros controladores de instancia que están conectados a ese elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-844">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="43336-845">Cualquier otro controlador instancia o clase que se adjunta a los elementos de la dirección de propagación hacia la raíz en el árbol de la interfaz de usuario también normalmente no se producen.</span><span class="sxs-lookup"><span data-stu-id="43336-845">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="43336-846">Puede resolver el problema que se describe en la sección anterior importante y seguir recibiendo <xref:System.Windows.ContentElement.MouseLeftButtonDown> eventos del botón primario del mouse hacia abajo de eventos en una clase derivada que tiene el control de clases, use cualquiera de estas soluciones:</span><span class="sxs-lookup"><span data-stu-id="43336-846">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="43336-847">Adjuntar controladores para la <xref:System.Windows.ContentElement.PreviewMouseDown> evento, que no está marcado como controlado por los controles.</span><span class="sxs-lookup"><span data-stu-id="43336-847">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="43336-848">Observe que, dado que se trata de un evento de vista previa, la ruta comienza en la raíz y desciende hasta el control.</span><span class="sxs-lookup"><span data-stu-id="43336-848">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="43336-849">Registrar un controlador en el control mediante procedimientos llamando <xref:System.Windows.ContentElement.AddHandler%2A> y eligiendo la opción de firma que habilita los controladores escuchar eventos incluso si ya está marcados como controlado en los datos del evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-849">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-850">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-850">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-851">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-851">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="43336-852">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-852">Routing strategy</span></span>|<span data-ttu-id="43336-853">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-853">Direct</span></span>|  
|<span data-ttu-id="43336-854">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-854">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-855">Invalidar <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-855">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-856">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-856">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-857">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-857">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-858">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-858">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-859">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-859">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-860">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-860">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-861">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-861">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-862">Se produce al soltar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-862">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-863">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-863">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-864">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-864">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-865">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-865">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-866">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-866">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-867">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-867">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-868">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-868">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-869">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-869">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-870">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-870">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-871">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-871">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="43336-872">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-872">Routing strategy</span></span>|<span data-ttu-id="43336-873">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-873">Direct</span></span>|  
|<span data-ttu-id="43336-874">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-874">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-875">Invalidar <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-875">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-876">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-876">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-877">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-877">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-878">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-878">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-879">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-879">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-880">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-880">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-881">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-881">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-882">Se produce al mover el puntero del mouse mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-882">Occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-883">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.MouseMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-883">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-884">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.MouseMove> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-884">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-885">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-885">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-886">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-886">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="43336-887">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-887">Routing strategy</span></span>|<span data-ttu-id="43336-888">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-888">Bubbling</span></span>|  
|<span data-ttu-id="43336-889">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-889">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="43336-890">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-890">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="43336-891">Invalidar <xref:System.Windows.ContentElement.OnMouseMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-891">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-892">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-892">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-893">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-893">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-894">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-894">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-895">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-895">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-896">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-896">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-897">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-897">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-898">Se produce al pulsar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-898">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-899">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-899">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-900">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-900">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-901">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-901">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-902">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-902">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-903">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-903">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-904">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-904">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-905">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-905">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-906">Eventos del botón secundario del mouse con frecuencia tienen control nativo en escenarios de aplicación.</span><span class="sxs-lookup"><span data-stu-id="43336-906">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="43336-907">Por ejemplo, un botón secundario del mouse hacia abajo puede mostrar un menú contextual.</span><span class="sxs-lookup"><span data-stu-id="43336-907">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="43336-908">Vea [información general de ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-908">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-909">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-909">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-910">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-910">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="43336-911">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-911">Routing strategy</span></span>|<span data-ttu-id="43336-912">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-912">Direct</span></span>|  
|<span data-ttu-id="43336-913">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-913">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-914">Invalidar <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-914">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-915">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-915">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-916">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-916">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-917">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-917">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-918">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-918">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-919">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-919">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-920">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-920">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-921">Se produce al soltar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-921">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-922">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece seguir una ruta de propagación a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-922">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-923">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-923">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-924">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-924">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-925">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-925">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-926">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-926">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-927">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-927">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-928">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-928">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-929">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-929">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-930">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-930">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="43336-931">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-931">Routing strategy</span></span>|<span data-ttu-id="43336-932">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-932">Direct</span></span>|  
|<span data-ttu-id="43336-933">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-933">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-934">Invalidar <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-934">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-935">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-935">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-936">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-936">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-937">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-937">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-938">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-938">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-939">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-939">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-940">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-940">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-941">Se produce al soltar cualquier botón del mouse sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-941">Occurs when any mouse button is released over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-942">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.MouseUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-942">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-943">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.MouseUp> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-943">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-944">El <xref:System.Windows.ContentElement.MouseUp> evento se genera a menudo junto con cualquiera <xref:System.Windows.ContentElement.MouseLeftButtonUp> o <xref:System.Windows.ContentElement.MouseRightButtonUp>, que corresponden a una versión de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="43336-944">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="43336-945"><xref:System.Windows.ContentElement.MouseLeftButtonUp> y <xref:System.Windows.ContentElement.MouseRightButtonUp> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-945"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="43336-946">Vea la sección Comentarios para <xref:System.Windows.ContentElement.MouseLeftButtonUp> o <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-946">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-947">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-947">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-948">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-948">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="43336-949">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-949">Routing strategy</span></span>|<span data-ttu-id="43336-950">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-950">Bubbling</span></span>|  
|<span data-ttu-id="43336-951">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-951">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-952">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-952">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="43336-953">Invalidar <xref:System.Windows.ContentElement.OnMouseUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-953">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-954">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-954">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-955">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-955">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-956">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-956">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-957">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-957">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-958">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-958">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-959">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-959">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-960">Se produce cuando el usuario gira la rueda del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-960">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-961">Captura del foco o del mouse tienen prioridad sobre dónde está el puntero del mouse; por lo tanto, si recibe el <xref:System.Windows.ContentElement.MouseWheel> evento desde un elemento enfocado o capturado, el puntero del mouse podría estar realmente sobre otro elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-961">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="43336-962">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.MouseWheel> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-962">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-963">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.MouseWheel> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-963">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-964">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-964">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-965">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-965">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="43336-966">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-966">Routing strategy</span></span>|<span data-ttu-id="43336-967">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-967">Bubbling</span></span>|  
|<span data-ttu-id="43336-968">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-968">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="43336-969">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="43336-969">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="43336-970">Invalidar <xref:System.Windows.ContentElement.OnMouseWheel%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-970">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-971">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.MouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-971">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-972">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-972">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-973">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-973">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-974">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-974">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-975">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-975">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-976">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-976">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="43336-977">Solicitud de recorrido que contiene una propiedad que indica un modo de recorrido según el orden de tabulación existente o una dirección en la que moverse visualmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-977">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-978">Intenta mover el foco de este elemento a otro elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-978">Attempts to move focus from this element to another element.</span>
          </span>
          <span data-ttu-id="43336-979">La dirección en la que se mueve el foco viene especificada por una dirección de orientación, que se interpreta dentro de la organización del elemento primario visual de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-979">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-980">Devuelve <see langword="true" /> si se realizó el recorrido solicitado; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-980">
              <see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-981">Asegúrese de que comprobar el valor devuelto de este método.</span><span class="sxs-lookup"><span data-stu-id="43336-981">Make sure you check the return value of this method.</span></span> <span data-ttu-id="43336-982">Un valor devuelto de `false` pueden obtenerse si el recorrido se encuentra con una posición de tabulación definida por la composición de un control y la solicitud de recorrido no incluía el ajuste.</span><span class="sxs-lookup"><span data-stu-id="43336-982">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-983">Devuelve las implementaciones de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específicas de la clase para la infraestructura de [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-983">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-984">Implementación de <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> específica del tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-984">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="43336-985">La implementación de este método suele ser llamar al constructor de un determinado <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementación y devolverlo como el valor devuelto.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-985">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span>
            </span>
            <span data-ttu-id="43336-986">Todos los <see cref="T:System.Windows.ContentElement" /> las clases derivadas deben implementar este método para proporcionar sus propios específicos <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> las implementaciones de la [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infraestructura.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-986">All <see cref="T:System.Windows.ContentElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span>
            </span>
            <span data-ttu-id="43336-987">Para obtener más información sobre cómo implementar este patrón, vea <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-987">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-988">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-988">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-989">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragEnter" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-989">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-990">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-990">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-991">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-991">This method has no default implementation.</span></span> <span data-ttu-id="43336-992">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-992">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-993">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-993">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-994">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-994">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-995">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-995">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-996">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-996">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-997">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-997">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-998">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-998">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-999">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-999">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1000">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1000">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1001">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragLeave" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1001">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1002">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1002">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1003">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1003">This method has no default implementation.</span></span> <span data-ttu-id="43336-1004">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1004">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1005">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1005">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1006">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1006">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1007">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1007">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1008">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1008">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1009">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1009">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1010">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1010">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1011">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1011">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1012">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1012">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1013">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragOver" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1013">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1014">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1014">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1015">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1015">This method has no default implementation.</span></span> <span data-ttu-id="43336-1016">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1016">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1017">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1017">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1018">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1018">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1019">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1019">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1020">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1020">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1021">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1021">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1022">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1022">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1023">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1023">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1024">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1024">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1025">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.DragEnter" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1025">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1026">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1026">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1027">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1027">This method has no default implementation.</span></span> <span data-ttu-id="43336-1028">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1028">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1029">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1029">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1030">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1030">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1031">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1031">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1032">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1032">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1033">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1033">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1034">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1034">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1035">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1035">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1036">Objeto <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1036">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1037">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.GiveFeedback" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1037">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1038">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1038">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1039">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1039">This method has no default implementation.</span></span> <span data-ttu-id="43336-1040">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1040">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1041">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1041">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1042">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1042">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1043">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1043">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1044">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1044">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1045">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1045">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1046">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1046">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1047">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1047">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1048">Objeto <see cref="T:System.Windows.RoutedEventArgs" /> que contiene datos de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1048">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="43336-1049">Estos datos de evento deben contener el identificador para el evento <see cref="E:System.Windows.ContentElement.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1049">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1050">Genera el evento enrutado <see cref="E:System.Windows.ContentElement.GotFocus" /> mediante el uso de los datos de eventos proporcionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1050">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1051">Este método, aunque sea virtual, tiene una implementación predeterminada que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1051">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="43336-1052">Esto en \* implementación del método está pensada para generar el evento y esta misma implementación del método se invoca internamente para generar el evento cuando la <xref:System.Windows.ContentElement.IsFocused%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="43336-1052">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="43336-1053">El <xref:System.Windows.ContentElement.OnGotFocus%2A> implementación difiere de alguna otra [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] en \* implementaciones, que solo proporcionan una manera cómoda para agregar el control de clases para ese evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1053">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="43336-1054">A menos que tenga una necesidad imperiosa y no habitual para no provocar los eventos de foco, asegúrese de la implementación llama a la implementación base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1054">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="43336-1055">En caso contrario, el <see cref="E:System.Windows.ContentElement.GotFocus" /> evento no se produce durante las operaciones típicas del usuario que normalmente establecen el foco a este elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1055">Otherwise, the <see cref="E:System.Windows.ContentElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="43336-1056">Si no desea que el elemento que se va a recibir el foco, puede evitar que el elemento que se va a recibir el foco estableciendo <see cref="P:System.Windows.ContentElement.Focusable" /> a <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1056">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span>
            </span>
            <span data-ttu-id="43336-1057">Tenga en cuenta que de forma predeterminada un <see cref="P:System.Windows.ContentElement.Focusable" /> no puede recibir el foco, por lo tanto, establecer <see cref="P:System.Windows.ContentElement.Focusable" /> deliberadamente podría no ser necesario.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1057">Note that by default a <see cref="P:System.Windows.ContentElement.Focusable" /> is not focusable, therefore setting <see cref="P:System.Windows.ContentElement.Focusable" /> deliberately might not be necessary.</span>
            </span>
          </para>
        </block>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1058">Objeto <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1058">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1059">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1059">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1060">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1060">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1061">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1061">This method has no default implementation.</span></span> <span data-ttu-id="43336-1062">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1062">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1063">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1063">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1064">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1064">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1065">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1065">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1066">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1066">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1067">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1067">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1068">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1068">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1069">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1069">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1070">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1070">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1071">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1071">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1072">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1072">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1073">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1073">This method has no default implementation.</span></span> <span data-ttu-id="43336-1074">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1074">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1075">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1075">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1076">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1076">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1077">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1077">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1078">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1078">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1079">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1079">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1080">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1080">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1081">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1081">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1082">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1082">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1083">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1083">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1084">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1084">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1085">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1085">This method has no default implementation.</span></span> <span data-ttu-id="43336-1086">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1086">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1087">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1087">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1088">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1088">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1089">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1089">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1090">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1090">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1091">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1091">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1092">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1092">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1093">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1093">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1094">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1094">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1095">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> que se produce cuando se captura una entrada táctil en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1095">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1096">El <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1096">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1097">Invalidar <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.GotTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1097">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="43336-1098">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1098">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1099">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1099">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1100">Se invoca cuando un evento <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> no administrado se provoca en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1100">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1101">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1101">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1102">Este método virtual se produce cuando el valor de la <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> cambios de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="43336-1102">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="43336-1103">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="43336-1103">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="43336-1104">La <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1104">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="43336-1105">Tenga en cuenta que el <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1105">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="43336-1106">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="43336-1106">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="43336-1107">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1107">This method has no default implementation.</span></span> <span data-ttu-id="43336-1108">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1108">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1109">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1109">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1110">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1110">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1111">Se invoca inmediatamente antes de que este elemento provoque el evento <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1111">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span>
          </span>
          <span data-ttu-id="43336-1112">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1112">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1113">Este método virtual se produce cuando el valor de la <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="43336-1113">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="43336-1114">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="43336-1114">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="43336-1115">La <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1115">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="43336-1116">Tenga en cuenta que el <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1116">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="43336-1117">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="43336-1117">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="43336-1118">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1118">This method has no default implementation.</span></span> <span data-ttu-id="43336-1119">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1119">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1120">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1120">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1121">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1121">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1122">Se invoca cuando un evento <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> no administrado se provoca en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1122">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1123">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1123">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1124">Este método virtual se produce cuando el valor de la <xref:System.Windows.ContentElement.IsMouseCaptured%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="43336-1124">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="43336-1125">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="43336-1125">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="43336-1126">La <xref:System.Windows.ContentElement.IsMouseCapturedChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1126">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="43336-1127">Tenga en cuenta que el <xref:System.Windows.ContentElement.IsMouseCapturedChanged> evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1127">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="43336-1128">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="43336-1128">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="43336-1129">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1129">This method has no default implementation.</span></span> <span data-ttu-id="43336-1130">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1130">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1131">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1131">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1132">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1132">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1133">Se invoca cuando un evento <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> no administrado se provoca en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1133">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1134">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1134">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="43336-1135">Este método virtual se produce cuando el valor de la <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> cambia los valores de propiedad de dependencia.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1135">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span>
            </span>
            <span data-ttu-id="43336-1136">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1136">The virtual method is raised first and can manipulate the event data as necessary.</span>
            </span>
            <span data-ttu-id="43336-1137">La <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> evento se provoca con esa misma instancia de datos de evento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1137">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span>
            </span>
            <span data-ttu-id="43336-1138">Observe que el evento no es un evento enrutado; Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1138">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span>
            </span>
            <span data-ttu-id="43336-1139">Este método no tiene ninguna implementación predeterminada.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1139">This method has no default implementation.</span>
            </span>
            <span data-ttu-id="43336-1140">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1140">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span>
            </span>
            <span data-ttu-id="43336-1141">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1141">You may call base either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1142">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1142">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1143">Se invoca cuando un evento <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> no administrado se provoca en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1143">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1144">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1144">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1145">Este método virtual se produce cuando el valor de la <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="43336-1145">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="43336-1146">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="43336-1146">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="43336-1147">La <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1147">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="43336-1148">Tenga en cuenta que el <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1148">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="43336-1149">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="43336-1149">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="43336-1150">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1150">This method has no default implementation.</span></span> <span data-ttu-id="43336-1151">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1151">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1152">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1152">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1153">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1153">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1154">Se invoca cuando un evento <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> no administrado se provoca en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1154">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1155">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1155">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1156">Este método virtual se produce cuando el valor de la <xref:System.Windows.ContentElement.IsStylusCaptured%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="43336-1156">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="43336-1157">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="43336-1157">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="43336-1158">La <xref:System.Windows.ContentElement.IsStylusCapturedChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1158">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="43336-1159">Observe que el evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1159">Notice that the event is not a routed event.</span></span> <span data-ttu-id="43336-1160">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="43336-1160">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="43336-1161">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1161">This method has no default implementation.</span></span> <span data-ttu-id="43336-1162">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1162">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1163">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1163">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1164">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1164">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1165">Se invoca cuando un evento <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> no administrado se provoca en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1165">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1166">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1166">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1167">Este método virtual se produce cuando el valor de la <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="43336-1167">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="43336-1168">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="43336-1168">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="43336-1169">La <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1169">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="43336-1170">Observe que el evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1170">Notice that the event is not a routed event.</span></span> <span data-ttu-id="43336-1171">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="43336-1171">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="43336-1172">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1172">This method has no default implementation.</span></span> <span data-ttu-id="43336-1173">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1173">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1174">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1174">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1175">Objeto <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1175">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1176">Se invoca cuando un evento <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> no administrado se provoca en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1176">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1177">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1177">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1178">Este método virtual se produce cuando el valor de la <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> cambia los valores de propiedad de dependencia.</span><span class="sxs-lookup"><span data-stu-id="43336-1178">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="43336-1179">El método virtual se produce en primer lugar y puede manipular los datos del evento según sea necesario.</span><span class="sxs-lookup"><span data-stu-id="43336-1179">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="43336-1180">La <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> evento se provoca con esa misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1180">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="43336-1181">Observe que el evento no es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1181">Notice that the event is not a routed event.</span></span> <span data-ttu-id="43336-1182">Por lo tanto, no puede marcarlo como controlado en el controlador de clase.</span><span class="sxs-lookup"><span data-stu-id="43336-1182">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="43336-1183">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1183">This method has no default implementation.</span></span> <span data-ttu-id="43336-1184">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1184">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1185">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1185">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1186">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1186">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1187">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1187">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1188">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1188">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1189">Pulsaciones de teclas se controlan mediante un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="43336-1189">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="43336-1190">Otras características de programación que se basan en las pulsaciones de tecla, por ejemplo, los enlaces de entrada y de comando, pueden controlar la pulsación de tecla antes de que se expone como una pulsación de tecla general.</span><span class="sxs-lookup"><span data-stu-id="43336-1190">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="43336-1191">Si estas características del sistema marcan el evento como controlado, a continuación, de entrada <xref:System.Windows.ContentElement.OnKeyDown%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="43336-1191">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="43336-1192">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1192">This method has no default implementation.</span></span> <span data-ttu-id="43336-1193">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1193">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1194">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1194">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1195">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1195">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1196">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1196">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1197">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1197">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1198">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1198">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1199">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1199">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1200">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1200">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1201">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1201">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1202">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1202">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1203">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1203">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1204">Pulsaciones de teclas se controlan mediante un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="43336-1204">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="43336-1205">Otras características de programación que se basan en las pulsaciones de tecla, por ejemplo, los enlaces de entrada y de comando, pueden controlar la pulsación de tecla antes de que se expone como una pulsación de tecla general.</span><span class="sxs-lookup"><span data-stu-id="43336-1205">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="43336-1206">Si estas características del sistema marcan el evento como controlado, a continuación, de entrada <xref:System.Windows.ContentElement.OnKeyUp%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="43336-1206">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="43336-1207">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1207">This method has no default implementation.</span></span> <span data-ttu-id="43336-1208">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1208">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1209">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1209">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1210">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1210">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1211">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1211">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1212">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1212">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1213">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1213">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1214">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1214">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1215">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1215">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1216">Objeto <see cref="T:System.Windows.RoutedEventArgs" /> que contiene datos de eventos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1216">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span>
          </span>
          <span data-ttu-id="43336-1217">Estos datos de evento deben contener el identificador para el evento <see cref="E:System.Windows.ContentElement.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1217">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1218">Genera el evento enrutado <see cref="E:System.Windows.ContentElement.LostFocus" /> mediante el uso de los datos de eventos proporcionados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1218">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1219">Este método, aunque sea virtual, tiene una implementación predeterminada que genera el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1219">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="43336-1220">Esto en \* implementación del método está pensada para generar el evento y esta misma implementación del método se invoca internamente para generar el evento cuando la <xref:System.Windows.ContentElement.IsFocused%2A> cambios de valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="43336-1220">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="43336-1221">Esta implementación es distinto de alguna otra [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] en \* implementaciones, que solo proporcionan una manera cómoda para agregar el control de clases para ese evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1221">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="43336-1222">A menos que tenga una necesidad imperiosa y no habitual para no provocar los eventos de foco, asegúrese de la implementación llama a la implementación base.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1222">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span>
            </span>
            <span data-ttu-id="43336-1223">En caso contrario, el <see cref="E:System.Windows.ContentElement.LostFocus" /> evento no se produce durante las operaciones típicas del usuario que normalmente establecen el foco a este elemento.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1223">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span>
            </span>
            <span data-ttu-id="43336-1224">Si no desea que el elemento que se va a recibir el foco, puede evitar que el elemento que se va a recibir el foco estableciendo <see cref="P:System.Windows.ContentElement.Focusable" /> a <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="43336-1224">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1225">
            <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1225">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1226">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1226">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1227">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1227">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1228">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1228">This method has no default implementation.</span></span> <span data-ttu-id="43336-1229">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1229">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1230">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1230">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1231">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1231">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1232">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1232">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1233">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1233">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1234">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1234">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1235">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1235">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1236">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1236">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1237">
            <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1237">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1238">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1238">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1239">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1239">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1240">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1240">This method has no default implementation.</span></span> <span data-ttu-id="43336-1241">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1241">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1242">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1242">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1243">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1243">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1244">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1244">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1245">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1245">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1246">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1246">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1247">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1247">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1248">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1248">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1249">
            <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1249">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1250">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1250">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1251">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1251">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1252">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1252">This method has no default implementation.</span></span> <span data-ttu-id="43336-1253">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1253">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1254">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1254">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1255">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1255">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1256">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1256">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1257">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1257">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1258">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1258">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1259">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1259">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1260">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1260">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1261">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1261">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1262">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> que se produce cuando este elemento pierde una captura de una entrada táctil.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1262">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1263">El <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1263">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1264">Invalidar <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.LostTouchCapture> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1264">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="43336-1265">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1265">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1266">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1266">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1267">Estos datos de evento informan de detalles sobre el botón del mouse que se presionó y el estado controlado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1267">This event data reports details about the mouse button that was pressed and the handled state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1268">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1268">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1269">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1269">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1270">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="43336-1270">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="43336-1271">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="43336-1271">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="43336-1272">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.ContentElement.OnMouseDown%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="43336-1272">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="43336-1273">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.ContentElement.MouseLeftButtonDown> y <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-1273">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="43336-1274">Uno de estos eventos se pueden generar en el elemento receptor cuando <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="43336-1274">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="43336-1275">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1275">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="43336-1276">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1276">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="43336-1277">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-1277">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="43336-1278">Controlando <xref:System.Windows.ContentElement.OnMouseDown%2A>, son lo que implica que el control de clases tiene en cuenta para todas las acciones de presionar el botón del mouse posibles.</span><span class="sxs-lookup"><span data-stu-id="43336-1278">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="43336-1279">Este comportamiento puede ser no deseado; por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1279">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="43336-1280">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1280">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="43336-1281">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1281">This method has no default implementation.</span></span> <span data-ttu-id="43336-1282">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1282">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1283">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1283">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1284">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1284">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1285">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1285">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1286">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1286">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1287">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1287">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1288">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1288">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1289">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1289">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1290">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1290">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1291">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> no controlado se genera en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1291">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1292">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1292">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1293">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1293">This method has no default implementation.</span></span> <span data-ttu-id="43336-1294">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1294">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1295">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1295">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="43336-1296">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1296">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1297">En este caso el evento correspondiente es un evento enrutado, con una estrategia de enrutamiento directo.</span><span class="sxs-lookup"><span data-stu-id="43336-1297">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="43336-1298">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1298">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1299">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1299">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1300">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> no controlado se genera en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1300">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1301">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1301">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1302">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1302">This method has no default implementation.</span></span> <span data-ttu-id="43336-1303">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1303">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1304">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1304">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="43336-1305">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1305">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1306">En este caso el evento correspondiente es un evento enrutado, con una estrategia de enrutamiento directo.</span><span class="sxs-lookup"><span data-stu-id="43336-1306">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="43336-1307">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1307">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1308">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1308">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1309">Los datos del evento indican que se presionó el botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1309">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1310">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> no controlado se genera en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1310">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span>
          </span>
          <span data-ttu-id="43336-1311">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1311">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1312">El <xref:System.Windows.ContentElement.MouseLeftButtonDown> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1312">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1313"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-1313"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="43336-1314">Aunque puede marcar el <xref:System.Windows.ContentElement.MouseLeftButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1314">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1315">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1315">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1316">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1316">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1317">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1317">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1318">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1318">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1319">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1319">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="43336-1320">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="43336-1320">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="43336-1321">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="43336-1321">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="43336-1322">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1322">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="43336-1323">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Button> e invalide <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> en su clase derivada sin llamar a la implementación base; sin embargo, esta invalidación deshabilita la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1323">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1324">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1324">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1325">Los datos del evento notifican que se soltó el botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1325">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1326">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1326">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1327">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1327">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1328">El <xref:System.Windows.ContentElement.MouseLeftButtonUp> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1328">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1329"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-1329"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="43336-1330">Aunque puede marcar el <xref:System.Windows.ContentElement.MouseLeftButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1330">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1331">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1331">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1332">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1332">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1333">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1333">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1334">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1334">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1335">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1335">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1336">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1336">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1337">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1337">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1338">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1338">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1339">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1339">This method has no default implementation.</span></span> <span data-ttu-id="43336-1340">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1340">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1341">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1341">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1342">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1342">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1343">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1343">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1344">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1344">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1345">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1345">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1346">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1346">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1347">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1347">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1348">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1348">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1349">Los datos del evento indican que se presionó el botón secundario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1349">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1350">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1350">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1351">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1351">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1352">El <xref:System.Windows.ContentElement.MouseRightButtonDown> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1352">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1353"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-1353"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="43336-1354">Aunque puede marcar el <xref:System.Windows.ContentElement.MouseRightButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1354">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1355">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1355">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1356">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1356">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1357">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1357">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1358">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1358">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1359">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1359">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="43336-1360">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="43336-1360">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="43336-1361">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="43336-1361">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="43336-1362">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1362">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="43336-1363">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Control> e invalide <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> en su clase derivada sin base que realiza la llamada; sin embargo, esta invalidación deshabilita los servicios de menú contextual en el control, que forman parte de la <xref:System.Windows.Controls.Control> comportamiento predeterminado.</span><span class="sxs-lookup"><span data-stu-id="43336-1363">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1364">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1364">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1365">Los datos del evento indican que se soltó el botón derecho del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1365">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1366">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1366">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1367">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1367">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1368">El <xref:System.Windows.ContentElement.MouseRightButtonUp> evento parece atravesar una ruta de propagación pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1368">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1369"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de burbujas y cada uno de ellos <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-1369"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="43336-1370">Aunque puede marcar el <xref:System.Windows.ContentElement.MouseRightButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1370">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1371">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1371">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1372">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1372">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1373">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1373">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1374">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1374">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1375">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1375">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1376">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1376">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1377">Los datos del evento informan de que se soltó el botón del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1377">The event data reports that the mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1378">Se invoca cuando un evento enrutado <see cref="E:System.Windows.Input.Mouse.MouseUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1378">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1379">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1379">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1380">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="43336-1380">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="43336-1381">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="43336-1381">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="43336-1382">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.ContentElement.OnMouseUp%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="43336-1382">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="43336-1383">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.ContentElement.MouseLeftButtonUp> y <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-1383">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="43336-1384">Uno de estos eventos puede producir en el elemento receptor cuando <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="43336-1384">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="43336-1385">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1385">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="43336-1386">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1386">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="43336-1387">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-1387">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="43336-1388">Controlando <xref:System.Windows.ContentElement.OnMouseUp%2A>, son lo que implica que el control de clases tiene en cuenta para todos los posibles botón las acciones.</span><span class="sxs-lookup"><span data-stu-id="43336-1388">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="43336-1389">Este comportamiento puede ser no deseado; Por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1389">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="43336-1390">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1390">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="43336-1391">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1391">This method has no default implementation.</span></span> <span data-ttu-id="43336-1392">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1392">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1393">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1393">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1394">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1394">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1395">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1395">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1396">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1396">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1397">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1397">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1398">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1398">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1399">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1399">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1400">Objeto <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1400">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1401">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1401">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1402">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1402">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1403">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1403">This method has no default implementation.</span></span> <span data-ttu-id="43336-1404">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1404">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1405">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1405">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1406">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1406">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1407">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1407">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1408">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1408">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1409">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1409">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1410">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1410">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1411">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1411">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1412">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1412">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1413">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1413">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1414">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1414">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1415">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1415">This method has no default implementation.</span></span> <span data-ttu-id="43336-1416">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1416">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1417">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1417">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1418">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1418">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1419">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1419">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1420">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1420">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1421">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1421">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1422">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1422">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1423">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1423">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1424">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1424">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1425">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1425">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1426">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1426">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1427">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1427">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1428">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1428">This method has no default implementation.</span></span> <span data-ttu-id="43336-1429">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1429">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1430">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1430">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1431">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1431">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1432">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1432">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1433">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1433">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1434">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1434">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1435">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1435">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1436">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1436">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1437">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1437">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1438">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1438">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1439">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1439">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1440">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1440">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1441">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1441">This method has no default implementation.</span></span> <span data-ttu-id="43336-1442">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1442">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1443">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1443">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1444">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1444">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1445">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1445">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1446">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1446">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1447">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1447">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1448">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1448">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1449">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1449">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1450">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1450">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1451">Objeto <see cref="T:System.Windows.DragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1451">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1452">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewDrop" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1452">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1453">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1453">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1454">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1454">This method has no default implementation.</span></span> <span data-ttu-id="43336-1455">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1455">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1456">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1456">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1457">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1457">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1458">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1458">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1459">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1459">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1460">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1460">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1461">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1461">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1462">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1462">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1463">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1463">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1464">Objeto <see cref="T:System.Windows.GiveFeedbackEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1464">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1465">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1465">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1466">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1466">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1467">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1467">This method has no default implementation.</span></span> <span data-ttu-id="43336-1468">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1468">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1469">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1469">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1470">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1470">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1471">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1471">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1472">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1472">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1473">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1473">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1474">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1474">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1475">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1475">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1476">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1476">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1477">Objeto <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1477">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1478">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1478">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1479">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1479">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1480">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1480">This method has no default implementation.</span></span> <span data-ttu-id="43336-1481">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1481">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1482">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1482">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1483">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1483">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1484">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1484">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1485">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1485">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1486">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1486">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1487">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1487">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1488">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1488">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1489">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1489">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1490">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1490">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1491">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1491">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1492">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1492">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1493">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1493">This method has no default implementation.</span></span> <span data-ttu-id="43336-1494">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1494">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1495">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1495">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1496">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1496">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1497">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1497">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1498">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1498">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1499">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1499">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1500">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1500">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1501">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1501">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1502">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1502">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1503">Objeto <see cref="T:System.Windows.Input.KeyEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1503">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1504">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1504">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1505">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1505">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1506">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1506">This method has no default implementation.</span></span> <span data-ttu-id="43336-1507">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1507">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1508">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1508">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1509">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1509">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1510">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1510">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1511">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1511">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1512">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1512">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1513">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1513">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1514">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1514">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1515">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1515">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1516">Objeto <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1516">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1517">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1517">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1518">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1518">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1519">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1519">This method has no default implementation.</span></span> <span data-ttu-id="43336-1520">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1520">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1521">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1521">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1522">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1522">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1523">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1523">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1524">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1524">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1525">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1525">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1526">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1526">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1527">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1527">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1528">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1528">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1529">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1529">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1530">Los datos de evento informan de que se presionaron uno o varios botones del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1530">The event data reports that one or more mouse buttons were pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1531">Se invoca cuando un evento enrutado adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> no controlado alcanza en su ruta un elemento derivado de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1531">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1532">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1532">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1533">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="43336-1533">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="43336-1534">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="43336-1534">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="43336-1535">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="43336-1535">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="43336-1536">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> y <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-1536">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="43336-1537">Uno de estos eventos se pueden generar en el elemento receptor cuando <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="43336-1537">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="43336-1538">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1538">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="43336-1539">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1539">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="43336-1540">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-1540">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="43336-1541">Controlando <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, son lo que implica que el control de clases tiene en cuenta para todas las acciones de presionar el botón del mouse posibles.</span><span class="sxs-lookup"><span data-stu-id="43336-1541">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="43336-1542">Este comportamiento puede ser no deseado; Por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1542">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="43336-1543">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1543">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="43336-1544">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1544">This method has no default implementation.</span></span> <span data-ttu-id="43336-1545">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1545">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1546">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1546">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1547">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1547">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1548">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1548">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1549">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1549">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1550">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1550">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1551">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1551">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1552">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1552">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1553">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1553">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1554">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1554">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1555">Los datos del evento indican que se presionó el botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1555">The event data reports that the left mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1556">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1556">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1557">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1557">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1558">El <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1558">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1559"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-1559"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="43336-1560">Aunque puede marcar el <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1560">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1561">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1561">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1562">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1562">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1563">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1563">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1564">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1564">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1565">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1565">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="43336-1566">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="43336-1566">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="43336-1567">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="43336-1567">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="43336-1568">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1568">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="43336-1569">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Button> e invalide <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> en su clase derivada sin llamar a la implementación base; sin embargo, esta invalidación deshabilita la <xref:System.Windows.Controls.Primitives.ButtonBase.Click> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1569">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1570">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1570">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1571">Los datos del evento notifican que se soltó el botón primario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1571">The event data reports that the left mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1572">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1572">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1573">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1573">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1574">El <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1574">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1575"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-1575"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="43336-1576">Aunque puede marcar el <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1576">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1577">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1577">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1578">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1578">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1579">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1579">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1580">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1580">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1581">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1581">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1582">Objeto <see cref="T:System.Windows.Input.MouseEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1582">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1583">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1583">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1584">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1584">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1585">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1585">This method has no default implementation.</span></span> <span data-ttu-id="43336-1586">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1586">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1587">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1587">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1588">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1588">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1589">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1589">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1590">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1590">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1591">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1591">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1592">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1592">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1593">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1593">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1594">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1594">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1595">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1595">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1596">Los datos del evento indican que se presionó el botón secundario del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1596">The event data reports that the right mouse button was pressed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1597">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1597">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1598">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1598">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1599">El <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1599">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1600"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-1600"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="43336-1601">Aunque puede marcar el <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1601">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1602">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1602">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1603">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1603">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1604">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1604">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1605">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1605">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1606">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1606">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="43336-1607">Como alternativa, puede invalidar este método para modificar el control de eventos para un estado de mouse específico.</span><span class="sxs-lookup"><span data-stu-id="43336-1607">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="43336-1608">Si opta por llamar a la implementación base depende de su escenario.</span><span class="sxs-lookup"><span data-stu-id="43336-1608">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="43336-1609">Error al llamar a la base deshabilita el control de entrada predeterminado para ese evento del mouse en las clases antecesoras que también esperan invocar <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1609">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="43336-1610">Por ejemplo, puede derivar de <xref:System.Windows.Controls.Control> e invalide <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> en su clase derivada sin base que realiza la llamada; sin embargo, esta invalidación deshabilita los servicios de menú contextual en el control, que forman parte de la <xref:System.Windows.Controls.Control> comportamiento predeterminado.</span><span class="sxs-lookup"><span data-stu-id="43336-1610">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1611">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1611">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1612">Los datos del evento indican que se soltó el botón derecho del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1612">The event data reports that the right mouse button was released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1613">Se invoca cuando un evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> no controlado alcanza un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1613">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1614">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1614">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1615">El <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> evento parece atravesar una ruta de tunelización pero realmente se desplaza de forma indirecta.</span><span class="sxs-lookup"><span data-stu-id="43336-1615">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="43336-1616"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> es el evento subyacente que se enrutan de túnel y cada <xref:System.Windows.ContentElement> a lo largo del evento ruta usa el control idéntico para generar el evento enrutado directo <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-1616"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="43336-1617">Aunque puede marcar el <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> evento como controlado para los fines de este elemento, el estado controlado no perpetuarse a otros elementos a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1617">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="43336-1618">Sin embargo, puede marcar el evento como controlado para evitar que los controladores de instancia general (aquellos que no especificó `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1618">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="43336-1619">La implementación predeterminada de mouse general control de eventos en <xref:System.Windows.ContentElement> escucha <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> y lo convierte en un evento local adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1619">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="43336-1620">Si desea invalidar esta lógica, debe crear una clase derivada.</span><span class="sxs-lookup"><span data-stu-id="43336-1620">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="43336-1621">En el constructor estático de la clase derivada, registra un controlador de clase alternativa para <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="43336-1621">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="43336-1622">No se puede cambiar el mouse (ratón) comportamiento de <xref:System.Windows.ContentElement> invalidando <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-1622">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1623">Objeto <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1623">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span>
          </span>
          <span data-ttu-id="43336-1624">Los datos de evento informan de que se soltaron uno o varios botones del mouse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1624">The event data reports that one or more mouse buttons were released.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1625">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1625">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1626">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1626">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1627">Acciones de los botones del mouse también las controla un administrador de entrada dedicado.</span><span class="sxs-lookup"><span data-stu-id="43336-1627">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="43336-1628">Otras características de programación que se basan en acciones de los botones del mouse, como entrada y enlaces de comando, pueden invocar controladores para la acción antes de que se expone como una acción de botón de mouse general.</span><span class="sxs-lookup"><span data-stu-id="43336-1628">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="43336-1629">Si estos marca de características de sistema de entrada del <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento como controlado, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> no se invoca.</span><span class="sxs-lookup"><span data-stu-id="43336-1629">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="43336-1630">Si usa este controlador de clases para marcar el evento como controlado, podría afectar los siguientes eventos: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> y <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-1630">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="43336-1631">Uno de estos eventos puede producir en el elemento receptor cuando <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> se recibe.</span><span class="sxs-lookup"><span data-stu-id="43336-1631">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="43336-1632">Si marca este evento como controlado en el control de clases, se siguen provocando los eventos secundarios; Sin embargo, pasan el estado controlado en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1632">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="43336-1633">Si se controló el evento de control de clases, no se invocan controladores de instancia para los eventos secundarios a menos que utilice explícitamente <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> con `handledEventsToo` `true` para adjuntar controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1633">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="43336-1634">Controladores de clases también no se invocan a menos que se registraron los controladores de clases con el <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma con `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="43336-1634">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="43336-1635">Controlando <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, son lo que implica que el control de clases tiene en cuenta para todos los posibles botón las acciones.</span><span class="sxs-lookup"><span data-stu-id="43336-1635">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="43336-1636">Este comportamiento puede ser no deseado; Por lo tanto, tenga cuidado cuando use este método virtual para marcar eventos como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1636">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="43336-1637">Cada uno de los eventos directos específicos de los botones también tiene una máquina \* método; Tenga en cuenta si reemplazar estos controladores de clase específica de botón puede ser más adecuado.</span><span class="sxs-lookup"><span data-stu-id="43336-1637">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="43336-1638">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1638">This method has no default implementation.</span></span> <span data-ttu-id="43336-1639">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1639">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1640">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1640">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1641">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1641">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1642">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1642">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1643">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1643">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1644">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1644">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1645">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1645">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1646">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1646">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1647">Objeto <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1647">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1648">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1648">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1649">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1649">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1650">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1650">This method has no default implementation.</span></span> <span data-ttu-id="43336-1651">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1651">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1652">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1652">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1653">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1653">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1654">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1654">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1655">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1655">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1656">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1656">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1657">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1657">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1658">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1658">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1659">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1659">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1660">Objeto <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1660">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1661">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1661">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1662">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1662">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1663">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1663">This method has no default implementation.</span></span> <span data-ttu-id="43336-1664">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1664">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1665">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1665">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1666">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1666">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1667">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1667">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1668">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1668">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1669">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1669">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1670">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1670">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1671">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1671">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1672">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1672">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1673">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1673">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1674">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1674">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1675">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1675">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1676">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1676">This method has no default implementation.</span></span> <span data-ttu-id="43336-1677">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1677">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1678">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1678">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1679">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1679">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1680">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1680">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1681">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1681">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1682">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1682">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1683">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1683">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1684">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1684">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1685">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1685">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1686">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1686">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1687">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1687">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1688">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1688">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1689">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1689">This method has no default implementation.</span></span> <span data-ttu-id="43336-1690">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1690">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1691">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1691">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1692">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1692">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1693">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1693">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1694">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1694">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1695">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1695">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1696">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1696">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1697">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1697">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1698">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1698">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1699">Objeto <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1699">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1700">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1700">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1701">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1701">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1702">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1702">This method has no default implementation.</span></span> <span data-ttu-id="43336-1703">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1703">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1704">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1704">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1705">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1705">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1706">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1706">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1707">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1707">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1708">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1708">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1709">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1709">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1710">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1710">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1711">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1711">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1712">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1712">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1713">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1713">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1714">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1714">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1715">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1715">This method has no default implementation.</span></span> <span data-ttu-id="43336-1716">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1716">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1717">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1717">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1718">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1718">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1719">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1719">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1720">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1720">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1721">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1721">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1722">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1722">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1723">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1723">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1724">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1724">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1725">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1725">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1726">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1726">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1727">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1727">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1728">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1728">This method has no default implementation.</span></span> <span data-ttu-id="43336-1729">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1729">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1730">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1730">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1731">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1731">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1732">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1732">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1733">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1733">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1734">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1734">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1735">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1735">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1736">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1736">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1737">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1737">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1738">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1738">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1739">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1739">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1740">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1740">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1741">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1741">This method has no default implementation.</span></span> <span data-ttu-id="43336-1742">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1742">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1743">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1743">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1744">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1744">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1745">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1745">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1746">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1746">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1747">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1747">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1748">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1748">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1749">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1749">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1750">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1750">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1751">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1751">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1752">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1752">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1753">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1753">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1754">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1754">This method has no default implementation.</span></span> <span data-ttu-id="43336-1755">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1755">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1756">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1756">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1757">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1757">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1758">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1758">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1759">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1759">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1760">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1760">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1761">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1761">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1762">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1762">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1763">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1763">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1764">Objeto <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1764">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1765">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1765">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1766">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1766">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1767">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1767">This method has no default implementation.</span></span> <span data-ttu-id="43336-1768">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1768">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1769">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1769">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1770">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1770">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1771">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1771">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1772">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1772">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1773">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1773">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1774">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1774">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1775">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1775">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1776">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1776">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1777">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1777">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1778">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1778">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1779">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1779">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1780">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1780">This method has no default implementation.</span></span> <span data-ttu-id="43336-1781">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1781">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1782">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1782">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1783">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1783">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1784">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1784">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1785">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1785">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1786">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1786">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1787">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1787">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1788">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1788">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1789">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1789">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1790">Objeto <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1790">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1791">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1791">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1792">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1792">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1793">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1793">This method has no default implementation.</span></span> <span data-ttu-id="43336-1794">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1794">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1795">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1795">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1796">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1796">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1797">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1797">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1798">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1798">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1799">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1799">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1800">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1800">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1801">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1801">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="43336-1802">Otro escenario que es específicamente para los eventos de vista previa es marcarlos como administrados para que no se invocan controladores de clase de propagación coincidentes.</span><span class="sxs-lookup"><span data-stu-id="43336-1802">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1803">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1803">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1804">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> que se produce cuando una entrada táctil presiona este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1804">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1805">El <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1805">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1806">Invalidar <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.PreviewTouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1806">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="43336-1807">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1807">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1808">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1808">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1809">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> que se produce cuando se mueve una entrada táctil mientras se está dentro de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1809">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1810">El <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1810">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1811">Invalidar <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.PreviewTouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1811">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="43336-1812">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1812">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1813">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1813">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1814">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> que se produce cuando se libera una entrada táctil dentro de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1814">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1815">El <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1815">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1816">Invalidar <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.PreviewTouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1816">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="43336-1817">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1817">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1818">Objeto <see cref="T:System.Windows.QueryContinueDragEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1818">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1819">Se invoca cuando un evento adjunto <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1819">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1820">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1820">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1821">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1821">This method has no default implementation.</span></span> <span data-ttu-id="43336-1822">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1822">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1823">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1823">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1824">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1824">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1825">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1825">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1826">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1826">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1827">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1827">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1828">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1828">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1829">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1829">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1830">Objeto <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1830">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1831">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1831">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1832">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1832">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1833">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1833">This method has no default implementation.</span></span> <span data-ttu-id="43336-1834">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1834">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1835">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1835">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1836">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1836">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1837">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1837">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1838">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1838">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1839">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1839">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1840">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1840">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1841">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1841">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1842">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1842">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1843">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1843">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1844">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1844">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1845">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1845">This method has no default implementation.</span></span> <span data-ttu-id="43336-1846">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1846">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1847">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1847">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1848">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1848">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1849">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1849">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1850">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1850">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1851">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1851">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1852">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1852">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1853">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1853">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1854">Objeto <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1854">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1855">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1855">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1856">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1856">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1857">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1857">This method has no default implementation.</span></span> <span data-ttu-id="43336-1858">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1858">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1859">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1859">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1860">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1860">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1861">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1861">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1862">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1862">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1863">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1863">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1864">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1864">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1865">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1865">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1866">Objeto <see cref="T:System.Windows.Input.StylusDownEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1866">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1867">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusDown" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1867">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1868">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1868">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1869">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1869">This method has no default implementation.</span></span> <span data-ttu-id="43336-1870">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1870">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1871">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1871">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1872">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1872">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1873">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1873">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1874">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1874">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1875">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1875">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1876">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1876">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1877">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1877">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1878">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1878">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1879">Se invoca cuando este elemento genera un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> no controlado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1879">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="43336-1880">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1880">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1881">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1881">This method has no default implementation.</span></span> <span data-ttu-id="43336-1882">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1882">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1883">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1883">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="43336-1884">El propósito de este método es similar a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1884">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1885">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1885">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1886">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1886">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1887">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1887">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1888">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1888">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1889">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1889">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1890">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1890">This method has no default implementation.</span></span> <span data-ttu-id="43336-1891">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1891">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1892">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1892">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1893">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1893">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1894">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1894">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1895">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1895">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1896">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1896">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1897">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1897">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1898">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1898">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1899">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1899">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1900">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1900">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1901">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1901">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1902">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1902">This method has no default implementation.</span></span> <span data-ttu-id="43336-1903">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1903">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1904">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1904">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1905">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1905">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1906">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1906">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1907">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1907">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1908">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1908">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1909">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1909">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1910">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1910">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1911">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1911">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1912">Se invoca cuando este elemento genera un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> no controlado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1912">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span>
          </span>
          <span data-ttu-id="43336-1913">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1913">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1914">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1914">This method has no default implementation.</span></span> <span data-ttu-id="43336-1915">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1915">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="43336-1916">Puede llamar a base antes o después de su tratamiento especial, dependiendo de los requisitos.</span><span class="sxs-lookup"><span data-stu-id="43336-1916">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="43336-1917">El propósito de este método es similar a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1917">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1918">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1918">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1919">Marcar el evento como controlado sigue siendo útil para evitar que los controladores de instancias típicos (los que no se especifica `handledEventsToo`) desde que se va a invocar.</span><span class="sxs-lookup"><span data-stu-id="43336-1919">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1920">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1920">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1921">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusMove" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1921">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1922">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1922">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1923">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1923">This method has no default implementation.</span></span> <span data-ttu-id="43336-1924">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1924">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1925">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1925">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1926">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1926">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1927">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1927">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1928">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1928">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1929">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1929">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1930">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1930">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1931">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1931">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1932">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1932">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1933">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1933">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1934">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1934">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1935">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1935">This method has no default implementation.</span></span> <span data-ttu-id="43336-1936">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1936">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1937">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1937">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1938">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1938">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1939">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1939">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1940">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1940">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1941">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1941">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1942">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1942">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1943">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1943">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1944">Objeto <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1944">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1945">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1945">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1946">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1946">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1947">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1947">This method has no default implementation.</span></span> <span data-ttu-id="43336-1948">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1948">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1949">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1949">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1950">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1950">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1951">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1951">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1952">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1952">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1953">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1953">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1954">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1954">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1955">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1955">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1956">Objeto <see cref="T:System.Windows.Input.StylusEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1956">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1957">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.Stylus.StylusUp" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1957">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1958">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1958">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1959">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1959">This method has no default implementation.</span></span> <span data-ttu-id="43336-1960">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1960">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1961">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1961">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1962">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1962">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1963">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1963">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1964">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1964">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1965">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1965">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1966">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1966">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1967">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1967">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1968">Objeto <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1968">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1969">Se invoca cuando un evento adjunto <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> sin controlar alcanza a un elemento derivado de esta clase en su ruta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1969">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span>
          </span>
          <span data-ttu-id="43336-1970">Implemente este método a fin de agregar el control de clases para este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1970">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1971">Este método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1971">This method has no default implementation.</span></span> <span data-ttu-id="43336-1972">Dado que una clase intermedia en la herencia podría implementar este método, se recomienda que llame a la implementación base en su implementación.</span><span class="sxs-lookup"><span data-stu-id="43336-1972">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="43336-1973">El propósito de este método es similar a la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] patrón de eventos en \* métodos: este método proporciona los medios para controlar el evento correspondiente de las clases derivadas mediante el establecimiento de un controlador de clase en lugar de un controlador de instancia.</span><span class="sxs-lookup"><span data-stu-id="43336-1973">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="43336-1974">En este caso el evento correspondiente es un evento enrutado.</span><span class="sxs-lookup"><span data-stu-id="43336-1974">In this case the matching event is a routed event.</span></span> <span data-ttu-id="43336-1975">El modelo de implementación de los métodos On \* es diferente para los eventos enrutados porque se puede generar un evento enrutado por un elemento secundario, que no es necesariamente el elemento que va a invocar los controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-1975">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="43336-1976">Por lo tanto, la implementación debe examinar las propiedades del origen de datos de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1976">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="43336-1977">No debe intentar reraise () el evento en la mayoría de los casos.</span><span class="sxs-lookup"><span data-stu-id="43336-1977">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="43336-1978">Mediante la invalidación de este método o registrando los controladores de clase <xref:System.Windows.EventManager.RegisterClassHandler%2A>, las clases derivadas de <xref:System.Windows.ContentElement> puede llamar a métodos de controlador de clase privados cuando se recibe el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1978">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="43336-1979">Es un escenario donde el control de clases es adecuado manipular los datos del evento y marcar el evento enrutado como controlado.</span><span class="sxs-lookup"><span data-stu-id="43336-1979">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1980">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1980">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1981">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.TouchDown" /> que se produce cuando una entrada táctil presiona dentro de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1981">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1982">El <xref:System.Windows.ContentElement.OnTouchDown%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1982">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1983">Invalidar <xref:System.Windows.ContentElement.OnTouchDown%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.TouchDown> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1983">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="43336-1984">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnTouchDown%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1984">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1985">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1985">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1986">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.TouchEnter" /> que se produce cuando una entrada táctil se mueve de afuera adentro de los límites de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1986">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1987">El <xref:System.Windows.ContentElement.OnTouchEnter%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1987">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1988">Invalidar <xref:System.Windows.ContentElement.OnTouchEnter%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.TouchEnter> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1988">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="43336-1989">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnTouchEnter%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1989">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1990">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1990">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1991">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.TouchLeave" /> que se produce cuando una entrada táctil se mueve de dentro afuera en los límites de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1991">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1992">El <xref:System.Windows.ContentElement.OnTouchLeave%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1992">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1993">Invalidar <xref:System.Windows.ContentElement.OnTouchLeave%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.TouchLeave> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1993">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="43336-1994">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnTouchLeave%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1994">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-1995">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1995">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-1996">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.TouchMove" /> que se produce cuando se mueve una entrada táctil mientras se está dentro de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-1996">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-1997">El <xref:System.Windows.ContentElement.OnTouchMove%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-1997">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-1998">Invalidar <xref:System.Windows.ContentElement.OnTouchMove%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.TouchMove> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-1998">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="43336-1999">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnTouchMove%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-1999">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-2000">Objeto <see cref="T:System.Windows.Input.TouchEventArgs" /> que contiene los datos del evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2000">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-2001">Proporciona control de clases para el evento enrutado <see cref="E:System.Windows.ContentElement.TouchUp" /> que se produce cuando se libera una entrada táctil dentro de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2001">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2002">El <xref:System.Windows.ContentElement.OnTouchUp%2A> método no tiene ninguna implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="43336-2002">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="43336-2003">Invalidar <xref:System.Windows.ContentElement.OnTouchUp%2A> en una clase derivada para controlar la <xref:System.Windows.ContentElement.TouchUp> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-2003">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="43336-2004">No olvide llamar a la clase base <xref:System.Windows.ContentElement.OnTouchUp%2A> método para que las clases base reciban el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2004">Be sure to call the base class’s <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="43336-2005">Dirección del recorrido de foco solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2005">The direction of the requested focus traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-2006">Cuando se invalida en una clase derivada, devuelve el elemento que recibiría el foco según la dirección de recorrido de foco especificada, sin mover realmente el foco a ese elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2006">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-2007">Elemento que recibiría el foco si se invocara <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> realmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2007">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2008">La implementación predeterminada de este método en esta clase está incompleta y siempre devuelve `null`.</span><span class="sxs-lookup"><span data-stu-id="43336-2008">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2009">Se produce cuando el sistema de entrada notifica un evento de arrastre subyacente con este elemento como el destino del arrastre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2009">Occurs when the input system reports an underlying drag event with this element as the drag target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2010">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewDragEnter> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2010">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2011">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewDragEnter> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2011">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2012">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2012">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2013">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2013">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="43336-2014">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2014">Routing strategy</span></span>|<span data-ttu-id="43336-2015">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2015">Tunneling</span></span>|  
|<span data-ttu-id="43336-2016">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2016">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-2017">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="43336-2017">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="43336-2018">Invalidar <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2018">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2019">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewDragEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2019">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2020">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2020">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2021">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2021">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2022">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2022">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2023">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2023">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2024">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2024">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2025">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como el origen del arrastre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2025">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2026">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewDragLeave> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2026">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2027">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewDragLeave> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2027">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2028">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2028">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2029">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2029">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="43336-2030">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2030">Routing strategy</span></span>|<span data-ttu-id="43336-2031">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2031">Tunneling</span></span>|  
|<span data-ttu-id="43336-2032">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2032">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-2033">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="43336-2033">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="43336-2034">Invalidar <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2034">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2035">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewDragLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2035">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2036">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2036">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2037">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2037">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2038">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2038">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2039">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2039">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2040">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2040">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2041">Se produce cuando el sistema de entrada informa de un evento de arrastre subyacente con este elemento como destino potencial de la colocación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2041">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2042">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewDragOver> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2042">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2043">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewDragOver> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2043">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2044">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2044">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2045">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2045">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="43336-2046">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2046">Routing strategy</span></span>|<span data-ttu-id="43336-2047">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2047">Tunneling</span></span>|  
|<span data-ttu-id="43336-2048">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2048">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-2049">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="43336-2049">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="43336-2050">Invalidar <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2050">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2051">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewDragOver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2051">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2052">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2052">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2053">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2053">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2054">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2054">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2055">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2055">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2056">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2056">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2057">Se produce cuando el sistema de entrada notifica un evento de colocación subyacente con este elemento como el destino de la colocación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2057">Occurs when the input system reports an underlying drop event with this element as the drop target.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2058">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewDrop> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2058">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2059">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewDrop> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2059">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2060">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2060">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2061">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2061">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="43336-2062">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2062">Routing strategy</span></span>|<span data-ttu-id="43336-2063">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2063">Tunneling</span></span>|  
|<span data-ttu-id="43336-2064">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2064">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="43336-2065">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="43336-2065">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="43336-2066">Invalidar <xref:System.Windows.ContentElement.OnPreviewDrop%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2066">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2067">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewDrop" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2067">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2068">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2068">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2069">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2069">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2070">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2070">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2071">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2071">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2072">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2072">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2073">Se produce cuando se inicia una operación de arrastrar y colocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2073">Occurs when a drag-and-drop operation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2074">El <xref:System.Windows.ContentElement.PreviewGiveFeedback> evento permite al origen de un evento de arrastre para modificar la apariencia del puntero del mouse (ratón), con el fin de proporcionar información visual al usuario durante una operación de arrastrar y colocar.</span><span class="sxs-lookup"><span data-stu-id="43336-2074">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="43336-2075">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewGiveFeedback> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2075">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2076">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewGiveFeedback> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2076">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2077">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2077">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2078">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2078">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="43336-2079">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2079">Routing strategy</span></span>|<span data-ttu-id="43336-2080">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2080">Tunneling</span></span>|  
|<span data-ttu-id="43336-2081">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2081">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="43336-2082">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="43336-2082">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="43336-2083">Invalidar <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2083">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2084">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2084">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2085">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2085">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2086">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2086">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2087">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2087">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2088">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2088">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2089">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2089">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2090">Se produce cuando este elemento recibe el foco del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2090">Occurs when the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2091">Dado que este evento usa enrutamiento de túnel, el elemento que tiene el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-2091">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-2092">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que tiene el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-2092">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="43336-2093">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2093">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2094">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2094">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2095">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2095">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2096">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2096">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="43336-2097">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2097">Routing strategy</span></span>|<span data-ttu-id="43336-2098">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2098">Tunneling</span></span>|  
|<span data-ttu-id="43336-2099">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2099">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="43336-2100">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="43336-2100">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="43336-2101">Invalidar <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2101">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2102">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2102">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2103">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2103">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2104">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2104">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2105">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2105">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2106">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2106">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2107">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2107">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2108">Se produce al presionar una tecla mientras este elemento recibe el foco del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2108">Occurs when a key is pressed while the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2109">Control de claves interactúa con otras características de la plataforma, como la composición de comandos y el texto.</span><span class="sxs-lookup"><span data-stu-id="43336-2109">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="43336-2110">El <xref:System.Windows.ContentElement.KeyDown> evento es un evento de entrada de texto de nivel inferior que podría no funcionar como se esperaba en ciertos controles.</span><span class="sxs-lookup"><span data-stu-id="43336-2110">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="43336-2111">Esto es debido a que algunos controles tienen la composición del control o control de clases que proporciona una versión de un nivel más alto del texto de entrada de control y eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="43336-2111">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="43336-2112">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewKeyDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2112">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2113">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewKeyDown> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2113">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2114">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2114">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2115">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2115">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="43336-2116">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2116">Routing strategy</span></span>|<span data-ttu-id="43336-2117">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2117">Tunneling</span></span>|  
|<span data-ttu-id="43336-2118">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2118">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="43336-2119">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2119">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="43336-2120">Invalidar <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2120">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2121">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewKeyDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2121">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2122">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2122">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2123">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2123">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2124">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2124">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2125">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2125">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2126">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2126">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2127">Se produce al soltar una tecla mientras este elemento recibe el foco del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2127">Occurs when a key is released while the keyboard is focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2128">Control de claves interactúa con otras características de la plataforma, como la composición de comandos y el texto.</span><span class="sxs-lookup"><span data-stu-id="43336-2128">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="43336-2129">El <xref:System.Windows.ContentElement.KeyUp> evento es un evento de entrada de texto de nivel inferior que podría no funcionar como se esperaba en ciertos controles.</span><span class="sxs-lookup"><span data-stu-id="43336-2129">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="43336-2130">Esto es debido a que algunos controles tienen la composición del control o control de clases que proporciona una versión de un nivel más alto del texto de entrada de control y eventos relacionados.</span><span class="sxs-lookup"><span data-stu-id="43336-2130">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="43336-2131">Para obtener más información, consulte la documentación de los controles individuales.</span><span class="sxs-lookup"><span data-stu-id="43336-2131">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="43336-2132">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewKeyUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2132">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2133">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewKeyUp> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2133">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2134">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2134">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2135">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2135">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="43336-2136">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2136">Routing strategy</span></span>|<span data-ttu-id="43336-2137">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2137">Tunneling</span></span>|  
|<span data-ttu-id="43336-2138">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2138">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="43336-2139">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2139">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="43336-2140">Invalidar <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2140">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2141">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewKeyUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2141">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2142">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2142">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2143">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2143">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2144">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2144">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2145">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2145">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2146">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2146">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2147">Se produce cuando este elemento deja de recibir el foco del teclado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2147">Occurs when the keyboard is no longer focused on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2148">Dado que este evento usa enrutamiento de túnel, el elemento que perdió el foco puede ser un elemento secundario en lugar del elemento que está asociado actualmente el controlador de eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-2148">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="43336-2149">Compruebe el <xref:System.Windows.RoutedEventArgs.Source%2A> en los datos del evento para determinar el elemento real que perdió el foco.</span><span class="sxs-lookup"><span data-stu-id="43336-2149">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="43336-2150">Este evento crea un alias para la <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2150">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2151">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> eventos están conectados a subyacente <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2151">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2152">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2152">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2153">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2153">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="43336-2154">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2154">Routing strategy</span></span>|<span data-ttu-id="43336-2155">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2155">Tunneling</span></span>|  
|<span data-ttu-id="43336-2156">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2156">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="43336-2157">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="43336-2157">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="43336-2158">Invalidar <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2158">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2159">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2159">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2160">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2160">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2161">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2161">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2162">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2162">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2163">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2163">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2164">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2164">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2165">Se produce al presionar cualquier botón del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2165">Occurs when any mouse button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2166">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewMouseDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2166">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2167">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewMouseDown> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2167">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2168">El <xref:System.Windows.ContentElement.PreviewMouseDown> evento se genera a menudo junto con cualquiera <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> o <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, que corresponde a una pulsación de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="43336-2168">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="43336-2169"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> y <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2169"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="43336-2170">Vea la sección Comentarios para <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> o <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2170">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2171">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2171">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2172">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2172">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="43336-2173">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2173">Routing strategy</span></span>|<span data-ttu-id="43336-2174">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2174">Tunneling</span></span>|  
|<span data-ttu-id="43336-2175">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2175">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2176">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2176">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="43336-2177">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2177">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2178">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2178">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2179">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2179">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2180">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2180">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2181">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2181">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2182">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2182">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2183">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2183">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2184">Se produce al presionar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2184">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2185">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2185">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-2186">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2186">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-2187">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-2187">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-2188">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2188">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-2189">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-2189">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-2190">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2190">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-2191">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2191">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2192">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2192">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2193">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2193">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="43336-2194">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2194">Routing strategy</span></span>|<span data-ttu-id="43336-2195">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2195">Direct</span></span>|  
|<span data-ttu-id="43336-2196">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2196">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2197">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2197">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2198">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2198">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2199">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2199">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2200">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2200">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2201">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2201">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2202">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2202">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2203">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2203">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2204">Se produce al soltar el botón primario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2204">Occurs when the left mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2205">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2205">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-2206">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2206">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-2207">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-2207">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-2208">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2208">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-2209">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-2209">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-2210">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2210">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-2211">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2211">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2212">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2212">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2213">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2213">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="43336-2214">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2214">Routing strategy</span></span>|<span data-ttu-id="43336-2215">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2215">Direct</span></span>|  
|<span data-ttu-id="43336-2216">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2216">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2217">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2217">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2218">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2218">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2219">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2219">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2220">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2220">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2221">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2221">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2222">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2222">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2223">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2223">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2224">Se produce al mover el puntero del mouse mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2224">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2225">Este evento produce cuando el puntero del mouse entra por primera vez en los límites del elemento, y también cuando el puntero del mouse se desplaza mientras permanece dentro de los límites del elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-2225">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="43336-2226">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewMouseMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2226">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2227">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewMouseMove> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2227">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2228">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2228">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2229">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2229">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="43336-2230">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2230">Routing strategy</span></span>|<span data-ttu-id="43336-2231">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2231">Tunneling</span></span>|  
|<span data-ttu-id="43336-2232">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2232">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="43336-2233">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-2233">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="43336-2234">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2234">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2235">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2235">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2236">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2236">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2237">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2237">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2238">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2238">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2239">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2239">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2240">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2240">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2241">Se produce al pulsar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2241">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2242">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2242">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-2243">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2243">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-2244">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-2244">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-2245">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2245">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-2246">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-2246">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-2247">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2247">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-2248">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2248">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2249">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2249">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2250">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2250">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="43336-2251">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2251">Routing strategy</span></span>|<span data-ttu-id="43336-2252">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2252">Direct</span></span>|  
|<span data-ttu-id="43336-2253">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2253">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2254">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2254">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2255">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2255">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2256">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2256">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2257">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2257">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2258">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2258">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2259">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2259">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2260">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2260">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2261">Se produce al soltar el botón secundario del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2261">Occurs when the right mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2262">Aunque esto [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) parece siguen una ruta túnel a través de un árbol de elementos, en realidad es un evento enrutado directo que se genera y se vuelven a generar a lo largo del árbol de elementos cada uno <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2262">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="43336-2263">Este evento es uno de los diversos eventos relacionados que informa de los detalles del botón del mouse de un subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento, que es un evento adjunto que es procesado por cada elemento en una ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2263">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="43336-2264">Los argumentos de este evento exponen los argumentos de subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> eventos.</span><span class="sxs-lookup"><span data-stu-id="43336-2264">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="43336-2265">Si ese evento está marcado como controlado en la ruta del evento, aún se producen los eventos específicos del botón del mouse; Sin embargo, los controladores de los eventos específicos del botón del mouse se deben agregar llamando explícitamente a <xref:System.Windows.ContentElement.AddHandler%2A>, con la opción para controlar los eventos que ya se ha marcado como controlado, para ser conforme a los agentes de escucha al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2265">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="43336-2266">Conceptualmente, considere este evento (y otros eventos del botón del mouse en <xref:System.Windows.ContentElement>) como un mouse "servicio" (con la definición de servicio proporcionada por la <xref:System.Windows.Input.Mouse> clase).</span><span class="sxs-lookup"><span data-stu-id="43336-2266">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="43336-2267">El evento agrega la comodidad de no se necesita comprobar el estado del botón del mouse (izquierda, arriba y abajo) de los eventos de mouse originales en los datos del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2267">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="43336-2268">Para escenarios más avanzados, como la comprobación de los Estados de botones no estándar, deberá usar el [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] en el <xref:System.Windows.Input.Mouse> clase en lugar de aquellos en <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2268">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2269">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2270">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2270">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="43336-2271">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2271">Routing strategy</span></span>|<span data-ttu-id="43336-2272">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2272">Direct</span></span>|  
|<span data-ttu-id="43336-2273">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2273">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2274">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2274">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2275">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2275">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2276">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2276">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2277">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2277">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2278">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2278">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2279">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2279">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2280">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2280">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2281">Se produce al soltar cualquier botón del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2281">Occurs when any mouse button is released while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2282">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewMouseUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2282">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2283">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewMouseUp> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2283">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2284">El <xref:System.Windows.ContentElement.PreviewMouseUp> evento se genera a menudo junto con cualquiera <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> o <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, que corresponde a una pulsación de uno de los dos botones del mouse estándar.</span><span class="sxs-lookup"><span data-stu-id="43336-2284">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="43336-2285"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> y <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> también son eventos enrutados, pero son eventos enrutados directos y se genera el evento específicos de los botones adecuado cuando la <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> evento llega a este elemento en la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2285"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="43336-2286">Vea la sección Comentarios para <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> o <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2286">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2287">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2287">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2288">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2288">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="43336-2289">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2289">Routing strategy</span></span>|<span data-ttu-id="43336-2290">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2290">Tunneling</span></span>|  
|<span data-ttu-id="43336-2291">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2291">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2292">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2292">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="43336-2293">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2293">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2294">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2294">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2295">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2295">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2296">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2296">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2297">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2297">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2298">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2298">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2299">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2299">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2300">Se produce cuando el usuario gira la rueda del mouse mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2300">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2301">Captura del foco o del mouse tienen prioridad sobre dónde está el puntero del mouse; por lo tanto, si recibe este evento desde un elemento enfocado o capturado, el puntero del mouse podría estar realmente sobre otro elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-2301">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="43336-2302">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewMouseMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2302">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2303">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewMouseMove> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2303">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2304">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2304">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2305">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2305">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="43336-2306">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2306">Routing strategy</span></span>|<span data-ttu-id="43336-2307">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2307">Tunneling</span></span>|  
|<span data-ttu-id="43336-2308">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2308">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="43336-2309">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="43336-2309">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="43336-2310">Invalidar <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2310">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2311">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2311">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2312">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2312">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2313">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2313">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2314">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2314">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2315">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2315">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2316">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2316">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2317">Se produce cuando hay algún cambio en el estado del botón del mouse o del teclado durante una operación de arrastrar y colocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2317">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2318">El <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> evento permite al origen de arrastre declarar si la operación de arrastrar y colocar tiene que cancelarse.</span><span class="sxs-lookup"><span data-stu-id="43336-2318">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="43336-2319">Este evento crea un alias para la <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2319">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2320">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> eventos están conectados a subyacente <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2320">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2321">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2321">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2322">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2322">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="43336-2323">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2323">Routing strategy</span></span>|<span data-ttu-id="43336-2324">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2324">Tunneling</span></span>|  
|<span data-ttu-id="43336-2325">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2325">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="43336-2326">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="43336-2326">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="43336-2327">Invalidar <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2327">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2328">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2328">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2329">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2329">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2330">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2330">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2331">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2331">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2332">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2332">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2333">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2333">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2334">Se produce cuando se presiona el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2334">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2335">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusButtonDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2335">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2336">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusButtonDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2336">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2337">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2337">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2338">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2338">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2339">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2339">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2340">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2340">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="43336-2341">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2341">Routing strategy</span></span>|<span data-ttu-id="43336-2342">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2342">Tunneling</span></span>|  
|<span data-ttu-id="43336-2343">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2343">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2344">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2344">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="43336-2345">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2345">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2346">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2346">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2347">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2347">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2348">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2348">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2349">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2349">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2350">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2350">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2351">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2351">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2352">Se produce cuando se suelta el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2352">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2353">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusButtonUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2353">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2354">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusButtonUp> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2354">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2355">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2355">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2356">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2356">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2357">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2358">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2358">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="43336-2359">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2359">Routing strategy</span></span>|<span data-ttu-id="43336-2360">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2360">Tunneling</span></span>|  
|<span data-ttu-id="43336-2361">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2361">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2362">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2362">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="43336-2363">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2363">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2364">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2364">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2365">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2365">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2366">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2366">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2367">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2367">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2368">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2368">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2369">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2369">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2370">Se produce cuando el lápiz toca el digitalizador mientras se encuentra sobre el elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2370">Occurs when the stylus touches the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2371">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2371">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2372">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2372">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2373">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2373">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2374">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2374">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2375">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2375">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2376">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2376">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="43336-2377">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2377">Routing strategy</span></span>|<span data-ttu-id="43336-2378">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2378">Tunneling</span></span>|  
|<span data-ttu-id="43336-2379">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2379">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="43336-2380">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2380">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="43336-2381">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2381">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2382">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2382">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2383">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2383">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2384">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2384">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2385">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2385">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2386">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2386">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2387">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2387">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2388">Se produce cuando el lápiz se mueve sobre un elemento sin tocar realmente el digitalizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2388">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2389">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusInAirMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2389">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2390">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusInAirMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2390">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2391">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2391">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2392">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2392">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2393">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2393">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2394">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2394">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="43336-2395">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2395">Routing strategy</span></span>|<span data-ttu-id="43336-2396">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2396">Tunneling</span></span>|  
|<span data-ttu-id="43336-2397">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2397">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2398">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-2398">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="43336-2399">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2399">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2400">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2400">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2401">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2401">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2402">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2402">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2403">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2403">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2404">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2404">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2405">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2405">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2406">Se produce cuando el lápiz está lo suficientemente cerca del digitalizador para que lo detecte mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2406">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2407">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusInRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2407">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2408">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusInRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2408">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2409">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2409">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2410">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2410">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2411">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2412">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2412">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="43336-2413">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2413">Routing strategy</span></span>|<span data-ttu-id="43336-2414">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2414">Tunneling</span></span>|  
|<span data-ttu-id="43336-2415">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2415">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2416">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="43336-2416">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="43336-2417">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2417">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2418">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2418">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2419">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2419">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2420">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2420">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2421">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2421">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2422">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2422">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2423">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2423">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2424">Se produce cuando se mueve el lápiz mientras se encuentra sobre el elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2424">Occurs when the stylus moves while over the element.</span>
          </span>
          <span data-ttu-id="43336-2425">El lápiz se debe mover mientras el digitalizador lo detecta para generar este evento, de lo contrario, se genera <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> en su lugar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2425">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2426">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2426">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2427">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2427">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2428">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2428">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2429">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2429">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2430">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2430">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2431">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2431">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="43336-2432">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2432">Routing strategy</span></span>|<span data-ttu-id="43336-2433">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2433">Tunneling</span></span>|  
|<span data-ttu-id="43336-2434">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2434">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2435">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-2435">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="43336-2436">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2436">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2437">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2437">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2438">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2438">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2439">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2439">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2440">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2440">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2441">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2441">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2442">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2442">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2443">Se produce cuando el lápiz está demasiado alejado del digitalizador y no lo detecta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2443">Occurs when the stylus is too far from the digitizer to be detected.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2444">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2444">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2445">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2445">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2446">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2446">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2447">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2447">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2448">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2448">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2449">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2449">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="43336-2450">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2450">Routing strategy</span></span>|<span data-ttu-id="43336-2451">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2451">Tunneling</span></span>|  
|<span data-ttu-id="43336-2452">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2452">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2453">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="43336-2453">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="43336-2454">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2454">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2455">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2455">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2456">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2456">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2457">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2457">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2458">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2458">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2459">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2459">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2460">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2460">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2461">Se produce cuando un usuario realiza uno de varios movimientos con el lápiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2461">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2462">Para obtener información acerca de los gestos de lápiz, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="43336-2462">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="43336-2463">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2463">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2464">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2464">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2465">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2465">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2466">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2466">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2467">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2467">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2468">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2468">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="43336-2469">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2469">Routing strategy</span></span>|<span data-ttu-id="43336-2470">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2470">Tunneling</span></span>|  
|<span data-ttu-id="43336-2471">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2471">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="43336-2472">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="43336-2472">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="43336-2473">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2473">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2474">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2474">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2475">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2475">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2476">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2476">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2477">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2477">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2478">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2478">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2479">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2479">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2480">Se produce cuando el usuario aleja el lápiz del digitalizador mientras el lápiz se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2480">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2481">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewStylusDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2481">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2482">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewStylusDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2482">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2483">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2483">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2484">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2484">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2485">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2485">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2486">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2486">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="43336-2487">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2487">Routing strategy</span></span>|<span data-ttu-id="43336-2488">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2488">Tunneling</span></span>|  
|<span data-ttu-id="43336-2489">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2489">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2490">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2490">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="43336-2491">Invalidar <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2491">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2492">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewStylusUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2492">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2493">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2493">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2494">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2494">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2495">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2495">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2496">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2496">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2497">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2497">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2498">Se produce cuando este elemento obtiene texto de un modo independiente del dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2498">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2499">El <xref:System.Windows.ContentElement.PreviewTextInput> evento permite que un componente o una aplicación para realizar escuchas de entrada de texto de una manera independiente del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="43336-2499">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="43336-2500">El teclado es el medio principal de <xref:System.Windows.ContentElement.PreviewTextInput>; pero también pueden generar la voz, escritura a mano y otros dispositivos de entrada <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="43336-2500">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="43336-2501">Debido a combinaciones de teclas, ya sea en los teclados predeterminados o a través de los editores de métodos de entrada, varios eventos de tecla pueden producir un solo evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="43336-2501">Because of key combinations—either in default keyboards or through input method editors—multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="43336-2502">Este evento crea un alias para la <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.PreviewTextInput> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2502">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2503">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.PreviewTextInput> eventos están conectados a subyacente <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2503">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2504">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2504">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2505">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2505">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="43336-2506">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2506">Routing strategy</span></span>|<span data-ttu-id="43336-2507">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2507">Tunneling</span></span>|  
|<span data-ttu-id="43336-2508">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2508">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="43336-2509">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="43336-2509">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="43336-2510">Invalidar <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2510">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2511">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewTextInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2511">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2512">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2512">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2513">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2513">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2514">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2514">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2515">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2515">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2516">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2516">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2517">Se produce cuando un dedo toca la pantalla mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2517">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2518">De forma predeterminada, el <xref:System.Windows.ContentElement.PreviewTouchDown> y <xref:System.Windows.ContentElement.TouchDown> eventos no se producen hasta que un dedo toca la pantalla y se mueve.</span><span class="sxs-lookup"><span data-stu-id="43336-2518">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="43336-2519">Si se presiona un dedo en la pantalla y manteniendo sin moverlo hace que la acción de presionar y mantener el comportamiento de un <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="43336-2519">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="43336-2520">El comportamiento de presionar y mantener presionado es equivalente a un clic del mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-2520">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="43336-2521">Para hacer que el <xref:System.Windows.ContentElement.PreviewTouchDown> y <xref:System.Windows.ContentElement.TouchDown> eventos que se produzca cuando un dedo toca la pantalla, establezca la <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> propiedad adjunta `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-2521">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2522">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2522">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2523">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2523">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="43336-2524">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2524">Routing strategy</span></span>|<span data-ttu-id="43336-2525">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2525">Tunneling</span></span>|  
|<span data-ttu-id="43336-2526">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2526">Delegate</span></span>|<span data-ttu-id="43336-2527"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2527"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2528">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2528">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="43336-2529">Invalidar <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2529">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2530">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewTouchDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2530">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2531">Se produce cuando se mueve un dedo en la pantalla mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2531">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2532">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2532">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2533">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2533">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="43336-2534">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2534">Routing strategy</span></span>|<span data-ttu-id="43336-2535">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2535">Tunneling</span></span>|  
|<span data-ttu-id="43336-2536">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2536">Delegate</span></span>|<span data-ttu-id="43336-2537"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2537"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2538">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-2538">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="43336-2539">Invalidar <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2539">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2540">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewTouchMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2540">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2541">Se produce cuando se quita un dedo de la pantalla mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2541">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2542">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2542">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2543">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2543">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="43336-2544">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2544">Routing strategy</span></span>|<span data-ttu-id="43336-2545">Protocolo de túnel</span><span class="sxs-lookup"><span data-stu-id="43336-2545">Tunneling</span></span>|  
|<span data-ttu-id="43336-2546">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2546">Delegate</span></span>|<span data-ttu-id="43336-2547"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2547"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2548">El evento de propagación correspondiente es <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2548">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="43336-2549">Invalidar <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2549">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2550">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.PreviewTouchUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2550">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2551">Se produce cuando hay algún cambio en el estado del botón del mouse o del teclado durante una operación de arrastrar y colocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2551">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2552">El <xref:System.Windows.ContentElement.QueryContinueDrag> evento permite al origen de arrastre determinar si la operación de arrastrar y colocar tiene que cancelarse.</span><span class="sxs-lookup"><span data-stu-id="43336-2552">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="43336-2553">Este evento crea un alias para la <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.QueryContinueDrag> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2553">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2554">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.QueryContinueDrag> eventos están conectados a subyacente <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2554">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2555">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2556">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2556">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="43336-2557">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2557">Routing strategy</span></span>|<span data-ttu-id="43336-2558">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2558">Bubbling</span></span>|  
|<span data-ttu-id="43336-2559">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2559">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="43336-2560">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="43336-2560">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="43336-2561">Invalidar <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2561">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2562">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.QueryContinueDrag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2562">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2563">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2563">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2564">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2564">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2565">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2565">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2566">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2566">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2567">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2567">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2568">Se produce cuando se solicita que se muestre el cursor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2568">Occurs when the cursor is requested to display.</span>
          </span>
          <span data-ttu-id="43336-2569">Este evento genera en un elemento cada vez que el puntero del mouse se mueve a una nueva ubicación, lo que significa que es posible que haya que cambiar el objeto del cursor según la nueva posición.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2569">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2570">Este evento crea un alias para la <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.QueryCursor> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2570">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2571">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.QueryCursor> eventos están conectados a subyacente <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2571">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2572">El cursor que se va a la que hace referencia a este nombre de evento no es necesariamente el cursor de texto (a veces conocido como el punto de inserción).</span><span class="sxs-lookup"><span data-stu-id="43336-2572">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="43336-2573">En su lugar, el cursor en este contexto es el objeto que declara la presentación gráfica en la pantalla relacionados con varios posibles dispositivos relacionados con la entrada o conceptos de programación de Windows.</span><span class="sxs-lookup"><span data-stu-id="43336-2573">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="43336-2574">Ese objeto se representa mediante la <xref:System.Windows.Input.Cursor> clase en WPF.</span><span class="sxs-lookup"><span data-stu-id="43336-2574">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="43336-2575">El sistema de entrada de WPF permite cambiar este cursor cuando representa la posición en la pantalla del puntero del mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-2575">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="43336-2576">Puede usar valores predefinidos de la <xref:System.Windows.Input.Cursors> enumeración, o bien puede declarar un cursor personalizado como un archivo de imagen.</span><span class="sxs-lookup"><span data-stu-id="43336-2576">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="43336-2577">Realizar escuchas para el <xref:System.Windows.ContentElement.QueryCursor> evento no es una técnica eficaz para la administración del cursor.</span><span class="sxs-lookup"><span data-stu-id="43336-2577">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="43336-2578">En su lugar, cada elemento debe definir su propio comportamiento de cursor con <xref:System.Windows.FrameworkContentElement.Cursor%2A> y <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2578">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="43336-2579">Solo debe confiar en <xref:System.Windows.ContentElement.QueryCursor> si no usa los elementos de base de nivel de marco WPF o en extraordinarios circunstancias que definir el comportamiento del cursor en una base por cada elemento no satisfagan sus necesidades.</span><span class="sxs-lookup"><span data-stu-id="43336-2579">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="43336-2580">Para obtener más información sobre cómo implementar el comportamiento del cursor en respuesta a <xref:System.Windows.ContentElement.QueryCursor>, consulte <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="43336-2580">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2581">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2581">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2582">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2582">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="43336-2583">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2583">Routing strategy</span></span>|<span data-ttu-id="43336-2584">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2584">Bubbling</span></span>|  
|<span data-ttu-id="43336-2585">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2585">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="43336-2586">No hay ningún evento de tunelización correspondiente definido.</span><span class="sxs-lookup"><span data-stu-id="43336-2586">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="43336-2587">Invalidar <xref:System.Windows.ContentElement.OnQueryCursor%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2587">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2588">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.QueryCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2588">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2589">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2589">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2590">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2590">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2591">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2591">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2592">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2592">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2593">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2593">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="43336-2594">
            <see cref="T:System.Windows.RoutedEventArgs" /> que contiene los datos de evento e identifica el evento que se va a provocar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2594">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-2595">Genera un evento enrutado específico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2595">Raises a specific routed event.</span>
          </span>
          <span data-ttu-id="43336-2596">El objeto <see cref="T:System.Windows.RoutedEvent" /> que se provoca se identifica en la instancia de <see cref="T:System.Windows.RoutedEventArgs" /> proporcionada (como la propiedad <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> de los datos de evento).</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2596">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2597">El `e` parámetro se escribe como el tipo base común para todos los datos del evento enrutado; sin embargo, se deben proporcionar los datos del evento como el tipo de datos de evento más específico que está disponible para el evento que se está generando, porque <xref:System.Windows.RoutedEventArgs> las clases derivadas contienen las propiedades de datos concretas que están diseñadas para el evento específico cuando se genera.</span><span class="sxs-lookup"><span data-stu-id="43336-2597">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="43336-2598"><xref:System.Windows.RoutedEventArgs> no es simplemente las propiedades de estado para el evento; También identifica qué evento enrutado que se va a generar.</span><span class="sxs-lookup"><span data-stu-id="43336-2598"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="43336-2599">Este patrón cuando se genera el evento y los datos del evento enrutado ambos diferencian [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] eventos y clases de datos, que normalmente sólo contienen las propiedades que están relacionados con el evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2599">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43336-2600">En el ejemplo siguiente se crea datos de eventos, anexa el identificador de evento a los datos y, a continuación, usa la instancia de datos de evento para provocar un evento enrutado personalizado.</span><span class="sxs-lookup"><span data-stu-id="43336-2600">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-2601">Libera todos los dispositivos táctiles capturados desde este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2601">Releases all captured touch devices from this element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-2602">Libera la captura del mouse si este elemento la tiene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2602">Releases the mouse capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2603">Si este elemento no tiene la captura, llamar a este método no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="43336-2603">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="43336-2604">Considere la posibilidad de comprobar el valor de <xref:System.Windows.ContentElement.IsMouseCaptured%2A> antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="43336-2604">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="43336-2605">El siguiente controlador de captura o libera la captura del mouse según los Estados del botón del mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-2605">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="43336-2606">En el ejemplo se muestra cómo usar el movimiento del mouse capturado con fines alternativa que mover el puntero del mouse el [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="43336-2606">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-2607">Libera la captura del dispositivo de lápiz óptico si este elemento la tiene.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2607">Releases the stylus device capture, if this element held the capture.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2608">Si este elemento no tiene la captura, llamar a este método no tiene ningún efecto.</span><span class="sxs-lookup"><span data-stu-id="43336-2608">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="43336-2609">Considere la posibilidad de comprobar el valor de <xref:System.Windows.ContentElement.IsStylusCaptured%2A> antes de llamar a este método.</span><span class="sxs-lookup"><span data-stu-id="43336-2609">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">
          <span data-ttu-id="43336-2610">Dispositivo que se va a liberar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2610">The device to release.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-2611">Intenta liberar el dispositivo táctil especificado de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2611">Attempts to release the specified touch device from this element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-2612">Es <see langword="true" /> si se libera el dispositivo táctil; de lo contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2612">
              <see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="43336-2613">
            <paramref name="touchDevice" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2613">
              <paramref name="touchDevice" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">
          <span data-ttu-id="43336-2614">Identificador del evento enrutado para el que se asocia el controlador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2614">The identifier of the.routed event for which the handler is attached.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="43336-2615">Implementación de controlador específica que se va a quitar de la colección de controladores de eventos de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2615">The specific handler implementation to remove from the event handler collection on this element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="43336-2616">Quita el controlador de eventos enrutados especificado de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2616">Removes the specified routed event handler from this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2617">El escenario más común para usar este [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] es al implementar la [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] evento "contenedor" que está asociado a un evento enrutado personalizado, específicamente al implementar la lógica de "quitar" para los controladores de la [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] nivel.</span><span class="sxs-lookup"><span data-stu-id="43336-2617">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="43336-2618">El ejemplo que sigue a esta sección Comentarios muestra este escenario.</span><span class="sxs-lookup"><span data-stu-id="43336-2618">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="43336-2619">Llamar a este método no tiene ningún efecto si se ha registrado ningún controlador con criterios que coinciden con los parámetros de entrada para la llamada al método.</span><span class="sxs-lookup"><span data-stu-id="43336-2619">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="43336-2620">Si hay más de un controlador asociado que coincide con los criterios, solo el primer controlador en caso de que se quita el almacén de controladores.</span><span class="sxs-lookup"><span data-stu-id="43336-2620">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="43336-2621">Este comportamiento es coherente con [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] comportamiento de la `-=` operador.</span><span class="sxs-lookup"><span data-stu-id="43336-2621">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="43336-2622">Ni `routedEvent` ni `handler` puede ser `null`.</span><span class="sxs-lookup"><span data-stu-id="43336-2622">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="43336-2623">Se intenta proporcionar cualquier valor como `null` , se producirá una excepción.</span><span class="sxs-lookup"><span data-stu-id="43336-2623">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="43336-2624">Este método omite la `handledEventsToo` agrega información de parámetros, que se proporciona si el controlador fue el primero con el <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> firma que habilita el control de eventos ya controlados.</span><span class="sxs-lookup"><span data-stu-id="43336-2624">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="43336-2625">Se quita cualquier tipo de controlador.</span><span class="sxs-lookup"><span data-stu-id="43336-2625">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-2626">Devuelve un valor que indica si los procesos de serialización deben serializar el contenido de la propiedad <see cref="P:System.Windows.ContentElement.CommandBindings" /> en las instancias de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2626">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-2627">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.Windows.ContentElement.CommandBindings" /> debe serializarse; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2627">
              <see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2628">El valor devuelto será `true` si <xref:System.Windows.ContentElement.CommandBindings%2A> se establece localmente.</span><span class="sxs-lookup"><span data-stu-id="43336-2628">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="43336-2629">Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.UIElement.CommandBindings%2A> propiedad no tiene un valor predeterminado simple.</span><span class="sxs-lookup"><span data-stu-id="43336-2629">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="43336-2630">Este método indica si la propiedad ha cambiado respecto de su valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="43336-2630">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="43336-2631">Normalmente se invoca este método si se desarrolla un diseñador o desarrollar su propio control que incorpore un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2631">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="43336-2632">Para obtener más información, consulte [definir valores predeterminados con los métodos ShouldSerialize y Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2632">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="43336-2633">Devuelve un valor que indica si los procesos de serialización deben serializar el contenido de la propiedad <see cref="P:System.Windows.ContentElement.InputBindings" /> en las instancias de esta clase.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2633">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="43336-2634">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.Windows.ContentElement.InputBindings" /> debe serializarse; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2634">
              <see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2635">El valor devuelto será `true` si <xref:System.Windows.ContentElement.InputBindings%2A> se establece localmente.</span><span class="sxs-lookup"><span data-stu-id="43336-2635">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="43336-2636">Esto `ShouldSerialize` se proporciona el método porque el <xref:System.Windows.UIElement.InputBindings%2A> propiedad no tiene un valor predeterminado simple.</span><span class="sxs-lookup"><span data-stu-id="43336-2636">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="43336-2637">Este método indica si la propiedad ha cambiado respecto de su valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="43336-2637">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="43336-2638">Normalmente se invoca este método si se desarrolla un diseñador o desarrollar su propio control que incorpore un <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="43336-2638">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="43336-2639">Para obtener más información, consulte [definir valores predeterminados con los métodos ShouldSerialize y Reset](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2639">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2640">Se produce cuando se presiona el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2640">Occurs when the stylus button is pressed while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2641">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusButtonDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2641">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2642">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusButtonDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2642">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2643">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2643">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2644">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2644">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2645">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2645">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2646">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2646">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="43336-2647">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2647">Routing strategy</span></span>|<span data-ttu-id="43336-2648">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2648">Bubbling</span></span>|  
|<span data-ttu-id="43336-2649">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2649">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2650">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2650">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="43336-2651">Invalidar <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2651">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2652">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusButtonDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2652">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2653">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2653">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2654">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2654">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2655">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2655">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2656">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2656">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2657">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2657">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2658">Se produce cuando se suelta el botón del lápiz mientras el puntero se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2658">Occurs when the stylus button is released while the pointer is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2659">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusButtonUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2659">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2660">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusButtonUp> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2660">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2661">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2661">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2662">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2662">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2663">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2663">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2664">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2664">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="43336-2665">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2665">Routing strategy</span></span>|<span data-ttu-id="43336-2666">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2666">Bubbling</span></span>|  
|<span data-ttu-id="43336-2667">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2667">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="43336-2668">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2668">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="43336-2669">Invalidar <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2669">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2670">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusButtonUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2670">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2671">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2671">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2672">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2672">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2673">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2673">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2674">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2674">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2675">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2675">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2676">Se produce cuando el lápiz toca el digitalizador mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2676">Occurs when the stylus touches the digitizer while the stylus is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2677">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusDown> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2677">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2678">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusDown> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2678">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2679">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2679">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2680">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2680">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2681">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2681">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2682">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2682">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="43336-2683">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2683">Routing strategy</span></span>|<span data-ttu-id="43336-2684">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2684">Bubbling</span></span>|  
|<span data-ttu-id="43336-2685">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2685">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="43336-2686">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2686">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="43336-2687">Invalidar <xref:System.Windows.ContentElement.OnStylusDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2687">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2688">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2688">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2689">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2689">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2690">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2690">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2691">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2691">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2692">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2692">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2693">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2693">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2694">Se produce cuando el lápiz entra dentro de los límites de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2694">Occurs when the stylus enters the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2695"><xref:System.Windows.ContentElement.StylusEnter> es un [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) que utiliza la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="43336-2695"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="43336-2696">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="43336-2696">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="43336-2697">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="43336-2697">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="43336-2698">Aunque <xref:System.Windows.ContentElement.StylusEnter> literalmente le hace un seguimiento cuando el lápiz entra en los límites de un elemento, aún más este evento indica que el <xref:System.Windows.ContentElement.IsStylusOver%2A> valor de propiedad ha cambiado de `false` a `true` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-2698">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="43336-2699">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusEnter> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2699">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2700">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusEnter> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2700">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2701">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2701">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2702">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2702">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2703">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2703">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2704">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2704">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="43336-2705">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2705">Routing strategy</span></span>|<span data-ttu-id="43336-2706">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2706">Direct</span></span>|  
|<span data-ttu-id="43336-2707">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2707">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2708">Invalidar <xref:System.Windows.ContentElement.OnStylusEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2708">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2709">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2709">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2710">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2710">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2711">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2711">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2712">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2712">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2713">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2713">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2714">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2714">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2715">Se produce cuando el lápiz se mueve sobre un elemento sin tocar realmente el digitalizador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2715">Occurs when the stylus moves over an element without actually touching the digitizer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2716">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusInAirMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2716">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2717">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusInAirMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2717">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2718">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2718">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2719">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2719">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2720">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2720">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2721">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2721">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="43336-2722">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2722">Routing strategy</span></span>|<span data-ttu-id="43336-2723">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2723">Bubbling</span></span>|  
|<span data-ttu-id="43336-2724">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2724">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2725">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-2725">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="43336-2726">Invalidar <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2726">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2727">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusInAirMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2727">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2728">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2728">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2729">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2729">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2730">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2730">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2731">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2731">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2732">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2732">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2733">Se produce cuando el lápiz está lo suficientemente cerca del digitalizador para que lo detecte mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2733">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2734">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusInRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2734">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2735">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusInRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2735">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2736">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2736">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2737">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2737">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2738">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2738">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2739">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2739">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="43336-2740">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2740">Routing strategy</span></span>|<span data-ttu-id="43336-2741">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2741">Bubbling</span></span>|  
|<span data-ttu-id="43336-2742">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2742">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2743">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="43336-2743">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="43336-2744">Invalidar <xref:System.Windows.ContentElement.OnStylusInRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2744">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2745">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusInRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2745">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2746">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2746">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2747">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2747">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2748">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2748">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2749">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2749">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2750">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2750">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2751">Se produce cuando el lápiz sale de los límites del elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2751">Occurs when the stylus leaves the bounds of the element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2752"><xref:System.Windows.ContentElement.StylusLeave> es un [enrutan Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) que utiliza la estrategia de enrutamiento de control de eventos directo.</span><span class="sxs-lookup"><span data-stu-id="43336-2752"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="43336-2753">Los eventos enrutados directos no se generan a lo largo de una ruta; en su lugar, se administran en el mismo elemento que se generan.</span><span class="sxs-lookup"><span data-stu-id="43336-2753">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="43336-2754">Sin embargo, permiten otros aspectos del comportamiento de los eventos enrutados, como los desencadenadores de eventos en los estilos.</span><span class="sxs-lookup"><span data-stu-id="43336-2754">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="43336-2755">Aunque <xref:System.Windows.ContentElement.StylusLeave> realiza seguimiento cuando el lápiz sale de los límites de un elemento, este evento más literalmente informa de que el <xref:System.Windows.ContentElement.IsStylusOver%2A> valor de propiedad ha cambiado de `true` a `false` en este elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-2755">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="43336-2756">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusLeave> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2756">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2757">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusLeave> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2757">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2758">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2758">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2759">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2759">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2760">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2760">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2761">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2761">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="43336-2762">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2762">Routing strategy</span></span>|<span data-ttu-id="43336-2763">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2763">Direct</span></span>|  
|<span data-ttu-id="43336-2764">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2764">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2765">Invalidar <xref:System.Windows.ContentElement.OnStylusLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2765">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2766">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2766">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2767">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2767">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2768">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2768">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2769">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2769">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2770">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2770">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2771">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2771">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2772">Se produce cuando el lápiz se mueve sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2772">Occurs when the stylus moves over this element.</span>
          </span>
          <span data-ttu-id="43336-2773">El lápiz debe moverse mientras se encuentra sobre el digitalizador para que se genere este evento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2773">The stylus must move while on the digitizer to raise this event.</span>
          </span>
          <span data-ttu-id="43336-2774">De lo contrario, se provoca el evento <see cref="E:System.Windows.ContentElement.StylusInAirMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2774">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2775">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusMove> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2775">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2776">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusMove> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2776">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2777">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2777">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2778">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2778">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2779">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2779">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2780">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2780">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="43336-2781">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2781">Routing strategy</span></span>|<span data-ttu-id="43336-2782">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2782">Bubbling</span></span>|  
|<span data-ttu-id="43336-2783">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2783">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2784">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-2784">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="43336-2785">Invalidar <xref:System.Windows.ContentElement.OnStylusMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2785">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2786">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2786">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2787">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2787">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2788">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2788">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2789">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2789">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2790">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2790">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2791">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2791">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2792">Se produce cuando el lápiz está demasiado alejado del digitalizador y no se detecta, mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2792">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2793">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusOutOfRange> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2793">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2794">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusOutOfRange> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2794">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2795">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2795">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2796">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2796">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2797">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2797">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2798">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2798">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="43336-2799">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2799">Routing strategy</span></span>|<span data-ttu-id="43336-2800">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2800">Bubbling</span></span>|  
|<span data-ttu-id="43336-2801">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2801">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2802">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="43336-2802">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="43336-2803">Invalidar <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2803">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2804">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusOutOfRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2804">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2805">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2805">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2806">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2806">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2807">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2807">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2808">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2808">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2809">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2809">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2810">Se produce cuando un usuario realiza uno de varios movimientos con el lápiz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2810">Occurs when a user performs one of several stylus gestures.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2811">Para obtener más información acerca de los gestos de lápiz, consulte <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="43336-2811">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="43336-2812">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusSystemGesture> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2812">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2813">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusSystemGesture> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2813">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2814">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2814">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2815">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2815">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2816">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2816">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2817">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2817">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="43336-2818">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2818">Routing strategy</span></span>|<span data-ttu-id="43336-2819">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2819">Bubbling</span></span>|  
|<span data-ttu-id="43336-2820">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2820">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="43336-2821">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="43336-2821">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="43336-2822">Invalidar <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2822">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2823">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusSystemGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2823">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2824">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2824">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2825">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2825">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2826">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2826">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2827">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2827">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2828">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2828">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2829">Se produce cuando el usuario aleja el lápiz del digitalizador mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2829">Occurs when the user raises the stylus off the digitizer while it is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2830">Este evento crea un alias para la <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.StylusUp> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2830">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2831">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.StylusUp> eventos están conectados a subyacente <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2831">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="43336-2832">Entrada táctil, mouse y entrada de lápiz existen en una relación determinada.</span><span class="sxs-lookup"><span data-stu-id="43336-2832">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="43336-2833">Para obtener más información, consulte [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="43336-2833">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2834">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2834">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2835">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2835">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="43336-2836">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2836">Routing strategy</span></span>|<span data-ttu-id="43336-2837">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2837">Bubbling</span></span>|  
|<span data-ttu-id="43336-2838">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2838">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="43336-2839">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2839">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="43336-2840">Invalidar <xref:System.Windows.ContentElement.OnStylusUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2840">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2841">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.StylusUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2841">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2842">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2842">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2843">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2843">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2844">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2844">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2845">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2845">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2846">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2846">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2847">Se produce cuando este elemento obtiene texto de un modo independiente del dispositivo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2847">Occurs when this element gets text in a device-independent manner.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="43336-2848">Este evento ya podría marcarse como controlado por las implementaciones internas de controles compuestos.</span><span class="sxs-lookup"><span data-stu-id="43336-2848">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="43336-2849">Vea la sección comentarios a continuación.</span><span class="sxs-lookup"><span data-stu-id="43336-2849">See Remark below.</span></span>  
  
 <span data-ttu-id="43336-2850">El <xref:System.Windows.ContentElement.TextInput> eventos ya podrán estar marcado como controlado por las implementaciones internas de controles compuestos.</span><span class="sxs-lookup"><span data-stu-id="43336-2850">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="43336-2851">Por ejemplo, un <xref:System.Windows.Controls.TextBox> es un control compuesto donde el <xref:System.Windows.ContentElement.TextInput> eventos ya está marcado como controlado; en su composición.</span><span class="sxs-lookup"><span data-stu-id="43336-2851">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="43336-2852">Controles de hacen esto, dado que el control debe interpretar algunos tipos de entrada, como las teclas de flecha, que tienen un significado especial para ese control.</span><span class="sxs-lookup"><span data-stu-id="43336-2852">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="43336-2853">Si usa <xref:System.Windows.ContentElement.PreviewTextInput> como el evento donde adjunta los controladores para la entrada de texto, puede obtener mejores resultados.</span><span class="sxs-lookup"><span data-stu-id="43336-2853">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="43336-2854">Esta técnica, evita la mayoría de los casos donde la composición de controles ya ha marcado este evento como controlado y evita que el controlador de recibir el evento a lo largo de la ruta del evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2854">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="43336-2855">El <xref:System.Windows.ContentElement.TextInput> evento permite que un componente o una aplicación para realizar escuchas de entrada de texto de una manera independiente del dispositivo.</span><span class="sxs-lookup"><span data-stu-id="43336-2855">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="43336-2856">El teclado es el medio principal de <xref:System.Windows.ContentElement.TextInput>, pero también pueden generar la voz, escritura a mano y otros dispositivos de entrada <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="43336-2856">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="43336-2857">Debido a combinaciones de teclas, ya sea en los teclados predeterminados o a través de los editores de métodos de entrada, varios eventos claves podrían provocar un solo evento de entrada de texto.</span><span class="sxs-lookup"><span data-stu-id="43336-2857">Because of key combinations—either in default keyboards or through input method editors—multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="43336-2858">Este evento crea un alias para la <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> adjunta eventos para esta clase, por lo que <xref:System.Windows.ContentElement.TextInput> forma parte lista los miembros de la clase cuando <xref:System.Windows.ContentElement> se hereda como elemento base.</span><span class="sxs-lookup"><span data-stu-id="43336-2858">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="43336-2859">Controladores de eventos que están conectados a la <xref:System.Windows.ContentElement.TextInput> eventos están conectados a subyacente <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> evento adjunto y reciben la misma instancia de datos de evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2859">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2860">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2860">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2861">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2861">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="43336-2862">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2862">Routing strategy</span></span>|<span data-ttu-id="43336-2863">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2863">Bubbling</span></span>|  
|<span data-ttu-id="43336-2864">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2864">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="43336-2865">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="43336-2865">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="43336-2866">Invalidar <xref:System.Windows.ContentElement.OnTextInput%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2866">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2867">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.TextInput" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2867">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2868">Los identificadores de eventos enrutados se crean cuando se registran eventos enrutados.</span><span class="sxs-lookup"><span data-stu-id="43336-2868">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="43336-2869">Estos identificadores contienen un nombre para identificar, el tipo de propietario, el tipo de controlador, la estrategia de enrutamiento y el método de utilidad para agregar propietarios al evento.</span><span class="sxs-lookup"><span data-stu-id="43336-2869">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="43336-2870">Estos identificadores se pueden usar para agregar controladores de clases.</span><span class="sxs-lookup"><span data-stu-id="43336-2870">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="43336-2871">Para obtener más información sobre el registro de eventos enrutados, vea <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2871">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="43336-2872">Para obtener más información sobre el uso de identificadores de eventos enrutados para agregar controladores de clases, vea <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="43336-2872">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2873">Se produce cuando un dedo toca la pantalla mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2873">Occurs when a finger touches the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2874">De forma predeterminada, el <xref:System.Windows.ContentElement.PreviewTouchDown> y <xref:System.Windows.ContentElement.TouchDown> eventos no se producen hasta que un dedo toca la pantalla y se mueve.</span><span class="sxs-lookup"><span data-stu-id="43336-2874">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="43336-2875">Si se presiona un dedo en la pantalla y manteniendo sin moverlo hace que la acción de presionar y mantener el comportamiento de un <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="43336-2875">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="43336-2876">El comportamiento de presionar y mantener presionado es equivalente a un clic del mouse.</span><span class="sxs-lookup"><span data-stu-id="43336-2876">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="43336-2877">Para hacer que el <xref:System.Windows.ContentElement.PreviewTouchDown> y <xref:System.Windows.ContentElement.TouchDown> eventos que se produzca cuando un dedo toca la pantalla, establezca la <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> propiedad adjunta `false` para este elemento.</span><span class="sxs-lookup"><span data-stu-id="43336-2877">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2878">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2878">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2879">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2879">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="43336-2880">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2880">Routing strategy</span></span>|<span data-ttu-id="43336-2881">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2881">Bubbling</span></span>|  
|<span data-ttu-id="43336-2882">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2882">Delegate</span></span>|<span data-ttu-id="43336-2883"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2883"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2884">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="43336-2884">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="43336-2885">Invalidar <xref:System.Windows.ContentElement.OnTouchDown%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2885">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2886">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.TouchDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2886">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2887">Se produce cuando una entrada táctil se mueve afuera adentro de los límites de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2887">Occurs when a touch moves from outside to inside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="43336-2888">Siempre se genera este evento, si no se captura el dispositivo táctil a este elemento de interfaz de usuario.</span><span class="sxs-lookup"><span data-stu-id="43336-2888">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2889">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2889">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2890">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2890">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="43336-2891">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2891">Routing strategy</span></span>|<span data-ttu-id="43336-2892">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2892">Direct</span></span>|  
|<span data-ttu-id="43336-2893">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2893">Delegate</span></span>|<span data-ttu-id="43336-2894"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2894"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2895">Invalidar <xref:System.Windows.ContentElement.OnTouchEnter%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2895">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2896">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.TouchEnter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2896">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2897">Obtiene todos los dispositivos táctiles que se capturan en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2897">Gets all touch devices that are captured to this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-2898">Enumeración de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que se capturan en este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2898">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2899">Obtiene todos los dispositivos táctiles que se capturan en este elemento o en cualquier elemento secundario de su árbol visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2899">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-2900">Enumeración de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que se capturan en este elemento o en cualquier elemento secundario de su árbol visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2900">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2901">Obtiene todos los dispositivos táctiles que están sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2901">Gets all touch devices that are over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-2902">Enumeración de los objetos <see cref="T:System.Windows.Input.TouchDevice" /> que están sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2902">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2903">Obtiene todos los dispositivos táctiles que están sobre este elemento o sobre cualquier elemento secundario de su árbol visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2903">Gets all touch devices that are over this element or any child elements in its visual tree.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="43336-2904">Enumeración de objetos <see cref="T:System.Windows.Input.TouchDevice" /> que están sobre este elemento o sobre cualquier elemento secundario de su árbol visual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2904">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2905">Se produce cuando una entrada táctil se mueve de dentro afuera de los límites de este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2905">Occurs when a touch moves from inside to outside the bounds of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2906">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2906">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2907">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2907">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="43336-2908">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2908">Routing strategy</span></span>|<span data-ttu-id="43336-2909">Directa</span><span class="sxs-lookup"><span data-stu-id="43336-2909">Direct</span></span>|  
|<span data-ttu-id="43336-2910">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2910">Delegate</span></span>|<span data-ttu-id="43336-2911"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2911"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2912">Invalidar <xref:System.Windows.ContentElement.OnTouchLeave%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2912">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2913">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.TouchLeave" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2913">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2914">Se produce cuando se mueve un dedo en la pantalla mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2914">Occurs when a finger moves on the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2915">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2915">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2916">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2916">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="43336-2917">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2917">Routing strategy</span></span>|<span data-ttu-id="43336-2918">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2918">Bubbling</span></span>|  
|<span data-ttu-id="43336-2919">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2919">Delegate</span></span>|<span data-ttu-id="43336-2920"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2920"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2921">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="43336-2921">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="43336-2922">Invalidar <xref:System.Windows.ContentElement.OnTouchMove%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2922">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2923">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.TouchMove" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2923">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2924">Se produce cuando se quita un dedo de la pantalla mientras se encuentra sobre este elemento.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2924">Occurs when a finger is raised off of the screen while the finger is over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="43336-2925">Información sobre eventos enrutados</span><span class="sxs-lookup"><span data-stu-id="43336-2925">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="43336-2926">Campo identificador</span><span class="sxs-lookup"><span data-stu-id="43336-2926">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="43336-2927">Estrategia de enrutamiento</span><span class="sxs-lookup"><span data-stu-id="43336-2927">Routing strategy</span></span>|<span data-ttu-id="43336-2928">Propagación</span><span class="sxs-lookup"><span data-stu-id="43336-2928">Bubbling</span></span>|  
|<span data-ttu-id="43336-2929">delegado</span><span class="sxs-lookup"><span data-stu-id="43336-2929">Delegate</span></span>|<span data-ttu-id="43336-2930"><xref:System.EventHandler%601> de tipo <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="43336-2930"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="43336-2931">El evento de tunelización correspondiente es <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="43336-2931">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="43336-2932">Invalidar <xref:System.Windows.ContentElement.OnTouchUp%2A> para implementar el control de clases para este evento en las clases derivadas.</span><span class="sxs-lookup"><span data-stu-id="43336-2932">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="43336-2933">Identifica el evento enrutado <see cref="E:System.Windows.ContentElement.TouchUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="43336-2933">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>