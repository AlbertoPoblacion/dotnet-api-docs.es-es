<Type Name="DataTrigger" FullName="System.Windows.DataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6a96b6f025b0dde64c8590ed579c01d92bb7d15c" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57932330" /></Metadata><TypeSignature Language="C#" Value="public class DataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type DataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un desencadenador que aplica valores de propiedad o realiza acciones cuando los datos enlazados cumplen la condición especificada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Style>, <xref:System.Windows.Controls.ControlTemplate>, y <xref:System.Windows.DataTemplate> todos tienen una colección de desencadenadores. Un <xref:System.Windows.DataTrigger> le permite establecer los valores de propiedad cuando el valor de propiedad del objeto de datos coincide con un determinado <xref:System.Windows.Condition.Value%2A>. Por ejemplo, si va a mostrar una lista de `Employee` objetos, es posible que desea el color de primer plano sea diferente en función de cada uno de ellos `Employee's` asistencia actual. (Por ejemplo, `Employees` que actualmente están de vacaciones se muestran con un primer plano de color púrpura.) En algunos escenarios puede ser más adecuado para crear un convertidor de tipos o utilizar un <xref:System.Windows.Controls.DataTemplateSelector>. Para obtener más información, consulte el [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 Tenga en cuenta que debe especificar tanto el <xref:System.Windows.DataTrigger.Binding%2A> y <xref:System.Windows.DataTrigger.Value%2A> propiedades en un <xref:System.Windows.DataTrigger> para el desencadenador de datos tenga sentido. Si no se especifican una o ambas de las propiedades, se produce una excepción.  
  
 El <xref:System.Windows.DataTrigger.Setters%2A> propiedad de un <xref:System.Windows.DataTrigger> objeto solo puede contener <xref:System.Windows.Setter> objetos. Agregar un <xref:System.Windows.Setter> secundario a un <xref:System.Windows.DataTrigger> objeto, agrega implícitamente a la <xref:System.Windows.SetterBaseCollection> para el <xref:System.Windows.DataTrigger> objeto. <xref:System.Windows.EventSetter> no se admiten objetos; solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> admite <xref:System.Windows.EventSetter> objetos.  
  
   
  
## Examples  
 En el ejemplo siguiente, la <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> de la <xref:System.Windows.Controls.ListBox> está enlazado a *lugares*, un <xref:System.Collections.ObjectModel.ObservableCollection%601> de *lugar* objetos. *Lugar* objetos tienen propiedades *nombre* y *estado*.  
  
 Cada <xref:System.Windows.Controls.ListBoxItem> de la <xref:System.Windows.Controls.ListBox> muestra un *lugar* objeto. El <xref:System.Windows.Style> en el ejemplo se aplica a cada <xref:System.Windows.Controls.ListBoxItem>.  
  
 El <xref:System.Windows.DataTrigger> se especifica que si el *estado* de la *lugar* elemento de datos es "WA", a continuación, el primer plano del correspondiente <xref:System.Windows.Controls.ListBoxItem> está establecido en rojo.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 El ejemplo siguiente muestra cómo usar un <xref:System.Windows.DataTrigger>, un <xref:System.Windows.Media.Animation.BeginStoryboard> acción y un <xref:System.Windows.Media.Animation.Storyboard> para animar una propiedad cuando los datos enlazados cumplen una condición especificada. El ejemplo muestra información de inventario en un <xref:System.Windows.Controls.ListBox> control. Usa un <xref:System.Windows.DataTrigger> para animar la <xref:System.Windows.UIElement.Opacity%2A> de cada <xref:System.Windows.Controls.ListBoxItem> que contiene un libro de existencias.  
  
 [!code-xaml[AnimatePropertyStoryboards#GraphicsMMDataTriggerStoryboardWholePage](~/samples/snippets/xaml/VS_Snippets_Wpf/AnimatePropertyStoryboards/XAML/DataTriggerStoryboardExample.xaml#graphicsmmdatatriggerstoryboardwholepage)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Trigger" />
    <altmember cref="T:System.Windows.MultiDataTrigger" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introducción a las plantillas de datos de ejemplo</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.DataTrigger.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el enlace que produce el valor de propiedad del objeto de datos.</summary>
        <value>El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de propiedad generado por este enlace se compara con el valor especificado por el <xref:System.Windows.DataTrigger.Value%2A> propiedad. Que es el valor primero convierten al tipo del valor del enlace (si es posible) y, a continuación, los dos valores se comparan mediante el `Object.Equals` método. Si los dos valores son iguales, se aplican las acciones asociadas o establecedores.  
  
 Crear un enlace y use el <xref:System.Windows.Data.Binding.Path%2A> se va a enlazar una propiedad de un objeto determinado (el objeto de origen de enlace). Por ejemplo, puede enlazar a la *prioridad* propiedad de un *tarea*. Para obtener más información, consulte [Información general sobre el enlace de datos](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Tenga en cuenta que debe especificar tanto el <xref:System.Windows.DataTrigger.Binding%2A> y <xref:System.Windows.DataTrigger.Value%2A> propiedades en un <xref:System.Windows.DataTrigger> para el desencadenador de datos tenga sentido. Si no se establecen una o ambas de las propiedades, se produce una excepción.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Uso de elementos de propiedad XAML  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *declaration*  
 Cero o más cláusulas de asignación de atributos separadas por comas (,). Consulte [extensión de marcado de enlace](~/docs/framework/wpf/advanced/binding-markup-extension.md) para obtener más información.  
  
   
  
## Examples  
 En el ejemplo siguiente, la <xref:System.Windows.DataTrigger> establece la <xref:System.Windows.Controls.Border.BorderBrush%2A> del elemento denominado `border` a `Yellow` si el `TaskType` propiedad es `TaskType.Home`.  
  
 [!code-xaml[DataTemplatingIntro#DT](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#dt)]  
[!code-xaml[DataTemplatingIntro#DataTrigger](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#datatrigger)]  
[!code-xaml[DataTemplatingIntro#AddingMore2](~/samples/snippets/xaml/VS_Snippets_Wpf/DataTemplatingIntro/xaml/window1.xaml#addingmore2)]  
  
 Para obtener una explicación detallada de este ejemplo, vea [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.DataTrigger.Value" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introducción a las plantillas de datos de ejemplo</related>
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.DataTrigger.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">Objeto en el que la extensión de marcado establece el valor.</param>
        <param name="eventArgs">Datos que son pertinentes para el procesamiento de la extensión de marcado.</param>
        <summary>Administra los casos en los que una extensión de marcado proporciona un valor para una propiedad de un objeto <see cref="T:System.Windows.DataTrigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este es el método al que hace referencia un aplicada <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> atributo en el nivel de clase, lo que significa que este método procesa todos los intentos de establecer los valores de <xref:System.Windows.DataTrigger> con una extensión de marcado. Se no suele llamar a este método directamente.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.DataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de objetos <see cref="T:System.Windows.Setter" />, que describen los valores de propiedad que se van a aplicar si el elemento de datos cumple la condición especificada.</summary>
        <value>El valor predeterminado es <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Uso de elementos de propiedad XAML  
  
```  
<object>  
  <object.Setters>  
    ZeroOrMoreSetters  
  </object.Setters>  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *ZeroOrMoreSetters*  
 Cero o más <xref:System.Windows.Setter> objetos.  
  
 Un <xref:System.Windows.DataTrigger> le permite iniciar acciones o usar <xref:System.Windows.Setter>s para aplicar la propiedad valores cuando el elemento de datos cumple una condición especificada.  
  
 Si hay más de un establecedor establecen la misma propiedad en la misma colección de establecedores, por último se usa el establecedor que se declara.  
  
 El <xref:System.Windows.DataTrigger.Setters%2A> propiedad de un <xref:System.Windows.DataTrigger> objeto solo puede contener <xref:System.Windows.Setter> objetos. Agregar un <xref:System.Windows.Setter> secundario a un <xref:System.Windows.DataTrigger> objeto, agrega implícitamente a la <xref:System.Windows.SetterBaseCollection> para el <xref:System.Windows.DataTrigger> objeto. <xref:System.Windows.EventSetter> no se admiten objetos; solo <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> admite <xref:System.Windows.EventSetter> objetos.  
  
   
  
## Examples  
 El ejemplo siguiente muestra dos <xref:System.Windows.DataTrigger> objetos que se definen en un <xref:System.Windows.DataTemplate>. El <xref:System.Windows.DataTemplate> se aplica a *AuctionItem* objetos de datos (no se muestra en este ejemplo), que tienen la propiedad *SpecialFeatures*.  
  
 La primera <xref:System.Windows.DataTrigger> se especifica que si el objeto de datos tiene un *SpecialFeatures* valor *Color*, a continuación, se muestra el elemento con un `DodgerBlue` en segundo plano con títulos en azul marino. Si el objeto de datos tiene un *SpecialFeatures* valor de *resaltar*, a continuación, el segundo <xref:System.Windows.DataTrigger> estará activo, por lo que el elemento que se mostrará con un borde naranja con una estrella.  
  
 Para obtener un ejemplo completo, vea [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introducción a las plantillas de datos de ejemplo</related>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objeto secundario que se va a agregar.</param>
        <summary>Agrega un objeto secundario.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Windows.DataTrigger> se convierte en una interfaz <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texto que se va a agregar al objeto.</param>
        <summary>Agrega el contenido de texto de un nodo al objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro es una implementación explícita de un miembro de interfaz. Solo se puede utilizar cuando la instancia de <xref:System.Windows.DataTrigger> se convierte en una interfaz <xref:System.Windows.Markup.IAddChild>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTrigger.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.DataTrigger.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("Binding")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor que se compara con el valor de propiedad del objeto de datos.</summary>
        <value>El valor predeterminado es <see langword="null" />. Vea también la sección Excepciones.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlPropertyElementUsage_Value"></a>   
## <a name="xaml-property-element-usage"></a>Uso de elementos de propiedad XAML  
  
```  
<object>  
  <object.Value>  
    Value  
  </object.Value>  
</object>  
```  
  
 Este valor se compara con el valor de propiedad generado por el <xref:System.Windows.DataTrigger.Binding%2A> propiedad de la <xref:System.Windows.DataTrigger>. La comparación es una comprobación de la igualdad de referencias. Si los dos valores son iguales, se aplican las acciones asociadas o establecedores.  
  
 Tenga en cuenta que debe especificar tanto el <xref:System.Windows.DataTrigger.Binding%2A> y <xref:System.Windows.DataTrigger.Value%2A> propiedades en un <xref:System.Windows.DataTrigger> para el desencadenador de datos tenga sentido. Si no se establecen las propiedades de uno o ambos, se producirá una excepción.  
  
   
  
## Examples  
 En el ejemplo siguiente, la <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> de la <xref:System.Windows.Controls.ListBox> está enlazado a *lugares*, un <xref:System.Collections.ObjectModel.ObservableCollection%601> de *lugar* objetos. *Lugar* objetos tienen propiedades *nombre* y *estado*.  
  
 Cada <xref:System.Windows.Controls.ListBoxItem> de la <xref:System.Windows.Controls.ListBox> muestra un *lugar* objeto. El <xref:System.Windows.Style> en el ejemplo se aplica a cada <xref:System.Windows.Controls.ListBoxItem>.  
  
 El <xref:System.Windows.DataTrigger> se especifica que si el *estado* de la *lugar* elemento de datos es "WA", a continuación, el primer plano del correspondiente <xref:System.Windows.Controls.ListBoxItem> está establecido en rojo.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 El ejemplo siguiente muestra dos <xref:System.Windows.DataTrigger>s que se definen en un <xref:System.Windows.DataTemplate>. El <xref:System.Windows.DataTemplate> se aplica a *AuctionItem* objetos de datos (no se muestra en este ejemplo), que tienen la propiedad *SpecialFeatures*. Consulte [Data Binding Demo](https://go.microsoft.com/fwlink/?LinkID=163703) para ver el ejemplo completo.  
  
 La primera <xref:System.Windows.DataTrigger> se especifica que si el objeto de datos tiene un *SpecialFeatures* valor de *Color*, a continuación, se muestra el elemento con un fondo azul marino títulos. Si el objeto de datos tiene un *SpecialFeatures* valor de *resaltar*, a continuación, el segundo <xref:System.Windows.DataTrigger> estará activo, por lo que el elemento que se mostrará con un borde naranja con una estrella.  
  
 [!code-xaml[DataBindingLab#AuctionItemsDataTriggers](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemsdatatriggers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">No se admiten expresiones. No se admiten enlaces.</exception>
        <altmember cref="P:System.Windows.DataTrigger.Binding" />
        <altmember cref="P:System.Windows.DataTrigger.Setters" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Introducción a las plantillas de datos de ejemplo</related>
      </Docs>
    </Member>
  </Members>
</Type>