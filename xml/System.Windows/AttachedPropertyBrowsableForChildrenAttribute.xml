<Type Name="AttachedPropertyBrowsableForChildrenAttribute" FullName="System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fee997cc4d300d2bc671d128c3ed81bb05fbfa6f" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37493502" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttachedPropertyBrowsableForChildrenAttribute : System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttachedPropertyBrowsableForChildrenAttribute extends System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttachedPropertyBrowsableForChildrenAttribute&#xA;Inherits AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachedPropertyBrowsableForChildrenAttribute sealed : System::Windows::AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="F#" Value="type AttachedPropertyBrowsableForChildrenAttribute = class&#xA;    inherit AttachedPropertyBrowsableAttribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.AttachedPropertyBrowsableAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El significado del término `browsable` que se usa en las descripciones de este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] es análoga a las descripciones dadas para <xref:System.ComponentModel.BrowsableAttribute>, pero el estado de exploración para una propiedad adjunta es especialmente relevante para la información de propiedad de [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], ya que una propiedad adjunta es principalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto.  
  
 Cuando esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] se aplica al descriptor de acceso get para una propiedad adjunta, esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] especifica que una propiedad adjunta es examinable cuando el propietario de la propiedad adjunta es un elemento primario de otros elementos.  
  
 Cuando se interpreta mediante un diseñador que usa información del descriptor de tipo, el diseñador debe agregar esta propiedad como una propiedad admite la exploración para todos los elementos secundarios en el árbol lógico, según el elemento primario con este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] aplicado.  
  
 Por lo general, el estado de exploración es semejante a la funcionalidad. Por ejemplo, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> se designa como explorable en elementos que son elementos secundarios de un <xref:System.Windows.Controls.Canvas>, porque <xref:System.Windows.Controls.Canvas> incluye código para comprobar los valores establecidos de <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> en elementos secundarios.  
  
 Esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] admite dos tipos de tres modos de detección para las posiciones de elemento primario: un modo superficial y un modo profundo. El modo superficial, que es el modo predeterminado para un aplicada <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], requiere que el elemento primario inmediato sea el tipo de propietario de la propiedad en el orden de la propiedad adjunta se pueda explorar. El modo profundo se declara aplicando el atributo con <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> como `true`. El modo profundo es menos restrictivo porque sólo requiere que el tipo de propietario que en algún lugar en la dirección del antecesor del árbol lógico. y, por lo tanto, la propiedad adjunta es examinable en todos los elementos secundarios, elementos secundarios inmediatos no acaba. Se aplica el modo profundo para los usos de la propiedad adjunta donde los elementos que intervienen en el árbol lógico no deben notificarse como elemento primario es true. Las colecciones implícitas (por ejemplo, el <xref:System.Windows.Controls.UIElementCollection> que está implícito en el <xref:System.Windows.Controls.Panel.Children%2A> de un <xref:System.Windows.Controls.Panel>) no se consideran elementos primarios para fines de cómo esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] declara el modo de detección de árbol.  
  
 Esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] solo debe aplicarse en el descriptor de acceso get de las definiciones de propiedad adjunta. No se aplican [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] al descriptor de acceso. Aunque intuitivamente es la operación de establecimiento es explorable para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] en elementos secundarios, es la presencia y las características del descriptor de acceso get en el elemento primario que controla el comportamiento real.  
  
 Si una propiedad adjunta es examinable en un elemento secundario no es una garantía absoluta de que el valor de propiedad adjunta realmente es procesado por el elemento primario de alguna manera. Además, el <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> valor no es una garantía absoluta de que el ámbito de procesamiento ni no se extiende más allá del elemento primario inmediato. Todo esto es específico de la implementación. Sin embargo, esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] para notificar el estado de exploración es el mejor mecanismo disponible para los informes de la información de uso y funcional para una propiedad adjunta. Por lo tanto, generalmente puede suponer que el estado examinable de una propiedad adjunta es análogo al comportamiento de cómo se procesa o se interpreta por el elemento primario correspondiente en el código de aplicación un valor de propiedad adjunta en un elemento secundario.  
  
 Para obtener información general sobre propiedades adjuntas declarativa, consulte [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
<a name="xamlTextUsage_AttachedPropertyBrowsableForChildrenAttribute"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Los miembros de este tipo no se utilizan normalmente en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Windows.Markup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttachedPropertyBrowsableForChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttachedPropertyBrowsableForChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado de <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> es `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member Equals : obj -&gt; bool&#xA;override this.Equals : obj -&gt; bool" Usage="attachedPropertyBrowsableForChildrenAttribute.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</param>
        <summary>Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is equal to a specified object.</summary>
        <returns>
          <see langword="true" /> if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación admite la igualdad de valor de la posible valor configurable expuesto por este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="abstract member GetHashCode : unit -&gt; int&#xA;override this.GetHashCode : unit -&gt; int" Usage="attachedPropertyBrowsableForChildrenAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</summary>
        <returns>An unsigned 32-bit integer value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación admite dos posibles valores hash basados en el posible valor configurable expuesto por este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDescendants">
      <MemberSignature Language="C#" Value="public bool IncludeDescendants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDescendants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDescendants As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDescendants { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeDescendants : bool with get, set" Usage="System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied.</summary>
        <value>
          <see langword="true" /> Si la propiedad adjunta es examinable para todos los elementos secundarios del árbol lógico del elemento primario tiene la propiedad adjunta. <see langword="false" /> Si la propiedad adjunta solo es explorable para elementos secundarios inmediatos de un elemento primario que tiene la propiedad adjunta. De manera predeterminada, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La mayoría de las propiedades adjuntas definidas por [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] que se aplican <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> hacerlo con el valor predeterminado de <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> como `false`.  
  
<a name="xamlTextUsage_IncludeDescendants"></a>   
## <a name="xaml-text-usage"></a>Uso de texto XAML  
 Los miembros de este tipo no se utilizan normalmente en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>