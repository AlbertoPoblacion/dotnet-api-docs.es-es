<Type Name="AttachedPropertyBrowsableForChildrenAttribute" FullName="System.Windows.AttachedPropertyBrowsableForChildrenAttribute">
  <TypeSignature Language="C#" Value="public sealed class AttachedPropertyBrowsableForChildrenAttribute : System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AttachedPropertyBrowsableForChildrenAttribute extends System.Windows.AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttachedPropertyBrowsableForChildrenAttribute&#xA;Inherits AttachedPropertyBrowsableAttribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttachedPropertyBrowsableForChildrenAttribute sealed : System::Windows::AttachedPropertyBrowsableAttribute" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.AttachedPropertyBrowsableAttribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="08dfb-101">Especifica que una propiedad adjunta tiene un ámbito puede examinar que se extiende a los elementos secundarios en el árbol lógico.</span><span class="sxs-lookup"><span data-stu-id="08dfb-101">Specifies that an attached property has a browsable scope that extends to child elements in the logical tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dfb-102">El significado del término `browsable` tal y como se usa en las descripciones de este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] es análogo a las descripciones dadas para <xref:System.ComponentModel.BrowsableAttribute>, pero el estado de exploración para una propiedad adjunta es especialmente relevante para información sobre propiedades de para [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], dado que una propiedad adjunta es principalmente un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concepto.</span><span class="sxs-lookup"><span data-stu-id="08dfb-102">The meaning of the term `browsable` as used in descriptions for this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is analogous to the descriptions given for <xref:System.ComponentModel.BrowsableAttribute>, but the browsable state for an attached property is particularly relevant to property information for [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], because an attached property is primarily a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] concept.</span></span>  
  
 <span data-ttu-id="08dfb-103">Cuando esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] se aplica al descriptor de acceso get para una propiedad adjunta, esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] especifica que una propiedad adjunta es examinable cuando el propietario de la propiedad adjunta es un elemento primario de otros elementos.</span><span class="sxs-lookup"><span data-stu-id="08dfb-103">When this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied to the get accessor for an attached property, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] specifies that an attached property is browsable when the attached property owner is a parent element of other elements.</span></span>  
  
 <span data-ttu-id="08dfb-104">Cuando lo interpreta un diseñador que usa información del descriptor de tipo, el diseñador debe agregar esta propiedad como una propiedad admite la exploración para todos los elementos secundarios del árbol lógico, basándose en el elemento primario con este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] aplicado.</span><span class="sxs-lookup"><span data-stu-id="08dfb-104">When interpreted by a designer that uses type descriptor information, the designer should add this property as a browsable property to all child elements in the logical tree, based on the parent element with this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] applied.</span></span>  
  
 <span data-ttu-id="08dfb-105">Por lo general, el estado de exploración asemeja a la funcionalidad.</span><span class="sxs-lookup"><span data-stu-id="08dfb-105">Generally, the browsable state parallels functionality.</span></span> <span data-ttu-id="08dfb-106">Por ejemplo, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> se designa como explorable en elementos que son elementos secundarios de un <xref:System.Windows.Controls.Canvas>, porque <xref:System.Windows.Controls.Canvas> incluye código para comprobar los valores del conjunto de <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> en los elementos secundarios.</span><span class="sxs-lookup"><span data-stu-id="08dfb-106">For example, <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> is designated browsable on elements that are child elements of a <xref:System.Windows.Controls.Canvas>, because <xref:System.Windows.Controls.Canvas> includes code for checking any set values of <xref:System.Windows.Controls.Canvas.Left%2A?displayProperty=nameWithType> on child elements.</span></span>  
  
 <span data-ttu-id="08dfb-107">Esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] admite dos tipos de tres modos de detección para las posiciones de los elementos primarios: un modo superficial y un modo profundo.</span><span class="sxs-lookup"><span data-stu-id="08dfb-107">This  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] supports two types of tree detection modes for parent element positions:  a shallow mode, and a deep mode.</span></span> <span data-ttu-id="08dfb-108">El modo superficial, que es el modo predeterminado para un aplicada <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], requiere que el elemento primario inmediato sea el tipo de propietario de la propiedad para la propiedad adjunta que admite la exploración.</span><span class="sxs-lookup"><span data-stu-id="08dfb-108">The shallow mode, which is the default mode for an applied <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], requires that the immediate parent element be the owner type of the property in order for the attached property to be browsable.</span></span> <span data-ttu-id="08dfb-109">El modo profundo se declara aplicando el atributo con <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> como `true`.</span><span class="sxs-lookup"><span data-stu-id="08dfb-109">The deep mode is declared by applying the attribute with <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `true`.</span></span> <span data-ttu-id="08dfb-110">El modo profundo es menos restrictivo porque sólo requiere que el tipo de propietario esté en la dirección del antecesor del árbol lógico. alguna parte y, por tanto, la propiedad adjunta es examinable en todos los elementos secundarios, los elementos secundarios inmediatos no solo.</span><span class="sxs-lookup"><span data-stu-id="08dfb-110">The deep mode is less restrictive because it only requires that the owner type be somewhere in the ancestor direction of the logical tree., and therefore the attached property is browsable on all child elements, not just immediate child elements.</span></span> <span data-ttu-id="08dfb-111">El modo profundo se aplica para los usos de la propiedad adjunta donde los elementos que intervienen en el árbol lógico no deben notificarse como el elemento primario es true.</span><span class="sxs-lookup"><span data-stu-id="08dfb-111">The deep mode is applied for attached property usages where intervening elements in the logical tree should not be reported as the true parent element.</span></span> <span data-ttu-id="08dfb-112">Las colecciones implícitas (por ejemplo, el <xref:System.Windows.Controls.UIElementCollection> que está implícito en el <xref:System.Windows.Controls.Panel.Children%2A> de un <xref:System.Windows.Controls.Panel>) no se consideran los elementos primarios para fines de cómo esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] declara el modo de detección de árbol.</span><span class="sxs-lookup"><span data-stu-id="08dfb-112">Implicit collections (for example, the <xref:System.Windows.Controls.UIElementCollection> that is implicit in the <xref:System.Windows.Controls.Panel.Children%2A> of a <xref:System.Windows.Controls.Panel>) are not considered to be parent elements for purposes of how this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] declares the tree detection mode.</span></span>  
  
 <span data-ttu-id="08dfb-113">Esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] solo se debe aplicar en el descriptor de acceso get de las definiciones de propiedad adjunta.</span><span class="sxs-lookup"><span data-stu-id="08dfb-113">This [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] should only be applied on the get accessor of attached property definitions.</span></span> <span data-ttu-id="08dfb-114">No se aplican a este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] para el descriptor de acceso.</span><span class="sxs-lookup"><span data-stu-id="08dfb-114">Do not apply this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] to the set accessor.</span></span> <span data-ttu-id="08dfb-115">Aunque intuitivamente es la operación de establecimiento es explorable para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] en los elementos secundarios, es la presencia y las características del descriptor de acceso get en el elemento primario que controla el comportamiento real.</span><span class="sxs-lookup"><span data-stu-id="08dfb-115">Although intuitively it is the set operation that is being made browsable for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] on child elements, it is the presence and characteristics of the get accessor on the parent element that controls the true behavior.</span></span>  
  
 <span data-ttu-id="08dfb-116">Si una propiedad adjunta es examinable en un elemento secundario no es ninguna garantía absoluta de que el valor de propiedad adjunta realmente es procesado por el elemento primario de alguna manera.</span><span class="sxs-lookup"><span data-stu-id="08dfb-116">Whether an attached property is browsable on a child element is not an absolute guarantee that the attached property value is really processed by the parent element in some manner.</span></span> <span data-ttu-id="08dfb-117">Además, la <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> valor no es ninguna garantía absoluta de que el ámbito de procesamiento o no se extiende más allá del elemento primario inmediato.</span><span class="sxs-lookup"><span data-stu-id="08dfb-117">Also, the <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> value is not an absolute guarantee that the processing scope does or does not extend beyond the immediate parent element.</span></span> <span data-ttu-id="08dfb-118">Todo esto es específico de la implementación.</span><span class="sxs-lookup"><span data-stu-id="08dfb-118">All this is implementation specific.</span></span> <span data-ttu-id="08dfb-119">Sin embargo, esto [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] para informar del estado de exploración es el mejor mecanismo disponible para notificar la información de uso y funcional para una propiedad adjunta.</span><span class="sxs-lookup"><span data-stu-id="08dfb-119">However, this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] for reporting the browsable state is the best available mechanism for reporting the usage information and functional information for an attached property.</span></span> <span data-ttu-id="08dfb-120">Por lo tanto, generalmente puede suponer que el estado de exploración de una propiedad adjunta es análogo al comportamiento de cómo se procesa o se interpretan del elemento primario relevante en el código de aplicación un valor de propiedad adjunta en un elemento secundario.</span><span class="sxs-lookup"><span data-stu-id="08dfb-120">Therefore, you can generally assume that the browsable state of an attached property is analogous to the behavior of how an attached property value on a child element is processed or interpreted by the relevant parent element in your application code.</span></span>  
  
 <span data-ttu-id="08dfb-121">Para obtener información general sobre las propiedades adjuntas declarativo, consulte [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span><span class="sxs-lookup"><span data-stu-id="08dfb-121">For general information on declaring attached properties, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).</span></span>  
  
<a name="xamlTextUsage_AttachedPropertyBrowsableForChildrenAttribute"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="08dfb-122">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="08dfb-122">XAML Text Usage</span></span>  
 <span data-ttu-id="08dfb-123">Los miembros de este tipo no se utilizan habitualmente en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="08dfb-123">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="N:System.Windows.Markup" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttachedPropertyBrowsableForChildrenAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttachedPropertyBrowsableForChildrenAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08dfb-124">Inicializa una nueva instancia de la clase <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="08dfb-124">Initializes a new instance of the <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dfb-125">El valor predeterminado de <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> es `false`.</span><span class="sxs-lookup"><span data-stu-id="08dfb-125">The default for <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="08dfb-126"><see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> que se va a comparar con el <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> actual.</span><span class="sxs-lookup"><span data-stu-id="08dfb-126">The <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> to compare to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span></span></param>
        <summary><span data-ttu-id="08dfb-127">Determina si el [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] de <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> actual es igual a un objeto especificado.</span><span class="sxs-lookup"><span data-stu-id="08dfb-127">Determines whether the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="08dfb-128"><see langword="true" /> si el objeto <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> especificado es igual al objeto <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> actual; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="08dfb-128"><see langword="true" /> if the specified <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> is equal to the current <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dfb-129">Esta implementación admite la igualdad de valor de un posible valor configurable expuesto por este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span><span class="sxs-lookup"><span data-stu-id="08dfb-129">This implementation supports value equality of the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="08dfb-130">Devuelve el código hash del atributo [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] de <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="08dfb-130">Returns the hash code for this <see cref="T:System.Windows.AttachedPropertyBrowsableForChildrenAttribute" /> [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span></span></summary>
        <returns><span data-ttu-id="08dfb-131">Valor entero de 32 bits sin signo.</span><span class="sxs-lookup"><span data-stu-id="08dfb-131">An unsigned 32-bit integer value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dfb-132">Esta implementación admite dos posibles valores hash basados en el posible valor configurable expuesto por este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span><span class="sxs-lookup"><span data-stu-id="08dfb-132">This implementation supports two possible hash values based on the one possible settable value exposed by this [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)], <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeDescendants">
      <MemberSignature Language="C#" Value="public bool IncludeDescendants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeDescendants" />
      <MemberSignature Language="DocId" Value="P:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeDescendants As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeDescendants { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="08dfb-133">Obtiene o establece un valor que declara si se usará el modo profundo para la detección de elementos primarios en la propiedad adjunta donde se aplica este [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)].</span><span class="sxs-lookup"><span data-stu-id="08dfb-133">Gets or sets a value that declares whether to use the deep mode for detection of parent elements on the attached property where this  [!INCLUDE[TLA#tla_netframewkattr](~/includes/tlasharptla-netframewkattr-md.md)] is applied.</span></span></summary>
        <value>
          <span data-ttu-id="08dfb-134"><see langword="true" /> si se puede explorar la propiedad adjunta de todos los elementos secundarios del árbol lógico del elemento primario que posee la propiedad adjunta.</span><span class="sxs-lookup"><span data-stu-id="08dfb-134"><see langword="true" /> if the attached property is browsable for all child elements in the logical tree of the parent element that owns the attached property.</span></span> <span data-ttu-id="08dfb-135"><see langword="false" /> si solo se puede explorar la propiedad adjunta de los elementos secundarios inmediatos de un elemento primario que posee la propiedad adjunta.</span><span class="sxs-lookup"><span data-stu-id="08dfb-135"><see langword="false" /> if the attached property is only browsable for immediate child elements of a parent element that owns the attached property.</span></span> <span data-ttu-id="08dfb-136">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="08dfb-136">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="08dfb-137">La mayoría de las propiedades asociadas definidas por [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] que se aplican <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> hacerlo con el valor predeterminado de <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> como `false`.</span><span class="sxs-lookup"><span data-stu-id="08dfb-137">Most of the attached properties defined by [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that apply <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute> do so with the default of <xref:System.Windows.AttachedPropertyBrowsableForChildrenAttribute.IncludeDescendants%2A> as `false`.</span></span>  
  
<a name="xamlTextUsage_IncludeDescendants"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="08dfb-138">Uso de texto XAML</span><span class="sxs-lookup"><span data-stu-id="08dfb-138">XAML Text Usage</span></span>  
 <span data-ttu-id="08dfb-139">Los miembros de este tipo no se utilizan habitualmente en [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="08dfb-139">Members of this type are not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>