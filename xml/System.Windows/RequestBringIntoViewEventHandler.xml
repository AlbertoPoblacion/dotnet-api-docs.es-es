<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1fabd3e8ca79d0ed50a5a9c8a6f00299e7b8f9dd" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37491200" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Objeto en que está asociado el controlador de eventos.</param>
    <param name="e">Datos del evento.</param>
    <summary>Representa el método que controlará el evento enrutado <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Controle este evento suele ser solo dentro de los elementos que admiten una región desplazable o, en caso contrario, establecen deliberadamente su tamaño de representación más pequeña que la combinación deseada de su contenido de elemento secundario y solo se realiza controlando deliberadamente el evento una vez que se ha enrutado hacia arriba en el árbol de elementos y se ha alcanzado al primer elemento primario que ofrece compatibilidad con el área desplazable. Es una implementación existente que controla las áreas de desplazamiento de manera que es generalmente deseable para los controles de usuario <xref:System.Windows.Controls.ScrollViewer>. Si deriva de <xref:System.Windows.Controls.ScrollViewer>, puede registrar un controlador de clase para <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> y complementar la clase base que controla el evento. También debe considerar el uso o definido por la clase de control de clases <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> eventos en lugar de <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>. Como alternativa, si creas una clase completamente personalizada que no se deriva de <xref:System.Windows.Controls.ScrollViewer>, aún puede agregar la clase de control mediante una llamada a <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> en la creación de instancias de clase.  Para obtener información detallada en control de clases, vea [Marcar eventos enrutados como controlados y control de clases](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Elementos de contenido pueden provocar el evento que se elevará sus hosts de contenido (llamando a <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> y generar <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> desde el host de contenido). De forma similar, puede solicitar los elementos del árbol lógico se incluyen en la vista con el método auxiliar <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.  
  
 Un <xref:System.Windows.Controls.ListBox> implementa un método relacionado pero distinto <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>