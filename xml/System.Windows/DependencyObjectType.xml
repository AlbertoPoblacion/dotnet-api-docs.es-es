<Type Name="DependencyObjectType" FullName="System.Windows.DependencyObjectType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82fb7814e22f512058a33e227f6da12781e34e22" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30675839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DependencyObjectType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObjectType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObjectType" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObjectType" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObjectType" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implementa una caché de tipo subyacente para todos los tipos derivados de <see cref="T:System.Windows.DependencyObject" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.DependencyObjectType> Representa un sistema subyacente específico ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> de un <xref:System.Windows.DependencyObject>. <xref:System.Windows.DependencyObjectType> es básicamente un contenedor para el ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) <xref:System.Type> por lo que puede extender a algunos de sus capacidades.  
  
 Esta clase no tiene constructor público. Instancias de esta clase solo pueden obtenerse a través de propiedades de otros objetos (como <xref:System.Windows.DependencyObject.DependencyObjectType%2A?displayProperty=nameWithType>), o mediante el método estático <xref:System.Windows.DependencyObjectType.FromSystemType%2A>.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ BaseType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Windows.DependencyObjectType" /> de la clase base inmediata del <see cref="T:System.Windows.DependencyObjectType" /> actual.</summary>
        <value>Tipo de la clase base.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromSystemType">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObjectType FromSystemType (Type systemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObjectType FromSystemType(class System.Type systemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.FromSystemType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromSystemType (systemType As Type) As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObjectType ^ FromSystemType(Type ^ systemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="systemType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="systemType">Tipo ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) del sistema que se va a convertir.</param>
        <summary>Devuelve un <see cref="T:System.Windows.DependencyObjectType" /> que representa un tipo ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) de un sistema determinado.</summary>
        <returns>
          <see cref="T:System.Windows.DependencyObjectType" /> que representa el tipo ([!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]) del sistema.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cada <xref:System.Windows.DependencyObject> mantiene un <xref:System.Windows.DependencyObject.DependencyObjectType%2A> propiedad que devuelve una <xref:System.Windows.DependencyObjectType>, pero esto requiere tener un determinado <xref:System.Windows.DependencyObject> instancia. Puede utilizar este método de utilidad estático si no tiene todavía un <xref:System.Windows.DependencyObject> instancia y requieren un <xref:System.Windows.DependencyObjectType>.  
  
   
  
## Examples  
 El ejemplo siguiente se llama <xref:System.Windows.DependencyObjectType.FromSystemType%2A> , creando un <xref:System.Windows.DependencyObjectType> según el tipo de la <xref:System.Windows.Window> clase.  
  
 [!code-csharp[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertiesOvwSupport/CSharp/page3.xaml.cs#dotfromsystemtype)]
 [!code-vb[PropertiesOvwSupport#DOTFromSystemType](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertiesOvwSupport/visualbasic/page3.xaml.vb#dotfromsystemtype)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve el código hash de este objeto <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <returns>Código hash de un entero de 32 bits con signo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta implementación está vinculada al valor de la <xref:System.Windows.DependencyObjectType.Id%2A> propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un identificador único de base cero para operaciones de búsqueda de matrices de tiempo constante.</summary>
        <value>Identificador interno.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No utilice las funciones hash generales. No hay ninguna garantía en este valor. Puede variar entre las ejecuciones de la aplicación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstanceOfType">
      <MemberSignature Language="C#" Value="public bool IsInstanceOfType (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInstanceOfType(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsInstanceOfType(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInstanceOfType(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.DependencyObjectType" /> actual.</param>
        <summary>Determina si el objeto especificado es una instancia del objeto <see cref="T:System.Windows.DependencyObjectType" /> actual.</summary>
        <returns>
          <see langword="true" /> si la clase representada por el <see cref="T:System.Windows.DependencyObjectType" /> actual está en la jerarquía de herencia de <see cref="T:System.Windows.DependencyObject" /> pasada como <paramref name="d" />; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los objetos del mismo tipo exacto devuelven `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSubclassOf">
      <MemberSignature Language="C#" Value="public bool IsSubclassOf (System.Windows.DependencyObjectType dependencyObjectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSubclassOf(class System.Windows.DependencyObjectType dependencyObjectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObjectType.IsSubclassOf(System.Windows.DependencyObjectType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSubclassOf(System::Windows::DependencyObjectType ^ dependencyObjectType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObjectType" Type="System.Windows.DependencyObjectType" />
      </Parameters>
      <Docs>
        <param name="dependencyObjectType">
          <see cref="T:System.Windows.DependencyObjectType" /> que se va comparar.</param>
        <summary>Determina si el <see cref="T:System.Windows.DependencyObjectType" /> actual se deriva del <see cref="T:System.Windows.DependencyObjectType" /> especificado.</summary>
        <returns>
          <see langword="true" /> si el parámetro <paramref name="dependencyObjectType" /> y el <see cref="T:System.Windows.DependencyObjectType" /> actual representan tipos de clases, y la clase representada por el <see cref="T:System.Windows.DependencyObjectType" /> actual se deriva de la clase representada por <paramref name="dependencyObjectType" />. En caso contrario, es <see langword="false" />. Este método también devuelve <see langword="false" /> si <paramref name="dependencyObjectType" /> y el objeto <see cref="T:System.Windows.DependencyObjectType" /> actual representan la misma clase.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre del tipo de sistema [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] representado.</summary>
        <value>Nombre del tipo de sistema [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] representado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de <xref:System.Windows.DependencyObjectType.Name%2A> es la misma cadena como el nombre del nombre del tipo de la <xref:System.Type>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="SystemType">
      <MemberSignature Language="C#" Value="public Type SystemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type SystemType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObjectType.SystemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ SystemType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo de sistema [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] representado por este <see cref="T:System.Windows.DependencyObjectType" />.</summary>
        <value>Tipo de sistema [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] representado por este <see cref="T:System.Windows.DependencyObjectType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>