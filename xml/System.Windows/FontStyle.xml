<Type Name="FontStyle" FullName="System.Windows.FontStyle">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f82567007d319afe1619024c6a14bb1d6ac50919" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30677119" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct FontStyle : IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit FontStyle extends System.ValueType implements class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FontStyle" />
  <TypeSignature Language="VB.NET" Value="Public Structure FontStyle&#xA;Implements IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class FontStyle : IFormattable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.FontStyleConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define una estructura que representa el estilo de un nombre de fuente como normal, cursiva u oblicuo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tres términos clasifican la inclinación de una fuente: normal, cursiva y oblicua.  
  
|Estilo de fuente|Descripción|  
|----------------|-----------------|  
|Normal|Los caracteres de una fuente normal o roman, son en vertical.|  
|Cursiva|Los caracteres de una fuente en cursiva están realmente inclinados y aparecen como si estuvieran diseñados.|  
|Oblicua|Los caracteres de una fuente oblicua artificialmente se inclinado. La inclinación se logra mediante la realización de una transformación de recorte en los caracteres de una fuente normal. Cuando una verdadera fuente en cursiva no está disponible en un equipo o una impresora, un estilo oblicuo puede generar a partir de la fuente normal y servir para simular una fuente en cursiva.|  
  
 Puede usar los valores enumerados de la <xref:System.Windows.FontStyles> clase para establecer el <xref:System.Windows.FontStyle> estructura.  
  
<a name="xamlAttributeUsage_FontWeight"></a>   
## <a name="xaml-attribute-usage"></a>Uso de atributos XAML  
  
```  
<object fontStyleProperty="fontStylesValue"/>  
```  
  
<a name="xamlValues_FontWeight"></a>   
## <a name="xaml-values"></a>Valores XAML  
 *fontStylesValue*  
 Un <xref:System.Windows.FontStyles> valor, como "Normal", "Cursiva" u "Oblicuo".  
  
   
  
## Examples  
 El siguiente ejemplo se establece `"Italic"` como el <xref:System.Windows.FontStyle>.  
  
 [!code-xaml[FontSnippets#FontStyleSnippet5](~/samples/snippets/csharp/VS_Snippets_Wpf/FontSnippets/CSharp/FontStyleSnippets.xaml#fontstylesnippet5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.FontStretch" />
    <altmember cref="T:System.Windows.FontStyles" />
    <altmember cref="T:System.Windows.FontWeight" />
    <altmember cref="T:System.Windows.Media.FontFamily" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Compara dos instancias de <see cref="T:System.Windows.FontStyle" /> para determinar si son iguales.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Valor <see cref="T:System.Object" /> que representa el <see cref="T:System.Windows.FontStyle" /> que se va a comparar para determinar si son iguales.</param>
        <summary>Compara <see cref="T:System.Object" /> con la instancia de <see cref="T:System.Windows.FontStyle" /> actual para determinar si son iguales.</summary>
        <returns>
          <see langword="true" /> para mostrar que las dos instancias son iguales; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.FontStyle obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.FontStyle obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.Equals(System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As FontStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::FontStyle obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="obj">Instancia de <see cref="T:System.Windows.FontStyle" /> cuya igualdad se va a comparar.</param>
        <summary>Compara <see cref="T:System.Windows.FontStyle" /> con la instancia de <see cref="T:System.Windows.FontStyle" /> actual para determinar si son iguales.</summary>
        <returns>
          <see langword="true" /> para mostrar que las dos instancias son iguales; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Recupera el código hash para este objeto.</summary>
        <returns>Código hash de 32 bits, que es un entero con signo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor devuelto sirve como función hash para un tipo determinado, para su uso en algoritmos hash y los datos estructuras como una tabla hash.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.FontStyle left, System.Windows.FontStyle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.FontStyle left, valuetype System.Windows.FontStyle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.op_Equality(System.Windows.FontStyle,System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As FontStyle, right As FontStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::FontStyle left, System::Windows::FontStyle right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.FontStyle" />
        <Parameter Name="right" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="left">Primera instancia de <see cref="T:System.Windows.FontStyle" /> que se va a comparar.</param>
        <param name="right">Segunda instancia de <see cref="T:System.Windows.FontStyle" /> que se va a comparar.</param>
        <summary>Compara dos instancias de <see cref="T:System.Windows.FontStyle" /> para determinar si son iguales.</summary>
        <returns>
          <see langword="true" /> para mostrar que los objetos <see cref="T:System.Windows.FontStyle" /> especificados son iguales; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.FontStyle left, System.Windows.FontStyle right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.FontStyle left, valuetype System.Windows.FontStyle right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.op_Inequality(System.Windows.FontStyle,System.Windows.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As FontStyle, right As FontStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::FontStyle left, System::Windows::FontStyle right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.FontStyle" />
        <Parameter Name="right" Type="System.Windows.FontStyle" />
      </Parameters>
      <Docs>
        <param name="left">Primera instancia de <see cref="T:System.Windows.FontStyle" /> que se va a comparar.</param>
        <param name="right">Segunda instancia de <see cref="T:System.Windows.FontStyle" /> que se va a comparar.</param>
        <summary>Evalúa dos instancias de <see cref="T:System.Windows.FontStyle" /> para determinar si no son iguales.</summary>
        <returns>
          <see langword="false" /> para mostrar que <paramref name="left" /> es igual a <paramref name="right" />; de lo contrario, <see langword="true" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <see cref="T:System.String" /> que especifica el formato que se va a utilizar.  
  
 O bien  
  
 <see langword="null" /> para utilizar el formato predeterminado que se define para el tipo de la implementación de <see cref="T:System.IFormattable" />.</param>
        <param name="provider">
          <see cref="T:System.IFormatProvider" /> que se va a utilizar para dar formato al valor.  
  
 O bien  
  
 <see langword="null" /> para obtener la información de formato para valores numéricos de la configuración regional actual del sistema operativo.</param>
        <summary>Para una descripción de este miembro, vea <see cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />.</summary>
        <returns>
          <see cref="T:System.String" /> que contiene el valor de la instancia actual en el formato especificado.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.FontStyle.ToString" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FontStyle.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una <see cref="T:System.String" /> que representa el objeto <see cref="T:System.Windows.FontStyle" /> actual y está basada en la información de la propiedad <see cref="P:System.Globalization.CultureInfo.CurrentCulture" />.</summary>
        <returns>
          <see cref="T:System.String" /> que representa el valor del objeto <see cref="T:System.Windows.FontStyle" />, como "Normal", "Cursiva" u "Oblicuo".</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>