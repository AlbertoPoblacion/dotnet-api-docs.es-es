<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ab025443f3717a6f64e96df27f296ecc9101058" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668759" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Define o hace referencia a las claves de recurso basándose en los nombres de clase de ensamblados externos, así como un identificador adicional.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [extensión de marcado ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Esta clase implementa un tipo de objeto que es útil para crear claves que se basan en tipos en ensamblados, además de un identificador. Puesto que definir o hacer referencia al tipo, no es necesario solicitar un determinado <xref:System.Windows.ResourceDictionary>, y puede existir más de un conjunto de recursos en el ensamblado, cada uno de ellos diferenciado por el tipo de sus <xref:System.Windows.ComponentResourceKey>.  
  
 Hay dos maneras de definir un <xref:System.Windows.ComponentResourceKey>.  
  
 Si desea que una clave de fácil acceso, puede definir una propiedad estática en el código de clase de control que devuelve un <xref:System.Windows.ComponentResourceKey>, construido con un <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> que existe en el ensamblado de recursos externos y un <xref:System.Windows.ComponentResourceKey.ResourceId%2A>. La clave se puede utilizar para definir estilos predeterminados alternativos para los controles en un ensamblado, intercambiando el ensamblado de recursos externos original para uno personalizado. También puede definir una parte de recurso con nombre dentro de un estilo de control más grande o una plantilla para exponer un punto de entrada de personalización. Esto es especialmente útil si va a definir un diccionario de recursos de tema para el control.  
  
 También puede usar el [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [extensión de marcado ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) en sintaxis detallada directamente para crear una instancia separada de la clave. Esto es útil si desea declarar los recursos privados de otros ensamblados que son menos detectables para la personalización.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El constructor predeterminado no es suela utilizar, porque un <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> valor y <xref:System.Windows.ComponentResourceKey.ResourceId%2A> valor son necesarios para la inicialización correcta. El constructor predeterminado existe principalmente para admitir [extensión de marcado ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) uso XAML en forma de parámetro con nombre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">Tipo que define la clave de recurso.</param>
        <param name="resourceId">Identificador único para diferenciar este<see cref="T:System.Windows.ComponentResourceKey" /> de otros asociados al tipo <c>typeInTargetAssembly</c>.</param>
        <summary>Inicializa una nueva instancia de <see cref="T:System.Windows.ComponentResourceKey" />, especificando el <see cref="T:System.Type" /> que define la clave y un objeto que se va a usar como identificador de recursos adicional.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor existe para dos escenarios, con el primer escenario es el más importante:  
  
-   Admite la creación de un <xref:System.Windows.ComponentResourceKey> que, a continuación, se expone como un campo estático público en una clase de control personalizado. Esto simplifica el acceso de un control a sus recursos definidos en la plantilla a través de `{x:Static}` usos para los valores de propiedad de plantilla.  
  
-   Admite [extensión de marcado ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) uso XAML en forma de parámetro posicional, que es una técnica disponible para otros fabricantes que hacen referencia a un recurso de componente.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.ComponentResourceKey> que, a continuación, se expone como una clave estática de una clase de control para proporcionar un punto de entrada de la personalización de estilo.  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto de ensamblado que indica en qué diccionario de ensamblado se debe buscar el valor asociado a esta clave.</summary>
        <value>Ensamblado recuperado, como una clase de reflexión.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Objeto que se va a comparar con el objeto <see cref="T:System.Windows.ComponentResourceKey" /> actual.</param>
        <summary>Determina si el objeto proporcionado es igual que el objeto <see cref="T:System.Windows.ComponentResourceKey" /> actual.</summary>
        <returns>
          <see langword="true" /> si los objetos son iguales; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dos claves son iguales si ambas tienen los mismos valores para todas sus propiedades configurables de la inmediatas (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un código hash para esta <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Valor entero de 32 bits con signo.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un identificador único para diferenciar esta clave de otras asociadas a este tipo.</summary>
        <value>Identificador único. Suele ser una cadena.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [extensión de marcado ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Normalmente, la cadena utilizada para una <xref:System.Windows.ComponentResourceKey.ResourceId%2A> valor se ajusta a la [XamlName (gramática)](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.ComponentResourceKey.ResourceId%2A> para diferenciar esta clave de otras asociadas a este tipo.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene la representación de cadena de un objeto <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Representación de cadena.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de <see cref="T:System.Type" /> que define la clave de recurso.</summary>
        <value>Tipo que define la clave de recurso.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] obtener información, consulte [extensión de marcado ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 El <xref:System.Windows.ComponentResourceKey> elemento se utiliza en componentes personalizados para definir las claves de recursos que se obtiene acceso desde ensamblados externos, basándose en un ensamblado que contiene el tipo de destino. Componentes personalizados suelen definen nuevos tipos que deben estar en el ensamblado donde se encuentra el recurso. Como regla general, estos tipos no tienen ninguna otra implementación, los tipos solo existen con el fin de satisfacer los requisitos de búsqueda de un <xref:System.Windows.ComponentResourceKey>.  
  
## Examples  
 En el ejemplo siguiente se muestra cómo definir un <xref:System.Windows.ComponentResourceKey> incluidos <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> y <xref:System.Windows.ComponentResourceKey.ResourceId%2A> mediante la [extensión de marcado ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md). Este recurso, a continuación, se coloca en un ensamblado externo y obtener acceso a un uso de clave que solicita el recurso mediante un análogo <xref:System.Windows.ComponentResourceKey> en la solicitud.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>