<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LocalValueEntry.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5189544c51f979079c8ed20d684947ab6bf3fbc14.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">189544c51f979079c8ed20d684947ab6bf3fbc14</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.LocalValueEntry">
          <source>Represents a property identifier and the property value for a locally set dependency property.</source>
          <target state="translated">Representa un identificador de propiedad y el valor de propiedad para una propiedad de dependencia establecida localmente.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>Instances of this class are returned when getting the value of the <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</source>
          <target state="translated">Se devuelven instancias de esta clase al obtener el valor de la <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> propiedad de un <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>All <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> properties are read-only.</source>
          <target state="translated">Todos los <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> propiedades son de solo lectura.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>This class has no public constructor.</source>
          <target state="translated">Esta clase no tiene constructor público.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>In order to obtain instances of this class you must call <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph>, and then get the value of <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> from the returned <ph id="ph3">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</source>
          <target state="translated">Para obtener instancias de esta clase se debe llamar a <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph>y, a continuación, obtener el valor de <ph id="ph2">&lt;xref:System.Windows.LocalValueEnumerator.Current%2A&gt;</ph> desde el valor devuelto <ph id="ph3">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.LocalValueEntry">
          <source>The following example iterates locally set values of a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> and queries <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> properties.</source>
          <target state="translated">En el ejemplo siguiente se recorre en iteración localmente establecer los valores de un <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> y consultas <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> propiedades.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> que se va a comparar con el objeto <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> instances are equal.</source>
          <target state="translated">Determina si dos instancias de <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> son iguales.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>This <ph id="ph1">&lt;see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /&gt;</ph> implementation compares the values of the <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph>, and potentially compares the values of <ph id="ph3">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>.</source>
          <target state="translated">Esta implementación <ph id="ph1">&lt;see cref="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)" /&gt;</ph> compara los valores de <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> y compara potencialmente los valores de <ph id="ph3">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> component of a <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> is a value type, so will always be a bitwise comparison.</source>
          <target state="translated">El componente <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> es un tipo de valor, por lo que siempre será una comparación bit a bit.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>For the <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">Para el componente <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>, esta implementación emplea una comparación bit a bit si es un tipo de valor.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it just uses the == operator on the two values internally.</source>
          <target state="translated">Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque simplemente utiliza el operador == en los dos valores de manera interna.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.Equals(System.Object)">
          <source>By default, this would be a reference equality of the values and thus the equality of the entire <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> would become a reference equality.</source>
          <target state="translated">De forma predeterminada, ésta sería una igualdad de referencias de los valores, por lo que la igualdad de toda la <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> se volvería una igualdad de referencias.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</source>
          <target state="translated">Devuelve el código hash de este objeto <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.GetHashCode">
          <source>A signed 32-bit integer value.</source>
          <target state="translated">Valor entero de 32 bits con signo.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The first instance to compare.</source>
          <target state="translated">Primera instancia que se va a comparar.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The second instance to compare.</source>
          <target state="translated">Segunda instancia que se va a comparar.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>Compares the specified <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> instances to determine whether they are the same.</source>
          <target state="translated">Compara las instancias de <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> especificadas para determinar si son las mismas.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="obj1" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> is equal to the <ph id="ph4">&lt;paramref name="obj2" /&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>; otherwise, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="obj1" /&gt;</ph><ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> es igual que <ph id="ph4">&lt;paramref name="obj2" /&gt;</ph><ph id="ph5">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>; en caso contrario, <ph id="ph6">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>This <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.op_Equality%2A&gt;</ph> implementation compares the values of the <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph>, and potentially compares the values of <ph id="ph3">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph>.</source>
          <target state="translated">Esta implementación <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.op_Equality%2A&gt;</ph> compara los valores de <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> y compara potencialmente los valores de <ph id="ph3">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> component of a <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> is always a value type, so this comparison will always be a bitwise value comparison.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> componente de un <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> siempre es un tipo de valor, por lo que esta comparación siempre será una comparación de valores de bit a bit.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For the <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">Para el componente <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Value%2A&gt;</ph>, esta implementación emplea una comparación bit a bit si es un tipo de valor.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <ph id="ph1">`==`</ph> operator on the two values internally.</source>
          <target state="translated">Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque utiliza el operador <ph id="ph1">`==`</ph> en los dos valores de manera interna.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.LocalValueEntry.op_Equality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>By default, this is a reference equality of the values.</source>
          <target state="translated">De forma predeterminada, ésta es una igualdad de referencias de los valores.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The first instance to compare.</source>
          <target state="translated">Primera instancia que se va a comparar.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The second instance to compare.</source>
          <target state="translated">Segunda instancia que se va a comparar.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>Compares the specified <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> instances to determine whether they are different.</source>
          <target state="translated">Compara las instancias de <ph id="ph1">&lt;see cref="T:System.Windows.LocalValueEnumerator" /&gt;</ph> especificadas para determinar si son distintas.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>This implementation compares the values of the <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> components of a <ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</source>
          <target state="translated">Esta implementación compara los valores de <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> y los componentes <ph id="ph2">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> de <ph id="ph3">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> component of a <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> is always a value type, so this comparison will always be a bitwise comparison.</source>
          <target state="translated">El componente <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Property" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Windows.LocalValueEntry" /&gt;</ph> es siempre un tipo de valor, por lo que esta comparación siempre será una comparación bit a bit.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For the <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph> component, this implementation employs a bitwise comparison if it is a value type.</source>
          <target state="translated">Para el componente <ph id="ph1">&lt;see cref="P:System.Windows.LocalValueEntry.Value" /&gt;</ph>, esta implementación emplea una comparación bit a bit si es un tipo de valor.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>For locally set properties that have reference types, the behavior is deferred to that type's equality determination mechanisms, because it uses the <ph id="ph1">&lt;see langword="==" /&gt;</ph> operator on the two values internally.</source>
          <target state="translated">Para las propiedades establecidas localmente que tienen tipos de referencia, el comportamiento se difiere a los mecanismos de determinación de igualdad de ese tipo, porque utiliza el operador <ph id="ph1">&lt;see langword="==" /&gt;</ph> en los dos valores de manera interna.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.LocalValueEntry.op_Inequality(System.Windows.LocalValueEntry,System.Windows.LocalValueEntry)">
          <source>By default, this is a reference equality of the values.</source>
          <target state="translated">De forma predeterminada, ésta es una igualdad de referencias de los valores.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.LocalValueEntry.Property">
          <source>Gets the identifier for the locally set dependency property that is represented by this entry.</source>
          <target state="translated">Obtiene el identificador de la propiedad de dependencia establecida localmente que se representa con esta entrada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Property">
          <source>The identifier for the locally set dependency property.</source>
          <target state="translated">Identificador de la propiedad de dependencia establecida localmente.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Property">
          <source>Use this property to query the identifier of the locally set dependency property and to obtain its metadata.</source>
          <target state="translated">Utilice esta propiedad para consultar el identificador de establecida localmente la propiedad de dependencia y obtener sus metadatos.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Property">
          <source>This obtained metadata may include the initial default value of the property and whether the property supports property value inheritance.</source>
          <target state="translated">Estos metadatos obtenidos pueden incluir el valor predeterminado inicial de la propiedad y si la propiedad admite la herencia del valor de propiedad.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Windows.LocalValueEntry.Value">
          <source>Gets the value of the locally set dependency property.</source>
          <target state="translated">Obtiene el valor de la propiedad de dependencia establecida localmente.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Value">
          <source>The value of the locally set dependency property as an object.</source>
          <target state="translated">Valor de la propiedad de dependencia establecida localmente como un objeto.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.LocalValueEntry.Value">
          <source>To determine a more specific type for this value, check the <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> for the current <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> and get its <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</ph>.</source>
          <target state="translated">Para determinar un tipo más específico para este valor, compruebe el <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry.Property%2A&gt;</ph> actuales <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> y obtener su <ph id="ph3">&lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>