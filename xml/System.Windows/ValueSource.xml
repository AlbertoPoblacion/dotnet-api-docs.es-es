<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValueSource.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c64500fcc9768d42490c1ff18e54293bdc46149c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c64500fcc9768d42490c1ff18e54293bdc46149c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ValueSource">
          <source>Reports the information returned from <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph>.</source>
          <target state="translated">Notifica la información devuelta de <ph id="ph1">&lt;see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Most of the information that <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> transmits is contained in the <ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> property.</source>
          <target state="translated">La mayoría de la información que <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> transmite se encuentra en la <ph id="ph2">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This property contains an enumeration value that specifies exactly one aspect of the overall <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system that is responsible for the effective value of a dependency property.</source>
          <target state="translated">Esta propiedad contiene un valor de enumeración que especifica exactamente uno de los aspectos de la global <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> sistema de propiedades que se encarga del valor efectivo de una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</source>
          <target state="translated">Además del valor base, la otra información que puede resultar interesante sobre un valor de propiedad de dependencia es si se anima el valor y, si el valor incluye una expresión (por ejemplo, un enlace, o una referencia de recurso dinámico).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>This information is reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> respectively.</source>
          <target state="translated">Esta información se notifica mediante <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> respectivamente.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">Además, si la coerción actúa en un valor de propiedad, la propiedad conserva un valor deseado y el valor de propiedad intentará alcanzar este valor deseado si se cambian o elevan las restricciones de la coerción.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValueSource">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Una propiedad forzada que no está en su valor deseado notificará que <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> es <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Gets a value of the <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph> enumeration, which reports the source that provided the dependency property system with a value.</source>
          <target state="translated">Obtiene un valor de la enumeración <ph id="ph1">&lt;see cref="T:System.Windows.BaseValueSource" /&gt;</ph>, que notifica el origen que proporcionó un valor al sistema de propiedades de dependencia.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>A value of the enumeration.</source>
          <target state="translated">Valor de la enumeración.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>The base value is not the effective value if either coercion or animation is acting on the property.</source>
          <target state="translated">El valor base no es el valor efectivo si la conversión o animación actúa en la propiedad.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>Check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> if you want to determine whether the base value is the effective value.</source>
          <target state="translated">Comprobar <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsAnimated%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> si desea determinar si el valor base es el valor efectivo.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.BaseValueSource">
          <source>You might also want to check <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> to see if the base value was evaluated out of an expression.</source>
          <target state="translated">Puede que le interese comprobar <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> para ver si el valor base se evaluó fuera de una expresión.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>The object to compare with this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">Objeto que se va a comparar con <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>Returns a value indicating whether this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> is equal to a specified object.</source>
          <target state="translated">Devuelve un valor que indica si este <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> es igual a un objeto especificado.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the provided object is equivalent to the current <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto proporcionado es equivalente al <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> actual; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.Equals(System.Object)">
          <source>This implementation supports value equality, based on each of the property values of each <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> structure.</source>
          <target state="translated">Esta implementación admite la igualdad de valor, en función de cada uno de los valores de propiedad de cada <ph id="ph1">&lt;xref:System.Windows.ValueSource&gt;</ph> estructura.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>Returns the hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</source>
          <target state="translated">Devuelve el código hash de este objeto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>A 32-bit unsigned integer hash code.</source>
          <target state="translated">Código hash de un entero de 32 bits sin signo.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.GetHashCode">
          <source>This hash code is based on the <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> value.</source>
          <target state="translated">Este código hash se basa en la <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>Gets a value that declares whether the property is being animated.</source>
          <target state="translated">Obtiene un valor que declara si se anima la propiedad.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the property is animated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propiedad está animada; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For any property that is currently being animated, the source reported by <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</source>
          <target state="translated">Para cualquier propiedad que se anima actualmente, el origen notificado por <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> no es importante de inmediato, porque la animación funciona con mayor prioridad de la propiedad de dependencia que el valor base.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsAnimated">
          <source>For more information about precedence and animations, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre la prioridad y las animaciones, consulte <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Gets a value that declares whether this value resulted from a <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property.</source>
          <target state="translated">Obtiene un valor que declara si este valor es el resultado de una implementación de <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> aplicada a una propiedad de dependencia.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value resulted from a <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> implementation applied to a dependency property; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el valor es el resultado de una implementación de <ph id="ph2">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> aplicada a una propiedad de dependencia; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</source>
          <target state="translated">Si la coerción actúa en un valor de propiedad, la propiedad conserva un valor deseado y el valor de propiedad intentará alcanzar este valor deseado si se cambian o elevan las restricciones de la coerción.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>A coerced property that is not at its desired value will report that <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Una propiedad forzada que no está en su valor deseado notificará que <ph id="ph1">&lt;xref:System.Windows.ValueSource.IsCoerced%2A&gt;</ph> es <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</source>
          <target state="translated">Conversión actúa en una prioridad más alta que el valor base y no es estrictamente un participante de cómo se establece el valor base.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>Therefore the state of being coerced is reported by this property, rather than by a value of the <ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph> enumeration.</source>
          <target state="translated">Por lo tanto, se notifica el estado de coerción por esta propiedad, en lugar de un valor de la <ph id="ph1">&lt;xref:System.Windows.BaseValueSource&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCoerced">
          <source>For more information about coercion, base values, and precedence, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de la conversión, los valores base y prioridad, vea <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsCurrent">
          <source>Gets whether the value was set by the <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Obtiene un valor que indica si el método <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> estableció el valor.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsCurrent">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value was set by the <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si el método <ph id="ph2">&lt;see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /&gt;</ph> estableció el valor; de lo contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Gets a value that declares whether this value resulted from an evaluated expression.</source>
          <target state="translated">Obtiene un valor que declara si este valor es el resultado de una expresión evaluada.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Windows.ValueSource.IsExpression">
          <source>This might be a <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> supporting a binding, or an internal expression such as those that support the <bpt id="p1">[</bpt>DynamicResource Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.</source>
          <target state="translated">Puede ser una <ph id="ph1">&lt;see cref="T:System.Windows.Data.BindingExpression" /&gt;</ph> que admite un enlace o una expresión interna como las que admiten la <bpt id="p1">[</bpt>extensión de marcado DynamicResource<ept id="p1">](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value came from an evaluated expression; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el valor procede de una expresión evaluada; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">Una expresión evaluada también notificará el valor base específico Establecer condición donde se aplicó la expresión, como un valor en <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> is still very relevant for any property where <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph> sigue siendo muy importante para cualquier propiedad donde <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph> es <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</source>
          <target state="translated">Saber si un valor llegó a través de una expresión puede ser especialmente útil si se estableció el valor indirectamente, por ejemplo, tal y como a través de una plantilla o un valor de propiedad heredado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</source>
          <target state="translated">Si no se puede evaluar una expresión (error del enlace, no se encontró ningún recurso de ese nombre), entonces el valor procederá de algún otro participante en el sistema de propiedades, más probable es que el valor predeterminado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>That source is then reported in <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</source>
          <target state="translated">Ese origen, a continuación, se notifica en <ph id="ph1">&lt;xref:System.Windows.ValueSource.BaseValueSource%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ValueSource.IsExpression">
          <source>Failed expression evaluations will return <ph id="ph1">`false`</ph> for <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.</source>
          <target state="translated">Las evaluaciones de expresiones con error devolverán <ph id="ph1">`false`</ph> para <ph id="ph2">&lt;xref:System.Windows.ValueSource.IsExpression%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Primer objeto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances have the same value.</source>
          <target state="translated">Determina si dos instancias de <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> tienen el mismo valor.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si las dos instancias de <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> son equivalentes; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">Esta implementación llama <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, y el valor de admite la igualdad en función de todas las propiedades de <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The first <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Primer objeto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>The second <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> to compare.</source>
          <target state="translated">Segundo objeto <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> que se va a comparar.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>Determines whether two <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances do not have the same value.</source>
          <target state="translated">Determina si dos instancias de <ph id="ph1">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> no tienen el mismo valor.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> instances are not equivalent; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si las dos instancias de <ph id="ph2">&lt;see cref="T:System.Windows.ValueSource" /&gt;</ph> no son equivalentes; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)">
          <source>This implementation calls <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, returning its negation, and supports value equality based on all properties of <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</source>
          <target state="translated">Esta implementación llama <ph id="ph1">&lt;xref:System.Windows.ValueSource.Equals%2A&gt;</ph>, devuelve su negación y admite la igualdad de valor en función de todas las propiedades de <ph id="ph2">&lt;xref:System.Windows.ValueSource&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>