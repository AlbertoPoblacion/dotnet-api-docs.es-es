<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f2fd27ad4c537a177069b372af2f1a949e102361" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d1cbc-101">Proporciona métodos auxiliares estáticos para consultar objetos en el árbol lógico.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1cbc-101">Provides static helper methods for querying objects in the logical tree.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1cbc-102">La <xref:System.Windows.LogicalTreeHelper> clase proporciona métodos que puede usar para devolver colecciones secundarias de objetos o específicos de los objetos de dentro de los subnodos del árbol lógico.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-102">The <xref:System.Windows.LogicalTreeHelper> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</span></span> <span data-ttu-id="d1cbc-103">Sin embargo, la mayoría de las operaciones de árbol de objetos que se realizan normalmente también se expone mediante propiedades o métodos similares en <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-103">However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="d1cbc-104">Por ejemplo, pruebe lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="d1cbc-104">For example, try the following:</span></span>  
  
-   <span data-ttu-id="d1cbc-105">En lugar de llamar el método estático <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> método, que devuelve un enumerador para los secundarios lógicos de objetos, use la colección dedicada expuesta en el modelo de contenido para ese objeto.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-105">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</span></span> <span data-ttu-id="d1cbc-106">Casi todos los objetos que admiten un modelo de contenido exponen alguna propiedad que contiene la colección de objetos secundarios y proporciona compatibilidad de la interfaz de la colección directamente en esa colección.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-106">Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</span></span>  
  
-   <span data-ttu-id="d1cbc-107">En lugar de llamar el método estático <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> método para obtener un objeto secundario especificando su nombre, llamada la <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> o <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> método en objetos específicos.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-107">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> method to obtain a child object by specifying its name, call the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> method on specific objects.</span></span>  
  
 <span data-ttu-id="d1cbc-108"><xref:System.Windows.LogicalTreeHelper> es muy útil para escenarios de análisis que se desplazan hacia arriba o hacia abajo el árbol lógico recursivamente a través de varios niveles y desea utilizar un enfoque coherente para examinar los distintos objetos primarios o secundarios.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-108"><xref:System.Windows.LogicalTreeHelper> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</span></span> <span data-ttu-id="d1cbc-109">En este caso, podría estar accediendo a una combinación de los modelos de contenido y con el modelo de contenido más API específicas sería demasiado complejas.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-109">In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="d1cbc-110">Elemento de interfaz de usuario que se va a mostrar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-110">The UI element to bring into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1cbc-111">Intenta mostrar el elemento de interfaz de usuario solicitado y genera el evento <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> en el destino para notificar los resultados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-111">Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1cbc-112">Es normalmente más conveniente llamar a los métodos de instancia <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> o <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> en lugar de este método de utilidad estático.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-112">It is typically more convenient to call the instance methods <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> rather than this static utility method.</span></span> <span data-ttu-id="d1cbc-113">El comportamiento de los métodos de instancia es equivalente al comportamiento del método estático.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-113">The behavior of the instance methods is equivalent to the behavior of the static method.</span></span>  
  
 <span data-ttu-id="d1cbc-114">Incluso si la `current` elemento de interfaz de usuario proporcionado era un <xref:System.Windows.FrameworkContentElement>, el evento resultante es el mismo <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> evento, con el que se origina <xref:System.Windows.FrameworkContentElement> identificable mediante la comprobación de los datos de evento del evento.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-114">Even if the `current` UI element provided was a <xref:System.Windows.FrameworkContentElement>, the resulting event is still the same <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event, with the originating <xref:System.Windows.FrameworkContentElement> identifiable by checking the event data of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode">
          <span data-ttu-id="d1cbc-115">Objeto a partir del cual se va a iniciar la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-115">The object to start searching from.</span>
          </span>
          <span data-ttu-id="d1cbc-116">Este objeto debe ser un objeto <see cref="T:System.Windows.FrameworkElement" /> o <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-116">This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <param name="elementName">
          <span data-ttu-id="d1cbc-117">Nombre del objeto que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-117">The name of the object to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1cbc-118">Intenta buscar y devolver el objeto con el nombre especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-118">Attempts to find and return an object that has the specified name.</span>
          </span>
          <span data-ttu-id="d1cbc-119">La búsqueda se inicia a partir del objeto especificado y continúa en los subnodos del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-119">The search starts from the specified object and continues into subnodes of the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1cbc-120">Objeto con el nombre especificado, si se encuentra uno; devuelve <see langword="null" /> si no se encuentra ningún objeto con el nombre especificado en el árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-120">The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1cbc-121">Los métodos <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> y <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> son superficialmente similar a <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, pero funcionan mediante una lógica diferente:</span><span class="sxs-lookup"><span data-stu-id="d1cbc-121">The methods <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> and <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> are superficially similar to <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, but operate by different logic:</span></span>  
  
-   <span data-ttu-id="d1cbc-122">La dirección de búsqueda para <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> es hacia los objetos secundarios (abajo en el árbol); la dirección de búsqueda para el `FindName` métodos es hacia los objetos primarios (arriba en el árbol).</span><span class="sxs-lookup"><span data-stu-id="d1cbc-122">The search direction for <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> is toward child objects (down the tree); the search direction for the `FindName` methods is towards parent objects (up the tree).</span></span>  
  
-   <span data-ttu-id="d1cbc-123">El `FindName` métodos se rigen por el concepto de un ámbito de nombres XAML.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-123">The `FindName` methods are governed by the concept of a XAML namescope.</span></span> <span data-ttu-id="d1cbc-124">Con `FindName` se garantiza que solo un objeto de ese nombre no existe, porque los ámbitos de nombres XAML exigir la exclusividad.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-124">Using `FindName` you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</span></span> <span data-ttu-id="d1cbc-125">En cambio, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> omite el ámbito de nombres XAML y es posible que entre los límites del ámbito de nombres XAML durante la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-125">In contrast, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignores XAML namescope and might cross XAML namescope boundaries during the search.</span></span> <span data-ttu-id="d1cbc-126">Por lo tanto, no hay ninguna garantía de exclusividad de la `elementName` nombre cuando se traspasan los límites.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-126">As such, there is no guarantee of uniqueness of the `elementName` name once boundaries are crossed.</span></span> <span data-ttu-id="d1cbc-127">Para obtener más información acerca de los ámbitos de nombres XAML, vea [ámbitos de nombres de XAML de WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="d1cbc-127">For more information about XAML namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d1cbc-128">Devuelve la colección de objetos secundarios inmediatos del objeto especificado mediante el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-128">Returns the collection of immediate child objects of the specified object by processing the logical tree.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="d1cbc-129">Objeto desde el que se inicia el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-129">The object from which to start processing the logical tree.</span>
          </span>
          <span data-ttu-id="d1cbc-130">Se espera que sea una clase <see cref="T:System.Windows.FrameworkElement" /> o <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-130">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1cbc-131">Devuelve la colección de objetos secundarios inmediatos del objeto especificado mediante el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-131">Returns the collection of immediate child objects of the specified object, by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1cbc-132">Colección enumerable de objetos secundarios inmediatos del árbol lógico del objeto especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-132">The enumerable collection of immediate child objects from the logical tree of the specified object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1cbc-133">Utilice este método de firma y auxiliar principalmente cuando no está seguro de si `current` es un <xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement> y también está seguro de si la clase de ese objeto admite su propia colección de modelo de contenido.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-133">Use this signature and helper method primarily when you are unsure whether `current` is a <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> and are also unsure whether that object's class supports its own content model collection.</span></span> <span data-ttu-id="d1cbc-134">Si puede determinar el tipo del objeto que está consultando, compruebe la propiedad de contenido específica que sabe que existe en ese tipo.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-134">If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</span></span> <span data-ttu-id="d1cbc-135">Por ejemplo, si sabe que el objeto que está consultando es un <xref:System.Windows.Controls.ItemsControl>, compruebe la <xref:System.Windows.Controls.ItemsControl.Items%2A> propiedad para obtener una colección fuertemente tipada, que tiene compatibilidad con la interfaz de colección y es probablemente más útil que un enumerador.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-135">For example, if you know that the object you are querying is an <xref:System.Windows.Controls.ItemsControl>, check the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="d1cbc-136">Objeto desde el que se inicia el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-136">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1cbc-137">Devuelve la colección de objetos secundarios inmediatos del objeto <see cref="T:System.Windows.FrameworkContentElement" /> especificado mediante el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-137">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1cbc-138">Colección enumerable de los objetos secundarios inmediatos a partir de <paramref name="current" /> en el árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-138">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="d1cbc-139">Objeto desde el que se inicia el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-139">The object from which to start processing the logical tree.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1cbc-140">Devuelve la colección de objetos secundarios inmediatos del objeto <see cref="T:System.Windows.FrameworkElement" /> especificado mediante el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-140">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1cbc-141">Colección enumerable de los objetos secundarios inmediatos a partir de <paramref name="current" /> en el árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-141">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current">
          <span data-ttu-id="d1cbc-142">Objeto cuyo objeto primario se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-142">The object to find the parent object for.</span>
          </span>
          <span data-ttu-id="d1cbc-143">Se espera que sea un objeto <see cref="T:System.Windows.FrameworkElement" /> o <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-143">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1cbc-144">Devuelve el objeto primario del objeto especificado mediante el procesamiento del árbol lógico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-144">Returns the parent object of the specified object by processing the logical tree.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1cbc-145">Objeto primario solicitado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1cbc-145">The requested parent object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1cbc-146">Este método es simplemente un contenedor que obtiene la versión del tipo adecuado (<xref:System.Windows.FrameworkElement> o <xref:System.Windows.FrameworkContentElement>) de la <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> o <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> propiedad; por lo que, a menos que no puede determinar la `current` tipo, puede comprobar las propiedades de las instancias respectivas en su lugar.</span><span class="sxs-lookup"><span data-stu-id="d1cbc-146">This method is merely a wrapper that gets the appropriate type version (<xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>) of the <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> property; so unless you are unable to determine the `current` type, you might want to check the respective instance properties instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>