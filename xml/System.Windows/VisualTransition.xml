<Type Name="VisualTransition" FullName="System.Windows.VisualTransition">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d948baac903a963f48a6e7ac5280856840e3235d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39852656" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualTransition : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualTransition extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualTransition" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualTransition&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualTransition : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualTransition = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa el comportamiento visual que se produce cuando un control pasa de un estado a otro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar el comportamiento visual de un control cuando realiza la transición entre Estados agregando <xref:System.Windows.VisualTransition> objetos. Cuando creas un <xref:System.Windows.VisualTransition>, especifique uno o varios de los siguientes:  
  
-   El tiempo que tarda una transición entre Estados que se produzca estableciendo el <xref:System.Windows.VisualTransition.GeneratedDuration%2A> propiedad.  
  
-   Los cambios adicionales en la apariencia del control que se producen en el momento de la transición estableciendo el <xref:System.Windows.VisualTransition.Storyboard%2A> propiedad.  
  
-   Cuando el <xref:System.Windows.VisualTransition> se aplica estableciendo el <xref:System.Windows.VisualTransition.To%2A> y <xref:System.Windows.VisualTransition.From%2A> propiedades.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.VisualTransition> que especifica que, cuando el usuario mueve el mouse fuera del control, el borde del control cambia a azul, luego a amarillo y negro en 1,5 segundos. Para el ejemplo completo, vea [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualTransition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualTransition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualTransition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.VisualTransition" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="From">
      <MemberSignature Language="C#" Value="public string From { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string From" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.From" />
      <MemberSignature Language="VB.NET" Value="Public Property From As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ From { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.From : string with get, set" Usage="System.Windows.VisualTransition.From" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Windows.VisualState" /> desde el que se realiza la transición.</summary>
        <value>Nombre del objeto <see cref="T:System.Windows.VisualState" /> desde el que se realiza la transición.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.VisualTransition.From%2A> propiedad es opcional. Un <xref:System.Windows.VisualTransition> puede restringirse para aplicar solo a determinados Estados o se puede aplicar cada vez que el control realiza la transición entre Estados. Restringir cuándo un <xref:System.Windows.VisualTransition> se aplica estableciendo el <xref:System.Windows.VisualTransition.To%2A> y <xref:System.Windows.VisualTransition.From%2A> propiedades. En la tabla siguiente se describen los niveles de restricción del más al menos restrictivo.  
  
|Tipo de restricción|Valor de Desde|Valor de Hasta|  
|-------------------------|-------------------|-----------------|  
|Desde un estado especificado hasta otro estado especificado|El nombre de un <xref:System.Windows.VisualState>|El nombre de un <xref:System.Windows.VisualState>|  
|Desde cualquier estado hasta un estado especificado|Sin establecer|El nombre de un <xref:System.Windows.VisualState>|  
|Desde un estado especificado hasta cualquier estado|El nombre de un <xref:System.Windows.VisualState>|Sin establecer|  
|Desde cualquier estado hasta cualquier otro estado|Sin establecer|Sin establecer|  
  
 Puede tener varios <xref:System.Windows.VisualTransition> objetos en un <xref:System.Windows.VisualStateGroup> que hacen referencia al mismo estado, pero que se usarán en el orden que especifica la tabla anterior.  
  
 Puede cambiar este comportamiento mediante la creación de una nueva clase que hereda de <xref:System.Windows.VisualStateManager> e invalidar la <xref:System.Windows.VisualStateManager.GoToStateCore%2A> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se crean dos <xref:System.Windows.VisualTransition> objetos. Cuando el control realiza la transición desde el `Pressed` estado el `MouseOver` estado, el <xref:System.Windows.VisualTransition> que tiene ambos <xref:System.Windows.VisualTransition.From%2A> y <xref:System.Windows.VisualTransition.To%2A> se usa el conjunto. Cuando el control realiza la transición de un estado que no es `Pressed` al estado `MouseOver`, se usa el otro estado.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedDuration">
      <MemberSignature Language="C#" Value="public System.Windows.Duration GeneratedDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Duration GeneratedDuration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedDuration" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedDuration As Duration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Duration GeneratedDuration { System::Windows::Duration get(); void set(System::Windows::Duration value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedDuration : System.Windows.Duration with get, set" Usage="System.Windows.VisualTransition.GeneratedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Duration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tiempo que se tarda en pasar de un estado a otro.</summary>
        <value>Tiempo que se tarda en pasar de un estado a otro.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede especificar cuánto tiempo tarda una transición estableciendo el <xref:System.Windows.VisualTransition.GeneratedDuration%2A> propiedad. Al establecer el <xref:System.Windows.VisualTransition.GeneratedDuration%2A> propiedad, se especifica el tiempo que tarda en producirse la transición.  
  
   
  
## Examples  
 El ejemplo siguiente especifica que el control tarda medio segundo para ir a la `MouseOver` estado. Para el ejemplo completo, vea [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GeneratedEasingFunction">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedEasingFunction As IEasingFunction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::IEasingFunction ^ GeneratedEasingFunction { System::Windows::Media::Animation::IEasingFunction ^ get(); void set(System::Windows::Media::Animation::IEasingFunction ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedEasingFunction : System.Windows.Media.Animation.IEasingFunction with get, set" Usage="System.Windows.VisualTransition.GeneratedEasingFunction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.IEasingFunction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una fórmula matemática personalizada que se usa en la transición entre estados.</summary>
        <value>Fórmula matemática personalizada que se usa en la transición entre estados.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede establecer el <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> propiedad para especificar la manera en que se produce una transición. Por ejemplo, puede especificar una función de aceleración para aumentar o reducir la velocidad de la transición. Para obtener más información, consulte [funciones de aceleración](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.VisualTransition> que hace que un <xref:System.Windows.Shapes.Rectangle> se mueva verticalmente cuando el usuario presiona el botón del mouse sobre el <xref:System.Windows.Controls.Canvas>. El ejemplo se establece la <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> propiedad a un <xref:System.Windows.Media.Animation.BounceEase> objeto para hacer que el <xref:System.Windows.Shapes.Rectangle> parezca que rebota cuando llega a su destino. El <xref:System.Windows.VisualTransition> que se utiliza cuando el usuario suelta el botón tiene otro <xref:System.Windows.Media.Animation.BounceEase> objeto para hacer que el <xref:System.Windows.Shapes.Rectangle> rebote antes de volver a su posición original.  
  
 [!code-xaml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  
  
 El ejemplo siguiente muestra el controlador de eventos para el <xref:System.Windows.UIElement3D.MouseDown> y <xref:System.Windows.UIElement.MouseUp> eventos. El ejemplo llama a la <xref:System.Windows.VisualStateManager.GoToElementState%2A> método para cambiar la <xref:System.Windows.VisualState> del lienzo.  
  
 [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]
 [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualTransition.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.Windows.Media.Animation.Storyboard" /> que se produce al realizarse la transición.</summary>
        <value>
          <see cref="T:System.Windows.Media.Animation.Storyboard" /> que se produce al realizarse la transición.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando un <xref:System.Windows.VisualTransition> contiene un <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.Storyboard> ejecuta siempre que el <xref:System.Windows.VisualTransition> se aplica. Por ejemplo, si desea que el borde de un <xref:System.Windows.Controls.Button> para cambiar los colores cuando el usuario mueve el mouse fuera de él, puede crear un <xref:System.Windows.VisualTransition> que tiene un <xref:System.Windows.Media.Animation.Storyboard> que cambia el fondo del botón.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Windows.VisualTransition> que especifica que, cuando el usuario mueve el mouse fuera del control, el borde del control cambia a azul, luego a amarillo y negro en 1,5 segundos. Para el ejemplo completo, vea [personalizar la apariencia de un Control existente creando una clase ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="To">
      <MemberSignature Language="C#" Value="public string To { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string To" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualTransition.To" />
      <MemberSignature Language="VB.NET" Value="Public Property To As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ To { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.To : string with get, set" Usage="System.Windows.VisualTransition.To" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el nombre del objeto <see cref="T:System.Windows.VisualState" /> al que se realiza la transición.</summary>
        <value>Nombre de la <see cref="T:System.Windows.VisualState" /> a la que se va a pasar.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.VisualTransition.To%2A> propiedad es opcional. Un <xref:System.Windows.VisualTransition> puede restringirse para aplicar solo a determinados Estados o se puede aplicar cada vez que el control realiza la transición entre Estados. Restringir cuándo un <xref:System.Windows.VisualTransition> se aplica estableciendo el <xref:System.Windows.VisualTransition.To%2A> y <xref:System.Windows.VisualTransition.From%2A> propiedades. En la tabla siguiente se describen los niveles de restricción del más al menos restrictivo.  
  
|Tipo de restricción|Valor de Desde|Valor de Hasta|  
|-------------------------|-------------------|-----------------|  
|Desde un estado especificado hasta otro estado especificado|El nombre de un <xref:System.Windows.VisualState>|El nombre de un <xref:System.Windows.VisualState>|  
|Desde cualquier estado hasta un estado especificado|Sin establecer|El nombre de un <xref:System.Windows.VisualState>|  
|Desde un estado especificado hasta cualquier estado|El nombre de un <xref:System.Windows.VisualState>|Sin establecer|  
|Desde cualquier estado hasta cualquier otro estado|Sin establecer|Sin establecer|  
  
 Puede tener varios <xref:System.Windows.VisualTransition> objetos en un <xref:System.Windows.VisualStateGroup> que hacen referencia al mismo estado, pero que se usarán en el orden que especifica la tabla anterior.  
  
 Puede cambiar este comportamiento mediante la creación de una nueva clase que hereda de <xref:System.Windows.VisualStateManager> e invalidar la <xref:System.Windows.VisualStateManager.GoToStateCore%2A> método.  
  
   
  
## Examples  
 En el ejemplo siguiente se crean dos <xref:System.Windows.VisualTransition> objetos. Cuando el control realiza la transición desde el `Pressed` estado el `MouseOver` estado, el <xref:System.Windows.VisualTransition> que tiene ambos <xref:System.Windows.VisualTransition.From%2A> y <xref:System.Windows.VisualTransition.To%2A> se usa el conjunto. Cuando el control realiza la transición de un estado que no es `Pressed` al estado `MouseOver`, se usa el otro estado.  
  
 [!code-xaml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>