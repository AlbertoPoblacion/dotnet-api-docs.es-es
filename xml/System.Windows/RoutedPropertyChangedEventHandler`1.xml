<Type Name="RoutedPropertyChangedEventHandler&lt;T&gt;" FullName="System.Windows.RoutedPropertyChangedEventHandler&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7a3e3eea5ce8d965c9a61ae9098f1acefc8ffbde" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37490392" /></Metadata><TypeSignature Language="C#" Value="public delegate void RoutedPropertyChangedEventHandler&lt;T&gt;(object sender, RoutedPropertyChangedEventArgs&lt;T&gt; e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RoutedPropertyChangedEventHandler`1&lt;T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RoutedPropertyChangedEventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RoutedPropertyChangedEventHandler(Of T)(sender As Object, e As RoutedPropertyChangedEventArgs(Of T))" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate void RoutedPropertyChangedEventHandler(System::Object ^ sender, RoutedPropertyChangedEventArgs&lt;T&gt; ^ e);" />
  <TypeSignature Language="F#" Value="type RoutedPropertyChangedEventHandler&lt;'T&gt; = delegate of obj * RoutedPropertyChangedEventArgs&lt;'T&gt; -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RoutedPropertyChangedEventArgs&lt;T&gt;" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">Tipo del valor de propiedad donde se notifican los cambios de valor.</typeparam>
    <param name="sender">Objeto en que está asociado el controlador de eventos.</param>
    <param name="e">Datos del evento. Las definiciones de eventos específicos restringirán <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> a un tipo, coincidiendo el parámetro de tipo de la restricción con la restricción de parámetro de tipo de una implementación de delegado.</param>
    <summary>Representa métodos que controlarán diversos eventos enrutados que realizan el seguimiento de los cambios de valor de propiedad.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ejemplos de eventos que usan delegados con restricción de tipo basados en <xref:System.Windows.RoutedPropertyChangedEventHandler%601> incluyen <xref:System.Windows.Controls.TreeView.SelectedItemChanged?displayProperty=nameWithType> y <xref:System.Windows.Controls.Primitives.RangeBase.ValueChanged?displayProperty=nameWithType>.  
  
   
  
## Examples  
 El ejemplo siguiente se define y se asocia un método de controlador para el <xref:System.Windows.Controls.Primitives.RangeBase.ValueChanged> eventos.  
  
 El controlador se basa en <xref:System.Windows.RoutedPropertyChangedEventHandler%601>y se define en el segundo segmento del ejemplo de código, con el parámetro de tipo del genérico restringido a <xref:System.Double>.  
  
 [!code-csharp[AutoGrid#2](~/samples/snippets/csharp/VS_Snippets_Wpf/AutoGrid/CSharp/Window1.xaml.cs#2)]
 [!code-vb[AutoGrid#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AutoGrid/visualbasic/window1.xaml.vb#2)]  
  
 [!code-csharp[AutoGrid#RoutedPropertyChangedEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/AutoGrid/CSharp/Window1.xaml.cs#routedpropertychangedevent)]
 [!code-vb[AutoGrid#RoutedPropertyChangedEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/AutoGrid/visualbasic/window1.xaml.vb#routedpropertychangedevent)]  
  
 Este ejemplo concreto no utiliza la característica de evento enrutado del evento; el evento se controla en el mismo elemento que se provoca en. Esto no siempre es el caso. Para un evento enrutado, es posible que el origen del evento es un objeto diferente que el objeto que está asociado el controlador.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
  </Docs>
</Type>