<Type Name="IContentHost" FullName="System.Windows.IContentHost">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="702d79a5bdc55e1218c1f1ad26eea85c66f6ef81" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30676799" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContentHost" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContentHost" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IContentHost" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContentHost" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContentHost" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Los diseños que hospedan <see cref="T:System.Windows.ContentElement" /> implementan esta interfaz.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetRectangles">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt; GetRectangles (System.Windows.ContentElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;valuetype System.Windows.Rect&gt; GetRectangles(class System.Windows.ContentElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.GetRectangles(System.Windows.ContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRectangles (child As ContentElement) As ReadOnlyCollection(Of Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Windows::Rect&gt; ^ GetRectangles(System::Windows::ContentElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Windows.Rect&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.ContentElement" />
      </Parameters>
      <Docs>
        <param name="child">Elemento secundario para el que se devuelven rectángulos delimitadores.</param>
        <summary>Devuelve una colección de rectángulos delimitadores para un elemento secundario.</summary>
        <returns>Colección de rectángulos delimitadores de un elemento secundario.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Si *child* es null.</exception>
        <exception cref="T:System.ArgumentException">Si el elemento no es un descendiente directo (es decir, el elemento debe ser un elemento secundario de <see cref="T:System.Windows.IContentHost" /> o un <see cref="T:System.Windows.ContentElement" /> que sea un descendiente directo de <see cref="T:System.Windows.IContentHost" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="HostedElements">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt; HostedElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.IInputElement&gt; HostedElements" />
      <MemberSignature Language="DocId" Value="P:System.Windows.IContentHost.HostedElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HostedElements As IEnumerator(Of IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ HostedElements { System::Collections::Generic::IEnumerator&lt;System::Windows::IInputElement ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Windows.IInputElement&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una enumeración que contiene todas las clases derivadas del <see cref="T:System.Windows.ContentElement" /> descendiente, así como todas las clases derivadas de <see cref="T:System.Windows.UIElement" /> que son descendientes directos de <see cref="T:System.Windows.IContentHost" /> o una de sus clases <see cref="T:System.Windows.ContentElement" /> descendientes.</summary>
        <value>Enumeración que contiene todas las clases derivadas del <see cref="T:System.Windows.ContentElement" /> descendiente, así como todas las clases derivadas de <see cref="T:System.Windows.UIElement" /> que son descendientes directos de <see cref="T:System.Windows.IContentHost" /> o una de sus clases <see cref="T:System.Windows.ContentElement" /> descendientes. En otras palabras, elementos para los que <see cref="T:System.Windows.IContentHost" /> crea una representación visual (clases derivadas de <see cref="T:System.Windows.ContentElement" />) o cuyo diseño está controlado por <see cref="T:System.Windows.IContentHost" /> (clases derivadas del <see cref="T:System.Windows.UIElement" /> descendiente del primer nivel).</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputHitTest">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement InputHitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.IInputElement InputHitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.InputHitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::IInputElement ^ InputHitTest(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">Coordenadas del mouse relativas a ContentHost.</param>
        <summary>Realiza la prueba de aciertos para elementos secundarios.</summary>
        <returns>Descendiente de <see cref="T:System.Windows.IInputElement" /> o **NULL** si no existen estos elementos.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChildDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public void OnChildDesiredSizeChanged (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnChildDesiredSizeChanged(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IContentHost.OnChildDesiredSizeChanged(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnChildDesiredSizeChanged (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnChildDesiredSizeChanged(System::Windows::UIElement ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">Elemento secundario cuyo <see cref="P:System.Windows.UIElement.DesiredSize" /> ha cambiado.</param>
        <summary>Se le llama cuando una clase derivada de <see cref="T:System.Windows.UIElement" /> que hospeda <see cref="T:System.Windows.IContentHost" />, cambia su <see cref="P:System.Windows.UIElement.DesiredSize" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Si *child* es null.</exception>
        <exception cref="T:System.ArgumentException">Si *child* no es un descendiente directo (es decir, *child* debe ser un elemento secundario de <see cref="T:System.Windows.IContentHost" /> o un <see cref="T:System.Windows.ContentElement" /> que sea un descendiente directo de <see cref="T:System.Windows.IContentHost" />).</exception>
      </Docs>
    </Member>
  </Members>
</Type>