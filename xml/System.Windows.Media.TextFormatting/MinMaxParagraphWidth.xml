<Type Name="MinMaxParagraphWidth" FullName="System.Windows.Media.TextFormatting.MinMaxParagraphWidth">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eb7e709ece99a94490934aabe7307f29ad5a9df6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct MinMaxParagraphWidth : IEquatable&lt;System.Windows.Media.TextFormatting.MinMaxParagraphWidth&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit MinMaxParagraphWidth extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
  <TypeSignature Language="VB.NET" Value="Public Structure MinMaxParagraphWidth&#xA;Implements IEquatable(Of MinMaxParagraphWidth)" />
  <TypeSignature Language="C++ CLI" Value="public value class MinMaxParagraphWidth : IEquatable&lt;System::Windows::Media::TextFormatting::MinMaxParagraphWidth&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Windows.Media.TextFormatting.MinMaxParagraphWidth&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa el ancho de párrafo menor y mayor posible que puede incluir íntegramente el contenido de texto especificado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> propiedad que se va a generar el ancho de párrafo mínimo de las líneas de texto con formato.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Determina si el objeto especificado es igual al objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> actual.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <see cref="T:System.Object" /> que se compara con el objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> actual.</param>
        <summary>Determina si el objeto especificado es igual al objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> actual.</summary>
        <returns>
          <see langword="true" /> si <paramref name="obj" /> es igual al objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> actual; de lo contrario, <see langword="false" />. Si <paramref name="obj" /> no es un objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />, se devolverá <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.Media.TextFormatting.MinMaxParagraphWidth value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.Equals(System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As MinMaxParagraphWidth) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Windows::Media::TextFormatting::MinMaxParagraphWidth value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> que se compara con el objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> actual.</param>
        <summary>Determina si el objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> es igual al objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> actual.</summary>
        <returns>
          <see langword="true" /> si <paramref name="value" /> es igual al objeto <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> actual; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Actúa como una función hash para <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" />. Es adecuado para usarlo en algoritmos hash y en estructuras de datos, como las tablas hash.</summary>
        <returns>Valor <see cref="T:System.Int32" /> que representa el código hash del actual objeto.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public double MaxWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ancho de párrafo mayor posible que puede incluir íntegramente el contenido de texto especificado.</summary>
        <value>
          <see cref="T:System.Double" /> que representa el ancho de párrafo mayor posible.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el ancho de párrafo menor posible que puede incluir íntegramente el contenido de texto especificado.</summary>
        <value>
          <see cref="T:System.Double" /> que representa el ancho de párrafo menor posible.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El ancho de párrafo mínimo corresponde a la palabra que tenga el ancho mayor en el contenido de texto.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> propiedad que se va a generar el ancho de párrafo mínimo de las líneas de texto con formato.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/Window1.xaml.cs#textformattingsnippet3)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/window1.xaml.vb#textformattingsnippet3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Equality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As MinMaxParagraphWidth, right As MinMaxParagraphWidth) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Media::TextFormatting::MinMaxParagraphWidth left, System::Windows::Media::TextFormatting::MinMaxParagraphWidth right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
      </Parameters>
      <Docs>
        <param name="left">Primera instancia de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> que se va a comparar.</param>
        <param name="right">Segunda instancia de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> que se va a comparar.</param>
        <summary>Compara dos cadenas <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> para ver si son iguales.</summary>
        <returns>
          <see langword="true" /> para mostrar que los objetos <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> especificados son iguales; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, System.Windows.Media.TextFormatting.MinMaxParagraphWidth right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth left, valuetype System.Windows.Media.TextFormatting.MinMaxParagraphWidth right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.op_Inequality(System.Windows.Media.TextFormatting.MinMaxParagraphWidth,System.Windows.Media.TextFormatting.MinMaxParagraphWidth)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As MinMaxParagraphWidth, right As MinMaxParagraphWidth) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Media::TextFormatting::MinMaxParagraphWidth left, System::Windows::Media::TextFormatting::MinMaxParagraphWidth right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
        <Parameter Name="right" Type="System.Windows.Media.TextFormatting.MinMaxParagraphWidth" />
      </Parameters>
      <Docs>
        <param name="left">Primera instancia de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> que se va a comparar.</param>
        <param name="right">Segunda instancia de <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> que se va a comparar.</param>
        <summary>Compara dos objetos <see cref="T:System.Windows.Media.TextFormatting.CharacterBufferReference" /> para determinar si no son iguales.</summary>
        <returns>
          <see langword="false" /> para mostrar que <paramref name="left" /> es igual a <paramref name="right" />; de lo contrario, <see langword="true" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los objetos son iguales si sus <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MinWidth%2A> y <xref:System.Windows.Media.TextFormatting.MinMaxParagraphWidth.MaxWidth%2A> propiedades son iguales.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>