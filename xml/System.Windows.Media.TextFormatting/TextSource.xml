<Type Name="TextSource" FullName="System.Windows.Media.TextFormatting.TextSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2bef48588523726716b58c52ee542cfb766e6e7" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51938698" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextSource extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.TextFormatting.TextSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextSource abstract" />
  <TypeSignature Language="F#" Value="type TextSource = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona una clase abstracta para especificar los datos de caracteres y las propiedades de formato que va a usar el objeto <see cref="T:System.Windows.Media.TextFormatting.TextFormatter" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Todo el acceso al texto en el <xref:System.Windows.Media.TextFormatting.TextSource> objeto es a través de la <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>, que está diseñado para permitir que el cliente de diseño de texto virtualizar el texto de forma que elija.  
  
 <xref:System.Windows.Media.TextFormatting.TextFormatter> es el [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] motor de texto que proporciona servicios para dar formato al texto e interrumpir líneas de texto. <xref:System.Windows.Media.TextFormatting.TextFormatter> puede controlar los formatos de caracteres de texto diferente y estilos de párrafo e incluye compatibilidad para el diseño de texto internacional. A diferencia de un texto tradicional [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], el <xref:System.Windows.Media.TextFormatting.TextFormatter> interactúa con un cliente de diseño de texto a través de un conjunto de métodos de devolución de llamada. Requiere que el cliente proporcione estos métodos en una implementación de la <xref:System.Windows.Media.TextFormatting.TextSource> clase. En la lista siguiente se describe a los tres miembros que se debe reemplazar:  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A>: Recupera un <xref:System.Windows.Media.TextFormatting.TextRun> comenzando en un determinado <xref:System.Windows.Media.TextFormatting.TextSource> posición.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A>: Devuelve el intervalo de texto inmediatamente anterior a la especificada <xref:System.Windows.Media.TextFormatting.TextSource> posición.  
  
-   <xref:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex%2A>: Recupera un valor que se asigna un <xref:System.Windows.Media.TextFormatting.TextSource> índice de carácter para un <xref:System.Windows.Media.TextEffect> índice de carácter.  
  
> [!NOTE]
>  Para obtener un ejemplo de código completo que muestra cómo implementar una derivada <xref:System.Windows.Media.TextFormatting.TextSource> de clases, vea [ejemplo de formato de texto avanzado](https://go.microsoft.com/fwlink/?LinkID=159965) .  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.TextFormatting.TextFormatter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159965">Ejemplo de formato de texto avanzado</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TextSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TextSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Windows.Media.TextFormatting.TextSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPrecedingText">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText (int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextSpan`1&lt;class System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt; GetPrecedingText(int32 textSourceCharacterIndexLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetPrecedingText (textSourceCharacterIndexLimit As Integer) As TextSpan(Of CultureSpecificCharacterBufferRange)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextSpan&lt;System::Windows::Media::TextFormatting::CultureSpecificCharacterBufferRange ^&gt; ^ GetPrecedingText(int textSourceCharacterIndexLimit);" />
      <MemberSignature Language="F#" Value="abstract member GetPrecedingText : int -&gt; System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;" Usage="textSource.GetPrecedingText textSourceCharacterIndexLimit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextSpan&lt;System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndexLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndexLimit">Valor <see cref="T:System.Int32" /> que especifica la posición de índice del carácter en el que se detiene la recuperación de texto.</param>
        <summary>Recupera el intervalo de texto situado inmediatamente antes de la posición de <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> especificada.</summary>
        <returns>Valor <see cref="T:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange" /> que representa el intervalo de texto situado inmediatamente antes de <paramref name="textSourceCharacterIndexLimit" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Windows.Media.TextFormatting.TextSource.GetPrecedingText%2A> método devuelve un valor vacío <xref:System.Windows.Media.TextFormatting.CultureSpecificCharacterBufferRange> si el texto abarcar inmediatamente antes de `textSourceCharacterIndexLimit` no contiene cualquier texto, como objeto en línea o una ejecución oculta.  
  
 Este método devuelve un intervalo de texto de longitud cero si no hay ningún valor anterior `textSourceCharacterIndexLimit`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextEffectCharacterIndexFromTextSourceCharacterIndex">
      <MemberSignature Language="C#" Value="public abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextEffectCharacterIndexFromTextSourceCharacterIndex (textSourceCharacterIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetTextEffectCharacterIndexFromTextSourceCharacterIndex(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextEffectCharacterIndexFromTextSourceCharacterIndex : int -&gt; int" Usage="textSource.GetTextEffectCharacterIndexFromTextSourceCharacterIndex textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Valor <see cref="T:System.Int32" /> que especifica el índice de carácter de <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> que se va a asignar.</param>
        <summary>Recupera un valor que asigna un índice de carácter de <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> a un índice de carácter de <see cref="T:System.Windows.Media.TextEffect" />.</summary>
        <returns>Valor <see cref="T:System.Int32" /> que representa el índice de carácter de <see cref="T:System.Windows.Media.TextEffect" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextRun">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.TextFormatting.TextRun GetTextRun (int textSourceCharacterIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Media.TextFormatting.TextRun GetTextRun(int32 textSourceCharacterIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.TextFormatting.TextSource.GetTextRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTextRun (textSourceCharacterIndex As Integer) As TextRun" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Media::TextFormatting::TextRun ^ GetTextRun(int textSourceCharacterIndex);" />
      <MemberSignature Language="F#" Value="abstract member GetTextRun : int -&gt; System.Windows.Media.TextFormatting.TextRun" Usage="textSource.GetTextRun textSourceCharacterIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.TextFormatting.TextRun</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textSourceCharacterIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="textSourceCharacterIndex">Especifica la posición del índice de carácter del objeto <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> donde se recupera <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</param>
        <summary>Recupera un objeto <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> que se inicia en una posición de <see cref="T:System.Windows.Media.TextFormatting.TextSource" /> especificada.</summary>
        <returns>Valor que representa <see cref="T:System.Windows.Media.TextFormatting.TextRun" /> o un objeto derivado de <see cref="T:System.Windows.Media.TextFormatting.TextRun" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Una ejecución de texto es una secuencia de caracteres que comparten un único conjunto de propiedades. Cualquier cambio en el formato como familia de fuentes, estilo de fuente, color de primer plano, decoración de texto o cualquier otro efecto de formato, interrumpe la ejecución de texto. El <xref:System.Windows.Media.TextFormatting.TextRun> clase es la raíz de una jerarquía de tipos que representan varios tipos de contenido de texto que se procesó <xref:System.Windows.Media.TextFormatting.TextFormatter>. Cada clase que se deriva de <xref:System.Windows.Media.TextFormatting.TextRun> representa un tipo distinto de contenido de texto.  
  
|Clase|Descripción|  
|-----------|-----------------|  
|<xref:System.Windows.Media.TextFormatting.TextRun>|Raíz de la jerarquía. Define un grupo de caracteres que comparten el mismo conjunto de propiedades de caracteres.|  
|<xref:System.Windows.Media.TextFormatting.TextCharacters>|Define una colección de glifos de caracteres de un tipo de letra físico distinto.|  
|<xref:System.Windows.Media.TextFormatting.TextEmbeddedObject>|Define un tipo de contenido en qué medida, comprobación de visitas y dibujo de todo el contenido se realiza como una entidad distinta del texto. Un ejemplo de este tipo de contenido es un botón en el medio de la línea de texto.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfLine>|Define un código de carácter de salto de línea.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfParagraph>|Define un código de carácter de salto de párrafo. Deriva de <xref:System.Windows.Media.TextFormatting.TextEndOfLine>.|  
|<xref:System.Windows.Media.TextFormatting.TextEndOfSegment>|Define un marcador de salto de segmento.|  
|<xref:System.Windows.Media.TextFormatting.TextHidden>|Define un intervalo de caracteres que no son visibles.|  
|<xref:System.Windows.Media.TextFormatting.TextModifier>|Define el comienzo de un ámbito de modificación.|  
  
   
  
## Examples  
 En el ejemplo siguiente, una invalidación para el <xref:System.Windows.Media.TextFormatting.TextSource.GetTextRun%2A> se implementa el método.  
  
 [!code-csharp[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextFormattingSnippets/CSharp/CustomTextClasses.cs#textformattingsnippet4)]
 [!code-vb[TextFormattingSnippets#TextFormattingSnippet4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextFormattingSnippets/visualbasic/customtextclasses.vb#textformattingsnippet4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PixelsPerDip">
      <MemberSignature Language="C#" Value="public double PixelsPerDip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 PixelsPerDip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberSignature Language="VB.NET" Value="Public Property PixelsPerDip As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double PixelsPerDip { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.PixelsPerDip : double with get, set" Usage="System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtenga o establezca el valor de PixelsPerDip en el que se debe representar el texto.</summary>
        <value>El valor de <see cref="P:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip" /> actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cualquier clase que extiende <xref:System.Windows.Media.TextFormatting.TextSource> debe actualizar <xref:System.Windows.Media.TextFormatting.TextSource.PixelsPerDip%2A> cada vez que cambia el valor de PPP para una aplicación por Monitor reconocimiento de PPP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>