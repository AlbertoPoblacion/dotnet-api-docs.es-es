<Type Name="LingerOption" FullName="System.Net.Sockets.LingerOption">
  <Metadata><Meta Name="ms.openlocfilehash" Value="220b97634aece2bfc4c196565939b807c250bace" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39887626" /></Metadata><TypeSignature Language="C#" Value="public class LingerOption" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LingerOption extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.LingerOption" />
  <TypeSignature Language="VB.NET" Value="Public Class LingerOption" />
  <TypeSignature Language="C++ CLI" Value="public ref class LingerOption" />
  <TypeSignature Language="F#" Value="type LingerOption = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Especifica si un objeto <see cref="T:System.Net.Sockets.Socket" /> seguirá estando conectado después de llamar a los métodos <see cref="M:System.Net.Sockets.Socket.Close" /> o <see cref="M:System.Net.Sockets.TcpClient.Close" />, así como la duración de la conexión si hay datos pendientes de enviar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede haber datos disponibles en el búfer de red saliente después de una aplicación llama a la <xref:System.Net.Sockets.Socket> o <xref:System.Net.Sockets.TcpClient> método. Si desea especificar la cantidad de tiempo que el <xref:System.Net.Sockets.Socket> intentará transmitir los datos después del cierre, cree un <xref:System.Net.Sockets.LingerOption> con el `enable` parámetro establecido en `true`y el `seconds` parámetro establecido en el período de tiempo deseado . El `seconds` parámetro se utiliza para indicar cuánto tiempo desea que el <xref:System.Net.Sockets.Socket> para seguir conectado antes de agotar el tiempo. Si no desea que el <xref:System.Net.Sockets.Socket> para mantenerse durante un período de tiempo después del cierre, cree un <xref:System.Net.Sockets.LingerOption> instancia con el `enable` parámetro establecido en `true` y `seconds` parámetro establecido en cero. En este caso, el <xref:System.Net.Sockets.Socket> se cerrará inmediatamente y ninguno no enviados se perderán datos. Una vez creado, pase el <xref:System.Net.Sockets.LingerOption> a la <xref:System.Net.Sockets.Socket.SetSocketOption%2A?displayProperty=nameWithType> método. Si se envían y reciben datos con un <xref:System.Net.Sockets.TcpClient>, a continuación, establezca el <xref:System.Net.Sockets.LingerOption> de instancia en el <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> propiedad.  
  
 La pila IP calcula el tiempo de espera de protocolo IP predeterminado a utilizar basándose en el tiempo de ida y vuelta de la conexión. En la mayoría de los casos, el tiempo de espera calculado por la pila es más relevante que definidos por una aplicación. Este es el comportamiento predeterminado para un <xref:System.Net.Sockets.Socket> cuando el <xref:System.Net.Sockets.Socket.LingerState%2A> propiedad no está establecida y para un <xref:System.Net.Sockets.TcpClient> cuando el <xref:System.Net.Sockets.TcpClient.LingerState%2A> no se establece la propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se establece creada anteriormente <xref:System.Net.Sockets.Socket> a permanencia de un segundo después de llamar a la <xref:System.Net.Sockets.Socket.Close%2A> método.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LingerOption (bool enable, int seconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool enable, int32 seconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.LingerOption.#ctor(System.Boolean,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (enable As Boolean, seconds As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LingerOption(bool enable, int seconds);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.LingerOption : bool * int -&gt; System.Net.Sockets.LingerOption" Usage="new System.Net.Sockets.LingerOption (enable, seconds)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="enable" Type="System.Boolean" />
        <Parameter Name="seconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enable"><see langword="true" /> para que continúe la conexión después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />; <see langword="false" /> en cualquier otro caso.</param>
        <param name="seconds">Número de segundos que debe permanecer abierta la conexión después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Net.Sockets.LingerOption" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede haber datos disponibles en el búfer de red saliente después de cerrar el <xref:System.Net.Sockets.Socket>. Use la `enable` parámetro para especificar si desea que el <xref:System.Net.Sockets.Socket> siga transmitiendo datos sin enviar después de llama al método close. Use la `seconds` parámetro para indicar cuánto tiempo desea que el <xref:System.Net.Sockets.Socket> para intentar transferir los datos antes de agotar el tiempo. Si especifica `true` para el `enable` parámetro y 0 para el `seconds` parámetro, el <xref:System.Net.Sockets.Socket> intentará enviar los datos hasta que no quede ninguna en el búfer de red saliente. Si especifica `false` para el `enable` parámetro, el <xref:System.Net.Sockets.Socket> se cerrará inmediatamente y ninguno no enviados se perderán datos.  
  
 En la tabla siguiente se describe el comportamiento en el <xref:System.Net.Sockets.Socket.Close%2A?displayProperty=nameWithType> y <xref:System.Net.Sockets.TcpClient.Close%2A?displayProperty=nameWithType> métodos según los valores posibles de la `enable` y `seconds` parámetros cuando crea una instancia de LingerOption y establecida en el <xref:System.Net.Sockets.Socket.LingerState%2A?displayProperty=nameWithType> o <xref:System.Net.Sockets.TcpClient.LingerState%2A?displayProperty=nameWithType> propiedad.  
  
|`enable`|`seconds`|Comportamiento|  
|--------------|---------------|--------------|  
|`false` (deshabilitado), el valor predeterminado|No es aplicable, el tiempo de espera (valor predeterminado).|Intenta enviar datos pendientes de un socket orientado a la conexión (por ejemplo, TCP) hasta que el valor predeterminado de tiempo de espera de protocolo IP expira.|  
|`true` (habilitado)|Un tiempo de espera distinto de cero|Intenta enviar los datos pendientes hasta que expira el tiempo de espera especificado y, si se produce un error en el intento, Winsock restablece la conexión.|  
|`true` (habilitado)|Un cero tiempo de espera.|Descarta cualquier dato pendiente. Para el socket orientado a conexión (por ejemplo, TCP), Winsock restablece la conexión.|  
  
 La pila IP calcula el tiempo de espera de protocolo IP predeterminado a utilizar basándose en el tiempo de ida y vuelta de la conexión. En la mayoría de los casos, el tiempo de espera calculado por la pila es más relevante que definidos por una aplicación. Este es el comportamiento predeterminado para un socket cuando la <xref:System.Net.Sockets.Socket.LingerState%2A> no se establece la propiedad.  
  
 Cuando el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el <xref:System.Net.Sockets.Socket.LingerState%2A> propiedad está establecida en mayor que el tiempo de espera de protocolo IP de forma predeterminada, el tiempo de espera de protocolo IP de forma predeterminada se todavía se aplican y reemplazan.  
  
   
  
## Examples  
 En el ejemplo siguiente se establece creada anteriormente <xref:System.Net.Sockets.Socket> a permanencia de un segundo después de llamar a la <xref:System.Net.Sockets.Socket.Close%2A> método.  
  
 [!code-cpp[Classic LingerOption Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic LingerOption Example/CPP/source.cpp#1)]
 [!code-csharp[Classic LingerOption Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic LingerOption Example/CS/source.cs#1)]
 [!code-vb[Classic LingerOption Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic LingerOption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Net.Sockets.LingerOption.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si se permite un plazo de permanencia después de cerrar <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <value><see langword="true" /> si <see cref="T:System.Net.Sockets.Socket" /> tuviera que permanecer después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />; en caso contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede usar el <xref:System.Net.Sockets.LingerOption.Enabled%2A> propiedad para determinar si el <xref:System.Net.Sockets.Socket> permanecerá después de cierre. Cambie este valor a `true` o `false` y pase el modificada <xref:System.Net.Sockets.LingerOption> a la <xref:System.Net.Sockets.Socket.SetSocketOption%2A> método o un conjunto el <xref:System.Net.Sockets.TcpClient.LingerState%2A> o <xref:System.Net.Sockets.Socket.LingerState%2A> property.to deshabilitar o habilitar la permanencia.  
  
 En la tabla siguiente describe el comportamiento de los valores posibles de la <xref:System.Net.Sockets.LingerOption.Enabled%2A> propiedad y el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el <xref:System.Net.Sockets.Socket.LingerState%2A> propiedad.  
  
|`enable`|`seconds`|Comportamiento|  
|--------------|---------------|--------------|  
|`false` (deshabilitado), el valor predeterminado|No es aplicable, el tiempo de espera (valor predeterminado).|Intenta enviar datos pendientes de un socket orientado a la conexión (por ejemplo, TCP) hasta que el valor predeterminado de tiempo de espera de protocolo IP expira.|  
|`true` (habilitado)|Un tiempo de espera distinto de cero|Intenta enviar los datos pendientes hasta que expira el tiempo de espera especificado y, si se produce un error en el intento, Winsock restablece la conexión.|  
|`true` (habilitado)|Un cero tiempo de espera.|Descarta cualquier dato pendiente. Para el socket orientado a conexión (por ejemplo, TCP), Winsock restablece la conexión.|  
  
 La pila IP calcula el tiempo de espera de protocolo IP predeterminado a utilizar basándose en el tiempo de ida y vuelta de la conexión. En la mayoría de los casos, el tiempo de espera calculado por la pila es más relevante que definidos por una aplicación. Este es el comportamiento predeterminado para un socket cuando la <xref:System.Net.Sockets.Socket.LingerState%2A> no se establece la propiedad.  
  
 Cuando el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el <xref:System.Net.Sockets.Socket.LingerState%2A> propiedad está establecida en mayor que el tiempo de espera de protocolo IP de forma predeterminada, el tiempo de espera de protocolo IP de forma predeterminada se todavía se aplican y reemplazan.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LingerTime">
      <MemberSignature Language="C#" Value="public int LingerTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LingerTime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.LingerOption.LingerTime" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerTime As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LingerTime { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.LingerTime : int with get, set" Usage="System.Net.Sockets.LingerOption.LingerTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el período de tiempo que la conexión permanece abierta después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" /> si quedan datos pendientes de envío.</summary>
        <value>El tiempo, en segundos, que debe permanecer abierta la conexión después de llamar al método <see cref="M:System.Net.Sockets.Socket.Close" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este valor si desea determinar cómo cuánto tiempo un cerrado <xref:System.Net.Sockets.Socket> intentará transferir los datos antes de agotar el tiempo. También puede establecer este valor para el tiempo de espera, en segundos.  
  
 Si el <xref:System.Net.Sockets.LingerOption.Enabled%2A> propiedad es `true`, y establece <xref:System.Net.Sockets.LingerOption.LingerTime%2A> en 0, el <xref:System.Net.Sockets.Socket> descarta cualquier dato a enviar en el búfer de red saliente pendiente. Si cambia este valor, debe pasar el modificada <xref:System.Net.Sockets.LingerOption> de instancia para el <xref:System.Net.Sockets.Socket.SetSocketOption%2A> método o un conjunto el <xref:System.Net.Sockets.TcpClient.LingerState%2A> o <xref:System.Net.Sockets.Socket.LingerState%2A> propiedad.  
  
 En la tabla siguiente describe el comportamiento de los valores posibles de la <xref:System.Net.Sockets.LingerOption.Enabled%2A> propiedad y el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el <xref:System.Net.Sockets.Socket.LingerState%2A> propiedad.  
  
|`enable`|`seconds`|Comportamiento|  
|--------------|---------------|--------------|  
|`false` (deshabilitado), el valor predeterminado|No es aplicable, el tiempo de espera (valor predeterminado).|Intenta enviar datos pendientes de un socket orientado a la conexión (por ejemplo, TCP) hasta que el valor predeterminado de tiempo de espera de protocolo IP expira.|  
|`true` (habilitado)|Un tiempo de espera distinto de cero|Intenta enviar los datos pendientes hasta que expira el tiempo de espera especificado y, si se produce un error en el intento, Winsock restablece la conexión.|  
|`true` (habilitado)|Un cero tiempo de espera.|Descarta cualquier dato pendiente. Para el socket orientado a conexión (por ejemplo, TCP), Winsock restablece la conexión.|  
  
 La pila IP calcula el tiempo de espera de protocolo IP predeterminado a utilizar basándose en el tiempo de ida y vuelta de la conexión. En la mayoría de los casos, el tiempo de espera calculado por la pila es más relevante que definidos por una aplicación. Este es el comportamiento predeterminado para un socket cuando la <xref:System.Net.Sockets.Socket.LingerState%2A> no se establece la propiedad.  
  
 Cuando el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el <xref:System.Net.Sockets.Socket.LingerState%2A> propiedad está establecida en mayor que el tiempo de espera de protocolo IP de forma predeterminada, el tiempo de espera de protocolo IP de forma predeterminada se todavía se aplican y reemplazan.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el valor de esta propiedad.  
  
 [!code-cpp[Socket_Socket_Options#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Socket_Socket_Options/CPP/source.cpp#2)]
 [!code-csharp[Socket_Socket_Options#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Socket_Socket_Options/CS/source.cs#2)]
 [!code-vb[Socket_Socket_Options#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Socket_Socket_Options/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>