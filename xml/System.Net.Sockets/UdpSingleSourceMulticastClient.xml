<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9f566bdff607653e1e0ad3cd1a1c979a4a62bc62" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53293945" /></Metadata><TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Es un receptor cliente para el tráfico de multidifusión de un solo origen, también denominado en inglés Source Specific Multicast (SSM).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Deben conocer la dirección de grupo de multidifusión y la dirección de origen del remitente.  
  
 Además de recibir datos de multidifusión de un remitente específico, el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> cliente también puede enviar datos de unidifusión al remitente.  
  
 Para recibir multidifusión procedentes de varios orígenes, o cuando los orígenes no se conocen de antemano, utilice el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> clase en su lugar.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Dirección de origen del remitente al que este receptor se puede suscribir.</param>
        <param name="groupAddress">Dirección del grupo de multidifusión al que este receptor se puede suscribir.</param>
        <param name="localPort">Puerto local al que este receptor se puede enlazar.</param>
        <summary>Crea un nuevo cliente UDP <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> que puede suscribirse a una dirección de grupo y recibir datagramas desde un único origen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor asocia un socket de multidifusión UDP con una dirección de grupo y el puerto, pero no enlazar o de lo contrario, utilice el socket.  
  
 El `groupAddress` parámetro puede ser un IPv4 o IPv6 de multidifusión dirección. Sin embargo, la familia de direcciones de la `sourceAddress` y `groupAddress` parámetros deben ser el mismo.  
  
 El `localPort` parámetro no debe especificar un puerto inferior a 1024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="sourceAddress" /> y <paramref name="groupAddress" /> debe ser la misma familia de direcciones.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="sourceAddress" /> es una referencia nula (nada en Visual Basic).  
  
O bien 
 <paramref name="groupAddress" /> es una referencia nula (nada en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="localPort" /> es menor que 0 
O bien 
 <paramref name="localPort" /> es mayor que 65.535.</exception>
        <exception cref="T:System.Net.Sockets.SocketException"><paramref name="localPort" /> es menor que 1024</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Método de devolución de llamada que se invocará cuando se complete la operación.</param>
        <param name="state">Información de estado opcional para pasar al método <paramref name="callback" /> de esta operación.</param>
        <summary>Enlaza el socket e inicia una operación de unión al grupo de multidifusión para permitir que se reciban datagramas desde una dirección de origen única.</summary>
        <returns>Elemento <see cref="T:System.IAsyncResult" /> que hace referencia a esta operación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> método enlaza un socket de multidifusión de UDP a un puerto local y se une a un grupo de multidifusión para permitir que los datagramas recibirse desde una dirección de origen único. La dirección de grupo de multidifusión, la dirección de origen único y el puerto local para enlazar a se especifican en el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.  
  
 El método especificado en el `callback` parámetro se invoca cuando se ha completado la operación para unirse al grupo de multidifusión.  
  
 Si es necesario el tiempo de ejecución, el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> método también realiza una comprobación de directiva para comprobar que el cliente tiene permiso para acceder al grupo de multidifusión. Si el cliente no puede tener acceso, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Ya se ha unido el grupo de multidifusión o una operación de unión está actualmente en curso.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer para almacenar los datos recibidos.</param>
        <param name="offset">Desplazamiento, en bytes, desde el principio del <paramref name="buffer" /> donde deberían almacenarse los datos.</param>
        <param name="count">Número máximo de bytes que se van a recibir y a almacenar en el <paramref name="buffer" />.</param>
        <param name="callback">Método de devolución de llamada que se invocará cuando se complete la operación.</param>
        <param name="state">Información de estado opcional para pasar al método <paramref name="callback" /> de esta operación.</param>
        <summary>Inicia la operación de recepción de un paquete del grupo de multidifusión unido e invoca la devolución de llamada especificada cuando un paquete llegó al grupo procedente del remitente especificado.</summary>
        <returns>Elemento <see cref="T:System.IAsyncResult" /> que hace referencia a esta operación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> método comienza una operación de recepción de un paquete UDP del grupo de multidifusión unido desde un remitente único. El puerto local, grupo de multidifusión y dirección de origen del remitente se especifican en el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor. El cliente de multidifusión también debe haber completado una combinación para el grupo de multidifusión.  
  
 El método especificado en el `callback` parámetro se invoca cuando ha recibido un paquete.  
  
 Es posible que haya un error de socket si una operación de recepción se produce un error de forma sincrónica, aunque es habitual con UDP. Si se produce un error de socket, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido está especificado como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> es una referencia nula (nada en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> es menor que 0 
O bien 
 <paramref name="offset" /> es mayor que la longitud del parámetro <paramref name="buffer" />.  
  
O bien 
 <paramref name="count" /> es menor que 0 
O bien 
 <paramref name="offset" /> más el recuento es mayor que la longitud del parámetro <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">El grupo de multidifusión no se unió todavía.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket para la recepción.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Búfer que contiene los datos que se van a enviar.</param>
        <param name="offset">Desplazamiento, en bytes, desde el principio del parámetro <paramref name="buffer" /> para leer los datos que se van a enviar.</param>
        <param name="count">Número de bytes que se van a enviar desde el elemento <paramref name="buffer" />.</param>
        <param name="remotePort">Puerto remoto al que se va a enviar el paquete. Dirección remota que especifica el constructor <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />.</param>
        <param name="callback">Método de devolución de llamada que se invocará cuando se complete la operación.</param>
        <param name="state">Información de estado opcional para pasar al método <paramref name="callback" /> de esta operación.</param>
        <summary>Comienza la operación de envío de un paquete de unidifusión al origen previamente especificado.</summary>
        <returns>Elemento <see cref="T:System.IAsyncResult" /> que hace referencia a esta operación.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> método comienza una operación de envío de un paquete UDP al origen previamente especificado.  
  
 Algunos protocolos de utilizan esta información para pasar a lo largo de control de flujo de calidad de las estadísticas del servicio o mensajes de recuperación.  
  
 El método especificado en el `callback` parámetro se invoca cuando se envió un paquete.  
  
 El cliente debe haber completado una combinación para el grupo de multidifusión.  
  
 Si el puerto de destino especificado en el `remotePort` parámetro es inferior a 1.024, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Es posible que haya un error de socket si una operación de envío produce un error de forma sincrónica, aunque es habitual con UDP. Si se produce un error de socket, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido está especificado como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> es una referencia nula (nada en Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> es menor que 0 
O bien 
 <paramref name="offset" /> es mayor que la longitud del parámetro <paramref name="buffer" />.  
  
O bien 
 <paramref name="count" /> es menor que 0 
O bien 
 <paramref name="offset" /> más el recuento es mayor que la longitud del elemento <paramref name="buffer" />.  
  
O bien 
 <paramref name="remotePort" /> es menor que 0 o mayor que 65 535.</exception>
        <exception cref="T:System.InvalidOperationException">El grupo de multidifusión no se unió todavía.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Deja el grupo de multidifusión y libera todos los recursos usados por la instancia actual de la clase <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> y el <see cref="T:System.Net.Sockets.Socket" /> subyacente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llame a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> cuando haya terminado de usar <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. El método <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> deja el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> en un estado no utilizable. Después de llamar a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> por lo que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> estaba ocupando.  
  
 Realice siempre una llamada a <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> del objeto <xref:System.Object.Finalize%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Resultado de la operación de combinación asincrónica.</param>
        <summary>Completa la operación de grupo de combinación asincrónica para un grupo de multidifusión.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> método completa un enlace asincrónico a una operación de socket y únase a un grupo de multidifusión.  
  
 Si es necesario el tiempo de ejecución, el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> método también realiza una comprobación de directiva para comprobar que el cliente tiene permiso para acceder al grupo de multidifusión. Si el cliente no puede tener acceso, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Si se produce un error de socket al realizar la operación del grupo de combinación, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido está especificado como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> es una referencia nula (nada en Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult *  -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Resultado de la operación de recepción asincrónica.</param>
        <param name="sourcePort">Punto de conexión de origen del que se recibió el paquete.</param>
        <summary>Completa la operación asincrónica de recepción de un paquete desde el grupo de multidifusión asociado y proporciona la información recibida.</summary>
        <returns>Longitud, en bytes, del mensaje almacenado en el parámetro <paramref name="buffer" /> pasado al método <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> método completa una operación asincrónica para recibir un paquete desde un único origen en un grupo de multidifusión.  
  
 Si se produce un error de socket al realizar la operación de recepción, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido está especificado como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> es una referencia nula (nada en Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">El grupo de multidifusión no se unió todavía.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Resultado de la operación de envío asincrónica.</param>
        <summary>Completa la operación de envío de un paquete de unidifusión a un origen único.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> método completa una operación asincrónica para enviar un paquete a un origen único especificado anteriormente.  
  
 Si se produce un error de socket al realizar la operación de recepción, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido está especificado como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> es una referencia nula (nada en Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">El grupo de multidifusión no se unió todavía.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Error al intentar acceder al socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño, en bytes, del búfer de recepción del elemento <see cref="T:System.Net.Sockets.Socket" /> usado para las operaciones de recepción de multidifusión en esta instancia de <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Devuelva <see cref="T:System.Int32" />.  
  
Tamaño, en bytes, del búfer de recepción.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `ReceiveBufferSize` propiedad obtiene o establece el tamaño, en bytes, del búfer de recepción de subyacente <xref:System.Net.Sockets.Socket> utilizado para las operaciones de recepción de multidifusión en esta <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instancia. En concreto, el `ReceiveBufferSize` propiedad controla el tamaño del búfer utilizado por la pila cuando llega un paquete, pero no ha llamado todavía a la aplicación la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> método. Si llena este búfer y paquetes siguen llegando antes de la aplicación llama a la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> y <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> métodos, los paquetes antiguos se eliminarán. La aplicación nunca será capaz de recibir los paquetes antiguos y recibirá en su lugar, los paquetes más recientes cuando llama a la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> método.  
  
 El tamaño predeterminado del búfer de recepción en Windows es 8,192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El tamaño del búfer especificado es menor que 0.</exception>
        <exception cref="T:System.InvalidOperationException">El grupo de multidifusión no se unió todavía.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el tamaño, en bytes, del búfer de envío del elemento <see cref="T:System.Net.Sockets.Socket" /> usado para las operaciones de envío de multidifusión en esta instancia de <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</summary>
        <value>Devuelve <see cref="T:System.Int32" />.  
  
Tamaño, en bytes, del búfer de envío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La propiedad SendBufferSize Obtiene o establece el tamaño, en bytes, del búfer de envío del subyacente <xref:System.Net.Sockets.Socket> utilizado para las operaciones de envío de multidifusión en esta <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instancia.  
  
 En Mac OS X, el <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propiedad controla el número de bytes puede estar en el búfer de espera de envía de la pila red antes de realizar una llamada adicional a la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> método empiezan a generar errores. Las aplicaciones en Mac OS X que deba tener en cuenta esta propiedad si envían un gran número de paquetes UDP en un breve período de tiempo.  
  
 En Windows, las llamadas a la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> método tardará más tiempo para llamar a la devolución de llamada según el valor de la <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propiedad si el búfer de envío está lleno. El <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> propiedad solo controla si los búferes del usuario permanecen bloqueado en la memoria física hasta que se complete el envío.  
  
 El tamaño predeterminado del búfer de envío en Windows es 8,192.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">El tamaño del búfer especificado es menor que 0.</exception>
        <exception cref="T:System.InvalidOperationException">El grupo de multidifusión no se unió todavía.</exception>
        <exception cref="T:System.ObjectDisposedException">Se ha eliminado <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>