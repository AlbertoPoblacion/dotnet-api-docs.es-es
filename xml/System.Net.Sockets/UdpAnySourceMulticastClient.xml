<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpAnySourceMulticastClient.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e524a8150ab7e64fcf23d572a61bd3a3e47b35a8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e524a8150ab7e64fcf23d572a61bd3a3e47b35a8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpAnySourceMulticastClient">
          <source>A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).</source>
          <target state="translated">Un receptor cliente para el tráfico de multidifusión de cualquier origen, también conocido con los términos ingleses Any Source Multicast (ASM) o Internet Standard Multicast (ISM).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source>The multicast group address for this receiver to subscribe to.</source>
          <target state="translated">Dirección de grupo de multidifusión de este receptor a la que se va a suscribir.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source>The local port for this receiver to bind to.</source>
          <target state="translated">Puerto local de este receptor al que se va a enlazar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> UDP client that can subscribe to a group address and receive datagrams from any source.</source>
          <target state="translated">Crea un nuevo cliente UDP <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> que puede suscribirse a una dirección de grupo y recibir datagramas de cualquier origen.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor asocia un socket de multidifusión UDP con una dirección de grupo y puerto, pero no enlazar o de lo contrario, utilice el socket.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`groupAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.</source>
          <target state="translated">El <ph id="ph1">`groupAddress`</ph> parámetro puede ser un IPv4 o IPv6 de multidifusión dirección.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`localPort`</ph> parameter must not specify a port less than 1,024.</source>
          <target state="translated">El <ph id="ph1">`localPort`</ph> parámetro no debe especificar un puerto inferior a 1.024.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="groupAddress" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source>reference</source>
          <target state="translated">referencia</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> is less than 0 -or- <ph id="ph2">&lt;paramref name="localPort" /&gt;</ph> is greater than 65,535.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localPort" /&gt;</ph> es menor que 0 o bien <ph id="ph2">&lt;paramref name="localPort" /&gt;</ph> es mayor que 65.535.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>A callback method to invoke when the operation completes.</source>
          <target state="translated">Método de devolución de llamada que se va a invocar cuando se complete la operación.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">Información de estado opcional para pasar al método <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> de esta operación.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.</source>
          <target state="translated">Enlaza el socket e inicia una operación de unión al grupo de multidifusión para permitir la recepción de datagramas de cualquier participante del grupo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a esta operación.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from any multicast group participant.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A&gt;</ph> método enlaza un socket de multidifusión de UDP a un puerto local y se une a un grupo de multidifusión para permitir que los datagramas enviados por cualquier participante del grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The local port and multicast group address are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">El puerto local y la dirección de grupo de multidifusión se especifican en el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when the operation to join the multicast group has completed.</source>
          <target state="translated">El método especificado en el <ph id="ph1">`callback`</ph> parámetro se invoca cuando se complete la operación para unirse al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">Si es necesario para el tiempo de ejecución, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A&gt;</ph> método también realiza una comprobación de directiva para comprobar que el cliente tiene permiso para tener acceso al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">Si el cliente no tiene acceso, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce con <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The multicast group has already been joined or a join operation is currently in progress.</source>
          <target state="translated">Ya se ha realizado la unión al grupo de multidifusión o hay una operación de unión actualmente en curso.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer to store the received data.</source>
          <target state="translated">Búfer en el que se van a almacenar los datos recibidos.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> where the data should be stored.</source>
          <target state="translated">Desplazamiento, en bytes, desde el principio del elemento <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> donde deben almacenarse los datos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The maximum number of bytes to receive and store in the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Número máximo de bytes que se van a recibir y almacenar en el elemento <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">Método de devolución de llamada que se va a invocar cuando se complete la operación.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">Información de estado opcional para pasar al método <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> de esta operación.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.</source>
          <target state="translated">Inicia la operación de recepción de un paquete del grupo de multidifusión e invoca la devolución de llamada especificada cuando llega al grupo un paquete procedente de cualquier remitente.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a esta operación.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> method begins an operation of receiving a UDP packet from the joined multicast group from any sender.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> método comienza una operación de recepción de un paquete UDP del grupo de multidifusión unido procedentes de cualquier remitente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The local port and multicast group address are specified in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">El puerto local y la dirección de grupo de multidifusión se especifican en el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast client must also have completed a join to the multicast group.</source>
          <target state="translated">El cliente de multidifusión también debe haber completado una combinación para el grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has received.</source>
          <target state="translated">El método especificado en el <ph id="ph1">`callback`</ph> parámetro se invoca cuando ha recibido un paquete.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">Es posible que haya un error de socket si una operación de recepción se produce un error de forma sincrónica, aunque esto es raro con UDP.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> es una referencia nula (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es menor que 0</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es mayor que la longitud del parámetro <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> es menor que 0</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> más el recuento es mayor que la longitud del parámetro <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The buffer that contains the data to send.</source>
          <target state="translated">Búfer que contiene los datos que se van a enviar.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> to read the data to be sent.</source>
          <target state="translated">Desplazamiento, en bytes, desde el principio del elemento <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> para leer los datos que se van a enviar.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send from the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Número de bytes que se van a enviar desde <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The remote endpoint to which the packet is to be sent.</source>
          <target state="translated">Extremo remoto al que se va a enviar el paquete.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">Método de devolución de llamada que se va a invocar cuando se complete la operación.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">Información de estado opcional para pasar al método <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> de esta operación.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Begins the operation of sending a unicast packet to the specified destination.</source>
          <target state="translated">Inicia la operación de envío de un paquete de unidifusión al destino especificado.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a esta operación.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A&gt;</ph> method begins an operation of sending a UDP packet to the joined multicast group.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A&gt;</ph> método comienza una operación de envío de un paquete UDP para el grupo de multidifusión unido.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The client must have completed a join to the multicast group.</source>
          <target state="translated">El cliente debe haber completado una combinación para el grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The destination address specified in the <ph id="ph1">`remoteEndPoint`</ph> parameter must have already sent a multicast packet to this receiver.</source>
          <target state="translated">La dirección de destino especificada en el <ph id="ph1">`remoteEndPoint`</ph> parámetro debe ya has enviado un paquete de multidifusión a este receptor.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</source>
          <target state="translated">Algunos protocolos usan esta información para pasar a lo largo de control de flujo de calidad de las estadísticas del servicio o mensajes de recuperación.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has received.</source>
          <target state="translated">El método especificado en el <ph id="ph1">`callback`</ph> parámetro se invoca cuando ha recibido un paquete.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The transmission is only allowed if the address specified in the <ph id="ph1">`remoteEndPoint`</ph> parameter has already sent a multicast packet to this receiver.</source>
          <target state="translated">Solo se permite la transmisión si la dirección especificada en el <ph id="ph1">`remoteEndPoint`</ph> parámetro ya ha enviado un paquete de multidifusión a este receptor.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">Si el cliente no tiene acceso, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce con <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>If the destination port specified in the <ph id="ph1">`remoteEndPoint`</ph> parameter is less than 1,024, a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">Si el puerto de destino especificado en el <ph id="ph1">`remoteEndPoint`</ph> parámetro es inferior a 1.024, un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce con <ph id="ph3">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">Es posible que haya un error de socket si una operación de recepción se produce un error de forma sincrónica, aunque esto es raro con UDP.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> es una referencia nula (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es menor que 0</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es mayor que la longitud del parámetro <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> es menor que 0</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> más el recuento es mayor que la longitud del parámetro <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The buffer that contains the data to send.</source>
          <target state="translated">Búfer que contiene los datos que se van a enviar.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The offset, in bytes, from the beginning of the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> to read the data to be sent.</source>
          <target state="translated">Desplazamiento, en bytes, desde el principio del elemento <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept> para leer los datos que se van a enviar.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send from the <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Número de bytes que se van a enviar desde <bpt id="p1">&lt;c&gt;</bpt>buffer<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The callback method to invoke when the operation completes.</source>
          <target state="translated">Método de devolución de llamada que se va a invocar cuando se complete la operación.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Optional state information to pass to the <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> method for this operation.</source>
          <target state="translated">Información de estado opcional para pasar al método <bpt id="p1">&lt;c&gt;</bpt>callback<ept id="p1">&lt;/c&gt;</ept> de esta operación.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.</source>
          <target state="translated">Inicia la operación de envío de un paquete a un grupo de multidifusión e invoca la devolución de llamada especificada una vez enviado el paquete al grupo.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references this operation.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a esta operación.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A&gt;</ph> method begins an operation of sending a UDP packet to the joined multicast group.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A&gt;</ph> método comienza una operación de envío de un paquete UDP para el grupo de multidifusión unido.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The client must have completed a join to the multicast group.</source>
          <target state="translated">El cliente debe haber completado una combinación para el grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has received.</source>
          <target state="translated">El método especificado en el <ph id="ph1">`callback`</ph> parámetro se invoca cuando ha recibido un paquete.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</source>
          <target state="translated">Es posible que haya un error de socket si una operación de recepción se produce un error de forma sincrónica, aunque esto es raro con UDP.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>If a socket failure occurs, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="buffer" /&gt;</ph> es una referencia nula (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es menor que 0</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> es mayor que la longitud del parámetro <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than 0</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> es menor que 0</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> plus the count is greater than the length of the <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="offset" /&gt;</ph> más el recuento es mayor que la longitud del parámetro <ph id="ph2">&lt;paramref name="buffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The address of the source to block.</source>
          <target state="translated">Dirección del origen que se va a bloquear.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>Blocks a source so that multicast packets originating from it are no longer received.</source>
          <target state="translated">Bloquea un origen de modo que se dejen de recibir los paquetes de multidifusión procedentes del mismo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> method blocks multicast packets originating from a specified source address from being received.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> método bloquea los paquetes de multidifusión procedentes de una dirección de origen especificada desde la que se reciben.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The client must have completed a join to the multicast group.</source>
          <target state="translated">El cliente debe haber completado una combinación para el grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The <ph id="ph1">`sourceAddress`</ph> parameter may be either an IPv6 or IPv4 address, but the <ph id="ph2">`sourceAddress`</ph> parameter must match the address family of the multicast group that the client joined.</source>
          <target state="translated">El <ph id="ph1">`sourceAddress`</ph> parámetro puede ser la dirección de un IPv4 o de IPv6, pero la <ph id="ph2">`sourceAddress`</ph> parámetro debe coincidir con la familia de direcciones del grupo de multidifusión que el cliente unido.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The method specified in the <ph id="ph1">`callback`</ph> parameter is invoked when a packet has received.</source>
          <target state="translated">El método especificado en el <ph id="ph1">`callback`</ph> parámetro se invoca cuando ha recibido un paquete.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>If there is a socket failure while performing the block source operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket al realizar la operación de origen de bloque, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
          <source>Leaves the multicast group and releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> class and the underlying the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Abandona el grupo de multidifusión y libera todos los recursos utilizados por la instancia actual de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> y la clase <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>.</source>
          <target state="translated">Llame a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph> cuando haya terminado de usar <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
          <source>The Dispose method leaves the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> in an unusable state.</source>
          <target state="translated">El método Dispose deja la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> en un estado no utilizable.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> was occupying.</source>
          <target state="translated">Después de llamar a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph>, debe liberar todas las referencias a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <ph id="ph3">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> estaba ocupando.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>.</source>
          <target state="translated">Realice siempre una llamada a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A&gt;</ph> antes de liberar la última referencia al objeto <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> object's <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> del objeto <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The result of the asynchronous join operation.</source>
          <target state="translated">Resultado de la operación de unión asincrónica.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>Completes the asynchronous join group operation to a multicast group.</source>
          <target state="translated">Completa la operación de unión asincrónica a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A&gt;</ph> method completes an asynchronous bind to a socket and join operation to a multicast group.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A&gt;</ph> método completa un enlace asincrónico a una operación de socket y combinación de un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If required by the runtime, the  <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.</source>
          <target state="translated">Si es necesario para el tiempo de ejecución, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A&gt;</ph> método también realiza una comprobación de directiva para comprobar que el cliente tiene permiso para tener acceso al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If the client is not allowed access, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</source>
          <target state="translated">Si el cliente no tiene acceso, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce con <ph id="ph2">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>If there is a socket failure while performing the join group operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket al realizar la operación del grupo de combinación, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> es una referencia nula (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The result of the asynchronous receive operation.</source>
          <target state="translated">Resultado de la operación de recepción asincrónica.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The source endpoint where the packet was received from.</source>
          <target state="translated">Extremo de origen del que se ha recibido el paquete.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</source>
          <target state="translated">Completa la operación de recepción asincrónica de un paquete del grupo de multidifusión y proporciona la información recibida.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The length, in bytes, of the message stored in the buffer parameter passed to the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Longitud, en bytes, del mensaje almacenado en el parámetro de búfer que se ha pasado al método <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A&gt;</ph> method completes an asynchronous operation to receive a packet from a multicast group.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A&gt;</ph> método completa una operación asincrónica para recibir un paquete de un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket al realizar la operación de recepción, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> es una referencia nula (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>The result of the asynchronous send operation.</source>
          <target state="translated">Resultado de la operación de envío asincrónica.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>Completes the operation of sending a unicast packet to the specified destination.</source>
          <target state="translated">Completa la operación de envío de un paquete de unidifusión al destino especificado.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A&gt;</ph> method completes an asynchronous operation to send a packet to specified destination address.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A&gt;</ph> método completa una operación asincrónica para enviar un paquete a la dirección de destino especificado.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket al realizar la operación de recepción, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> es una referencia nula (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>The result of the asynchronous send operation.</source>
          <target state="translated">Resultado de la operación de envío asincrónica.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>Completes the operation of sending a packet to a multicast group.</source>
          <target state="translated">Completa la operación de envío de un paquete a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A&gt;</ph> method completes an asynchronous operation to send a packet to a multicast group.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A&gt;</ph> método completa una operación asincrónica para enviar un paquete a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>If there is a socket failure while performing the receive operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket al realizar la operación de recepción, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="result" /&gt;</ph> is a null reference (Nothing in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="result" /&gt;</ph> es una referencia nula (Nothing en Visual Basic).</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</source>
          <target state="translated">Obtiene o establece un valor que especifica si se entregan paquetes de multidifusión saliente a la aplicación emisora.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>A value that indicates if outgoing packets to a multicast group are delivered to the sending application.</source>
          <target state="translated">Valor que indica si los paquetes que se envían a un grupo de multidifusión se entregan a la aplicación emisora.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>Multicast traffic is a scalable method for many-to-many communication on the Internet.</source>
          <target state="translated">Tráfico de multidifusión es un método escalable para la comunicación de varios a varios en Internet.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>A process subscribes to a multicast group address.</source>
          <target state="translated">Un proceso se suscribe a una dirección de grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>Then, any packets sent by a subscribed process to the multicast group are received by every other process subscribed to the multicast address.</source>
          <target state="translated">A continuación, todos los paquetes enviados por un proceso suscrito al grupo de multidifusión son recibidos por todos los procesos suscrito a la dirección de multidifusión.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A&gt;</ph> property controls whether any process on the local computer receives multicast packets sent by this client to the multicast group.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A&gt;</ph> propiedad controla si cualquier proceso en el equipo local recibe los paquetes de multidifusión enviado por este cliente para el grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>Gets or sets the size, in bytes, of the receive buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast receive operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">Obtiene o establece el tamaño, en bytes, del búfer de recepción del elemento <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> usado para las operaciones de recepción de multidifusión en esta instancia de <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>The size, in bytes, of the receive buffer.</source>
          <target state="translated">Tamaño, en bytes, del búfer de recepción.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A&gt;</ph> property gets or sets the size, in bytes, of the receive buffer of the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast receive operations on this <ph id="ph3">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A&gt;</ph> propiedad obtiene o establece el tamaño, en bytes, del búfer de recepción de subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> utiliza para las operaciones de envío de multidifusión en el objeto <ph id="ph3">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>Specifically, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A&gt;</ph> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> method.</source>
          <target state="translated">En concreto, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A&gt;</ph> propiedad controla el tamaño del búfer utilizado por la pila cuando llega un paquete, pero no ha llamado todavía a la aplicación la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>If this buffer gets filled up and packets keep coming before the application calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A&gt;</ph> methods, old packets will get dropped.</source>
          <target state="translated">Si llena este búfer y paquetes siguen apareciendo antes de la aplicación llama el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A&gt;</ph> métodos, paquetes antiguos se eliminarán.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> method.</source>
          <target state="translated">La aplicación nunca podrá recibir los paquetes antiguos y en su lugar recibirán los paquetes más recientes, cuando llama a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>The default size of the receive buffer on Windows is 8,192 bytes.</source>
          <target state="translated">El tamaño predeterminado del búfer de recepción en Windows es 8192 bytes.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">El tamaño de búfer especificado es menor que 0.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>Gets or sets the size, in bytes, of the send buffer of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> used for multicast send operations on this <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> instance.</source>
          <target state="translated">Obtiene o establece el tamaño, en bytes, del búfer de envío del elemento <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> usado para las operaciones de envío de multidifusión en esta instancia de <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>The size, in bytes, of the send buffer.</source>
          <target state="translated">Tamaño, en bytes, del búfer de envío.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> property gets or sets the size, in bytes, of the send buffer of the underlying Socket used for multicast send operations on this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> instance.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> propiedad obtiene o establece el tamaño, en bytes, del búfer de envío del Socket subyacente utilizado para las operaciones de envío de multidifusión en esta <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A&gt;</ph> methods will take longer to call the callback depending on the value of the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> property if the send buffer is full.</source>
          <target state="translated">llamadas a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A&gt;</ph> o <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A&gt;</ph> métodos tardará más tiempo para llamar a la devolución de llamada según el valor de la <ph id="ph3">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> propiedad si el búfer de envío está lleno.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> property only controls whether the user's buffer stays locked in physical memory until the send completes.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A&gt;</ph> propiedad solo controla si el búfer del usuario permanece bloqueado en la memoria física hasta que se complete el envío.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>The default size of the send buffer on Windows is 8,192 bytes.</source>
          <target state="translated">El tamaño predeterminado del búfer de envío en Windows es 8192 bytes.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>The buffer size specified is less than 0.</source>
          <target state="translated">El tamaño de búfer especificado es menor que 0.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The address of the source to unblock.</source>
          <target state="translated">Dirección del origen que se va a desbloquear.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>Unblocks a source that was previously blocked by a call to the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /&gt;</ph> method so that multicast packets originating from it can be received.</source>
          <target state="translated">Desbloquea un origen previamente bloqueado por una llamada al método <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /&gt;</ph> de modo que se puedan recibir los paquetes de multidifusión procedentes de dicho origen.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A&gt;</ph> method unblocks multicast packets originating from a specified source address so they can be received.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A&gt;</ph> método desbloquea procedentes de una dirección de origen especificada para que se pueden recibir los paquetes de multidifusión.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The specified source address must have previously been blocked by a call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> method.</source>
          <target state="translated">La dirección de origen especificado debe se ha bloqueado anteriormente mediante una llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The client must have completed a join to the multicast group.</source>
          <target state="translated">El cliente debe haber completado una combinación para el grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The <ph id="ph1">`sourceAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.</source>
          <target state="translated">El <ph id="ph1">`sourceAddress`</ph> parámetro puede ser un IPv4 o IPv6 de multidifusión dirección.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>If the specified source address in the <ph id="ph1">`sourceAddress`</ph> parameter was not previously blocked by a call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> method, a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id="ph4">&lt;xref:System.Net.Sockets.SocketError.AddressNotAvailable&gt;</ph>.</source>
          <target state="translated">Si el origen especificado de las direcciones de la <ph id="ph1">`sourceAddress`</ph> parámetro no se ha bloqueado anteriormente mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A&gt;</ph> método, un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce con <ph id="ph4">&lt;xref:System.Net.Sockets.SocketError.AddressNotAvailable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>If there is a socket failure while performing the unblock source operation, a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.</source>
          <target state="translated">Si se produce un error de socket al realizar la operación de origen desbloquear, un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> se produce.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The error received is specified as a member of the <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.</source>
          <target state="translated">El error recibido se especifica como un miembro de la <ph id="ph1">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeración.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The multicast group has not yet been joined.</source>
          <target state="translated">Aún no se ha realizado la unión al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph> has been disposed.</source>
          <target state="translated">Se ha eliminado el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>