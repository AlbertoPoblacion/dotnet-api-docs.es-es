<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="350bc62b0f3c71b25479932badd0504a33e475ae" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36549640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpAnySourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A client receiver for multicast traffic from any source, also known as Any Source Multicast (ASM) or Internet Standard Multicast (ISM).</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpAnySourceMulticastClient : System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpAnySourceMulticastClient" Usage="new System.Net.Sockets.UdpAnySourceMulticastClient (groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress">The multicast group address for this receiver to subscribe to.</param>
        <param name="localPort">The local port for this receiver to bind to.</param>
        <summary>Creates a new <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from any source.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor asocia un socket de multidifusión UDP con una dirección de grupo y puerto, pero no enlazar o de lo contrario, utilice el socket.  
  
 El `groupAddress` parámetro puede ser un IPv4 o IPv6 de multidifusión dirección.  
  
 El `localPort` parámetro no debe especificar un puerto inferior a 1.024.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="groupAddress" /> is <see langword="null" />. reference</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="localPort" /> is less than 0 -or- <paramref name="localPort" /> is greater than 65,535.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">A callback method to invoke when the operation completes.</param>
        <param name="state">Optional state information to pass to the <c>callback</c> method for this operation.</param>
        <summary>Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from any group participant.</summary>
        <returns>Returns <see cref="T:System.IAsyncResult" />.  An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> método enlaza un socket de multidifusión de UDP a un puerto local y se une a un grupo de multidifusión para permitir que los datagramas enviados por cualquier participante del grupo de multidifusión. El puerto local y la dirección de grupo de multidifusión se especifican en el <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor.  
  
 El método especificado en el `callback` parámetro se invoca cuando se complete la operación para unirse al grupo de multidifusión.  
  
 Si es necesario para el tiempo de ejecución, el <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> método también realiza una comprobación de directiva para comprobar que el cliente tiene permiso para tener acceso al grupo de multidifusión. Si el cliente no tiene acceso, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The multicast group has already been joined or a join operation is currently in progress.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginReceiveFromGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">The buffer to store the received data.</param>
        <param name="offset">The offset, in bytes, from the beginning of the <c>buffer</c> where the data should be stored.</param>
        <param name="count">The maximum number of bytes to receive and store in the <c>buffer</c>.</param>
        <param name="callback">The callback method to invoke when the operation completes.</param>
        <param name="state">Optional state information to pass to the <c>callback</c> method for this operation.</param>
        <summary>Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from any sender.</summary>
        <returns>Returns <see cref="T:System.IAsyncResult" />.  An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> método comienza una operación de recepción de un paquete UDP del grupo de multidifusión unido procedentes de cualquier remitente. El puerto local y la dirección de grupo de multidifusión se especifican en el <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> constructor. El cliente de multidifusión también debe haber completado una combinación para el grupo de multidifusión.  
  
 El método especificado en el `callback` parámetro se invoca cuando ha recibido un paquete.  
  
 Es posible que haya un error de socket si una operación de recepción se produce un error de forma sincrónica, aunque esto es raro con UDP. Si se produce un error de socket, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> is less than 0  -or-  <paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.  -or-  <paramref name="count" /> is less than 0  -or-  <paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendTo (buffer, offset, count, remoteEndPoint, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">The buffer that contains the data to send.</param>
        <param name="offset">The offset, in bytes, from the beginning of the <c>buffer</c> to read the data to be sent.</param>
        <param name="count">The number of bytes to send from the <c>buffer</c>.</param>
        <param name="remoteEndPoint">The remote endpoint to which the packet is to be sent.</param>
        <param name="callback">The callback method to invoke when the operation completes.</param>
        <param name="state">Optional state information to pass to the <c>callback</c> method for this operation.</param>
        <summary>Begins the operation of sending a unicast packet to the specified destination.</summary>
        <returns>Returns <see cref="T:System.IAsyncResult" />.  An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> método comienza una operación de envío de un paquete UDP para el grupo de multidifusión unido.  
  
 El cliente debe haber completado una combinación para el grupo de multidifusión. La dirección de destino especificada en el `remoteEndPoint` parámetro debe ya has enviado un paquete de multidifusión a este receptor. Algunos protocolos usan esta información para pasar a lo largo de control de flujo de calidad de las estadísticas del servicio o mensajes de recuperación.  
  
 El método especificado en el `callback` parámetro se invoca cuando ha recibido un paquete.  
  
 Solo se permite la transmisión si la dirección especificada en el `remoteEndPoint` parámetro ya ha enviado un paquete de multidifusión a este receptor. Si el cliente no tiene acceso, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Si el puerto de destino especificado en el `remoteEndPoint` parámetro es inferior a 1.024, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Es posible que haya un error de socket si una operación de recepción se produce un error de forma sincrónica, aunque esto es raro con UDP. Si se produce un error de socket, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> is less than 0  -or-  <paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.  -or-  <paramref name="count" /> is less than 0  -or-  <paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendToGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">The buffer that contains the data to send.</param>
        <param name="offset">The offset, in bytes, from the beginning of the <c>buffer</c> to read the data to be sent.</param>
        <param name="count">The number of bytes to send from the <c>buffer</c>.</param>
        <param name="callback">The callback method to invoke when the operation completes.</param>
        <param name="state">Optional state information to pass to the <c>callback</c> method for this operation.</param>
        <summary>Begins the operation of sending a packet to a joined multicast group and invokes the specified callback when a packet has been sent to the group.</summary>
        <returns>Returns <see cref="T:System.IAsyncResult" />.  An <see cref="T:System.IAsyncResult" /> that references this operation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> método comienza una operación de envío de un paquete UDP para el grupo de multidifusión unido.  
  
 El cliente debe haber completado una combinación para el grupo de multidifusión.  
  
 El método especificado en el `callback` parámetro se invoca cuando ha recibido un paquete.  
  
 Es posible que haya un error de socket si una operación de recepción se produce un error de forma sincrónica, aunque esto es raro con UDP. Si se produce un error de socket, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="offset" /> is less than 0  -or-  <paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.  -or-  <paramref name="count" /> is less than 0  -or-  <paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.BlockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.BlockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">The address of the source to block.</param>
        <summary>Blocks a source so that multicast packets originating from it are no longer received.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> método bloquea los paquetes de multidifusión procedentes de una dirección de origen especificada desde la que se reciben. El cliente debe haber completado una combinación para el grupo de multidifusión.  
  
 El `sourceAddress` parámetro puede ser la dirección de un IPv4 o de IPv6, pero la `sourceAddress` parámetro debe coincidir con la familia de direcciones del grupo de multidifusión que el cliente unido.  
  
 El método especificado en el `callback` parámetro se invoca cuando ha recibido un paquete.  
  
 Si se produce un error de socket al realizar la operación de origen de bloque, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpAnySourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llame a <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> cuando haya terminado de usar <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. El método Dispose deja la <xref:System.Net.Sockets.UdpAnySourceMulticastClient> en un estado no utilizable. Después de llamar a <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>, debe liberar todas las referencias a la <xref:System.Net.Sockets.UdpAnySourceMulticastClient> para que el recolector de elementos no utilizados pueda reclamar la memoria que el <xref:System.Net.Sockets.UdpAnySourceMulticastClient> estaba ocupando.  
  
 Realice siempre una llamada a <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> antes de liberar la última referencia al objeto <xref:System.Net.Sockets.UdpAnySourceMulticastClient>. En caso contrario, los recursos que está usando no se liberarán hasta que el recolector de elementos no utilizados llame al método <xref:System.Net.Sockets.UdpAnySourceMulticastClient> del objeto <xref:System.Object.Finalize%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">The result of the asynchronous join operation.</param>
        <summary>Completes the asynchronous join group operation to a multicast group.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> método completa un enlace asincrónico a una operación de socket y combinación de un grupo de multidifusión.  
  
 Si es necesario para el tiempo de ejecución, el <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> método también realiza una comprobación de directiva para comprobar que el cliente tiene permiso para tener acceso al grupo de multidifusión. Si el cliente no tiene acceso, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AccessDenied>.  
  
 Si se produce un error de socket al realizar la operación del grupo de combinación, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromGroup : IAsyncResult *  -&gt; int" Usage="udpAnySourceMulticastClient.EndReceiveFromGroup (result, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">The result of the asynchronous receive operation.</param>
        <param name="source">The source endpoint where the packet was received from.</param>
        <summary>Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</summary>
        <returns>The length, in bytes, of the message stored in the buffer parameter passed to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> método completa una operación asincrónica para recibir un paquete de un grupo de multidifusión.  
  
 Si se produce un error de socket al realizar la operación de recepción, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">The result of the asynchronous send operation.</param>
        <summary>Completes the operation of sending a unicast packet to the specified destination.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> método completa una operación asincrónica para enviar un paquete a la dirección de destino especificado.  
  
 Si se produce un error de socket al realizar la operación de recepción, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendToGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">The result of the asynchronous send operation.</param>
        <summary>Completes the operation of sending a packet to a multicast group.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> método completa una operación asincrónica para enviar un paquete a un grupo de multidifusión.  
  
 Si se produce un error de socket al realizar la operación de recepción, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="result" /> is a null reference (Nothing in Visual Basic).</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether outgoing multicast packets are delivered to the sending application.</summary>
        <value>Devuelve <see cref="T:System.Boolean" />.  Un valor que indica si los paquetes salientes a un grupo de multidifusión se entregan a la aplicación de envío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tráfico de multidifusión es un método escalable para la comunicación de varios a varios en Internet. Un proceso se suscribe a una dirección de grupo de multidifusión. A continuación, todos los paquetes enviados por un proceso suscrito al grupo de multidifusión son recibidos por todos los procesos suscrito a la dirección de multidifusión. El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> propiedad controla si cualquier proceso en el equipo local recibe los paquetes de multidifusión enviado por este cliente para el grupo de multidifusión.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance.</summary>
        <value>Devuelve <see cref="T:System.Int32" />.  Tamaño, en bytes, del búfer de recepción.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> propiedad obtiene o establece el tamaño, en bytes, del búfer de recepción de subyacente <xref:System.Net.Sockets.Socket> utiliza para las operaciones de envío de multidifusión en el objeto <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instancia. En concreto, el <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> propiedad controla el tamaño del búfer utilizado por la pila cuando llega un paquete, pero no ha llamado todavía a la aplicación la <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> método. Si llena este búfer y paquetes siguen apareciendo antes de la aplicación llama el <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> y <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> métodos, paquetes antiguos se eliminarán. La aplicación nunca podrá recibir los paquetes antiguos y en su lugar recibirán los paquetes más recientes, cuando llama a la <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> método.  
  
 El tamaño predeterminado del búfer de recepción en Windows es 8192 bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The buffer size specified is less than 0.</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> instance.</summary>
        <value>Devuelve <see cref="T:System.Int32" />.  Tamaño, en bytes, del búfer de envío.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> propiedad obtiene o establece el tamaño, en bytes, del búfer de envío del Socket subyacente utilizado para las operaciones de envío de multidifusión en esta <xref:System.Net.Sockets.UdpAnySourceMulticastClient> instancia.  
  
 llamadas a la <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> o <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> métodos tardará más tiempo para llamar a la devolución de llamada según el valor de la <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> propiedad si el búfer de envío está lleno. El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> propiedad solo controla si el búfer del usuario permanece bloqueado en la memoria física hasta que se complete el envío.  
  
 El tamaño predeterminado del búfer de envío en Windows es 8192 bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">The buffer size specified is less than 0.</exception>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.UnblockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.UnblockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">The address of the source to unblock.</param>
        <summary>Unblocks a source that was previously blocked by a call to the <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" /> method so that multicast packets originating from it can be received.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> método desbloquea procedentes de una dirección de origen especificada para que se pueden recibir los paquetes de multidifusión. La dirección de origen especificado debe se ha bloqueado anteriormente mediante una llamada a la <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> método.  
  
 El cliente debe haber completado una combinación para el grupo de multidifusión.  
  
 El `sourceAddress` parámetro puede ser un IPv4 o IPv6 de multidifusión dirección.  
  
 Si el origen especificado de las direcciones de la `sourceAddress` parámetro no se ha bloqueado anteriormente mediante una llamada a la <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> método, un <xref:System.Net.Sockets.SocketException> se produce con <xref:System.Net.Sockets.SocketError.AddressNotAvailable>.  
  
 Si se produce un error de socket al realizar la operación de origen desbloquear, un <xref:System.Net.Sockets.SocketException> se produce. El error recibido se especifica como un miembro de la <xref:System.Net.Sockets.SocketError> enumeración.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The multicast group has not yet been joined.</exception>
        <exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> has been disposed.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">An error occurred when attempting to access the socket.</exception>
      </Docs>
    </Member>
  </Members>
</Type>