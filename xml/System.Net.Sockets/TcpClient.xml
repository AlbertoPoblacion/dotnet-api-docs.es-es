<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86461a9f6a0a0d2013628669e699f38abe7dc082" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37644139" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="31d02-101">Provides client connections for TCP network services.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31d02-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-102">La <xref:System.Net.Sockets.TcpClient> clase proporciona métodos sencillos para conectarse, enviar, y recibir transmitir datos a través de una red en modo de bloqueo sincrónico.</span><span class="sxs-lookup"><span data-stu-id="31d02-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="31d02-103">En orden para <xref:System.Net.Sockets.TcpClient> conectarse e intercambiar datos, un <xref:System.Net.Sockets.TcpListener> o <xref:System.Net.Sockets.Socket> creado con el TCP <xref:System.Net.Sockets.ProtocolType> debe estar escuchando solicitudes de conexión entrantes.</span><span class="sxs-lookup"><span data-stu-id="31d02-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="31d02-104">Puede conectarse a este agente de escucha en una de las dos maneras siguientes:</span><span class="sxs-lookup"><span data-stu-id="31d02-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="31d02-105">Crear un <xref:System.Net.Sockets.TcpClient> y llame a uno de los tres disponibles <xref:System.Net.Sockets.TcpClient.Connect%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="31d02-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="31d02-106">Crear un <xref:System.Net.Sockets.TcpClient> con el nombre de host y número de puerto del host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="31d02-107">Este constructor intentará automáticamente una conexión.</span><span class="sxs-lookup"><span data-stu-id="31d02-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-108">Si desea enviar datagramas sin conexión en modo de bloqueo sincrónico, utilice el <xref:System.Net.Sockets.UdpClient> clase.</span><span class="sxs-lookup"><span data-stu-id="31d02-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-109">El siguiente ejemplo de código establece un <xref:System.Net.Sockets.TcpClient> conexión.</span><span class="sxs-lookup"><span data-stu-id="31d02-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="31d02-110">Permiso para establecer una conexión saliente o Aceptar una solicitud entrante.</span>
      <span class="sxs-lookup">
        <span data-stu-id="31d02-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="31d02-111">
        <para>Para enviar y recibir datos, use el <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> método para obtener un <see cref="T:System.Net.Sockets.NetworkStream" />. Llame a la <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> y <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> métodos de la <see cref="T:System.Net.Sockets.NetworkStream" /> para enviar y recibir datos con el host remoto. Use la <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> método para liberar todos los recursos asociados con la <see cref="T:System.Net.Sockets.TcpClient" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="31d02-111">
          <para>To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />. Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host. Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31d02-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-114">Este constructor crea un nuevo <xref:System.Net.Sockets.TcpClient> y permite que el proveedor de servicios subyacente asignar el más adecuado local IP dirección y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-114">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="31d02-115">Debe llamar primero a la <xref:System.Net.Sockets.TcpClient.Connect%2A> método antes de enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-115">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-116">Este constructor sólo funciona con tipos de dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="31d02-116">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-117">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-117">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-118">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-118">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-119">En el ejemplo de código siguiente se muestra cómo usar el constructor predeterminado para crear un nuevo <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="31d02-119">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="31d02-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-122">Este constructor crea un nuevo <xref:System.Net.Sockets.TcpClient> y lo enlaza con el <xref:System.Net.IPEndPoint> especificado por el `localEP` parámetro.</span><span class="sxs-lookup"><span data-stu-id="31d02-122">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="31d02-123">Antes de llamar a este constructor, debe crear un <xref:System.Net.IPEndPoint> con el número de puerto y la dirección IP desde el que se va a enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-123">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="31d02-124">No es necesario especificar un número de puerto y la dirección IP local antes de conectar y comunicar.</span><span class="sxs-lookup"><span data-stu-id="31d02-124">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="31d02-125">Si creas un <xref:System.Net.Sockets.TcpClient> utilizando cualquier otro constructor, el proveedor de servicios subyacente asignará la más adecuada local IP dirección y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-125">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="31d02-126">Debe llamar a la <xref:System.Net.Sockets.TcpClient.Connect%2A> método antes de enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-126">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-127">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-127">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-128">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-128">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-129">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <xref:System.Net.Sockets.TcpClient> clase con un extremo local.</span><span class="sxs-lookup"><span data-stu-id="31d02-129">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="31d02-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="31d02-133">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-133">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-134">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-134">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-135">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <xref:System.Net.Sockets.TcpClient> clase.</span><span class="sxs-lookup"><span data-stu-id="31d02-135">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31d02-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="31d02-137">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-137">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-138">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-138">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-140">Este constructor crea un nuevo <xref:System.Net.Sockets.TcpClient> y realiza una conexión sincrónica intento en el nombre de host proporcionado y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-140">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="31d02-141">El proveedor de servicios subyacente asignará a la más adecuada local IP dirección y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-141">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="31d02-142"><xref:System.Net.Sockets.TcpClient> se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="31d02-142"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="31d02-143">Este constructor permite inicializar, resolver el nombre de host DNS y conectarse en un solo paso.</span><span class="sxs-lookup"><span data-stu-id="31d02-143">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="31d02-144">Si IPv6 está habilitado y el <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, la conexión a la dirección será de IPv6 intenta primero antes de la dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="31d02-144">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="31d02-145">Esto puede tener el efecto de retrasar el tiempo para establecer la conexión si el host no está escuchando en la dirección IPv6.</span><span class="sxs-lookup"><span data-stu-id="31d02-145">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-146">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-146">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-147">Después de haber obtenido este código, puede consultar en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-147">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-148">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-148">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-149">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-149">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-150">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <xref:System.Net.Sockets.TcpClient> clase con un nombre de host y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-150">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-153">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-154">Gets or set a value that indicates whether a connection has been made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-154">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-155">Es <see langword="true" /> si se realizó la conexión; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-155">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-156">Las clases derivadas de <xref:System.Net.Sockets.TcpClient> puede utilizar esta propiedad para determinar si un intento de conexión se ha realizado correctamente.</span><span class="sxs-lookup"><span data-stu-id="31d02-156">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="31d02-157">No supervisa el estado de conexión en curso <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="31d02-157">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="31d02-158">Si el host remoto cierra la conexión, <xref:System.Net.Sockets.TcpClient.Active%2A> no se actualizará.</span><span class="sxs-lookup"><span data-stu-id="31d02-158">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="31d02-159">Si va a derivar de <xref:System.Net.Sockets.TcpClient> y requieren más atención en el estado de conexión, use el <xref:System.Net.Sockets.Socket.Connected%2A> propiedad de la <xref:System.Net.Sockets.Socket> devuelto por la <xref:System.Net.Sockets.TcpClient.Client%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-159">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-161">Número de bytes de datos recibidos de la red y disponibles para su lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-161">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-162"><xref:System.Net.Sockets.TcpClient.Available%2A> es una manera de determinar si se pone en cola datos para su lectura.</span><span class="sxs-lookup"><span data-stu-id="31d02-162"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="31d02-163">Si hay datos disponibles, llame a <xref:System.Net.Sockets.NetworkStream.Read%2A> para obtener los datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-163">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="31d02-164">Los datos disponibles están que la cantidad total de datos en cola en el búfer de red para su lectura.</span><span class="sxs-lookup"><span data-stu-id="31d02-164">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="31d02-165">Si no hay datos se pone en cola en el búfer de red, <xref:System.Net.Sockets.TcpClient.Available%2A> devuelve 0.</span><span class="sxs-lookup"><span data-stu-id="31d02-165">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="31d02-166">Si el host remoto se apaga o cierra la conexión, <xref:System.Net.Sockets.TcpClient.Available%2A> puede producir un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="31d02-166">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="31d02-167">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-167">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-168">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-168">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-169">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.Sockets.TcpClient.Available%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="31d02-169">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-170">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-170">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-172">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-172">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="31d02-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-174">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-174">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="31d02-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="31d02-176">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-176">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="31d02-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-178">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-178">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="31d02-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d02-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-181">Asincrónico <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-181">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="31d02-182">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="31d02-182">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="31d02-183">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="31d02-183">This method does not block until the operation completes.</span></span> <span data-ttu-id="31d02-184">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="31d02-184">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="31d02-185">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-185">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-186">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y se conecta a un host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-186">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-188">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-188">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="31d02-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-191">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-191">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="31d02-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-193">The port number of the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-193">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="31d02-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="31d02-195">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-195">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="31d02-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-197">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-197">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="31d02-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d02-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-200">Asincrónico <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-200">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="31d02-201">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="31d02-201">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="31d02-202">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="31d02-202">This method does not block until the operation completes.</span></span> <span data-ttu-id="31d02-203">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="31d02-203">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="31d02-204">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-204">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="31d02-205">Este método se utiliza normalmente inmediatamente después de llamar a la <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que puede devolver varias direcciones IP para un solo host.</span><span class="sxs-lookup"><span data-stu-id="31d02-205">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-206">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y se conecta a un host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-206">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-208">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-208">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="31d02-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-211">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-211">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="31d02-212">The name of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-212">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-213">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-213">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="31d02-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="31d02-215">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-215">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="31d02-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-217">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-217">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="31d02-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d02-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-220">Asincrónico <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> debe completarse la operación mediante una llamada a la <xref:System.Net.Sockets.TcpClient.EndConnect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-220">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="31d02-221">Normalmente, se invoca el método por el `asyncCallback` delegar.</span><span class="sxs-lookup"><span data-stu-id="31d02-221">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="31d02-222">Este método no se bloquea hasta que se complete la operación.</span><span class="sxs-lookup"><span data-stu-id="31d02-222">This method does not block until the operation completes.</span></span> <span data-ttu-id="31d02-223">Para bloquear hasta que se complete la operación, use uno de los <xref:System.Net.Sockets.TcpClient.Connect%2A> sobrecargas del método.</span><span class="sxs-lookup"><span data-stu-id="31d02-223">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="31d02-224">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-224">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-225">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y se conecta a un host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-225">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-227">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-227">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="31d02-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-230">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-230">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-232">
            <see cref="T:System.Net.Sockets.Socket" /> de red subyacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-232">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-233"><xref:System.Net.Sockets.TcpClient> crea un <xref:System.Net.Sockets.Socket> para enviar y recibir datos a través de una red.</span><span class="sxs-lookup"><span data-stu-id="31d02-233"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="31d02-234">Las clases derivadas de <xref:System.Net.Sockets.TcpClient> puede utilizar esta propiedad para obtener o establecer esto <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="31d02-234">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="31d02-235">Usar subyacente <xref:System.Net.Sockets.Socket> devuelto desde <xref:System.Net.Sockets.TcpClient.Client%2A> si necesita tener acceso a más allá de eso que <xref:System.Net.Sockets.TcpClient> proporciona.</span><span class="sxs-lookup"><span data-stu-id="31d02-235">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="31d02-236">También puede usar <xref:System.Net.Sockets.TcpClient.Client%2A> establecer subyacente <xref:System.Net.Sockets.Socket> a un <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="31d02-236">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="31d02-237">Esto puede resultar útil si desea aprovechar la simplicidad de <xref:System.Net.Sockets.TcpClient> mediante preexistente <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="31d02-237">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-238">En el ejemplo de código siguiente se muestra el uso de la <xref:System.Net.Sockets.TcpClient.Client%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="31d02-238">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="31d02-239">En este ejemplo, el tamaño del búfer de recepción de subyacente <xref:System.Net.Sockets.Socket> se cambia.</span><span class="sxs-lookup"><span data-stu-id="31d02-239">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31d02-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-241">El <xref:System.Net.Sockets.TcpClient.Close%2A> método marca la instancia como eliminada y solicita que el asociado <xref:System.Net.Sockets.Socket> cerrar la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="31d02-241">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="31d02-242">Según el <xref:System.Net.Sockets.TcpClient.LingerState%2A> propiedad, la conexión TCP puede permanecer abierta durante algún tiempo después de la <xref:System.Net.Sockets.TcpClient.Close%2A> método se llama cuando se envíen los datos permanecen.</span><span class="sxs-lookup"><span data-stu-id="31d02-242">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="31d02-243">No hay ninguna notificación proporcionada cuando se haya completado cierre la conexión subyacente.</span><span class="sxs-lookup"><span data-stu-id="31d02-243">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="31d02-244">Llamar a este método producirá finalmente el cierre del asociado <xref:System.Net.Sockets.Socket> y también se cerrará asociado <xref:System.Net.Sockets.NetworkStream> que se utiliza para enviar y recibir datos si se ha creado uno.</span><span class="sxs-lookup"><span data-stu-id="31d02-244">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-245">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-245">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-246">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-246">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-247">En el ejemplo de código siguiente se muestra cómo cerrar una <xref:System.Net.Sockets.TcpClient> mediante una llamada a la <xref:System.Net.Sockets.TcpClient.Close%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-247">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="31d02-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-251">Llame a este método para establecer una conexión sincrónica de host remoto especificado <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="31d02-251">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="31d02-252">Antes de llamar a <xref:System.Net.Sockets.TcpClient.Connect%2A> debe crear una instancia de la <xref:System.Net.IPEndPoint> clase mediante una dirección IP y un número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-252">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="31d02-253">Use esta <xref:System.Net.IPEndPoint> como el `remoteEP` parámetro.</span><span class="sxs-lookup"><span data-stu-id="31d02-253">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="31d02-254">El <xref:System.Net.Sockets.TcpClient.Connect%2A> método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="31d02-254">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="31d02-255">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-255">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-256">Use esta <xref:System.Net.Sockets.NetworkStream> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-256">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-257">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-257">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-258">Después de haber obtenido este código, puede consultar en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-258">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-259">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-259">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-260">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="31d02-260">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-261">El siguiente ejemplo de código utiliza un <xref:System.Net.IPEndPoint> para conectar con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-261">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-263">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-263">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="31d02-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-266">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-266">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-268">Llame a este método para establecer una conexión sincrónica de host remoto especificado <xref:System.Net.IPAddress> y número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-268">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="31d02-269">El <xref:System.Net.Sockets.TcpClient.Connect%2A> método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="31d02-269">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="31d02-270">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-270">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-271">Use esta <xref:System.Net.Sockets.NetworkStream> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-271">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-272">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-272">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-273">Después de haber obtenido este código, puede consultar en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-273">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-274">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-274">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-275">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-275">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-276">En el ejemplo de código siguiente se usa una dirección IP y el número de puerto para conectarse con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-276">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-279">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-279">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-280">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-280">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="31d02-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-282">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-282">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-284">Este método se utiliza normalmente inmediatamente después de llamar a la <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que puede devolver varias direcciones IP para un solo host.</span><span class="sxs-lookup"><span data-stu-id="31d02-284">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="31d02-285">Llame a la <xref:System.Net.Sockets.TcpClient.Connect%2A> método para establecer una conexión sincrónica de host remoto al host especificado por la matriz de <xref:System.Net.IPAddress> elementos y el número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-285">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="31d02-286">El <xref:System.Net.Sockets.TcpClient.Connect%2A> método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="31d02-286">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="31d02-287">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-287">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-288">Use esta <xref:System.Net.Sockets.NetworkStream> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-288">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-289">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-290">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-290">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-291">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-291">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-292">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-293">En el ejemplo de código siguiente se usa una dirección IP y el número de puerto para conectarse con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-293">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-295">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-295">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-296">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-296">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="31d02-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="31d02-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="31d02-300">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-300">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-301">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-301">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-302">Connects the client to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-302">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-303">Llame a este método para establecer una conexión sincrónica de host remoto con el nombre de host especificado y el número de puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-303">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="31d02-304">El <xref:System.Net.Sockets.TcpClient.Connect%2A> método se bloqueará hasta que se conecta o se produce un error.</span><span class="sxs-lookup"><span data-stu-id="31d02-304">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="31d02-305">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-305">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-306">Use esta <xref:System.Net.Sockets.NetworkStream> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-306">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="31d02-307">Si IPv6 está habilitado y el <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, la conexión a la dirección será de IPv6 intenta primero antes de la dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="31d02-307">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="31d02-308">Esto puede tener el efecto de retrasar el tiempo para establecer la conexión si el host no está escuchando en la dirección IPv6.</span><span class="sxs-lookup"><span data-stu-id="31d02-308">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-309">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-309">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-310">Después de haber obtenido este código, puede consultar en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-310">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-311">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-311">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-312">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-312">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-313">El ejemplo de código siguiente utiliza el nombre de host y el puerto número para establecer conexión con un host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-313">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-316">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-316">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-317">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-317">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="31d02-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-320">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-320">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d02-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-323">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="31d02-323">This operation will not block.</span></span> <span data-ttu-id="31d02-324">La expresión devuelta devuelve <xref:System.Threading.Tasks.Task> objeto se completará una vez establecida la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="31d02-324">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="31d02-325">Este método no bloquea el subproceso de llamada mientras la solicitud de conexión está en curso.</span><span class="sxs-lookup"><span data-stu-id="31d02-325">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="31d02-326">Llame a este método para establecer una conexión sincrónica de host remoto especificado <xref:System.Net.IPAddress> y número de puerto como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="31d02-326">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="31d02-327">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-327">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-328">Use esta <xref:System.Net.Sockets.NetworkStream> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-328">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-329">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-329">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-330">Después de haber obtenido este código, puede consultar en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-330">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-331">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-331">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-332">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-332">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-335">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-336">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-336">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="31d02-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-338">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-338">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d02-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-341">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="31d02-341">This operation will not block.</span></span> <span data-ttu-id="31d02-342">La expresión devuelta devuelve <xref:System.Threading.Tasks.Task> objeto se completará una vez establecida la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="31d02-342">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="31d02-343">Este método no bloquea el subproceso de llamada mientras la solicitud de conexión está en curso.</span><span class="sxs-lookup"><span data-stu-id="31d02-343">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="31d02-344">Este método se utiliza normalmente inmediatamente después de llamar a la <xref:System.Net.Dns.BeginGetHostAddresses%2A> método, que puede devolver varias direcciones IP para un solo host.</span><span class="sxs-lookup"><span data-stu-id="31d02-344">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="31d02-345">Llame a este método para establecer una conexión sincrónica de host remoto al host especificado por la matriz de <xref:System.Net.IPAddress> elementos y el número de puerto como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="31d02-345">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="31d02-346">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-346">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-347">Use esta <xref:System.Net.Sockets.NetworkStream> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-347">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-348">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-348">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-349">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-349">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-350">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-350">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-351">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-353">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-353">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-354">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-354">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="31d02-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="31d02-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="31d02-358">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-358">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="31d02-359">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-359">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d02-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-362">Esta operación no se bloqueará.</span><span class="sxs-lookup"><span data-stu-id="31d02-362">This operation will not block.</span></span> <span data-ttu-id="31d02-363">La expresión devuelta devuelve <xref:System.Threading.Tasks.Task> objeto se completará una vez establecida la conexión TCP.</span><span class="sxs-lookup"><span data-stu-id="31d02-363">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="31d02-364">Este método no bloquea el subproceso de llamada mientras la solicitud de conexión está en curso.</span><span class="sxs-lookup"><span data-stu-id="31d02-364">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="31d02-365">Llame a este método para establecer una conexión sincrónica de host remoto con el nombre de host especificado y el puerto número como una operación asincrónica.</span><span class="sxs-lookup"><span data-stu-id="31d02-365">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="31d02-366">Después de conectarse con el host remoto, use el <xref:System.Net.Sockets.TcpClient.GetStream%2A> método obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-366">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-367">Use esta <xref:System.Net.Sockets.NetworkStream> para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-367">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="31d02-368">Si IPv6 está habilitado y el <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, la conexión a la dirección será de IPv6 intenta primero antes de la dirección IPv4.</span><span class="sxs-lookup"><span data-stu-id="31d02-368">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="31d02-369">Esto puede tener el efecto de retrasar el tiempo para establecer la conexión si el host no está escuchando en la dirección IPv6.</span><span class="sxs-lookup"><span data-stu-id="31d02-369">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-370">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-370">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-371">Después de haber obtenido este código, puede consultar en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-371">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-372">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-372">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-373">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-373">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="31d02-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-376">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-376">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-377">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-377">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-379">
            <see langword="true" /> si el socket de <see cref="P:System.Net.Sockets.TcpClient.Client" /> estaba conectado a un recurso remoto desde la operación más reciente; de lo contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-379">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-380">El <xref:System.Net.Sockets.TcpClient.Connected%2A> propiedad obtiene el estado de conexión de la <xref:System.Net.Sockets.TcpClient.Client%2A> socket a partir de la última operación de E/S.</span><span class="sxs-lookup"><span data-stu-id="31d02-380">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="31d02-381">Cuando devuelve `false`, el <xref:System.Net.Sockets.TcpClient.Client%2A> socket nunca se conectó o ya no está conectado.</span><span class="sxs-lookup"><span data-stu-id="31d02-381">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="31d02-382">Dado que el <xref:System.Net.Sockets.TcpClient.Connected%2A> propiedad sólo refleja el estado de la conexión a partir de la operación más reciente, debe intentar enviar o recibir un mensaje para determinar el estado actual.</span><span class="sxs-lookup"><span data-stu-id="31d02-382">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="31d02-383">Una vez que se produce un error de envío de mensaje, esta propiedad ya no devuelve `true`.</span><span class="sxs-lookup"><span data-stu-id="31d02-383">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="31d02-384">Tenga en cuenta que este comportamiento es así por diseño.</span><span class="sxs-lookup"><span data-stu-id="31d02-384">Note that this behavior is by design.</span></span> <span data-ttu-id="31d02-385">Confiable no puede comprobar el estado de la conexión porque, en el tiempo entre la prueba y el envío y recepción, la conexión podría haberse perdida.</span><span class="sxs-lookup"><span data-stu-id="31d02-385">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="31d02-386">El código debe suponer el socket está conectado y correctamente las transmisiones de error de identificador.</span><span class="sxs-lookup"><span data-stu-id="31d02-386">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-387">El siguiente ejemplo de código se conecta a un punto de conexión remota y, a continuación, comprueba la conexión.</span><span class="sxs-lookup"><span data-stu-id="31d02-387">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31d02-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="31d02-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-391">Este método se llama por el público `Dispose()` método y el <xref:System.Object.Finalize%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-391">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="31d02-392">`Dispose()` invoca este método con el `disposing` parámetro establecido en `true`.</span><span class="sxs-lookup"><span data-stu-id="31d02-392">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="31d02-393"><xref:System.Object.Finalize%2A> invoca este método con `disposing` establecido en `false`.</span><span class="sxs-lookup"><span data-stu-id="31d02-393"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="31d02-394">Cuando el parámetro `disposing` es `true`, este método libera todos los recursos retenidos por los objetos administrados a los que el control <xref:System.Net.Sockets.TcpClient> hace referencia.</span><span class="sxs-lookup"><span data-stu-id="31d02-394">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="31d02-395">Para ello, invocando el `Dispose()` método de cada objeto que se hace referencia.</span><span class="sxs-lookup"><span data-stu-id="31d02-395">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-396">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-396">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-397">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-397">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="31d02-398">
            <para>
              <see langword="Dispose" /> puede llamarse varias veces por otros objetos. Al invalidar <see langword="Dispose(Boolean)" />, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <see langword="Dispose" />. Para obtener más información sobre cómo implementar <see langword="Dispose(Boolean)" />, vea [implementar un Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Para obtener más información acerca de <see langword="Dispose" /> y <see cref="M:System.Object.Finalize" />, consulte [limpieza de Resources](~/docs/standard/garbage-collection/unmanaged.md) no administrado y [reemplazando el método Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-398">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="31d02-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31d02-400">Ends a pending asynchronous connection attempt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-400">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-401">Este método se bloquea hasta que la operación se complete.</span><span class="sxs-lookup"><span data-stu-id="31d02-401">This method blocks until the operation is complete.</span></span> <span data-ttu-id="31d02-402">Para realizar esta operación sincrónicamente, utilice un <xref:System.Net.Sockets.TcpClient.Connect%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-402">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-403">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-403">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-404">Después de haber obtenido este código, puede consultar la documentación de códigos de error de Windows Sockets versión 2 API en MSDN library en [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-404">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-405">El siguiente ejemplo de código finaliza el intento de conexión asincrónica.</span><span class="sxs-lookup"><span data-stu-id="31d02-405">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31d02-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31d02-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="31d02-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-412">
            <see langword="true" /> si el objeto <see cref="T:System.Net.Sockets.TcpClient" /> permite a un único cliente usar un puerto específico; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-412">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="31d02-413">El valor predeterminado es <see langword="true" /> para Windows Server 2003 y Windows XP Service Pack 2 y versiones posteriores, y <see langword="false" /> para el resto de versiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-413">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-414">De forma predeterminada, varios clientes pueden utilizar un puerto concreto; Sin embargo, solo uno de los clientes puede realizar operaciones en el tráfico de red enviado al puerto.</span><span class="sxs-lookup"><span data-stu-id="31d02-414">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="31d02-415">Puede usar el <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propiedad para evitar que varios clientes usen un puerto específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-415">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="31d02-416">Esta propiedad debe establecerse antes de que el socket subyacente está enlazado a un puerto de cliente.</span><span class="sxs-lookup"><span data-stu-id="31d02-416">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="31d02-417">Si se llama a <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, o <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, se enlaza el puerto de cliente como un efecto secundario del método y no puede establecer posteriormente las <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propiedad</span><span class="sxs-lookup"><span data-stu-id="31d02-417">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-418">En el ejemplo de código siguiente se crea un <xref:System.Net.Sockets.TcpClient> y obtiene y establece el valor de la <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="31d02-418">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-419">An error occurred when attempting to access the underlying socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-419">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31d02-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-422">Este método invalida <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="31d02-422">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="31d02-423">Código de la aplicación no debe llamar a este método; un objeto <xref:System.Object.Finalize%2A> método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-423">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="31d02-424">El <xref:System.Net.Sockets.TcpClient> finalizador de la clase cierra la conexión TCP y libera todos los recursos administrados asociados con la <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="31d02-424">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="31d02-425">Estos recursos incluyen subyacente <xref:System.Net.Sockets.Socket> usado para conectar con el host remoto y el <xref:System.Net.Sockets.NetworkStream> utilizado para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-425">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="31d02-426">El finalizador no libera los recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="31d02-426">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="31d02-427">Para obtener más información, consulte [métodos de finalización y destructores](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [limpiar recursos no administrados](~/docs/standard/garbage-collection/unmanaged.md), y [reemplazar el método Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="31d02-427">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31d02-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31d02-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> Devuelve un <xref:System.Net.Sockets.NetworkStream> que puede usar para enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="31d02-431">El <xref:System.Net.Sockets.NetworkStream> clase hereda de la <xref:System.IO.Stream> (clase), que proporciona una amplia colección de métodos y propiedades utilizados para facilitar las comunicaciones de red.</span><span class="sxs-lookup"><span data-stu-id="31d02-431">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="31d02-432">Debe llamar a la <xref:System.Net.Sockets.TcpClient.Connect%2A> método primero, o la <xref:System.Net.Sockets.TcpClient.GetStream%2A> método producirá una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="31d02-432">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="31d02-433">Después de haber obtenido el <xref:System.Net.Sockets.NetworkStream>, llame a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método envíe datos al host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-433">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="31d02-434">Llame a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método para recibir los datos que llegan desde el host remoto.</span><span class="sxs-lookup"><span data-stu-id="31d02-434">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="31d02-435">Ambos métodos se bloquean hasta que se realiza la operación especificada.</span><span class="sxs-lookup"><span data-stu-id="31d02-435">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="31d02-436">Se puede evitar el bloqueo en una operación de lectura comprobando el <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="31d02-436">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="31d02-437">Un `true` valor significa que los datos ha llegado desde el host remoto y está disponibles para su lectura.</span><span class="sxs-lookup"><span data-stu-id="31d02-437">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="31d02-438">En este caso, <xref:System.Net.Sockets.NetworkStream.Read%2A> garantiza que finalizará inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="31d02-438">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="31d02-439">Si el host remoto ha cerrado la conexión, <xref:System.Net.Sockets.NetworkStream.Read%2A> devolverá inmediatamente con cero bytes.</span><span class="sxs-lookup"><span data-stu-id="31d02-439">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-440">Debe cerrar la <xref:System.Net.Sockets.NetworkStream> cuando esté a través de enviar y recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-440">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="31d02-441">Cerrar <xref:System.Net.Sockets.TcpClient> no libera la <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-441">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-442">Si recibe un <xref:System.Net.Sockets.SocketException>, utilice <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> para obtener el código de error específico.</span><span class="sxs-lookup"><span data-stu-id="31d02-442">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="31d02-443">Después de haber obtenido este código, puede consultar en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</span><span class="sxs-lookup"><span data-stu-id="31d02-443">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="31d02-444">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-444">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="31d02-445">Para obtener más información, consulte [seguimiento de red en .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="31d02-445">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-446">El siguiente ejemplo de código usa <xref:System.Net.Sockets.TcpClient.GetStream%2A> obtener subyacente <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="31d02-446">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="31d02-447">Después de obtener el <xref:System.Net.Sockets.NetworkStream>, envía y recibe mediante su <xref:System.Net.Sockets.NetworkStream.Write%2A> y <xref:System.Net.Sockets.NetworkStream.Read%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="31d02-447">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="31d02-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="31d02-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-450">Gets or sets information about the linger state of the associated socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-450">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-451">Objeto <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-451">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="31d02-452">La permanencia está deshabilitada de manera predeterminada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-452">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-453">El <xref:System.Net.Sockets.TcpClient.LingerState%2A> propiedad cambia la manera <xref:System.Net.Sockets.Socket.Close%2A> método se comporta.</span><span class="sxs-lookup"><span data-stu-id="31d02-453">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="31d02-454">Esta propiedad cuando set modifica las condiciones en las que se puede restablecer la conexión mediante Winsock.</span><span class="sxs-lookup"><span data-stu-id="31d02-454">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="31d02-455">Restablecimientos de conexión pueden seguir apareciendo según el comportamiento del protocolo IP.</span><span class="sxs-lookup"><span data-stu-id="31d02-455">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="31d02-456">Esta propiedad controla el período de tiempo que la conexión TCP permanecerá abierta después de llamar a <xref:System.Net.Sockets.TcpClient.Close%2A> cuando quedan enviarán datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-456">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="31d02-457">Cuando se llama a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método, los datos se coloca en el búfer de red saliente.</span><span class="sxs-lookup"><span data-stu-id="31d02-457">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="31d02-458">Esta propiedad se puede utilizar para asegurarse de que estos datos se envían al host remoto antes de la <xref:System.Net.Sockets.TcpClient.Close%2A> método interrumpe la conexión.</span><span class="sxs-lookup"><span data-stu-id="31d02-458">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="31d02-459">Para habilitar la permanencia de la conexión, cree un <xref:System.Net.Sockets.LingerOption> de instancia que contiene los valores deseados y establezca el <xref:System.Net.Sockets.TcpClient.LingerState%2A> propiedad a esta instancia.</span><span class="sxs-lookup"><span data-stu-id="31d02-459">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="31d02-460">En la tabla siguiente se describe el comportamiento de la <xref:System.Net.Sockets.TcpClient.Close%2A> método para los valores posibles de la <xref:System.Net.Sockets.LingerOption.Enabled%2A> propiedad y el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el <xref:System.Net.Sockets.TcpClient.LingerState%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="31d02-460">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="31d02-461">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="31d02-461">LingerState.Enabled</span></span>|<span data-ttu-id="31d02-462">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="31d02-462">LingerState.LingerTime</span></span>|<span data-ttu-id="31d02-463">Comportamiento</span><span class="sxs-lookup"><span data-stu-id="31d02-463">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="31d02-464">`false` (deshabilitado), el valor predeterminado</span><span class="sxs-lookup"><span data-stu-id="31d02-464">`false` (disabled), the default value</span></span>|<span data-ttu-id="31d02-465">No es aplicable, el tiempo de espera (valor predeterminado).</span><span class="sxs-lookup"><span data-stu-id="31d02-465">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="31d02-466">Intenta enviar los datos pendientes hasta que expire el tiempo de espera de protocolo IP de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="31d02-466">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="31d02-467">`true` (habilitado)</span><span class="sxs-lookup"><span data-stu-id="31d02-467">`true` (enabled)</span></span>|<span data-ttu-id="31d02-468">Un tiempo de espera distinto de cero</span><span class="sxs-lookup"><span data-stu-id="31d02-468">A nonzero time-out</span></span>|<span data-ttu-id="31d02-469">Intenta enviar los datos pendientes hasta que expira el tiempo de espera especificado y, si se produce un error en el intento, Winsock restablece la conexión.</span><span class="sxs-lookup"><span data-stu-id="31d02-469">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="31d02-470">`true` (habilitado)</span><span class="sxs-lookup"><span data-stu-id="31d02-470">`true` (enabled)</span></span>|<span data-ttu-id="31d02-471">Un cero tiempo de espera.</span><span class="sxs-lookup"><span data-stu-id="31d02-471">A zero timeout.</span></span>|<span data-ttu-id="31d02-472">Descarta cualquier dato pendiente y Winsock restablece la conexión.</span><span class="sxs-lookup"><span data-stu-id="31d02-472">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="31d02-473">La pila IP calcula el tiempo de espera de protocolo IP predeterminado a utilizar basándose en el tiempo de ida y vuelta de la conexión.</span><span class="sxs-lookup"><span data-stu-id="31d02-473">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="31d02-474">En la mayoría de los casos, el tiempo de espera calculado por la pila es más relevante que definidos por una aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-474">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="31d02-475">Este es el comportamiento predeterminado para un socket cuando la <xref:System.Net.Sockets.TcpClient.LingerState%2A> no se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="31d02-475">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="31d02-476">Cuando el <xref:System.Net.Sockets.LingerOption.LingerTime%2A> propiedad almacenados en el <xref:System.Net.Sockets.TcpClient.LingerState%2A> propiedad está establecida en mayor que el tiempo de espera de protocolo IP de forma predeterminada, el tiempo de espera de protocolo IP de forma predeterminada se todavía se aplican y reemplazan.</span><span class="sxs-lookup"><span data-stu-id="31d02-476">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-477">El siguiente código de ejemplo se establece y obtiene la permanencia de los sockets de tiempo.</span><span class="sxs-lookup"><span data-stu-id="31d02-477">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-479">Es <see langword="true" /> si está deshabilitado el retraso; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-479">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="31d02-480">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-480">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-481">Cuando <xref:System.Net.Sockets.TcpClient.NoDelay%2A> es `false`, un <xref:System.Net.Sockets.TcpClient> no envía un paquete a través de la red hasta que haya obtenido una cantidad significativa de datos salientes.</span><span class="sxs-lookup"><span data-stu-id="31d02-481">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="31d02-482">Debido a la cantidad de sobrecarga en un segmento TCP, el envío de pequeñas cantidades de datos es ineficaz.</span><span class="sxs-lookup"><span data-stu-id="31d02-482">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="31d02-483">Sin embargo, existen situaciones donde deba enviar muy pequeñas cantidades de datos o esperar respuestas inmediatas de cada paquete que se envíe.</span><span class="sxs-lookup"><span data-stu-id="31d02-483">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="31d02-484">Su decisión debería sopesar la importancia relativa de la eficacia de la red frente a los requisitos de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-484">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-485">En el ejemplo de código siguiente se deshabilita el retraso.</span><span class="sxs-lookup"><span data-stu-id="31d02-485">The following code example disables the delay.</span></span> <span data-ttu-id="31d02-486">A continuación, comprueba el valor de <xref:System.Net.Sockets.TcpClient.NoDelay%2A> para comprobar que la propiedad se estableció correctamente.</span><span class="sxs-lookup"><span data-stu-id="31d02-486">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-487">Gets or sets the size of the receive buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-487">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-488">Tamaño del búfer de recepción, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-488">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="31d02-489">El valor predeterminado es 8192 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-489">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-490">El <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propiedad obtiene o establece el número de bytes que se espera almacenar en el búfer de recepción para cada operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="31d02-490">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="31d02-491">Esta propiedad manipula realmente el espacio de búfer de red asignado para recibir los datos entrantes.</span><span class="sxs-lookup"><span data-stu-id="31d02-491">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="31d02-492">El búfer de red debe ser al menos tan grande como el búfer de aplicación para asegurarse de que los datos deseados estará disponibles cuando se llama a la <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-492">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="31d02-493">Use el <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> propiedad para establecer este tamaño.</span><span class="sxs-lookup"><span data-stu-id="31d02-493">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="31d02-494">Si la aplicación va a recibir datos de forma masiva, se debe pasar el <xref:System.Net.Sockets.NetworkStream.Read%2A> método un búfer de aplicación muy grande.</span><span class="sxs-lookup"><span data-stu-id="31d02-494">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="31d02-495">Si el búfer de red es menor que la cantidad de datos solicitada en el <xref:System.Net.Sockets.NetworkStream.Read%2A> método, no podrá recuperar la cantidad deseada de datos en una sola operación de lectura.</span><span class="sxs-lookup"><span data-stu-id="31d02-495">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="31d02-496">Esto conlleva la sobrecarga de llamadas adicionales a la <xref:System.Net.Sockets.NetworkStream.Read%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-496">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-497">En el ejemplo de código siguiente se establece y obtiene el tamaño del búfer de recepción.</span><span class="sxs-lookup"><span data-stu-id="31d02-497">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="31d02-498">An error occurred when setting the buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-498">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="31d02-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="31d02-500">For a workaround, see the Platform Note in Remarks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-500">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-502">Valor de tiempo de espera de la conexión, en milisegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-502">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="31d02-503">El valor predeterminado es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-503">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-504">El <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> propiedad determina la cantidad de tiempo que el <xref:System.Net.Sockets.NetworkStream.Read%2A> método se bloqueará hasta que se puede recibir datos.</span><span class="sxs-lookup"><span data-stu-id="31d02-504">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="31d02-505">Este tiempo se mide en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="31d02-505">This time is measured in milliseconds.</span></span> <span data-ttu-id="31d02-506">Si el tiempo de espera expira antes de <xref:System.Net.Sockets.NetworkStream.Read%2A> se complete correctamente, <xref:System.Net.Sockets.TcpClient> produce una <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="31d02-506">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="31d02-507">No hay ningún tiempo de espera de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="31d02-507">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-508">En el ejemplo de código siguiente se establece y obtiene el tiempo de espera de recepción.</span><span class="sxs-lookup"><span data-stu-id="31d02-508">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-509">Gets or sets the size of the send buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-509">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-510">Tamaño del búfer de envío, en bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-510">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="31d02-511">El valor predeterminado es 8192 bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-511">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-512">El <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propiedad obtiene o establece el número de bytes que se espera para enviar en cada llamada a la <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-512">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="31d02-513">Esta propiedad manipula realmente el espacio de búfer de red asignado para la operación de envío.</span><span class="sxs-lookup"><span data-stu-id="31d02-513">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="31d02-514">El búfer de red debe ser al menos tan grande como el búfer de aplicación para asegurarse de que los datos deseados se almacenan y se enviarán en una sola operación.</span><span class="sxs-lookup"><span data-stu-id="31d02-514">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="31d02-515">Use el <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> propiedad para establecer este tamaño.</span><span class="sxs-lookup"><span data-stu-id="31d02-515">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="31d02-516">Si la aplicación va a enviar datos de forma masiva, se debe pasar el <xref:System.Net.Sockets.NetworkStream.Write%2A> método un búfer de aplicación muy grande.</span><span class="sxs-lookup"><span data-stu-id="31d02-516">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="31d02-517">Si el búfer de red es menor que la cantidad de datos proporciona la <xref:System.Net.Sockets.NetworkStream.Write%2A> método, varias operaciones se realizarán para todas las llamadas que realice en el envío de red la <xref:System.Net.Sockets.NetworkStream.Write%2A> método.</span><span class="sxs-lookup"><span data-stu-id="31d02-517">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="31d02-518">Puede lograr mayor rendimiento al garantizar que el búfer de red es al menos tan grande como el búfer de aplicación.</span><span class="sxs-lookup"><span data-stu-id="31d02-518">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-519">En el ejemplo de código siguiente se establece y obtiene el tamaño del búfer de envío.</span><span class="sxs-lookup"><span data-stu-id="31d02-519">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31d02-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31d02-521">Valor de tiempo de espera de envío, en milisegundos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-521">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="31d02-522">El valor predeterminado es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="31d02-522">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d02-523">El <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> propiedad determina la cantidad de tiempo que el <xref:System.Net.Sockets.Socket.Send%2A> método se bloqueará hasta que pueda devolver correctamente.</span><span class="sxs-lookup"><span data-stu-id="31d02-523">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="31d02-524">Este tiempo se mide en milisegundos.</span><span class="sxs-lookup"><span data-stu-id="31d02-524">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="31d02-525">Después de llamar a la <xref:System.Net.Sockets.NetworkStream.Write%2A> método subyacente <xref:System.Net.Sockets.Socket> devuelve el número real de bytes enviados al host.</span><span class="sxs-lookup"><span data-stu-id="31d02-525">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="31d02-526">El <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> propiedad determina la cantidad de tiempo un <xref:System.Net.Sockets.TcpClient> esperará antes de recibir el número de bytes devueltos.</span><span class="sxs-lookup"><span data-stu-id="31d02-526">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="31d02-527">Si el tiempo de espera expira antes de la <xref:System.Net.Sockets.Socket.Send%2A> método finaliza correctamente, <xref:System.Net.Sockets.TcpClient> producirá un <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="31d02-527">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="31d02-528">No hay ningún tiempo de espera de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="31d02-528">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="31d02-529">En el ejemplo de código siguiente se establece y obtiene la <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="31d02-529">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>