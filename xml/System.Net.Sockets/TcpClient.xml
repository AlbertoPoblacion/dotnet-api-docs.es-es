<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TcpClient.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f0b32dcca3fd97eae4e5ede9f35c940ea0ad6c30</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Provides client connections for TCP network services.</source>
          <target state="translated">Proporciona conexiones cliente para servicios de red TCP.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> clase proporciona métodos sencillos para conectarse, enviar, recibir y transmitir por datos a través de una red en modo de bloqueo sincrónico.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>In order for <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> to connect and exchange data, a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> or <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> created with the TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> must be listening for incoming connection requests.</source>
          <target state="translated">En orden para <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> conectarse e intercambiar datos, un <ph id="ph2">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> o <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> creado con el TCP <ph id="ph4">&lt;xref:System.Net.Sockets.ProtocolType&gt;</ph> debe escuchar las solicitudes de conexión entrantes.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>You can connect to this listener in one of the following two ways:</source>
          <target state="translated">Puede conectarse a este agente de escucha en una de las dos maneras siguientes:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and call one of the three available <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> methods.</source>
          <target state="translated">Crear un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y llame a uno de los tres disponibles <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using the host name and port number of the remote host.</source>
          <target state="translated">Crear un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> con el nombre de host y número de puerto del host remoto.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>This constructor will automatically attempt a connection.</source>
          <target state="translated">Este constructor intentará automáticamente una conexión.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>If you want to send connectionless datagrams in synchronous blocking mode, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">Si desea enviar datagramas sin conexión en modo de bloqueo sincrónico, utilice la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>The following code example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> connection.</source>
          <target state="translated">El ejemplo de código siguiente se establece un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> conexión.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Permission to establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">Permiso para establecer una conexión saliente o Aceptar una solicitud entrante.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>To send and receive data, use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> method to obtain a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">Para enviar y recibir datos, use la <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.GetStream" /&gt;</ph> método para obtener un <ph id="ph2">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Call the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> methods of the <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> to send and receive data with the remote host.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /&gt;</ph> métodos de la <ph id="ph3">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> para enviar y recibir datos con el host remoto.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.TcpClient">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> method to release all resources associated with the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">Use la <ph id="ph1">&lt;see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /&gt;</ph> método para liberar todos los recursos asociados con la <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IP address and port number.</source>
          <target state="translated">Este constructor crea un nuevo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y permite que el proveedor de servicio subyacente asignar el más apropiado local dirección IP y puerto número.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">Primero debe llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método antes de enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">Este constructor sólo funciona con tipos de dirección IPv4.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor">
          <source>The following code example demonstrates how to use the default constructor to create a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo utilizar el constructor predeterminado para crear un nuevo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you bind the TCP <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> a la que asociará la clase <ph id="ph2">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> TCP.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> y la enlaza con el extremo local especificado.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">Este constructor crea un nuevo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y lo asocia a la <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> especificado por el <ph id="ph3">`localEP`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">Antes de llamar a este constructor, debe crear un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> con el número de puerto y la dirección IP desde la que se va a enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number before connecting and communicating.</source>
          <target state="translated">No es necesario especificar un número de puerto y la dirección IP local antes de conectarse y comunicarse.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you create a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">Si crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> utilizando cualquier otro constructor, el proveedor de servicios subyacente asignará la más adecuada local dirección IP y puerto número.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method before sending and receiving data.</source>
          <target state="translated">Debe llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método antes de enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> clase con un extremo local.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)">
          <source>The  <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> of the IP protocol.</source>
          <target state="translated">Propiedad <ph id="ph1">&lt;see cref="P:System.Net.IPAddress.AddressFamily" /&gt;</ph> del protocolo IP.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class with the specified family.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> con la familia especificada.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetwork</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="family" /&gt;</ph> no es igual a AddressFamily.InterNetwork.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;paramref name="family" /&gt;</ph> parameter is not equal to AddressFamily.InterNetworkV6</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="family" /&gt;</ph> no es igual a AddressFamily.InterNetworkV6.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nombre DNS del host remoto con el que se desea establecer conexión.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Número de puerto del host remoto con el que se desea establecer conexión.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class and connects to the specified port on the specified host.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> y se conecta a al puerto especificado, en el host especificado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and makes a synchronous connection attempt to the provided host name and port number.</source>
          <target state="translated">Este constructor crea un nuevo <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y se convierte en una conexión sincrónica intenta el nombre de host proporcionado y el número de puerto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">El proveedor de servicios subyacente asignará a la más adecuada local dirección IP y puerto número.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will block until it either connects or fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> se bloqueará hasta que se conecta o se produce un error.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</source>
          <target state="translated">Este constructor permite inicializar, resolver el nombre de host DNS y conectarse en un solo paso.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Si IPv6 está habilitado y el <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, IPv6 dirección será la conexión intentará establecer primero antes de la dirección IPv4.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Esto puede tener el efecto de retraso en el para establecer la conexión si el host no está escuchando en la dirección IPv6.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The following code example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo crear una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> clase usando un nombre de host y número de puerto.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> no está entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Gets or set a value that indicates whether a connection has been made.</source>
          <target state="translated">Obtiene o establece un valor que indica si se ha realizado una conexión.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the connection has been made; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si se realizó la conexión; en caso contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to determine if a connection attempt has succeeded.</source>
          <target state="translated">Clases derivadas de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> puede utilizar esta propiedad para determinar si un intento de conexión se ha realizado correctamente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>It does not monitor the ongoing connection state of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">No supervisa el estado de conexión continuadas de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If the remote host closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> will not be updated.</source>
          <target state="translated">Si el host remoto cierra la conexión, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Active%2A&gt;</ph> no se actualizará.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Active">
          <source>If you are deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and require closer attention to the connection state, use the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned by the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> method.</source>
          <target state="translated">Si va a derivar de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y requieren más atención en el estado de conexión, use la <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Connected%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph> devuelto por la <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>Gets the amount of data that has been received from the network and is available to be read.</source>
          <target state="translated">Obtiene la cantidad de datos que se han recibido de la red y están disponibles para leer.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The number of bytes of data received from the network and available to be read.</source>
          <target state="translated">Número de bytes de datos recibidos de la red y disponibles para su lectura.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> is a way to determine whether data is queued for reading.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> es una manera de determinar si datos se ponen en cola para su lectura.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">Si hay datos disponibles, llame a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> para obtener los datos.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The available data is the total amount of data queued in the network buffer for reading.</source>
          <target state="translated">Los datos disponibles están que la cantidad total de datos en la cola en el búfer de red para su lectura.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If no data is queued in the network buffer, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> returns 0.</source>
          <target state="translated">Si no hay datos en la cola en el búfer de red, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> devuelve 0.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If the remote host shuts down or closes the connection, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> may throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si el host remoto se apaga o cierra la conexión, <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> puede producir un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia a la documentación de código de error de la API de Windows Sockets, versión 2, en la biblioteca MSDN en <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Available%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Comienza una solicitud asincrónica para una conexión a host remoto.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del host remoto.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">Número de puerto del host remoto.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que hace referencia al método que se invocará cuando la operación se complete.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Objeto definido por el usuario que contiene información sobre la operación de conexión.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Este objeto se pasa al delegado <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Comienza una solicitud asincrónica para una conexión a host remoto.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">El host remoto se especifica mediante un objeto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> y un número de puerto (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a la conexión asincrónica.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asincrónico <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operación debe realizarse mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">Normalmente, se invoca el método por el <ph id="ph1">`asyncCallback`</ph> delegar.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Este método no se bloquea hasta que se complete la operación.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Para bloquear hasta que se complete la operación, use uno de los <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y se conecta a un host remoto.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="address" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">El número de puerto no es válido.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>At least one <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> that designates the remote hosts.</source>
          <target state="translated">Un objeto <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>, como mínimo, que designa los host remotos.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote hosts.</source>
          <target state="translated">Número de puerto de los host remotos.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que hace referencia al método que se invocará cuando la operación se complete.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Objeto definido por el usuario que contiene información sobre la operación de conexión.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Este objeto se pasa al delegado <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Comienza una solicitud asincrónica para una conexión a host remoto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by an <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">El host remoto se especifica mediante una matriz <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> y un número de puerto (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a la conexión asincrónica.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asincrónico <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operación debe realizarse mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">Normalmente, se invoca el método por el <ph id="ph1">`asyncCallback`</ph> delegar.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Este método no se bloquea hasta que se complete la operación.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Para bloquear hasta que se complete la operación, use uno de los <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Este método se utiliza normalmente inmediatamente después de llamar a la <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> método, que puede devolver varias direcciones IP para un host específico.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y se conecta a un host remoto.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="addresses" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">El número de puerto no es válido.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The name of the remote host.</source>
          <target state="translated">Nombre del host remoto.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number of the remote host.</source>
          <target state="translated">Número de puerto del host remoto.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que hace referencia al método que se invocará cuando la operación se complete.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the connect operation.</source>
          <target state="translated">Objeto definido por el usuario que contiene información sobre la operación de conexión.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Este objeto se pasa al delegado <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous request for a remote host connection.</source>
          <target state="translated">Comienza una solicitud asincrónica para una conexión a host remoto.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The remote host is specified by a host name (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) and a port number (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</source>
          <target state="translated">El host remoto se especifica mediante un nombre de host (<ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>) y un número de puerto (<ph id="ph2">&lt;see cref="T:System.Int32" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous connection.</source>
          <target state="translated">Interfaz <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a la conexión asincrónica.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> method.</source>
          <target state="translated">Asincrónico <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph> operación debe realizarse mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.EndConnect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`asyncCallback`</ph> delegate.</source>
          <target state="translated">Normalmente, se invoca el método por el <ph id="ph1">`asyncCallback`</ph> delegar.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Este método no se bloquea hasta que se complete la operación.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation completes, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method overloads.</source>
          <target state="translated">Para bloquear hasta que se complete la operación, use uno de los <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and connects to a remote host.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> y se conecta a un host remoto.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;paramref name="host" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="host" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Un llamador de la pila de llamadas no tiene permiso para la operación solicitada.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The port number is not valid.</source>
          <target state="translated">El número de puerto no es válido.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Gets or sets the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> de red subyacente.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> crea un <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> para enviar y recibir datos a través de una red.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Clases derivadas de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> puede utilizar esta propiedad para obtener o establecer esto <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> provides.</source>
          <target state="translated">Usar subyacente <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> devuelto desde <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> si necesita tener acceso a más allá de lo que <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> proporciona.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> establecer subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> a un archivo <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>This might be useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Esto puede resultar útil si desea aprovechar la simplicidad de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> mediante preexistente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Client">
          <source>In this example, the receive buffer size of the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> is changed.</source>
          <target state="translated">En este ejemplo, el tamaño de búfer de recepción de subyacente <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> se cambia.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Disposes this <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> instance and requests that the underlying TCP connection be closed.</source>
          <target state="translated">Elimina esta instancia <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> y solicita que se cierre la conexión TCP subyacente.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method marks the instance as disposed and requests that the associated <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> close the TCP connection.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> método marca la instancia como eliminada y solicita que el asociado <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> cerrar la conexión TCP.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Based on the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property, the TCP connection may stay open for some time after the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method is called when data remains to be sent.</source>
          <target state="translated">En función de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propiedad, la conexión TCP puede quedarse abierta durante algún tiempo después de la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> se invoca cuando los datos permanecen para ser enviados.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>There is no notification provided when the underlying connection has completed closing.</source>
          <target state="translated">No hay ninguna notificación proporcionada cuando la conexión subyacente se ha cerrado completamente.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>Calling this method will eventually result in the close of the associated <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and will also close the associated <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that is used to send and receive data if one was created.</source>
          <target state="translated">Llamar a este método producirá finalmente el cierre del asociado <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> y también se cerrará asociado <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> que se usa para enviar y recibir datos, si se ha creado uno.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Close">
          <source>The following code example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo cerrar una <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number.</source>
          <target state="translated">Conecta el cliente a un host TCP remoto con el nombre de host y el número de puerto especificados.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> to which you intend to connect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> con el que desea conectar.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Connects the client to a remote TCP host using the specified remote network endpoint.</source>
          <target state="translated">Conecta el cliente a un host TCP remoto con el extremo de red remoto especificado.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Llamar a este método para establecer una conexión sincrónica de host remoto con especificado <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Before you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> you must create an instance of the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> class using an IP address and a port number.</source>
          <target state="translated">Antes de llamar a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> debe crear una instancia de la <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> clase usando una dirección IP y un número de puerto.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> as the <ph id="ph2">`remoteEP`</ph> parameter.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> como el <ph id="ph2">`remoteEP`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método se bloqueará hasta que se conecta o se produce un error.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Después de conectarse con el host remoto, use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></source>
          <target state="translated">Para obtener más información, vea <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept></target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The following code example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to connect with a remote host.</source>
          <target state="translated">El siguiente ejemplo de código utiliza un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> para conectar con un host remoto.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="remoteEp" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del host con el que desea conectar.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Número de puerto al que se desea conectar.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number.</source>
          <target state="translated">Conecta el cliente a un host TCP remoto con la dirección IP y el número de puerto especificados.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number.</source>
          <target state="translated">Llamar a este método para establecer una conexión sincrónica de host remoto con especificado <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> y número de puerto.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método se bloqueará hasta que se conecta o se produce un error.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Después de conectarse con el host remoto, use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">En el ejemplo de código siguiente se usa una dirección IP y número de puerto para conectar con un host remoto.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="address" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> no se encuentra en el intervalo definido por <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Se cierra <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del host con el que desea conectar.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Número de puerto al que se desea conectar.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number.</source>
          <target state="translated">Conecta el cliente a un host TCP remoto con las direcciones IP y el número de puerto que se hayan especificado.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Este método se utiliza normalmente inmediatamente después de llamar a la <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> método, que puede devolver varias direcciones IP para un host específico.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método para establecer una conexión sincrónica de host remoto con el host especificado por la matriz de <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> elementos y el número de puerto.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método se bloqueará hasta que se conecta o se produce un error.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Después de conectarse con el host remoto, use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia a la documentación de código de error de la API de Windows Sockets, versión 2, en la biblioteca MSDN en <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The following code example uses an IP Address and port number to connect with a remote host.</source>
          <target state="translated">En el ejemplo de código siguiente se usa una dirección IP y número de puerto para conectar con un host remoto.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">El número de puerto no es válido.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Una llamada situada más arriba en la pila de llamadas no dispone de permiso para la operación solicitada.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Este método es válido para sockets que utilizan el marcador <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o el marcador <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nombre DNS del host remoto con el que se desea establecer conexión.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Número de puerto del host remoto con el que se desea establecer conexión.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Connects the client to the specified port on the specified host.</source>
          <target state="translated">Conecta el cliente al puerto especificado, en el host especificado.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number.</source>
          <target state="translated">Llame a este método para establecer una conexión sincrónica de host remoto con el nombre de host especificado y el número de puerto.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method will block until it either connects or fails.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método se bloqueará hasta que se conecta o se produce un error.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Después de conectarse con el host remoto, use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Si IPv6 está habilitado y el <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29&gt;</ph> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, IPv6 dirección será la conexión intentará establecer primero antes de la dirección IPv4.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Esto puede tener el efecto de retraso en el para establecer la conexión si el host no está escuchando en la dirección IPv6.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The following code example uses the host name and port number to connect with a remote host.</source>
          <target state="translated">El siguiente ejemplo de código se utiliza el nombre de host y número de puerto para conectar con un host remoto.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> no está entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Se cierra <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.TcpClient">
          <source>Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">Conecta el cliente a un host TCP remoto con el nombre de host y el número de puerto especificados como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the host to which you intend to connect.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del host con el que desea conectar.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Número de puerto al que se desea conectar.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</source>
          <target state="translated">Conecta el cliente a un host TCP remoto con la dirección IP y el número de puerto especificados como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objeto de tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Esta operación no se bloqueará.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Devuelve la devuelta <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objeto se completará una vez establecida la conexión TCP.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Este método no bloquea el subproceso que realiza la llamada mientras la solicitud de conexión está en curso.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> and port number as an asynchronous operation.</source>
          <target state="translated">Llamar a este método para establecer una conexión sincrónica de host remoto con especificado <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> y número de puerto como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Después de conectarse con el host remoto, use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="address" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="address" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> no se encuentra en el intervalo definido por <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Se cierra <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> array of the host to which you intend to connect.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del host con el que desea conectar.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number to which you intend to connect.</source>
          <target state="translated">Número de puerto al que se desea conectar.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</source>
          <target state="translated">Conecta el cliente a un host TCP remoto con las direcciones IP y el número de puerto especificados como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objeto de tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Esta operación no se bloqueará.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Devuelve la devuelta <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objeto se completará una vez establecida la conexión TCP.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Este método no bloquea el subproceso que realiza la llamada mientras la solicitud de conexión está en curso.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is typically used immediately after a call to the <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> method, which can return multiple IP addresses for a single host.</source>
          <target state="translated">Este método se utiliza normalmente inmediatamente después de llamar a la <ph id="ph1">&lt;xref:System.Net.Dns.BeginGetHostAddresses%2A&gt;</ph> método, que puede devolver varias direcciones IP para un host específico.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the host specified by the array of <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> elements and the port number as an asynchronous operation.</source>
          <target state="translated">Llamar a este método para establecer una conexión sincrónica de host remoto con el host especificado por la matriz de <ph id="ph1">&lt;xref:System.Net.IPAddress&gt;</ph> elementos y el número de puerto como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Después de conectarse con el host remoto, use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia a la documentación de código de error de la API de Windows Sockets, versión 2, en la biblioteca MSDN en <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="ipAddresses" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The port number is not valid.</source>
          <target state="translated">El número de puerto no es válido.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>An error occurred when attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>A caller higher in the call stack does not have permission for the requested operation.</source>
          <target state="translated">Una llamada situada más arriba en la pila de llamadas no dispone de permiso para la operación solicitada.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)">
          <source>This method is valid for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Este método es válido para sockets que utilizan el marcador <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o el marcador <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend to connect.</source>
          <target state="translated">Nombre DNS del host remoto con el que se desea establecer conexión.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The port number of the remote host to which you intend to connect.</source>
          <target state="translated">Número de puerto del host remoto con el que se desea establecer conexión.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Connects the client to the specified TCP port on the specified host as an asynchronous operation.</source>
          <target state="translated">Conecta al cliente con el puerto TCP especificado en el host especificado como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></source>
          <target state="translated">Devuelve <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objeto de tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This operation will not block.</source>
          <target state="translated">Esta operación no se bloqueará.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The returned Returns <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> object will complete after the TCP connection has been established.</source>
          <target state="translated">Devuelve la devuelta <ph id="ph1">&lt;xref:System.Threading.Tasks.Task&gt;</ph> objeto se completará una vez establecida la conexión TCP.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This method does not block the calling thread while the connection request is underway.</source>
          <target state="translated">Este método no bloquea el subproceso que realiza la llamada mientras la solicitud de conexión está en curso.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</source>
          <target state="translated">Llame a este método para establecer una conexión sincrónica de host remoto con el nombre de host especificado y el puerto número como una operación asincrónica.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After connecting with the remote host, use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Después de conectarse con el host remoto, use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>Use this <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> to send and receive data.</source>
          <target state="translated">Utilícelo <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If IPv6 is enabled and the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</source>
          <target state="translated">Si IPv6 está habilitado y el <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29&gt;</ph> método se llama para conectarse a un host que se resuelve en ambos IPv6 y direcciones IPv4, IPv6 dirección será la conexión intentará establecer primero antes de la dirección IPv4.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</source>
          <target state="translated">Esto puede tener el efecto de retraso en el para establecer la conexión si el host no está escuchando en la dirección IPv6.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> no está entre <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Se cierra <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Gets a value indicating whether the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> for a <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is connected to a remote host.</source>
          <target state="translated">Obtiene un valor que indica si el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente de un objeto <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> está conectado a un host remoto.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> socket was connected to a remote resource as of the most recent operation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el socket de <ph id="ph2">&lt;see cref="P:System.Net.Sockets.TcpClient.Client" /&gt;</ph> estaba conectado a un recurso remoto desde la operación más reciente; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property gets the connection state of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket as of the last I/O operation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> propiedad obtiene el estado de conexión de la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket a partir de la última operación de E/S.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>When it returns <ph id="ph1">`false`</ph>, the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket was either never connected, or is no longer connected.</source>
          <target state="translated">Cuando devuelve el resultado <ph id="ph1">`false`</ph>, el <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.Client%2A&gt;</ph> socket nunca se conectó o ya no está conectado.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Because the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</source>
          <target state="translated">Dado que el <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connected%2A&gt;</ph> propiedad sólo refleja el estado de la conexión a partir de la última operación, debería intentar enviar o recibir un mensaje para determinar el estado actual.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>After the message send fails, this property no longer returns <ph id="ph1">`true`</ph>.</source>
          <target state="translated">Después de que el envío del mensaje se produce un error, esta propiedad ya no devuelve <ph id="ph1">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Note that this behavior is by design.</source>
          <target state="translated">Tenga en cuenta que este comportamiento es así por diseño.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</source>
          <target state="translated">Forma confiable no puede comprobar el estado de la conexión porque, en el tiempo entre la prueba y un grupo de envío o recepción, la conexión puede haberse perdida.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>Your code should assume the socket is connected, and gracefully handle failed transmissions.</source>
          <target state="translated">El código debe asumir el socket está conectado y sin contratiempos identificador de error de las transmisiones.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.Connected">
          <source>The following code example connects to a remote endpoint and then verifies the connection.</source>
          <target state="translated">En el ejemplo de código siguiente se conecta con un extremo remoto y, a continuación, comprueba la conexión.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos administrados y no administrados que utiliza el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Set to <ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Se establece en <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto los recursos administrados como los no administrados; se establece en <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente los recursos no administrados.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que utiliza <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> y libera los recursos administrados de forma opcional.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">`Dispose()`</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes this method with the <ph id="ph2">`disposing`</ph> parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> se invoca este método con el <ph id="ph2">`disposing`</ph> parámetro establecido en <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes this method with <ph id="ph2">`disposing`</ph> set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> se invoca este método con <ph id="ph2">`disposing`</ph> establecido en <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is <ph id="ph2">`true`</ph>, this method releases all resources held by any managed objects that this <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> references.</source>
          <target state="translated">Cuando el parámetro <ph id="ph1">`disposing`</ph> es <ph id="ph2">`true`</ph>, este método libera todos los recursos retenidos por los objetos administrados a los que el control <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> hace referencia.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>It does this by invoking the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Para ello, al invocar el <ph id="ph1">`Dispose()`</ph> método de cada objeto que se hace referencia.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al invalidar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> devuelto por una llamada a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>Ends a pending asynchronous connection attempt.</source>
          <target state="translated">Finaliza un intento de conexión asincrónica pendiente.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Este método se bloquea hasta que la operación se complete.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>To perform this operation synchronously, use a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Para realizar esta operación sincrónicamente, utilice un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph1">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept> for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia a la documentación de código de error de la API de Windows Sockets, versión 2, en la biblioteca MSDN en <bpt id="p1">[</bpt> <ph id="ph1">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept> para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The following code example ends the asynchronous connection attempt.</source>
          <target state="translated">En el ejemplo de código siguiente se finaliza el intento de conexión asincrónica.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor del parámetro <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> parameter was not returned by a call to a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph> method.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> no se devolvió mediante una llamada a un método <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> method was previously called for the asynchronous connection.</source>
          <target state="translated">Se ha llamado previamente al método <ph id="ph1">&lt;see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /&gt;</ph> para la conexión asincrónica.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>An error occurred when attempting to access the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Error al intentar obtener acceso a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">Obtiene o establece un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que especifica si el objeto <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> permite a un único cliente utilizar un puerto.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> permite a un único cliente usar un puerto específico; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para Windows Server 2003 y el Service Pack 2 y posteriores de Windows XP, y <ph id="ph2">&lt;see langword="false" /&gt;</ph> para el resto de versiones.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">De forma predeterminada, varios clientes pueden utilizar un puerto específico; Sin embargo, solo uno de los clientes puede realizar operaciones en el tráfico de red enviado al puerto.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> propiedad para impedir que varios clientes utilicen un puerto específico.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">Esta propiedad debe establecerse antes de que el socket subyacente se enlaza a un puerto de cliente.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, the client port is bound as a side effect of the method, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.BeginConnect%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29&gt;</ph>, o <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29&gt;</ph>, el puerto de cliente se enlaza como un efecto secundario del método y posteriormente no se puede establecer el <ph id="ph5">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> propiedad</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and gets and sets the value of the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> obtiene y establece el valor de la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket subyacente.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Frees resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> class.</source>
          <target state="translated">Libera los recursos utilizados por la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Este método invalida <ph id="ph1">&lt;xref:System.Object.Finalize%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>Application code should not call this method; an object's <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Código de la aplicación no debe llamar a este método; un objeto <ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> método se invoca automáticamente durante la recolección de elementos no utilizados, a menos que se ha deshabilitado la finalización por el recolector de elementos no utilizados mediante una llamada a la <ph id="ph2">&lt;xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> class finalizer closes the TCP connection and releases all managed resources associated with the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> finalizador de la clase cierra la conexión TCP y libera todos los recursos administrados asociados con la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>These resources include the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for connecting with the remote host, and the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> used to send and receive data.</source>
          <target state="translated">Estos recursos incluyen subyacente <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> usado para conectar con el host remoto y el <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> utiliza para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>The finalizer does not release any unmanaged resources.</source>
          <target state="translated">El finalizador no libera los recursos no administrados.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.Finalize">
          <source>For more information, see <bpt id="p1">[</bpt>Finalize Methods and Destructors<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>Cleaning Up Unmanaged Resources<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, and <bpt id="p3">[</bpt>Overriding the Finalize Method<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>métodos de finalización y destructores<ept id="p1">](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70)</ept>, <bpt id="p2">[</bpt>limpiar recursos no administrados<ept id="p2">](~/docs/standard/garbage-collection/unmanaged.md)</ept>, y <bpt id="p3">[</bpt>reemplazar el método Finalize<ept id="p3">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> used to send and receive data.</source>
          <target state="translated">Devuelve la <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> usada para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.NetworkStream" /&gt;</ph> subyacente.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> that you can use to send and receive data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> Devuelve un <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> que puede usar para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> class, which provides a rich collection of methods and properties used to facilitate network communications.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> clase hereda de la <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> (clase), que proporciona una amplia colección de métodos y propiedades que se usan para facilitar las comunicaciones de red.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must call the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> method first, or the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method will throw an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Debe llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Connect%2A&gt;</ph> método primero, o la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> método producirá una <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, call the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method to send data to the remote host.</source>
          <target state="translated">Después de haber obtenido el <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, llame a la <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> método para enviar datos al host remoto.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method to receive data arriving from the remote host.</source>
          <target state="translated">Llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> método para recibir los datos que llegan desde el host remoto.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Both of these methods block until the specified operation is performed.</source>
          <target state="translated">Ambos métodos bloquearán hasta que se realiza la operación especificada.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You can avoid blocking on a read operation by checking the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> property.</source>
          <target state="translated">Puede evitar el bloqueo en una operación de lectura comprobando el <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.DataAvailable%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>A <ph id="ph1">`true`</ph> value means that data has arrived from the remote host and is available for reading.</source>
          <target state="translated">Un <ph id="ph1">`true`</ph> valor significa que los datos procedentes del host remoto y está disponibles para su lectura.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>In this case, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> is guaranteed to complete immediately.</source>
          <target state="translated">En este caso, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> se garantiza que finalizará inmediatamente.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If the remote host has shutdown its connection, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> will immediately return with zero bytes.</source>
          <target state="translated">Si el host remoto ha cerrado la conexión, <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> devolverá inmediatamente con cero bytes.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>You must close the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> when you are through sending and receiving data.</source>
          <target state="translated">Debe cerrar la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> cuando esté a través de enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>Closing <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not release the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">Cerrar <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> no libera el <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>This member outputs trace information when you enable network tracing in your application.</source>
          <target state="translated">Este miembro genera información de seguimiento cuando se habilita el seguimiento de red en la aplicación.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>For more information, see <bpt id="p1">[</bpt>Network Tracing in the .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>seguimiento de red en .NET Framework<ept id="p1">](~/docs/framework/network-programming/network-tracing.md)</ept>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</source>
          <target state="translated">El siguiente ejemplo de código usa <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>After obtaining the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, it sends and receives using its <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> methods.</source>
          <target state="translated">Después de obtener la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, envía y recibe mediante su <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> y <ph id="ph3">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> métodos.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> is not connected to a remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> no está conectada a un host remoto.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.TcpClient.GetStream">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Gets or sets information about the linger state of the associated socket.</source>
          <target state="translated">Obtiene o establece información sobre el estado de permanencia del socket asociado.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.LingerOption" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>By default, lingering is disabled.</source>
          <target state="translated">La permanencia está deshabilitada de manera predeterminada.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property changes the way <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> method behaves.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propiedad cambia la manera <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Close%2A&gt;</ph> método se comporta.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property when set modifies the conditions under which the connection can be reset by Winsock.</source>
          <target state="translated">Esta propiedad al conjunto modifica las condiciones bajo las que Winsock puede restablecer la conexión.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Connection resets can still occur based on the IP protocol behavior.</source>
          <target state="translated">Restablecimientos de conexión se pueden producir igualmente según el comportamiento del protocolo IP.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property controls the length of time that the TCP connection will remain open after a call to <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> when data remains to be sent.</source>
          <target state="translated">Esta propiedad controla el período de tiempo que la conexión TCP permanecerá abierta después de llamar a <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> cuando datos permanecen para ser enviados.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, data is placed in the outgoing network buffer.</source>
          <target state="translated">Cuando se llama a la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> método, los datos se coloca en el búfer de red saliente.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This property can be used to ensure that this data is sent to the remote host before the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method drops the connection.</source>
          <target state="translated">Esta propiedad puede utilizarse para asegurarse de que estos datos se envían al host remoto antes de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> método corta la conexión.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>To enable lingering, create a <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> instance containing the desired values, and set the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property to this instance.</source>
          <target state="translated">Para habilitar la permanencia de la conexión, cree un <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption&gt;</ph> una instancia que contiene los valores deseados y establezca el <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propiedad a esta instancia.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following table describes the behavior of the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> method for the possible values of the <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property.</source>
          <target state="translated">En la tabla siguiente describe el comportamiento de la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.Close%2A&gt;</ph> método para los valores posibles de la <ph id="ph2">&lt;xref:System.Net.Sockets.LingerOption.Enabled%2A&gt;</ph> propiedad y el <ph id="ph3">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> propiedad se almacena en la <ph id="ph4">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.Enabled</source>
          <target state="translated">LingerState.Enabled</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>LingerState.LingerTime</source>
          <target state="translated">LingerState.LingerTime</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Behavior</source>
          <target state="translated">Comportamiento</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`false`</ph> (disabled), the default value</source>
          <target state="translated"><ph id="ph1">`false`</ph> (deshabilitado), el valor predeterminado</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The time-out is not applicable, (default).</source>
          <target state="translated">No es aplicable, el tiempo de espera (valor predeterminado).</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the default IP protocol time-out expires.</source>
          <target state="translated">Intenta enviar los datos pendientes hasta que expire el tiempo de espera del protocolo IP de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (habilitada)</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A nonzero time-out</source>
          <target state="translated">Un tiempo de espera es distinto de cero</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</source>
          <target state="translated">Intenta enviar los datos pendientes hasta que expire el tiempo de espera especificado y, si se produce un error en el intento, Winsock restablece la conexión.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source><ph id="ph1">`true`</ph> (enabled)</source>
          <target state="translated"><ph id="ph1">`true`</ph> (habilitada)</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>A zero timeout.</source>
          <target state="translated">Un tiempo de espera cero.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>Discards any pending data and Winsock resets the connection.</source>
          <target state="translated">Descarta cualquier dato pendiente y Winsock restablece la conexión.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</source>
          <target state="translated">La pila IP calcula el tiempo de espera de protocolo IP predeterminado a utilizar basándose en la hora de ida y vuelta de la conexión.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>In most cases, the time-out computed by the stack is more relevant than one defined by an application.</source>
          <target state="translated">En la mayoría de los casos, el tiempo de espera calculado por la pila es más importantes que uno definido por una aplicación.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>This is the default behavior for a socket when the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is not set.</source>
          <target state="translated">Éste es el comportamiento predeterminado para un socket de cuando el <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> no se establece la propiedad.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>When the <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> property stored in the <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</source>
          <target state="translated">Cuando el <ph id="ph1">&lt;xref:System.Net.Sockets.LingerOption.LingerTime%2A&gt;</ph> propiedad se almacena en la <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient.LingerState%2A&gt;</ph> propiedad se establece mayor que el tiempo de espera del protocolo IP de forma predeterminada, el tiempo de espera de protocolo IP predeterminado todavía se aplican y reemplazan.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.LingerState">
          <source>The following code example sets and gets the sockets linger time.</source>
          <target state="translated">El siguiente código de ejemplo se establece y se obtiene la permanencia de los sockets de tiempo.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Gets or sets a value that disables a delay when send or receive buffers are not full.</source>
          <target state="translated">Obtiene o establece un valor que deshabilita cualquier retraso cuando los búferes de envío o recepción no están llenos.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the delay is disabled, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si está deshabilitado el retraso; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>When <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> is <ph id="ph2">`false`</ph>, a <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> does not send a packet over the network until it has collected a significant amount of outgoing data.</source>
          <target state="translated">Cuando <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> es <ph id="ph2">`false`</ph>, un <ph id="ph3">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> no envía un paquete a través de la red hasta que haya obtenido una cantidad significativa de datos salientes.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</source>
          <target state="translated">Debido a la cantidad de sobrecarga en un segmento TCP, el envío de pequeñas cantidades de datos es ineficaz.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</source>
          <target state="translated">Sin embargo, existen situaciones donde tiene que enviar cantidades muy pequeñas de datos o esperar respuestas inmediatas de cada paquete que se envíe.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>Your decision should weigh the relative importance of network efficiency versus application requirements.</source>
          <target state="translated">La decisión deberá sopesar la importancia relativa de la eficacia de la red frente a los requisitos de la aplicación.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>The following code example disables the delay.</source>
          <target state="translated">En el ejemplo de código siguiente se deshabilita el retraso.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.NoDelay">
          <source>It then checks the value of <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> to verify that the property was successfully set.</source>
          <target state="translated">A continuación, comprueba el valor de <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.NoDelay%2A&gt;</ph> para comprobar que la propiedad se estableció correctamente.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Gets or sets the size of the receive buffer.</source>
          <target state="translated">Obtiene o establece el tamaño del búfer de recepción.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The size of the receive buffer, in bytes.</source>
          <target state="translated">Tamaño del búfer de recepción, en bytes.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">El valor predeterminado es 8192 bytes.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> propiedad obtiene o establece el número de bytes que se espera almacenar en el búfer de recepción para cada operación de lectura.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This property actually manipulates the network buffer space allocated for receiving incoming data.</source>
          <target state="translated">Esta propiedad manipula realmente el espacio de búfer de red asignado para recibir los datos entrantes.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">El búfer de red debe ser al menos tan grande como el búfer de aplicación para asegurarse de que los datos deseados estará disponibles cuando se llama a la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A&gt;</ph> propiedad para establecer este tamaño.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If your application will be receiving bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">Si la aplicación va a recibir datos de forma masiva, debe pasar el <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> método un búfer de aplicación muy grande.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>If the network buffer is smaller than the amount of data you request in the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method, you will not be able to retrieve the desired amount of data in one read operation.</source>
          <target state="translated">Si el búfer de red es menor que la cantidad de datos solicitada en el <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> método, no podrá recuperar la cantidad deseada de los datos en una sola operación de lectura.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>This incurs the overhead of additional calls to the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method.</source>
          <target state="translated">Esto supone la sobrecarga de llamadas adicionales a la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>The following code example sets and gets the receive buffer size.</source>
          <target state="translated">En el ejemplo de código siguiente se establece y se obtiene el tamaño de búfer de recepción.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>An error occurred when setting the buffer size.</source>
          <target state="translated">Se ha producido un error al establecer el tamaño del búfer.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>In .NET Compact Framework applications, you cannot set this property.</source>
          <target state="translated">En las aplicaciones .NET Compact Framework, no se puede establecer esta propiedad.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveBufferSize">
          <source>For a workaround, see the Platform Note in Remarks.</source>
          <target state="translated">Para obtener una solución alternativa, vea la Nota de la plataforma que se describe en Comentarios.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait to receive data once a read operation is initiated.</source>
          <target state="translated">Obtiene o establece el período de tiempo durante el cual un <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> esperará para recibir datos tras iniciarse una operación de lectura.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The time-out value of the connection in milliseconds.</source>
          <target state="translated">Valor de tiempo de espera de la conexión, en milisegundos.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The default value is 0.</source>
          <target state="translated">El valor predeterminado es 0.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> method will block until it is able to receive data.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A&gt;</ph> propiedad determina la cantidad de tiempo que el <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> método se bloqueará hasta que se puede recibir datos.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">Este tiempo se mide en milisegundos.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>If the time-out expires before <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> throws a <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</source>
          <target state="translated">Si el tiempo de espera expira antes de <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> se complete correctamente, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> produce una <ph id="ph3">&lt;xref:System.IO.IOException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">No hay ningún tiempo de espera de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.ReceiveTimeout">
          <source>The following code example sets and gets the receive time out.</source>
          <target state="translated">En el ejemplo de código siguiente se establece y se obtiene el tiempo de espera de recepción.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Gets or sets the size of the send buffer.</source>
          <target state="translated">Obtiene o establece el tamaño del búfer de envío.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The size of the send buffer, in bytes.</source>
          <target state="translated">Tamaño del búfer de envío, en bytes.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The default value is 8192 bytes.</source>
          <target state="translated">El valor predeterminado es 8192 bytes.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property gets or sets the number of bytes that you are expecting to send in each call to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> propiedad obtiene o establece el número de bytes que esperan a enviar en cada llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>This property actually manipulates the network buffer space allocated for send operation.</source>
          <target state="translated">Esta propiedad manipula realmente el espacio de búfer de red asignado para la operación de envío.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</source>
          <target state="translated">El búfer de red debe ser al menos tan grande como el búfer de aplicación para asegurarse de que los datos deseados se almacenan y se enviarán en una sola operación.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> property to set this size.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendBufferSize%2A&gt;</ph> propiedad para establecer este tamaño.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If your application will be sending bulk data, you should pass the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method a very large application buffer.</source>
          <target state="translated">Si la aplicación va a enviar datos de forma masiva, debe pasar el <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> método un búfer de aplicación muy grande.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>If the network buffer is smaller than the amount of data you provide the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, several network send operations will be performed for every call you make to the <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method.</source>
          <target state="translated">Si el búfer de red es menor que la cantidad de datos debe proporcionar el <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> método, varios red envío se realizarán operaciones para cada llamada que se realiza en el <ph id="ph2">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</source>
          <target state="translated">Puede lograr mayor rendimiento de datos asegurándose de que el búfer de red es al menos tan grande como el búfer de aplicación.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendBufferSize">
          <source>The following code example sets and gets the send buffer size.</source>
          <target state="translated">En el ejemplo de código siguiente se establece y se obtiene el tamaño de búfer de envío.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>Gets or sets the amount of time a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> will wait for a send operation to complete successfully.</source>
          <target state="translated">Obtiene o establece el período de tiempo durante el cual un <ph id="ph1">&lt;see cref="T:System.Net.Sockets.TcpClient" /&gt;</ph> esperará para que finalice correctamente una operación de envío.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The send time-out value, in milliseconds.</source>
          <target state="translated">Valor de tiempo de espera de envío, en milisegundos.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The default is 0.</source>
          <target state="translated">El valor predeterminado es 0.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time that the <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method will block until it is able to return successfully.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> propiedad determina la cantidad de tiempo que el <ph id="ph2">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> método se bloqueará hasta que se pueda volver correctamente.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>This time is measured in milliseconds.</source>
          <target state="translated">Este tiempo se mide en milisegundos.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>After you call the <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returns the number of bytes actually sent to the host.</source>
          <target state="translated">Después de llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Write%2A&gt;</ph> método, subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> devuelve el número real de bytes enviados al host.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> property determines the amount of time a <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will wait before receiving the number of bytes returned.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> propiedad determina la cantidad de tiempo una <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> esperará antes de recibir el número de bytes devueltos.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>If the time-out expires before the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> method successfully completes, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si el tiempo de espera expira antes de la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Send%2A&gt;</ph> método se completa correctamente, <ph id="ph2">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> producirá un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>There is no time-out by default.</source>
          <target state="translated">No hay ningún tiempo de espera de forma predeterminada.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.TcpClient.SendTimeout">
          <source>The following code example sets and gets the <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> value.</source>
          <target state="translated">En el ejemplo de código siguiente se establece y se obtiene la <ph id="ph1">&lt;xref:System.Net.Sockets.TcpClient.SendTimeout%2A&gt;</ph> valor.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>