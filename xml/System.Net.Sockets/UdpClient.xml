<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpClient.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56637514a0d67fe6299f5e3d0a20f346399311c43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6637514a0d67fe6299f5e3d0a20f346399311c43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Provides User Datagram Protocol (UDP) network services.</source>
          <target state="translated">Proporciona servicios de red de Protocolo de datagramas de usuarios (UDP).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase proporciona métodos sencillos para enviar y recibir datagramas UDP sin conexión en modo de bloqueo sincrónico.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</source>
          <target state="translated">Dado que UDP es un protocolo de transporte sin conexión, no es necesario establecer una conexión a host remoto antes de enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You do, however, have the option of establishing a default remote host in one of the following two ways:</source>
          <target state="translated">Sin embargo, tiene la opción de establecer un host remoto predeterminado en una de las dos maneras siguientes:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using the remote host name and port number as parameters.</source>
          <target state="translated">Cree una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase utilizando el nombre de host remoto y el número de puerto como parámetros.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class and then call the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Cree una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase y, a continuación, llame a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You can use any of the send methods provided in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to send data to a remote device.</source>
          <target state="translated">Puede usar cualquiera de los métodos de envío proporcionados en el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> para enviar datos a un dispositivo remoto.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method to receive data from remote hosts.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método para recibir datos de los hosts remotos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> using a host name or <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> if you have already specified a default remote host.</source>
          <target state="translated">No llame a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> con un nombre de host o <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> si ya ha especificado un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>If you do, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw an exception.</source>
          <target state="translated">Si lo hace, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> se iniciará una excepción.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> methods also allow you to send and receive multicast datagrams.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> métodos también permiten enviar y recibir datagramas de multidifusión.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method to subscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método suscribirse un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method to unsubscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from a multicast group.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> método cancelar la suscripción a un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> de un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The following example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> connection using the host name www.contoso.com on port 11000.</source>
          <target state="translated">El ejemplo siguiente se establece un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> conexión mediante el nombre de host www.contoso.com en el puerto 11000.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>A small string message is sent to two separate remote host machines.</source>
          <target state="translated">Se envía un mensaje de cadena pequeño a dos equipos host remoto independiente.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until a message is received.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método bloquea la ejecución hasta que se recibe un mensaje.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">Mediante el <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> pasado a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, se revela la identidad del host responde.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>To establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">Para establecer una conexión saliente o Aceptar una solicitud entrante.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</source>
          <target state="translated">Este constructor crea un nuevo <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> y permite que el proveedor de servicio subyacente asignar el más apropiado local IPv4 dirección y número de puerto.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">Si se utiliza este constructor, la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instancia se establece con una familia de direcciones de IPv4 que no se cambiaron o se sobrescriben con una llamada de método de conectar con un destino de IPv6.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated">Este constructor no es apropiado para unirse a un grupo de multidifusión porque no se realiza el enlace de socket.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Also, it works only with IPv4 address types.</source>
          <target state="translated">Además, funciona únicamente con tipos de dirección IPv4.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>The following example demonstrates how to use the default constructor to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el constructor predeterminado para crear una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The local port number from which you intend to communicate.</source>
          <target state="translated">Número de puerto local desde el que se desea establecer comunicación.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> y la enlaza con el número de puerto local especificado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">Este constructor crea una subyacente <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> y la enlaza con el número de puerto desde el que desea comunicarse.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Use this constructor if you are only interested in setting the local port number.</source>
          <target state="translated">Utilice este constructor si solo está interesado en establecer el número de puerto local.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The underlying service provider will assign the local IP address.</source>
          <target state="translated">El proveedor de servicios subyacente asignará la dirección IP local.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you pass 0 to the constructor, the underlying service provider will assign a port number.</source>
          <target state="translated">Si se pasa 0 al constructor, el proveedor de servicios subyacente asignará a un número de puerto.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">Si se utiliza este constructor, la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instancia se establece con una familia de direcciones de IPv4 que no se cambiaron o se sobrescriben con una llamada de método de conectar con un destino de IPv6.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">Este constructor sólo funciona con tipos de dirección IPv4.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The following example demonstrates using a local port number to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar un número de puerto local para crear una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="port" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> o menor que <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that respresents the local endpoint to which you bind the UDP connection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> que representa el extremo local con el que desea enlazar la conexión UDP.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> y la enlaza con el extremo local especificado.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">Este constructor crea un nuevo <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> y lo asocia a la <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> especificado por el <ph id="ph3">`localEP`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">Antes de llamar a este constructor, debe crear un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> con el número de puerto y la dirección IP desde la que se va a enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number for sending and receiving data.</source>
          <target state="translated">No es necesario especificar un número de puerto y la dirección IP local para enviar y recibir datos.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">Si no lo hace, el proveedor de servicios subyacente asignará a la más adecuada local dirección IP y puerto número.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`localEP`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Si se utiliza este constructor, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instancia se establece con la familia de direcciones especificada por el <ph id="ph2">`localEP`</ph> parámetro que no se cambiaron o se sobrescriben con una llamada de método de conectar con una familia de direcciones diferentes.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase con un extremo local.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated">Uno de los valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> que especifica el esquema de direccionamiento del socket.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated">El <ph id="ph1">`family`</ph> parámetro determina si el agente de escucha utiliza una dirección IP versión 4 (IPv4) o una IP versión 6 (IPv6) dirección.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">Para usar una dirección IPv4, pase el <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">Para usar una dirección IPv6, pase el <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Pasar cualquier otro valor hará que el método se producirá una <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Si se utiliza este constructor, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instancia se establece con la familia de direcciones especificada por el <ph id="ph2">`family`</ph> parámetro que no se cambiaron o se sobrescriben con una llamada de método de conectar con una familia de direcciones diferentes.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> no es adecuado para unirse a un grupo de multidifusión porque no se realiza el enlace de socket.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> no es <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> ni <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The port on which to listen for incoming connection attempts.</source>
          <target state="translated">Puerto en el cual se escucharán los intentos de conexión entrantes.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated">Uno de los valores <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> que especifica el esquema de direccionamiento del socket.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> y la enlaza con el número de puerto local especificado.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">Este constructor crea una subyacente <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> y la enlaza con el número de puerto desde el que desea comunicarse.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated">El <ph id="ph1">`family`</ph> parámetro determina si el agente de escucha utiliza una dirección IP versión 4 (IPv4) o una IP versión 6 (IPv6) dirección.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">Para usar una dirección IPv4, pase el <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">Para usar una dirección IPv6, pase el <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> valor.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Pasar cualquier otro valor hará que el método se producirá una <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Si se utiliza este constructor, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instancia se establece con la familia de direcciones especificada por el <ph id="ph2">`family`</ph> parámetro que no se cambiaron o se sobrescriben con una llamada de método de conectar con una familia de direcciones diferentes.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, consulte en MSDN la documentación de códigos de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The following code example shows how to create a UDP client to use in a multicast group.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo crear un cliente UDP para utilizar en un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> no es <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> ni <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> es mayor que <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> o menor que <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The name of the remote DNS host to which you intend to connect.</source>
          <target state="translated">Nombre del host DNS (Sistema de nombres de dominio) remoto al que se desea conectar.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The remote port number to which you intend to connect.</source>
          <target state="translated">Número de puerto remoto al que se desea conectar.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and establishes a default remote host.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> y establece un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>This constructor initializes a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and establishes a remote host using the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated">Este constructor inicializa un nuevo <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> y establece un host remoto mediante el <ph id="ph2">`hostname`</ph> y <ph id="ph3">`port`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Establecer un host remoto predeterminado es opcional.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you use this constructor, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Si utiliza este constructor, no es necesario especificar un host remoto en cada llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Especificar un host remoto predeterminado, limita a solo ese host.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>You can change the default remote host at any time by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Puede cambiar el host remoto predeterminado en cualquier momento mediante una llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you want to specify a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, do not use this constructor.</source>
          <target state="translated">Si desea especificar un host remoto en la llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método, no utilice este constructor.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo crear una instancia de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> clase usando un nombre de host y número de puerto.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> no se encuentra en el intervalo definido por <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Gets or sets a value indicating whether a default remote host has been established.</source>
          <target state="translated">Obtiene o establece un valor que indica si se ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a connection is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si hay una conexión activa; en caso contrario, es <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to determine if a default remote host has been established.</source>
          <target state="translated">Clases derivadas de <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> puede utilizar esta propiedad para determinar si se ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>You can establish a default remote host by using the appropriate constructor or by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Puede establecer un host remoto predeterminado mediante el constructor correspondiente o mediante una llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>If you do establish a default remote host, you cannot specify a remote host in your call to <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>.</source>
          <target state="translated">Si establece un host remoto predeterminado, no puede especificar un host remoto en la llamada a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Boolean value that specifies whether to enable or disable NAT traversal.</source>
          <target state="translated">Valor booleano que especifica si se va a habilitar o deshabilitar NAT transversal.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Enables or disables Network Address Translation (NAT) traversal on a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> instance.</source>
          <target state="translated">Habilita o deshabilita NAT (Traducción de direcciones de red) transversal en una instancia de <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph> method is used to enable or disable NAT traversal for a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph> método se utiliza para habilitar o deshabilitar la exploración transversal de NAT para una <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</source>
          <target state="translated">Puede proporcionarse cruce seguro de NAT mediante Teredo, 6to4 o un túnel ISATAP.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is false, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</source>
          <target state="translated">Cuando el <ph id="ph1">`allowed`</ph> parámetro es false, el <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> opción en el socket asociado se establece en <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This explicitly disables NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated">Esto deshabilita explícitamente NAT transversal para una <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instancia.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is true, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</source>
          <target state="translated">Cuando el <ph id="ph1">`allowed`</ph> del parámetro es true, el <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> opción en el socket asociado se establece en <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This may allow NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> depending on firewall rules in place on the system.</source>
          <target state="translated">Esto puede permitir cruce seguro de NAT para una <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> según las reglas de firewall en su lugar en el sistema.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Teredo address is an IPv6 address with the prefix of 2001::/32.</source>
          <target state="translated">Una dirección Teredo es una dirección IPv6 con el prefijo de 2001:: / 32.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</source>
          <target state="translated">Direcciones de Teredo se devuelve a través de la resolución de nombres DNS normal o enumerar como una dirección IPv6 que se asigna a una interfaz local.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>Gets the amount of data received from the network that is available to read.</source>
          <target state="translated">Obtiene la cantidad de datos recibidos de la red que se pueden leer.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The number of bytes of data received from the network.</source>
          <target state="translated">El número de bytes de datos recibido de la red.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property is used to determine the amount of data queued in the network buffer for reading.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> propiedad se utiliza para determinar la cantidad de datos en la cola en el búfer de red para su lectura.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">Si hay datos disponibles, llame a <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> para obtener los datos.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If no data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property returns 0.</source>
          <target state="translated">Si no hay datos disponibles, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> propiedad devuelve 0.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If the remote host shuts down or closes the connection, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property throws a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si el host remoto se apaga o cierra la conexión, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> propiedad produce un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>/ for a detailed description of the error.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error concreto y consulte la documentación de código de error de la API de Windows Sockets, versión 2, en la biblioteca MSDN en <bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>/ para obtener una descripción detallada de la error.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>An error occurred while attempting to access the socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Se ha cerrado <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que hace referencia al método que se invocará cuando la operación se complete.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the receive operation.</source>
          <target state="translated">Objeto definido por el usuario que contiene información sobre la operación de recepción.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Este objeto se pasa al delegado <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Receives a datagram from a remote host asynchronously.</source>
          <target state="translated">Recibe un datagrama de un host remoto de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous receive.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia a la recepción asincrónica.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph> method.</source>
          <target state="translated">Asincrónico <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> operación debe realizarse mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">Normalmente, se invoca el método por el <ph id="ph1">`requestCallback`</ph> delegar.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Este método no se bloquea hasta que finaliza la operación.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Para bloquear hasta que la operación se complete, use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> to asynchronously receive a server response.</source>
          <target state="translated">El siguiente ejemplo de código usa <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> para recibir una respuesta del servidor de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">Envía un datagrama a un host remoto de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contiene los datos que se desea enviar.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Número de bytes que se van a enviar.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que hace referencia al método que se invocará cuando la operación se complete.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Objeto definido por el usuario que contiene información sobre la operación.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Este objeto se pasa al delegado <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">Envía un datagrama a un host remoto de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination was specified previously by a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph>.</source>
          <target state="translated">El destino se especificó anteriormente mediante una llamada a <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia al envío asincrónico.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Asincrónico <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operación debe realizarse mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">Normalmente, se invoca el método por el <ph id="ph1">`requestCallback`</ph> delegar.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Este método no se bloquea hasta que se complete la operación.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Para bloquear hasta que finaliza la operación, use uno de los <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">El siguiente ejemplo de código usa <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> para enviar de forma asincrónica una solicitud de servidor.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contiene los datos que se desea enviar.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Número de bytes que se van a enviar.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> that represents the destination for the data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> que representa el destino de los datos.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que hace referencia al método que se invocará cuando la operación se complete.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Objeto definido por el usuario que contiene información sobre la operación.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Este objeto se pasa al delegado <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">Envía un datagrama a un destino de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The destination is specified by a <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> especifica el destino.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia al envío asincrónico.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Asincrónico <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operación debe realizarse mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">Normalmente, se invoca el método por el <ph id="ph1">`requestCallback`</ph> delegar.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Este método no se bloquea hasta que finaliza la operación.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Para bloquear hasta que finaliza la operación, use uno de los <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">El siguiente ejemplo de código usa <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> para enviar de forma asincrónica una solicitud de servidor.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Matriz <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contiene los datos que se desea enviar.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Número de bytes que se van a enviar.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination host.</source>
          <target state="translated">Host de destino.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination port number.</source>
          <target state="translated">Número de puerto de destino.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Delegado de <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> que hace referencia al método que se invocará cuando la operación se complete.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Objeto definido por el usuario que contiene información sobre la operación.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Este objeto se pasa al delegado <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> cuando finaliza la operación.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">Envía un datagrama a un destino de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination is specified by the host name and port number.</source>
          <target state="translated">El nombre de host y el número de puerto especifican el destino.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> que hace referencia al envío asincrónico.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Asincrónico <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operación debe realizarse mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">Normalmente, se invoca el método por el <ph id="ph1">`requestCallback`</ph> delegar.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Este método no se bloquea hasta que finaliza la operación.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Para bloquear hasta que finaliza la operación, use uno de los <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> sobrecargas del método.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Para obtener información detallada acerca de cómo utilizar el modelo de programación asincrónico, vea <bpt id="p1">[</bpt>al llamar a métodos sincrónicos asincrónicamente<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">El siguiente ejemplo de código usa <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> para enviar de forma asincrónica una solicitud de servidor.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Gets or sets the underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> de red subyacente.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The underlying Network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> de red subyacente.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> crea un <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> utiliza para enviar y recibir datos a través de una red.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Clases derivadas de <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> puede utilizar esta propiedad para obtener o establecer esto <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> provides.</source>
          <target state="translated">Usar subyacente <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> devuelto desde <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> si necesita tener acceso a más allá de lo que <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> proporciona.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">También puede usar <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> establecer subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> a un archivo <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>This is useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Esto es útil si desea aprovechar la simplicidad de <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> mediante preexistente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>In this example, broadcasting is enabled for the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">En este ejemplo, la transmisión está activada para subyacente <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Closes the UDP connection.</source>
          <target state="translated">Cierra la conexión UDP.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> disables the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and releases all managed and unmanaged resources associated with the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> deshabilita subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> y libera todos los recursos administrados y no administrados asociados con la <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The following example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo cerrar una <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> mediante una llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Establishes a default remote host.</source>
          <target state="translated">Establece un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that specifies the network endpoint to which you intend to send data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> que especifica el extremo de red al que desea enviar datos.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishes a default remote host using the specified network endpoint.</source>
          <target state="translated">Establece un host remoto predeterminado mediante el extremo de red especificado.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the value specified in the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método establece un host remoto predeterminado utilizando el valor especificado en el <ph id="ph2">`endPoint`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Una vez establecida, no es necesario especificar un host remoto en cada llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Establecer un host remoto predeterminado es opcional.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Especificar un host remoto predeterminado, limita a solo ese host.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Si desea enviar datagramas a un host remoto diferente, debe realizar otra llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método o crear otro <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> sin un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si ha establecido el valor predeterminado es remoto host y proporciona un host remoto en la llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> producirá un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Si se llama a la  <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> /método siguiente, todos los datagramas que procedan de una dirección distinta a se descartará el valor predeterminado especificado.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the Client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">No se puede establecer el host remoto predeterminado para una dirección de difusión con este método, a menos que heredan de <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, utilice el método de cliente para obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>y establezca la opción de socket en <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sin embargo, puede, difusión de datos con el valor predeterminado dirección de difusión, 255.255.255.255, si especifica <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> en la llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Si la aplicación requiere un mayor control sobre las direcciones de difusión, también puede volver a usar la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Dado que el protocolo UDP es sin conexión, la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método no se bloquea.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">No llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método si tiene previsto recibir datagramas de multidifusión.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to establish a default remote host.</source>
          <target state="translated">En el ejemplo siguiente se usa un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> para establecer un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host to which you intend to send data.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del host remoto al que desea enviar datos.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend send data.</source>
          <target state="translated">Número de puerto al que desea enviar datos.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishes a default remote host using the specified IP address and port number.</source>
          <target state="translated">Establece un host remoto predeterminado mediante la dirección IP y el número de puerto especificados.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`addr`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método establece un host remoto predeterminado mediante los valores especificados en la <ph id="ph2">`addr`</ph> y <ph id="ph3">`port`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Una vez establecida, no es necesario especificar un host remoto en cada llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Establecer un host remoto predeterminado es opcional.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Especificar un host remoto predeterminado, limita a solo ese host.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Si desea enviar datagramas a un host remoto diferente, debe realizar otra llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método o crear otro <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> sin un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si ha establecido el valor predeterminado es remoto host y proporciona un host remoto en la llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> producirá un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Si se llama a la  <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> /método siguiente, todos los datagramas que procedan de una dirección distinta a se descartará el valor predeterminado especificado.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">No se puede establecer el host remoto predeterminado para una dirección de difusión con este método, a menos que heredan de <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, utilice el método de cliente para obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>y establezca la opción de socket en <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sin embargo, puede, difusión de datos con el valor predeterminado dirección de difusión, 255.255.255.255, si especifica <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> en la llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Si la aplicación requiere un mayor control sobre las direcciones de difusión, también puede volver a usar la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Dado que el protocolo UDP es sin conexión, la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método no se bloquea.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">No llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método si tiene previsto recibir datagramas de multidifusión.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following example uses an IP address and port number to connect with a remote host.</source>
          <target state="translated">En el ejemplo siguiente se usa un número de puerto y la dirección IP para conectar con un host remoto.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Se cierra <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> no se encuentra en el intervalo definido por <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend send data.</source>
          <target state="translated">Nombre DNS del host remoto al que desea enviar datos.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The port number on the remote host to which you intend to send data.</source>
          <target state="translated">Número de puerto del host remoto al que desea enviar datos.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishes a default remote host using the specified host name and port number.</source>
          <target state="translated">Establece un host remoto predeterminado mediante el nombre de host y el número de puerto especificados.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`port`</ph> and <ph id="ph3">`hostname`</ph> parameters.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método establece un host remoto predeterminado mediante los valores especificados en la <ph id="ph2">`port`</ph> y <ph id="ph3">`hostname`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Una vez establecida, no es necesario especificar un host remoto en cada llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Establecer un host remoto predeterminado es opcional.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Especificar un host remoto predeterminado, limita a solo ese host.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Si desea enviar datagramas a un host remoto diferente, debe realizar otra llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método o crear otro <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> sin un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si ha establecido el valor predeterminado es remoto host y proporciona un host remoto en la llamada a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> producirá un <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Si se llama a la  <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> /método siguiente, todos los datagramas que procedan de una dirección distinta a se descartará el valor predeterminado especificado.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">No se puede establecer el host remoto predeterminado para una dirección de difusión con este método, a menos que heredan de <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, utilice el método de cliente para obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>y establezca la opción de socket en <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sin embargo, puede, difusión de datos con el valor predeterminado dirección de difusión, 255.255.255.255, si especifica <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> en la llamada a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Si la aplicación requiere un mayor control sobre las direcciones de difusión, también puede volver a usar la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Dado que el protocolo UDP es sin conexión, la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método no se bloquea.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">No llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método si tiene previsto recibir datagramas de multidifusión.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The following example uses the host name and port number to connect to a remote host.</source>
          <target state="translated">El siguiente ejemplo se utiliza el nombre de host y número de puerto para conectarse a un host remoto.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> no se encuentra en el intervalo definido por <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> y <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos administrados y no administrados que utiliza el objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que utiliza <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> y libera los recursos administrados de forma opcional.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Se llama a este método público <ph id="ph1">`Dispose()`</ph> método y <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> se invoca el protegido <ph id="ph2">`Dispose(Boolean)`</ph> método con el <ph id="ph3">`disposing`</ph> parámetro establecido en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invoca <ph id="ph2">`Dispose`</ph> con <ph id="ph3">`disposing`</ph> establecido en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> references.</source>
          <target state="translated">Cuando el <ph id="ph1">`disposing`</ph> del parámetro es true, este método libera todos los recursos retenidos por los objetos administrados que este <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> referencias.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Este método invoca al método <ph id="ph1">`Dispose()`</ph> de cada uno de los objetos a los que se hace referencia.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> puede recibir varias llamadas de otros objetos.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Al reemplazar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> tenga cuidado de no hacer referencia a objetos que se hayan eliminado en una llamada anterior a <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener más información sobre cómo implementar <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, consulte <bpt id="p1">[</bpt>implementa un método Dispose<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Para obtener más información acerca de <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> y <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>reemplazar el método Finalize<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows Internet Protocol (IP) datagrams to be fragmented.</source>
          <target state="translated">Obtiene o establece un valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que especifica si <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> permite fragmentar los datagramas de protocolo Internet (IP).</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows datagram fragmentation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> permite la fragmentación de datagramas; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</source>
          <target state="translated">Necesario fragmentar los datagramas cuando su tamaño supera la unidad de transmisión máxima (MTU) del medio de transmisión.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams may be fragmented by the sending host or by an intermediate router.</source>
          <target state="translated">El host de envío o un enrutador intermedio pueden fragmentar datagramas.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>If a datagram must be fragmented, and the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</source>
          <target state="translated">Si un datagrama debe fragmentarse y el <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> opción está establecida, se descarta el datagrama y se envía un mensaje de error de protocolo de mensajes de Control de Internet (ICMP) al remitente del datagrama.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>This property can be set only for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Esta propiedad sólo se puede establecer para sockets que utilicen el marcador <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> o <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Leaves a multicast group.</source>
          <target state="translated">Abandona un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del grupo de multidifusión que se va a abandonar.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Leaves a multicast group.</source>
          <target state="translated">Abandona un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> método retire el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> del grupo de multidifusión identificado por el objeto <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">Después de llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> método, subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> envía un paquete de protocolo de administración de grupos de Internet (IGMP) al enrutador, quitando el enrutador del grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">Después de un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> retire del grupo, ya no podrá recibir datagramas enviados a ese grupo.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The following example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo quitar un grupo de multidifusión proporcionando una dirección de multidifusión.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">La dirección IP no es compatible con el valor de <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> que define el esquema de direcciones del socket.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del grupo de multidifusión que se va a abandonar.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The local address of the multicast group to leave.</source>
          <target state="translated">La dirección local del grupo de multidifusión que se va a abandonar.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Leaves a multicast group.</source>
          <target state="translated">Abandona un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> método retire el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> del grupo de multidifusión identificado por el objeto <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">Después de llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> método, subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> envía un paquete de protocolo de administración de grupos de Internet (IGMP) al enrutador, quitando el enrutador del grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">Después de un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> retire del grupo, ya no podrá recibir datagramas enviados a ese grupo.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use el <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> propiedad que se va a obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Después de haber obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following code example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo quitar un grupo de multidifusión proporcionando una dirección de multidifusión.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">La dirección IP no es compatible con el valor de <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> que define el esquema de direcciones del socket.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> may send or receive broadcast packets.</source>
          <target state="translated">Obtiene o establece un valor de <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que especifica si <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> puede enviar o recibir paquetes de difusión.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows broadcast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> permite la difusión de paquetes; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Broadcasting is limited to a specific subnet.</source>
          <target state="translated">Difusión se limita a una subred específica.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</source>
          <target state="translated">Puede transmitir a la subred local enviando un paquete a 255.255.255.255; o bien, puede usar la dirección de difusión dirigida, que es la parte de la red de una dirección de protocolo de Internet (IP) con todos los bits establecidos en la parte del host.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</source>
          <target state="translated">Por ejemplo, si su dirección IP es 192.168.1.40 (una dirección de clase C, con la parte de la red como los tres primeros octetos y la parte del host es el último octeto), la dirección de difusión dirigida será 192.168.1.255.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> devuelto por una llamada a <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The specified remote endpoint.</source>
          <target state="translated">Extremo remoto especificado.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>Ends a pending asynchronous receive.</source>
          <target state="translated">Finaliza una recepción asincrónica pendiente.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>If successful, an array of bytes that contains datagram data.</source>
          <target state="translated">Si se completa correctamente, una matriz de bytes que contiene los datos del datagrama.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Este método se bloquea hasta que la operación se complete.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Para realizar esta operación sincrónicamente, utilice el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous receive of a server response.</source>
          <target state="translated">El siguiente ejemplo de código usa <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> para completar una recepción asincrónica de una respuesta del servidor.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> no se devolvió mediante una llamada al método <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated">Se llamó previamente a <ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph> para la lectura asincrónica.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An error occurred when attempting to access the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Ocurrió un error al intentar obtener acceso al <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> devuelto por una llamada a <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>Ends a pending asynchronous send.</source>
          <target state="translated">Finaliza un envío asincrónico pendiente.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>If successful, the number of bytes sent to the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Si se realiza correctamente, el número de bytes enviados a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Este método se bloquea hasta que la operación se complete.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Para realizar esta operación sincrónicamente, utilice el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous send of a server request.</source>
          <target state="translated">El siguiente ejemplo de código usa <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> para completar un envío asincrónico de una solicitud del servidor.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> no se devolvió mediante una llamada al método <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated">Se llamó previamente a <ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph> para la lectura asincrónica.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket subyacente.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">Obtiene o establece un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que especifica si el objeto <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> permite a un único cliente utilizar un puerto.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si el objeto <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> permite a un único cliente usar un puerto específico; en caso contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para Windows Server 2003 y el Service Pack 2 y posteriores de Windows XP, y <ph id="ph2">&lt;see langword="false" /&gt;</ph> para el resto de versiones.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">De forma predeterminada, varios clientes pueden utilizar un puerto específico; Sin embargo, solo uno de los clientes puede realizar operaciones en el tráfico de red enviado al puerto.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">Puede usar el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> propiedad para impedir que varios clientes utilicen un puerto específico.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">Esta propiedad debe establecerse antes de que el socket subyacente se enlaza a un puerto de cliente.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">Si se llama a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>, o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>, el puerto de cliente se enlaza como un efecto secundario del constructor y posteriormente no se puede establecer el <ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> propiedad</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, and gets and sets the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se crea un <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>y obtiene y establece el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Se ha producido un error al intentar obtener acceso al socket subyacente.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Agrega una clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de multidifusión del grupo al que se piensa incorporar.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Agrega una clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método se suscribe el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> a un grupo de multidifusión mediante especificado <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">Después de llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método, subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> envía un paquete de protocolo de administración de grupos de Internet (IGMP) en el enrutador que solicita la inscripción al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">El intervalo de direcciones de multidifusión es de 224.0.0.0 a 239.255.255.255.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si especifica una dirección fuera de este intervalo o si el enrutador al que se realiza la solicitud no está habilitado, para la multidifusión <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> producirá un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Una vez el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> aparece con el enrutador como miembro del grupo de multidifusión, podrá recibir datagramas de multidifusión enviados a los especificados <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</source>
          <target state="translated">Debe crear el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> con el número de puerto de multidifusión; en caso contrario, no podrá recibir los datagramas de multidifusión.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, or the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will not work.</source>
          <target state="translated">No llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método antes de llamar a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método, o la <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método no funcionará.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">No es necesario pertenecer a un grupo de multidifusión para enviar datagramas a una dirección IP de multidifusión.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Before joining a multicast group, make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Antes de unirse a un grupo de multidifusión, asegúrese de que el socket esté enlazado al puerto o extremo.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</source>
          <target state="translated">Hacerlo llamando a uno de los constructores que aceptan un puerto o un extremo como un parámetro.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">Para dejar de recibir datagramas de multidifusión, llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> método y proporcione el <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> del grupo desde el que desea abandonar.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>In the IPv6 case, there are several multicast address ranges you can choose from.</source>
          <target state="translated">En el caso de IPv6, hay varios intervalos de direcciones de multidifusión que puede elegir.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Please, refer to the IETF RFC 2375.</source>
          <target state="translated">Por favor, consulte la especificación de IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> en un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> construidas sin un puerto local específico (es decir, usando la <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The following code example demonstrates how to join a multicast group by providing a multicast address.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra cómo unirse a un grupo de multidifusión proporcionando una dirección de multidifusión.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">La dirección IP no es compatible con el valor de <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> que define el esquema de direcciones del socket.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The interface index associated with the local IP address on which to join the multicast group.</source>
          <target state="translated">Índice de interfaz asociado a la dirección IP local donde se va unir al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de multidifusión del grupo al que se piensa incorporar.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Agrega una clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Before joining a multicast group, be sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Antes de unirse a un grupo de multidifusión, asegúrese de que el socket esté enlazado al puerto o extremo.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">Puede hacerlo llamando a uno de los constructores que acepta un puerto o un punto de conexión como parámetro.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The <ph id="ph1">`infindex`</ph> parameter is used to identify a hardware interface on the same link.</source>
          <target state="translated">El <ph id="ph1">`infindex`</ph> parámetro se utiliza para identificar una interfaz de hardware en el mismo vínculo.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">Hay varios intervalos de direcciones de multidifusión para elegir.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Refer to the IETF RFC 2375.</source>
          <target state="translated">Consulte la RFC de IETF 2375.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> en un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> construidas sin un puerto local específico (es decir, usando la <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> constructor).</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to join.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> del grupo de multidifusión que se piensa incorporar.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The Time to Live (TTL), measured in router hops.</source>
          <target state="translated">Período de vida, medido en saltos del enrutador.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group with the specified Time to Live (TTL).</source>
          <target state="translated">Agrega una clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un grupo de multidifusión con el período de vida (TTL) especificado.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método se suscribe el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> a un grupo de multidifusión mediante especificado <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">Después de llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método, subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> envía un paquete de protocolo de administración de grupos de Internet (IGMP) en el enrutador que solicita la inscripción al grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">El intervalo de direcciones de multidifusión es de 224.0.0.0 a 239.255.255.255.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si especifica una dirección fuera de este intervalo o si el enrutador al que se realiza la solicitud no está habilitado, para la multidifusión <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> producirá un <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`timeToLive`</ph> parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</source>
          <target state="translated">El <ph id="ph1">`timeToLive`</ph> parámetro especifica el número de saltos de enrutador se permitirá en un datagrama de multidifusión antes de descartarse.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Una vez el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> aparece con el enrutador como miembro del grupo de multidifusión, podrá recibir datagramas de multidifusión enviados a los especificados <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</source>
          <target state="translated">Debe crear el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> con el número de puerto de multidifusión en caso contrario, no podrá recibir los datagramas de multidifusión.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method or the receive method will not work.</source>
          <target state="translated">No llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método antes de llamar a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método o el método de recepción no funcionará.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">No es necesario pertenecer a un grupo de multidifusión para enviar datagramas a una dirección IP de multidifusión.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Before joining a multicast group make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Antes de unirse a un grupo de multidifusión Asegúrese de que el socket esté enlazado al puerto o extremo.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do that by calling one of the constructors that accept as parameter a port or an endpoint.</source>
          <target state="translated">Hacerlo llamando a uno de los constructores que aceptan como parámetro un puerto o un punto de conexión.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">Para dejar de recibir datagramas de multidifusión, llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> método y proporcione el <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> del grupo desde el que desea abandonar.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> en un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> construidas sin un puerto local específico (es decir, usando la <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo unirse a un grupo de multidifusión proporcionando dos parámetros, una dirección de multidifusión y un número que representa el TTL.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The TTL provided is not between 0 and 255</source>
          <target state="translated">El TTL proporcionado no se encuentra entre 0 y 255.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">La dirección IP no es compatible con el valor de <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> que define el esquema de direcciones del socket.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Clase <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> de multidifusión del grupo al que se piensa incorporar.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The local <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> local.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Agrega una clase <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> a un grupo de multidifusión.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</source>
          <target state="translated">Antes de unirse a un grupo de multidifusión, asegúrese de que el socket esté enlazado al puerto o extremo.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">Puede hacerlo llamando a uno de los constructores que acepta un puerto o un punto de conexión como parámetro.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">Hay varios intervalos de direcciones de multidifusión para elegir.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can find them in the IETF RFC 2375.</source>
          <target state="translated">Puede encontrarlos en la especificación de IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">No se puede llamar <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> en un <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> construidas sin un puerto local específico (es decir, usando la <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> o <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether outgoing multicast packets are delivered to the sending application.</source>
          <target state="translated">Obtiene o establece un valor <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> que especifica si se entregan paquetes de multidifusión saliente a la aplicación emisora.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> receives outgoing multicast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> recibe paquetes de multidifusión saliente; de lo contrario, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Multicast is a scalable method for many-to-many communication on the Internet.</source>
          <target state="translated">Multidifusión es un método escalable para la comunicación de varios a varios en Internet.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</source>
          <target state="translated">Si un proceso se suscribe a una dirección de multidifusión, todos los paquetes envían por los que el proceso son recibidos por todos los procesos que se ha suscrito a la dirección de multidifusión.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph> propiedad.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the remote host from which the data was sent.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> que representa el host remoto desde el que se enviaron los datos.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Returns a UDP datagram that was sent by a remote host.</source>
          <target state="translated">Devuelve un datagrama UDP enviado por un host remoto.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains datagram data.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que contiene datos de datagramas.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will block until a datagram arrives from a remote host.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método se bloqueará hasta que llegue un datagrama de un host remoto.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>When data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will read the first enqueued datagram and return the data portion as a byte array.</source>
          <target state="translated">Cuando los datos están disponibles, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método leerá el primer datagrama en cola y devolver la parte de datos como una matriz de bytes.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>This method populates the <ph id="ph1">`remoteEP`</ph> parameter with the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> and port number of the sender.</source>
          <target state="translated">Este método rellena los <ph id="ph1">`remoteEP`</ph> parámetro con el <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> y número de puerto del remitente.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will accept datagrams from that host only.</source>
          <target state="translated">Si especifica un host remoto predeterminado en el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método, el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método aceptará datagramas desde sólo dicho host.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">Todos los demás datagramas se descartarán.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Si desea recibir datagramas de multidifusión, no llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método antes de llamar a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> se utiliza para recibir datagramas deben crearse con el número de puerto de multidifusión.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until it receives a message.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> método bloquea la ejecución hasta que reciba un mensaje.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">Mediante el <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> pasado a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, se revela la identidad del host responde.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns a UDP datagram asynchronously that was sent by a remote host.</source>
          <target state="translated">Devuelve de forma asincrónica un datagrama UDP enviado por un host remoto.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Objeto de tarea que representa la operación asincrónica.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>This operation will not block.</source>
          <target state="translated">Esta operación no se bloqueará.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the UDP packet has been received.</source>
          <target state="translated">El valor devuelto <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; objeto se completará después de que se ha recibido el paquete UDP.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, this method will accept datagrams from that host only.</source>
          <target state="translated">Si especifica un host remoto predeterminado en el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método, este método aceptará datagramas desde sólo dicho host.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">Todos los demás datagramas se descartarán.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling this method.</source>
          <target state="translated">Si desea recibir datagramas de multidifusión, no llame a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método antes de llamar a este método.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> se utiliza para recibir datagramas deben crearse con el número de puerto de multidifusión.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> subyacente se ha cerrado.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">Envía un datagrama UDP a un host remoto.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Número de bytes del datagrama.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">Envía un datagrama UDP a un host remoto.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">Número de bytes enviados.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and returns the number of bytes sent.</source>
          <target state="translated">Esta sobrecarga envía datagramas al host remoto establecido en el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método y devuelve el número de bytes enviados.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si no se llama <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> antes de llamar a esta sobrecarga, el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método producirá una <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">Si desea enviar datagramas a un host remoto diferente, debe llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método y especificar el host remoto deseado.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">Utilice uno de los otros <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> sobrecargas del método para enviar datagramas a una dirección de difusión.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>You must establish a default remote host prior to using this overload.</source>
          <target state="translated">Debe establecer un host remoto predeterminado antes de utilizar esta sobrecarga.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ya ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Número de bytes del datagrama.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> que representa el host y el puerto al que se va a enviar el datagrama.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram to the host at the specified remote endpoint.</source>
          <target state="translated">Envía un datagrama UDP al host en el extremo remoto especificado.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes sent.</source>
          <target state="translated">Número de bytes enviados.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método envía datagramas al extremo especificado y devuelve el número de bytes enviados correctamente.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">Antes de llamar a esta sobrecarga, primero debe crear un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> con el número de puerto y la dirección IP del host remoto al que se entregarán los datagramas.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Puede enviar datagramas a la difusión de forma predeterminada de direcciones, 255.255.255.255, especificando <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> para el <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method as the <ph id="ph3">`endPoint`</ph> parameter.</source>
          <target state="translated">Después de haber creado esta <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, páselo a la <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método como el <ph id="ph3">`endPoint`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si desea enviar datagramas a cualquier otra dirección de difusión, use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>y establezca la opción de socket en <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">También puede volver a usar la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">No se proporciona un <ph id="ph1">`endPoint`</ph> parámetro a este método si ya ha establecido un host remoto con el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si lo hace, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método producirá una <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to specify the target host.</source>
          <target state="translated">Este ejemplo se utiliza un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> para especificar el host de destino.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ya ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Se cierra <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Número de bytes del datagrama.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">Nombre del host remoto al que pretende enviar el datagrama.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">Número de puerto remoto con el que se desea establecer comunicación.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram to a specified port on a specified remote host.</source>
          <target state="translated">Envía un datagrama UDP a un puerto especificado, en un host remoto especificado.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">Número de bytes enviados.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the values specified by the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters and returns the number of bytes successfully sent.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método envía datagramas a los valores especificados por el <ph id="ph2">`hostname`</ph> y <ph id="ph3">`port`</ph> parámetros y devuelve el número de bytes enviados correctamente.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">Puede enviar datagramas a la dirección de difusión predeterminada especificando "255.255.255.255" para el <ph id="ph1">`hostname`</ph> el valor del parámetro.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si desea enviar datagramas a cualquier otra dirección de difusión, use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>y establezca la opción de socket en <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">También puede volver a usar la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">No proporcione un nombre de host o número de puerto a este método si ya ha establecido un host remoto con el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si lo hace, el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método producirá una <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">En el ejemplo siguiente se muestra el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This example uses a host name and a port number to identify the target host.</source>
          <target state="translated">En este ejemplo se utiliza un nombre de host y un número de puerto para identificar el host de destino.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ya ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Envía un datagrama UDP a un host remoto de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Número de bytes del datagrama.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Envía un datagrama UDP a un host remoto de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Esta sobrecarga envía datagramas al host remoto establecido en el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si no se llama <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> antes de llamar a esta sobrecarga, el método producirá una <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">Si desea enviar datagramas a un host remoto diferente, debe llamar a la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método y especificar el host remoto deseado.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">Utilice uno de los otros <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph> sobrecargas del método para enviar datagramas a una dirección de difusión.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ya ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Número de bytes del datagrama.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> que representa el host y el puerto al que se va a enviar el datagrama.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Envía un datagrama UDP a un host remoto de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This method sends datagrams to the specified endpoint.</source>
          <target state="translated">Este método envía datagramas al extremo especificado.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">Antes de llamar a esta sobrecarga, primero debe crear un <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> con el número de puerto y la dirección IP del host remoto al que se entregarán los datagramas.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Puede enviar datagramas a la difusión de forma predeterminada de direcciones, 255.255.255.255, especificando <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> para el <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> propiedad de la <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to this method as the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated">Después de haber creado esta <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pasar a este método como el <ph id="ph2">`endPoint`</ph> parámetro.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si desea enviar datagramas a cualquier otra dirección de difusión, use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>y establezca la opción de socket en <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">También puede volver a usar la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">No se proporciona un <ph id="ph1">`endPoint`</ph> parámetro a este método si ya ha establecido un host remoto con el <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si lo hace, este método producirá una <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ya ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Se cierra <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Matriz de tipo <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> que especifica el datagrama UDP que desea enviar, representado como matriz de bytes.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Número de bytes del datagrama.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">Nombre del host remoto al que pretende enviar el datagrama.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">Número de puerto remoto con el que se desea establecer comunicación.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Envía un datagrama UDP a un host remoto de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Devuelva <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This method sends datagrams to the values specified by the <ph id="ph1">`hostname`</ph> and <ph id="ph2">`port`</ph> parameters.</source>
          <target state="translated">Este método envía datagramas a los valores especificados por el <ph id="ph1">`hostname`</ph> y <ph id="ph2">`port`</ph> parámetros.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">Puede enviar datagramas a la dirección de difusión predeterminada especificando "255.255.255.255" para el <ph id="ph1">`hostname`</ph> el valor del parámetro.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si desea enviar datagramas a cualquier otra dirección de difusión, use la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> método obtener subyacente <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>y establezca la opción de socket en <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">También puede volver a usar la <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> clase.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">No proporcione un nombre de host o número de puerto a este método si ya ha establecido un host remoto con el <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Si lo hace, este método producirá una <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Si recibe un <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> para obtener el código de error específico.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Una vez que ha obtenido este código, puede hacer referencia en MSDN la documentación de código de error de la API de Windows Sockets, versión 2 para obtener una descripción detallada del error.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ya ha establecido un host remoto predeterminado.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> está cerrado.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Se ha producido un error al obtener acceso al socket.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece un valor que especifica el valor de período de vida (TTL) de los paquetes de protocolo de Internet (IP) enviados por <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value.</source>
          <target state="translated">Valor TTL.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</source>
          <target state="translated">El valor TTL indica el número máximo de enrutadores que puede atravesar un paquete antes de que el enrutador descarta el paquete y un protocolo de mensajes de Internet Control "TTL excedido" (ICMP) el mensaje de error se devuelve al remitente.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph> property.</source>
          <target state="translated">En el ejemplo de código siguiente se muestra el uso de la <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph> propiedad.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>