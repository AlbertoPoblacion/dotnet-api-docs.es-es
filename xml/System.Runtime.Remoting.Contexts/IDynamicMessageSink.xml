<Type Name="IDynamicMessageSink" FullName="System.Runtime.Remoting.Contexts.IDynamicMessageSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f62dafd94a669279024892bee80144950f6537a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30485269" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDynamicMessageSink" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicMessageSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IDynamicMessageSink" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicMessageSink" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicMessageSink" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="87f8a-101">Indica que las propiedades registradas dinámicamente proporcionarán el receptor de mensajes de implementación.</span>
      <span class="sxs-lookup">
        <span data-stu-id="87f8a-101">Indicates that the implementing message sink will be provided by dynamically registered properties.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87f8a-102">Receptores de mensajes dinámicos son siempre con las notificaciones de llamada de inicio y finalización de llamada con marcadores que indican si la llamada está actualmente en el lado de cliente o servidor (Esto es útil para los receptores de nivel de contexto).</span><span class="sxs-lookup"><span data-stu-id="87f8a-102">Dynamic message sinks are provided with notifications of call start and call finish with flags indicating whether the call is currently on the client side or server side (this is useful for the context level sinks).</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="ProcessMessageFinish">
      <MemberSignature Language="C#" Value="public void ProcessMessageFinish (System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageFinish(class System.Runtime.Remoting.Messaging.IMessage replyMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageFinish(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageFinish (replyMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageFinish(System::Runtime::Remoting::Messaging::IMessage ^ replyMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replyMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="replyMsg">
          <span data-ttu-id="87f8a-103">Mensaje de respuesta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-103">A reply message.</span>
          </span>
        </param>
        <param name="bCliSide">
          <span data-ttu-id="87f8a-104">El valor <see langword="true" /> si el método se invoca el de cliente y <see langword="false" /> si se invoca en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-104">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if it is invoked on the server side.</span>
          </span>
        </param>
        <param name="bAsync">
          <span data-ttu-id="87f8a-105">El valor <see langword="true" /> si esta es una llamada asincrónica y <see langword="false" /> si es una llamada sincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-105">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87f8a-106">Indica que se devuelve el control de una llamada. </span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-106">Indicates that a call is returning.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87f8a-107">Los parámetros booleanos indican si el receptor se encuentra en el lado del cliente o en el lado del servidor y si usa la llamada la <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> método.</span><span class="sxs-lookup"><span data-stu-id="87f8a-107">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ProcessMessageStart">
      <MemberSignature Language="C#" Value="public void ProcessMessageStart (System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessMessageStart(class System.Runtime.Remoting.Messaging.IMessage reqMsg, bool bCliSide, bool bAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IDynamicMessageSink.ProcessMessageStart(System.Runtime.Remoting.Messaging.IMessage,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ProcessMessageStart (reqMsg As IMessage, bCliSide As Boolean, bAsync As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ProcessMessageStart(System::Runtime::Remoting::Messaging::IMessage ^ reqMsg, bool bCliSide, bool bAsync);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="bCliSide" Type="System.Boolean" />
        <Parameter Name="bAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reqMsg">
          <span data-ttu-id="87f8a-108">Mensaje de petición.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-108">A request message.</span>
          </span>
        </param>
        <param name="bCliSide">
          <span data-ttu-id="87f8a-109">Un valor de <see langword="true" /> si el método se invoca el de cliente y <see langword="false" /> si el método se invoca en el servidor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-109">A value of <see langword="true" /> if the method is invoked on the client side and <see langword="false" /> if the method is on the server side.</span>
          </span>
        </param>
        <param name="bAsync">
          <span data-ttu-id="87f8a-110">El valor <see langword="true" /> si esta es una llamada asincrónica y <see langword="false" /> si es una llamada sincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-110">A value of <see langword="true" /> if this is an asynchronic call and <see langword="false" /> if it is a synchronic call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="87f8a-111">Indica que se inicia una llamada. </span>
          <span class="sxs-lookup">
            <span data-stu-id="87f8a-111">Indicates that a call is starting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="87f8a-112">Los parámetros booleanos indican si el receptor se encuentra en el lado del cliente o en el lado del servidor y si usa la llamada la <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> método.</span><span class="sxs-lookup"><span data-stu-id="87f8a-112">The Boolean parameters indicate whether the sink is located on the client side or the server side and whether the call is using the <xref:System.Runtime.Remoting.Messaging.IMessageSink.AsyncProcessMessage%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>