<Type Name="IContextProperty" FullName="System.Runtime.Remoting.Contexts.IContextProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ca02f0ae6850d03e71ec3d6eb73867a2514beed" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContextProperty" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContextProperty" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Contexts.IContextProperty" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContextProperty" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContextProperty" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="94cc0-101">Recopila información de denominación de la propiedad de contexto y determina si el nuevo contexto es correcto para la propiedad de contexto.</span>
      <span class="sxs-lookup">
        <span data-stu-id="94cc0-101">Gathers naming information from the context property and determines whether the new context is ok for the context property.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94cc0-102">El <xref:System.Runtime.Remoting.Contexts.IContextProperty> interfaz se expone mediante la propiedad contribuida a un contexto mediante un atributo.</span><span class="sxs-lookup"><span data-stu-id="94cc0-102">The <xref:System.Runtime.Remoting.Contexts.IContextProperty> interface is exposed by the property contributed to a context by an attribute.</span></span> <span data-ttu-id="94cc0-103">De forma predeterminada, también se implementa mediante el <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base (clase), desde el que <xref:System.Runtime.Remoting.Contexts.Context> pueden extender clases de atributos.</span><span class="sxs-lookup"><span data-stu-id="94cc0-103">By default, it is also implemented by the <xref:System.Runtime.Remoting.Contexts.ContextAttribute> base class, from which <xref:System.Runtime.Remoting.Contexts.Context> attribute classes can extend.</span></span>  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze (System.Runtime.Remoting.Contexts.Context newContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Freeze(class System.Runtime.Remoting.Contexts.Context newContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContextProperty.Freeze(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze (newContext As Context)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze(System::Runtime::Remoting::Contexts::Context ^ newContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContext" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newContext">
          <span data-ttu-id="94cc0-104">Contexto que se va a inmovilizar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94cc0-104">The context to freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94cc0-105">Se llama a este método cuando se inmoviliza el contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94cc0-105">Called when the context is frozen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94cc0-106">No se puede agregar propiedades de contexto después de que se ha inmovilizado el contexto.</span><span class="sxs-lookup"><span data-stu-id="94cc0-106">Context properties cannot be added after the context has been frozen.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsNewContextOK">
      <MemberSignature Language="C#" Value="public bool IsNewContextOK (System.Runtime.Remoting.Contexts.Context newCtx);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNewContextOK(class System.Runtime.Remoting.Contexts.Context newCtx) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Contexts.IContextProperty.IsNewContextOK(System.Runtime.Remoting.Contexts.Context)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNewContextOK (newCtx As Context) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNewContextOK(System::Runtime::Remoting::Contexts::Context ^ newCtx);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newCtx" Type="System.Runtime.Remoting.Contexts.Context" />
      </Parameters>
      <Docs>
        <param name="newCtx">
          <span data-ttu-id="94cc0-107">El nuevo contexto en el que se ha creado <see cref="T:System.Runtime.Remoting.Contexts.ContextProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94cc0-107">The new context in which the <see cref="T:System.Runtime.Remoting.Contexts.ContextProperty" /> has been created.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="94cc0-108">Devuelve un valor booleano que indica si la propiedad de contexto es compatible con el nuevo contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94cc0-108">Returns a Boolean value indicating whether the context property is compatible with the new context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="94cc0-109">Es <see langword="true" /> si la propiedad de contexto puede coexistir con las demás propiedades de contexto del contexto determinado; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94cc0-109">
              <see langword="true" /> if the context property can coexist with the other context properties in the given context; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="94cc0-110">Una vez que todas las propiedades de contexto se han agregado al nuevo contexto, se consultan todas en cuanto a si son correctas en el nuevo contexto.</span><span class="sxs-lookup"><span data-stu-id="94cc0-110">Once all the context properties have been added to the new context, they are all queried as to whether they are okay in the new context.</span></span> <span data-ttu-id="94cc0-111">La propiedad de contexto podría verse en las demás propiedades de contexto de `newCtx` y determinar si es compatible con estas otras propiedades de contexto.</span><span class="sxs-lookup"><span data-stu-id="94cc0-111">The context property could look at the other context properties from `newCtx` and determine whether it is compatible with these other context properties.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Contexts.IContextProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="94cc0-112">Obtiene el nombre de la propiedad bajo la que se agregará al contexto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94cc0-112">Gets the name of the property under which it will be added to the context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="94cc0-113">Nombre de la propiedad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="94cc0-113">The name of the property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>