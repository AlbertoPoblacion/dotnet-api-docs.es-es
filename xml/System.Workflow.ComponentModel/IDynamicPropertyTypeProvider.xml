<Type Name="IDynamicPropertyTypeProvider" FullName="System.Workflow.ComponentModel.IDynamicPropertyTypeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="783343007c3db8c127aba82af9273f7074522f20" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39899150" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDynamicPropertyTypeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDynamicPropertyTypeProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDynamicPropertyTypeProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDynamicPropertyTypeProvider" />
  <TypeSignature Language="F#" Value="type IDynamicPropertyTypeProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona un tipo de propiedad a la infraestructura del enlace. Se implementa por las actividades que contienen una propiedad de tipo variable, donde el tipo puede variar según otros valores de la actividad.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Esta interfaz permite a la actividad primaria asociar dos propiedades e indicar a la infraestructura del enlace qué tipo que se va a utilizar para validar el enlace. Por ejemplo, podría tener una actividad con dos propiedades, `TypeProperty` y `ValueProperty`, donde `TypeProperty` especifica un tipo válido para el valor de `ValueProperty`. En este caso, la actividad primaria implementa la interfaz <xref:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetAccessType">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Workflow.ComponentModel.Compiler.AccessTypes GetAccessType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetAccessType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessType (serviceProvider As IServiceProvider, propertyName As String) As AccessTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::Compiler::AccessTypes GetAccessType(IServiceProvider ^ serviceProvider, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessType : IServiceProvider * string -&gt; System.Workflow.ComponentModel.Compiler.AccessTypes" Usage="iDynamicPropertyTypeProvider.GetAccessType (serviceProvider, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Compiler.AccessTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Un objeto que implementa <see cref="T:System.IServiceProvider" /> para proporcionar el acceso a los servicios de tiempo de diseño si se necesitan.</param>
        <param name="propertyName">Nombre de la propiedad.</param>
        <summary>Devuelve el tipo de acceso para la propiedad especificada.</summary>
        <returns>Un valor de enumeración <see cref="T:System.Workflow.ComponentModel.Compiler.AccessTypes" /> que denota el nivel de acceso de la propiedad.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizado en tiempo de compilación para validar si las propiedades se enlazan correctamente entre ellas. Sin esta interfaz, esta información se deduce directamente de los parámetros set y get de la propiedad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyType">
      <MemberSignature Language="C#" Value="public Type GetPropertyType (IServiceProvider serviceProvider, string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetPropertyType(class System.IServiceProvider serviceProvider, string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.IDynamicPropertyTypeProvider.GetPropertyType(System.IServiceProvider,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyType (serviceProvider As IServiceProvider, propertyName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetPropertyType(IServiceProvider ^ serviceProvider, System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member GetPropertyType : IServiceProvider * string -&gt; Type" Usage="iDynamicPropertyTypeProvider.GetPropertyType (serviceProvider, propertyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Un objeto que implementa <see cref="T:System.IServiceProvider" /> para proporcionar acceso a los servicios de tiempo de diseño si son necesarios.</param>
        <param name="propertyName">Nombre de la propiedad.</param>
        <summary>Devuelve el <see cref="T:System.Type" /> de la propiedad especificada.</summary>
        <returns>
          <see cref="T:System.Type" /> de la propiedad cuyo nombre se pasa como parámetro <paramref name="propertyName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilizado en tiempo de compilación para validar si las propiedades se enlazan correctamente entre ellas.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>