<Type Name="DependencyObject" FullName="System.Workflow.ComponentModel.DependencyObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="330cd997b5392d780afcbc3cd8922f79adee2be2" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53486571" /></Metadata><TypeSignature Language="C#" Value="public abstract class DependencyObject : IDisposable, System.ComponentModel.IComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DependencyObject extends System.Object implements class System.ComponentModel.IComponent, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.DependencyObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DependencyObject&#xA;Implements IComponent, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObject abstract : IDisposable, System::ComponentModel::IComponent" />
  <TypeSignature Language="F#" Value="type DependencyObject = class&#xA;    interface IComponent&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IComponent</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.DependencyObjectCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>La clase base para todos los objetos que tienen las propiedades de dependencia. Se debe heredar esta clase.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DependencyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DependencyObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Cuando se implementa en una clase derivada, inicializa una instancia nueva de la clase <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddHandler (dependencyEvent As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.AddHandler (dependencyEvent, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyEvent"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="value">La clase <see cref="T:System.Object" /> que representa el valor de esta propiedad. En este caso, un tipo <see cref="T:System.Delegate" />.</param>
        <summary>Agrega un controlador para un evento de <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando crea un delegado, identifica el método que controla el evento. Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento. A menos que se quite el delegado, siempre que se produzca el evento se llamará al controlador de eventos. Se pueden agregar varios delegados para controlar un evento. Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Los controladores se agregan y se quitan utilizando el código siguiente. Este ejemplo de código forma parte del ejemplo enviar correo electrónico SDK y pertenece al archivo SendMailActivity.cs. Para obtener más información, consulte [ejemplo de la actividad enviar correo electrónico](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).  
  
 [!code-csharp[WF_Samples#232](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#232)]
 [!code-vb[WF_Samples#232](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#232)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Cualquiera de los argumentos son una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">El valor es de <see cref="T:System.Type" /> incorrecto.

O bien

<paramref name="dependencyEvent" /> representa <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> de un no evento.</exception>
      </Docs>
    </Member>
    <Member MemberName="DesignMode">
      <MemberSignature Language="C#" Value="protected internal bool DesignMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignMode" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property DesignMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool DesignMode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignMode : bool" Usage="System.Workflow.ComponentModel.DependencyObject.DesignMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor que indica si esta instancia está en diseño o en modo de tiempo de ejecución.</summary>
        <value><see langword="true" /> si esta instancia está en modo de diseño; de lo contrario, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Libera los recursos que usa la clase <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="dependencyObject.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libera todos los recursos utilizados por el objeto <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="dependencyObject.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</param>
        <summary>Libera los recursos no utilizados y <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> libera los recursos administrados de forma opcional.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~DependencyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!DependencyObject ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="dependencyObject.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Proporcionado como una invalidación para <see cref="M:System.Object.Finalize" /> para limpiar los recursos no administrados determinadamente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Generalmente, solo se requiere cuando se liberan recursos no administrados como HWNDS sin formato, controladores de archivos Win32 y otros.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBinding">
      <MemberSignature Language="C#" Value="public System.Workflow.ComponentModel.ActivityBind GetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Workflow.ComponentModel.ActivityBind GetBinding(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Workflow::ComponentModel::ActivityBind ^ GetBinding(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.GetBinding : System.Workflow.ComponentModel.DependencyProperty -&gt; System.Workflow.ComponentModel.ActivityBind" Usage="dependencyObject.GetBinding dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.ActivityBind</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Proporciona acceso a la clase <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> asociada a la clase <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> específica.</summary>
        <returns>La clase <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> asociada a la clase <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> específica.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBoundValue">
      <MemberSignature Language="C#" Value="protected virtual object GetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, Type targetType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetBoundValue(class System.Workflow.ComponentModel.ActivityBind bind, class System.Type targetType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetBoundValue (bind As ActivityBind, targetType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetBoundValue(System::Workflow::ComponentModel::ActivityBind ^ bind, Type ^ targetType);" />
      <MemberSignature Language="F#" Value="abstract member GetBoundValue : System.Workflow.ComponentModel.ActivityBind * Type -&gt; obj&#xA;override this.GetBoundValue : System.Workflow.ComponentModel.ActivityBind * Type -&gt; obj" Usage="dependencyObject.GetBoundValue (bind, targetType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bind" Type="System.Workflow.ComponentModel.ActivityBind" />
        <Parameter Name="targetType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="bind"><see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <param name="targetType"><see cref="T:System.Type" /> del destino del <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <summary>Recupera el <see cref="T:System.Object" /> que es el asunto de un <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</summary>
        <returns>El <see cref="T:System.Object" /> que es el asunto de un <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Object> que es el asunto de un <xref:System.Workflow.ComponentModel.ActivityBind>. Cuando se invalida en una clase derivada, este método se puede utilizar para personalizar la manera en la que se resuelve un enlace especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bind" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).

O bien

<paramref name="targetType" /> es una referencia nula (<see langword="Nothing" />).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInvocationList&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected T[] GetInvocationList&lt;T&gt; (System.Workflow.ComponentModel.DependencyProperty dependencyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance !!T[] GetInvocationList&lt;T&gt;(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetInvocationList(Of T) (dependencyEvent As DependencyProperty) As T()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA;generic &lt;typename T&gt;&#xA; cli::array &lt;T&gt; ^ GetInvocationList(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent);" />
      <MemberSignature Language="F#" Value="member this.GetInvocationList : System.Workflow.ComponentModel.DependencyProperty -&gt; 'T[]" Usage="dependencyObject.GetInvocationList dependencyEvent" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Workflow.ComponentModel.IDependencyObjectAccessor.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo de delegados devueltos.</typeparam>
        <param name="dependencyEvent">Objeto <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> especificado.</param>
        <summary>Obtiene una matriz que contiene los delegados para el <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> especificado.</summary>
        <returns>Una matriz que contiene los delegados para el <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> especificado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyEvent" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dependencyEvent" /> no corresponde a un evento.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Workflow.ComponentModel.DependencyProperty -&gt; obj" Usage="dependencyObject.GetValue dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Proporciona acceso al valor del <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> designado.</summary>
        <returns>El objeto que representa el valor de la clase <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> designada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este miembro se utiliza generalmente en propiedad y consigue facilitar el valor del valor de dependencia con nombre.  
  
   
  
## Examples  
 El siguiente código muestra cómo usar <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> para devolver el valor representado por una propiedad de dependencia con nombre en el contexto de "get" y "set". Este ejemplo de código forma parte del ejemplo enviar correo electrónico SDK y pertenece al archivo SendMailActivity.cs. Para obtener más información, consulte [ejemplo de la actividad enviar correo electrónico](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).  
  
 [!code-csharp[WF_Samples#231](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#231)]
 [!code-vb[WF_Samples#231](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#231)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueBase">
      <MemberSignature Language="C#" Value="public object GetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValueBase(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValueBase(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.GetValueBase : System.Workflow.ComponentModel.DependencyProperty -&gt; obj" Usage="dependencyObject.GetValueBase dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> para obtener el valor.</param>
        <summary>Proporciona acceso al objeto enlazado de <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> y omite la invalidación de <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />.</summary>
        <returns>El objeto enlazado de <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />. Esto omite la invalidación de <see cref="M:System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es útil dentro de la implementación de invalidación de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A>. Generalmente, el código de invalidación de <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> invoca al método <xref:System.Workflow.ComponentModel.DependencyObject.GetValueBase%2A>y, a continuación, agrega el código adicional.  
  
 Para implementar el <xref:System.Workflow.ComponentModel.DependencyObject.GetValue%2A> invalidar, <xref:System.Workflow.ComponentModel.PropertyMetadata> puede usarse en <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> / <xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A> llamadas.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyProperty" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeProperties">
      <MemberSignature Language="C#" Value="protected virtual void InitializeProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.InitializeProperties" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeProperties ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeProperties();" />
      <MemberSignature Language="F#" Value="abstract member InitializeProperties : unit -&gt; unit&#xA;override this.InitializeProperties : unit -&gt; unit" Usage="dependencyObject.InitializeProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Realiza la inicialización en propiedades de dependencia cuando se invalida en una clase derivada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Llamado por el motor en tiempo de ejecución del flujo de trabajo durante la inicialización de la actividad en tiempo de ejecución.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBindingSet">
      <MemberSignature Language="C#" Value="public bool IsBindingSet (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsBindingSet(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsBindingSet(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.IsBindingSet : System.Workflow.ComponentModel.DependencyProperty -&gt; bool" Usage="dependencyObject.IsBindingSet dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> que se va a probar.</param>
        <summary>Indica si el valor de <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> se establece como enlace. Vea <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />.</summary>
        <returns><see langword="true" /> si se establece como un enlace; de lo contrario, <see langword="false" /></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyProperty" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="MetaEquals">
      <MemberSignature Language="C#" Value="public bool MetaEquals (System.Workflow.ComponentModel.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool MetaEquals(class System.Workflow.ComponentModel.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MetaEquals(System::Workflow::ComponentModel::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="member this.MetaEquals : System.Workflow.ComponentModel.DependencyObject -&gt; bool" Usage="dependencyObject.MetaEquals dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Workflow.ComponentModel.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><see cref="T:System.Workflow.ComponentModel.DependencyObject" /> para comparar con igualdad.</param>
        <summary>Determina si <see langword="metaproperties" /> de <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> iguala <see langword="metaproperties" /> del <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> parametrizado.</summary>
        <returns>Es <see langword="true" /> si <see langword="metaproperties" /> son iguales; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esto utiliza el operador `==` como definido para el tipo de miembro `metaproperties` privado, que es <xref:System.Collections.IDictionary>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentDependencyObject">
      <MemberSignature Language="C#" Value="protected System.Workflow.ComponentModel.DependencyObject ParentDependencyObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.DependencyObject ParentDependencyObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ParentDependencyObject As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Workflow::ComponentModel::DependencyObject ^ ParentDependencyObject { System::Workflow::ComponentModel::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentDependencyObject : System.Workflow.ComponentModel.DependencyObject" Usage="System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el elemento primario <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> en el gráfico <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <value>El elemento primario <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> en el gráfico <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveHandler(class System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveHandler (dependencyEvent As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveHandler(System::Workflow::ComponentModel::DependencyProperty ^ dependencyEvent, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.RemoveHandler : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.RemoveHandler (dependencyEvent, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyEvent" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyEvent"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="value">La clase <see cref="T:System.Object" /> que representa el valor de esta propiedad. En este caso, un tipo <see cref="T:System.Delegate" />.</param>
        <summary>Quita <see cref="T:System.EventHandler" /> de un <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> asociado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proporcionado como un método directo conveniente para quitar un delegado de eventos.  
  
 Cuando se crea un delegado, identifica el método que controlará el evento. Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento. A menos que se quite el delegado, siempre que se produzca el evento se llamará al controlador de eventos. Para obtener más información sobre los delegados de controlador de eventos, consulte [controlar y provocar eventos](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Los controladores se agregan y se quitan utilizando el código siguiente. Para obtener más información, consulte [ejemplo de la actividad enviar correo electrónico](https://msdn.microsoft.com/library/bfb5939e-60a9-4037-af4e-2cea9e654669).  
  
 [!code-csharp[WF_Samples#232](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#232)]
 [!code-vb[WF_Samples#232](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#232)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Cualquiera de los argumentos son una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException"><paramref name="dependencyEvent" /> es <see langword="metaproperty" />.

O bien

<paramref name="dependencyEvent" /> no es un evento.</exception>
        <exception cref="T:System.Data.ReadOnlyException"><paramref name="value" /> es un <see cref="T:System.Workflow.ComponentModel.ActivityBind" /> y está instancia no está en <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (System.Workflow.ComponentModel.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : System.Workflow.ComponentModel.DependencyProperty -&gt; bool" Usage="dependencyObject.RemoveProperty dependencyProperty" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> que se va a quitar.</param>
        <summary>Quita un objeto <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> de <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <returns><see langword="true" /> si el resultado de la operación es correcto; en el caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">El argumento es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public void SetBinding (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, System.Workflow.ComponentModel.ActivityBind bind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetBinding(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, class System.Workflow.ComponentModel.ActivityBind bind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBinding(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Workflow::ComponentModel::ActivityBind ^ bind);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Workflow.ComponentModel.DependencyProperty * System.Workflow.ComponentModel.ActivityBind -&gt; unit" Usage="dependencyObject.SetBinding (dependencyProperty, bind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="bind" Type="System.Workflow.ComponentModel.ActivityBind" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="bind"><see cref="T:System.Workflow.ComponentModel.ActivityBind" /> que se va a establecer.</param>
        <summary>Establece el <see cref="T:System.Workflow.ComponentModel.ActivityBind" />para el <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> establece el valor directamente para <xref:System.Workflow.ComponentModel.DependencyProperty>. De igual forma, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> agrega directamente un controlador a las propiedades de evento de tipo.  
  
 Estos métodos son exclusivos cuando se piden la misma propiedad. Si se llama <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>, a continuación, se descartan los valores previamente establecidos utilizando <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> en eventos). El mismo es verdadero al revés: <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) restablece el enlace asignado a <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.  
  
   
  
## Examples  
 El código siguiente muestra cómo crear las actividades y agregarlas como elementos secundarios a una actividad compuesta e incluye el establecimiento del permiso de <xref:System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities%2A> para este tipo.  
  
 Además, se muestra el uso del método <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.  
  
 Este ejemplo de código es parte de la muestra Throw SDK y pertenece al archivo ThrowWorkflow.cs. Para obtener más información, consulte [usar Throw](https://msdn.microsoft.com/library/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  
  
 [!code-csharp[WF_Samples#215](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#215)]
 [!code-vb[WF_Samples#215](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#215)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Cualquiera de los argumentos son una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">El elemento <see cref="T:System.Workflow.ComponentModel.PropertyMetadata" /> asociado al elemento <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> es de solo lectura, son metadatos o no es enlazable.</exception>
        <exception cref="T:System.InvalidOperationException">Esta instancia no está en <see cref="P:System.Workflow.ComponentModel.DependencyObject.DesignMode" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetBoundValue">
      <MemberSignature Language="C#" Value="protected virtual void SetBoundValue (System.Workflow.ComponentModel.ActivityBind bind, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetBoundValue(class System.Workflow.ComponentModel.ActivityBind bind, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetBoundValue (bind As ActivityBind, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetBoundValue(System::Workflow::ComponentModel::ActivityBind ^ bind, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetBoundValue : System.Workflow.ComponentModel.ActivityBind * obj -&gt; unit&#xA;override this.SetBoundValue : System.Workflow.ComponentModel.ActivityBind * obj -&gt; unit" Usage="dependencyObject.SetBoundValue (bind, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bind" Type="System.Workflow.ComponentModel.ActivityBind" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="bind"><see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <param name="value">El <see cref="T:System.Object" />para establecer el destino de <see cref="T:System.Workflow.ComponentModel.ActivityBind" />.</param>
        <summary>Establece el valor del <see cref="T:System.Workflow.ComponentModel.ActivityBind" />de destino.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="bind" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetReadOnlyPropertyValue">
      <MemberSignature Language="C#" Value="protected internal void SetReadOnlyPropertyValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void SetReadOnlyPropertyValue(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void SetReadOnlyPropertyValue(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetReadOnlyPropertyValue : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetReadOnlyPropertyValue (dependencyProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <param name="value"><see cref="T:System.Object" /> que representa el valor.</param>
        <summary>Establece el valor de <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> que es de solo lectura.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyProperty" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetValue (dependencyProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> que hay que establecer.</param>
        <param name="value">La clase <see cref="T:System.Object" /> que va a establecer el valor.</param>
        <summary>Obtiene el valor de <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> al objeto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A> establece un enlace para la propiedad de dependencia.  
  
 <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> establece un valor directamente para <xref:System.Workflow.ComponentModel.DependencyProperty> (de forma similar, <xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> agrega un controlador directamente a las propiedades del evento de tipo).  
  
 Estos métodos son exclusivos cuando se piden la misma propiedad. Si se llama <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>, a continuación, se descartan los valores previamente establecidos utilizando <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A> en eventos). El mismo es verdadero al revés: <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> (<xref:System.Workflow.ComponentModel.DependencyObject.AddHandler%2A>) restablece el enlace asignado a <xref:System.Workflow.ComponentModel.DependencyObject.SetBinding%2A>.  
  
   
  
## Examples  
 El código siguiente muestra cómo una propiedad de dependencia se establece dentro de un objeto de dependencia utilizando <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>.  
  
 [!code-csharp[WF_Samples#166](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#166)]
 [!code-vb[WF_Samples#166](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#166)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueBase">
      <MemberSignature Language="C#" Value="public void SetValueBase (System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValueBase(class System.Workflow.ComponentModel.DependencyProperty dependencyProperty, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValueBase(System::Workflow::ComponentModel::DependencyProperty ^ dependencyProperty, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValueBase : System.Workflow.ComponentModel.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetValueBase (dependencyProperty, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyProperty" Type="System.Workflow.ComponentModel.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dependencyProperty"><see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> para establecer a <see cref="T:System.Object" />.</param>
        <param name="value"><see cref="T:System.Object" /> que se convierte en el valor de <see cref="T:System.Workflow.ComponentModel.DependencyProperty" />.</param>
        <summary>Establece el valor de <see cref="T:System.Workflow.ComponentModel.DependencyProperty" /> para la clase <see cref="T:System.Object" /> especificada, omitiendo <see cref="M:System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método es útil dentro de la implementación de invalidación de <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>. Generalmente, el código de invalidación de <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A> usaría la lógica personalizada antes de llamar al método <xref:System.Workflow.ComponentModel.DependencyObject.SetValueBase%2A>.  
  
 Para establecer una invalidación de <xref:System.Workflow.ComponentModel.DependencyObject.SetValue%2A>, se puede utilizar <xref:System.Workflow.ComponentModel.PropertyMetadata> en <xref:System.Workflow.ComponentModel.DependencyProperty>, <xref:System.Workflow.ComponentModel.DependencyProperty.Register%2A> o llamadas de <xref:System.Workflow.ComponentModel.DependencyProperty.RegisterAttached%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dependencyProperty" /> es una referencia nula (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="Site">
      <MemberSignature Language="C#" Value="public System.ComponentModel.ISite Site { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.ISite Site" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.Site" />
      <MemberSignature Language="VB.NET" Value="Public Property Site As ISite" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::ISite ^ Site { System::ComponentModel::ISite ^ get(); void set(System::ComponentModel::ISite ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Site : System.ComponentModel.ISite with get, set" Usage="System.Workflow.ComponentModel.DependencyObject.Site" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.IComponent.Site</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ComponentModel.ISite</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una referencia al componente <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> de <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</summary>
        <value>El componente <see cref="P:System.Workflow.ComponentModel.DependencyObject.Site" /> del <see cref="T:System.Workflow.ComponentModel.DependencyObject" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IComponent.Disposed">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.IComponent.Disposed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.IComponent.Disposed" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.DependencyObject.System#ComponentModel#IComponent#Disposed" />
      <MemberSignature Language="VB.NET" Value="Custom Event Disposed As EventHandler Implements System.ComponentModel.IComponent" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.IComponent.Disposed</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Representa el método que controla el evento Disposed de un componente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
Cuando se crea un delegado desechado, se identifica el método que controla el evento. Para asociar el evento al controlador, se debe agregar una instancia del delegado al evento. Siempre que se produce el evento, se llama a su controlador, a menos que se quite el delegado.

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserData">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary UserData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary UserData" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.DependencyObject.UserData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserData As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ UserData { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserData : System.Collections.IDictionary" Usage="System.Workflow.ComponentModel.DependencyObject.UserData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene <see cref="T:System.Collections.IDictionary" /> que asocia los datos personalizados a esta instancia de clase.</summary>
        <value>Un diccionario que actúa como un enlace de la extensibilidad para que los programadores manipulen las declaraciones <see cref="T:System.Workflow.ComponentModel.DependencyObject" /> para una herramienta de diseño y asocien los datos personalizados con declaraciones de actividad individuales.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es un `metaproperty`, lo que significa que es inmutable en tiempo de ejecución. `Metaproperties` No cambie después de que se crea una instancia de la propiedad en tiempo de ejecución, por lo que la propiedad debe establecerse en un valor literal en tiempo de diseño.  
  
 Esta propiedad no se utiliza en las implementaciones de declaración <xref:System.Workflow.ComponentModel.Activity> predeterminadas proporcionadas por Windows Workflow Foundation. Esta colección no se serializa. Los datos que la colección contiene no se conservan del tiempo de diseño al tiempo de ejecución.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>