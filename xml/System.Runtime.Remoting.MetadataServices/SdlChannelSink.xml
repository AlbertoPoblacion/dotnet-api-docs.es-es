<Type Name="SdlChannelSink" FullName="System.Runtime.Remoting.MetadataServices.SdlChannelSink">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26a23b101546a07f7526f7915ebf6f7f738a6225" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37634216" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SdlChannelSink : System.Runtime.Remoting.Channels.IChannelSinkBase, System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SdlChannelSink extends System.Object implements class System.Runtime.Remoting.Channels.IChannelSinkBase, class System.Runtime.Remoting.Channels.IServerChannelSink" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />
  <TypeSignature Language="VB.NET" Value="Public Class SdlChannelSink&#xA;Implements IChannelSinkBase, IServerChannelSink" />
  <TypeSignature Language="C++ CLI" Value="public ref class SdlChannelSink : System::Runtime::Remoting::Channels::IChannelSinkBase, System::Runtime::Remoting::Channels::IServerChannelSink" />
  <TypeSignature Language="F#" Value="type SdlChannelSink = class&#xA;    interface IServerChannelSink&#xA;    interface IChannelSinkBase" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSinkBase</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IServerChannelSink</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Proporciona la implementación para un receptor de canal de servidor que genera Lenguaje de descripción de servicios Web (WSDL) dinámicamente en el servidor.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Runtime.Remoting.MetadataServices.SdlChannelSink> se utiliza para crear WSDL en situaciones donde la dirección URL termina con la cadena "? wsdl".  
  
 En la tabla siguiente se muestra el canal de propiedades de configuración que se pueden especificar para este receptor de canal. Las primeras dos propiedades se combinan para controlar la publicación de WSDL de los objetos publicados por el dominio de aplicación. Si `false` se especifica para la primera propiedad, no se devuelve WSDL, independientemente de la segunda propiedad. (El valor predeterminado es `true`.) En caso contrario, el segundo controla si se permite el URI del objeto de metadatos globales para responder. (El valor predeterminado es `false`.)  
  
|Propiedad.|Descripción|  
|--------------|-----------------|  
|`metadataEnabled`|Un valor booleano que especifica si se admiten las solicitudes que acaban en "? wsdl" Si este receptor está en la cadena de receptores de canal. El valor predeterminado es `true`. Si es `false`, el receptor produce una excepción en todos los casos en los que se soliciten metadatos para los objetos del dominio de la aplicación.<br /><br /> Esta propiedad la admite únicamente la versión 1.1 de .NET Framework en las siguientes plataformas: Windows 98, Windows NT 4.0, Windows Millennium, Windows 2000, Windows XP Home, Windows XP Professional y la familia de Windows Server 2003.|  
|`remoteApplicationMetadataEnabled`|Un valor booleano que especifica si se admiten las solicitudes del objeto URI "RemoteApplicationMetadata? wsdl", que devuelve el WSDL que describe todos los objetos que se publican por el dominio de aplicación. Si `false`, a continuación, cualquier solicitud a "RemoteApplicationMetadata.rem" produce una excepción. Todos los demás "? wsdl" se respetan las solicitudes de los URI del objeto determinado. Si el valor es `true`, se admitirá la solicitud de metadatos globales. El valor predeterminado es `false`.<br /><br /> Esta propiedad la admite únicamente la versión 1.1 de .NET Framework en las siguientes plataformas: Windows 98, Windows NT 4.0, Windows Millennium, Windows 2000, Windows XP Home, Windows XP Professional y la familia de Windows Server 2003.|  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SdlChannelSink (System.Runtime.Remoting.Channels.IChannelReceiver receiver, System.Runtime.Remoting.Channels.IServerChannelSink nextSink);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Remoting.Channels.IChannelReceiver receiver, class System.Runtime.Remoting.Channels.IServerChannelSink nextSink) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.#ctor(System.Runtime.Remoting.Channels.IChannelReceiver,System.Runtime.Remoting.Channels.IServerChannelSink)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (receiver As IChannelReceiver, nextSink As IServerChannelSink)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SdlChannelSink(System::Runtime::Remoting::Channels::IChannelReceiver ^ receiver, System::Runtime::Remoting::Channels::IServerChannelSink ^ nextSink);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.MetadataServices.SdlChannelSink : System.Runtime.Remoting.Channels.IChannelReceiver * System.Runtime.Remoting.Channels.IServerChannelSink -&gt; System.Runtime.Remoting.MetadataServices.SdlChannelSink" Usage="new System.Runtime.Remoting.MetadataServices.SdlChannelSink (receiver, nextSink)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="receiver" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
        <Parameter Name="nextSink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
      </Parameters>
      <Docs>
        <param name="receiver">Indica el canal que recibirá los mensajes serializados mediante la nueva instancia de <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</param>
        <param name="nextSink">Siguiente receptor en la cadena de receptores.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Runtime.Remoting.MetadataServices.SdlChannelSink" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncProcessResponse">
      <MemberSignature Language="C#" Value="public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AsyncProcessResponse(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AsyncProcessResponse(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit&#xA;override this.AsyncProcessResponse : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream -&gt; unit" Usage="sdlChannelSink.AsyncProcessResponse (sinkStack, state, msg, headers, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="sinkStack">Pila de receptores dirigida de vuelta al receptor de transporte de servidor.</param>
        <param name="state">Información asociada al receptor actual, generada en la solicitud y necesaria en la respuesta.</param>
        <param name="msg">Mensaje de respuesta.</param>
        <param name="headers">Encabezados que se van a agregar al encabezado del mensaje devuelto al cliente.</param>
        <param name="stream">Secuencia que se devuelve al receptor de transporte.</param>
        <summary>Solicita que el receptor actual procese la respuesta de una llamada a un método enviada de forma asincrónica.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseStream">
      <MemberSignature Language="C#" Value="public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetResponseStream(class System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, class System.Runtime.Remoting.Messaging.IMessage msg, class System.Runtime.Remoting.Channels.ITransportHeaders headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetResponseStream (sinkStack As IServerResponseChannelSinkStack, state As Object, msg As IMessage, headers As ITransportHeaders) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetResponseStream(System::Runtime::Remoting::Channels::IServerResponseChannelSinkStack ^ sinkStack, System::Object ^ state, System::Runtime::Remoting::Messaging::IMessage ^ msg, System::Runtime::Remoting::Channels::ITransportHeaders ^ headers);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream&#xA;override this.GetResponseStream : System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack * obj * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders -&gt; System.IO.Stream" Usage="sdlChannelSink.GetResponseStream (sinkStack, state, msg, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
      </Parameters>
      <Docs>
        <param name="sinkStack">Pila de receptores dirigida de vuelta al receptor de transporte de servidor.</param>
        <param name="state">Información asociada al receptor actual, generada en la solicitud y necesaria en la respuesta.</param>
        <param name="msg">Mensaje de respuesta que se va a serializar.</param>
        <param name="headers">Encabezados que se van a poner en la secuencia de respuesta al cliente.</param>
        <summary>Devuelve <see cref="T:System.IO.Stream" /> donde se va a serializar el mensaje de respuesta proporcionado.</summary>
        <returns>
          <see cref="T:System.IO.Stream" /> donde se va a serializar el mensaje de respuesta proporcionado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método actual se llama cuando es necesario crear una secuencia de respuesta.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextChannelSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextChannelSink As IServerChannelSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Remoting::Channels::IServerChannelSink ^ NextChannelSink { System::Runtime::Remoting::Channels::IServerChannelSink ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextChannelSink : System.Runtime.Remoting.Channels.IServerChannelSink" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.NextChannelSink" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.IServerChannelSink</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el siguiente objeto <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> en la cadena de receptores.</summary>
        <value>Siguiente objeto <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSink" /> en la cadena de receptores.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessMessage">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage(class System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, class System.Runtime.Remoting.Messaging.IMessage requestMsg, class System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, class System.IO.Stream requestStream, [out] class System.Runtime.Remoting.Messaging.IMessage&amp; responseMsg, [out] class System.Runtime.Remoting.Channels.ITransportHeaders&amp; responseHeaders, [out] class System.IO.Stream&amp; responseStream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.MetadataServices.SdlChannelSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)" />
      <MemberSignature Language="VB.NET" Value="Public Function ProcessMessage (sinkStack As IServerChannelSinkStack, requestMsg As IMessage, requestHeaders As ITransportHeaders, requestStream As Stream, ByRef responseMsg As IMessage, ByRef responseHeaders As ITransportHeaders, ByRef responseStream As Stream) As ServerProcessing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Channels::ServerProcessing ProcessMessage(System::Runtime::Remoting::Channels::IServerChannelSinkStack ^ sinkStack, System::Runtime::Remoting::Messaging::IMessage ^ requestMsg, System::Runtime::Remoting::Channels::ITransportHeaders ^ requestHeaders, System::IO::Stream ^ requestStream, [Runtime::InteropServices::Out] System::Runtime::Remoting::Messaging::IMessage ^ % responseMsg, [Runtime::InteropServices::Out] System::Runtime::Remoting::Channels::ITransportHeaders ^ % responseHeaders, [Runtime::InteropServices::Out] System::IO::Stream ^ % responseStream);" />
      <MemberSignature Language="F#" Value="abstract member ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing&#xA;override this.ProcessMessage : System.Runtime.Remoting.Channels.IServerChannelSinkStack * System.Runtime.Remoting.Messaging.IMessage * System.Runtime.Remoting.Channels.ITransportHeaders * System.IO.Stream *  *  *  -&gt; System.Runtime.Remoting.Channels.ServerProcessing" Usage="sdlChannelSink.ProcessMessage (sinkStack, requestMsg, requestHeaders, requestStream, responseMsg, responseHeaders, responseStream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Channels.ServerProcessing</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
        <Parameter Name="requestMsg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        <Parameter Name="requestHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="responseMsg" Type="System.Runtime.Remoting.Messaging.IMessage&amp;" RefType="out" />
        <Parameter Name="responseHeaders" Type="System.Runtime.Remoting.Channels.ITransportHeaders&amp;" RefType="out" />
        <Parameter Name="responseStream" Type="System.IO.Stream&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sinkStack">Pila de receptores de canal que llama al receptor actual.</param>
        <param name="requestMsg">Mensaje que contiene la solicitud.</param>
        <param name="requestHeaders">Encabezados recuperados del mensaje entrante del cliente.</param>
        <param name="requestStream">Secuencia que necesita procesarse y pasarse al receptor de deserialización.</param>
        <param name="responseMsg">El resultado que devuelve este método contiene un <see cref="T:System.Runtime.Remoting.Messaging.IMessage" /> con el mensaje de respuesta. Este parámetro se pasa sin inicializar.</param>
        <param name="responseHeaders">El resultado que devuelve este método contiene <see cref="T:System.Runtime.Remoting.Channels.ITransportHeaders" /> con los encabezados que se van a agregar al encabezado del mensaje devuelto al cliente. Este parámetro se pasa sin inicializar.</param>
        <param name="responseStream">Cuando este método finaliza, contiene un <see cref="T:System.IO.Stream" /> dirigido al receptor de transporte. Este parámetro se pasa sin inicializar.</param>
        <summary>Solicita el procesamiento de mensajes del receptor actual.</summary>
        <returns>Valor de estado de <see cref="T:System.Runtime.Remoting.Channels.ServerProcessing" /> que proporciona información sobre cómo se procesa el mensaje.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La función del proxy consiste en convertir una llamada de método que se invoca en él en un objeto de mensaje. El objeto de mensaje, que implementa el <xref:System.Runtime.Remoting.Messaging.IMessage> de la interfaz, se pasa desde el extremo del cliente al servidor mediante la invocación <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> en objetos del receptor del mensaje. Los receptores de mensajes se encadenan, lo que significa que cada receptor de mensajes es responsable de llamar a <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> en el siguiente receptor de mensajes después de haber realizado su trabajo. Por ejemplo, un receptor de mensajes relacionados con la sincronización podría provocar un bloqueo se adquirió o libere y delegar en el receptor de mensajes de nivel inferior.  
  
 Cuando el receptor de canal de formateador Obtiene un mensaje que debe enviarse a través del canal, llama a <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, pasando el mensaje como un parámetro. El receptor de formateador, a continuación, crea la matriz del encabezado de transporte y llama a <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> en el receptor de formateador. Esta llamada se envía por la cadena de receptores y cualquier receptor puede crear una secuencia de solicitud que se devolverá al receptor del formateador. Después de esta llamada, se serializa el mensaje, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A> se llama en la primera cadena en la cadena de receptores, y se pasa el mensaje a los receptores de canal.  
  
 Después de que los receptores de canal recibe el mensaje, puede escribir datos en el flujo, agregar encabezados a la matriz del encabezado y se agreguen a la pila de receptores antes de reenviar la llamada al siguiente receptor. Cuando la llamada llega al receptor de transporte al final de la cadena, el receptor de transporte envía los encabezados y mensaje serializado a través del canal en el servidor, donde se invierte el proceso.  
  
 Cuando el mensaje llega al servidor, el receptor de transporte y recupera los encabezados de mensaje serializado de la secuencia y reenvía a través de la cadena de receptores hasta que alcanzan el receptor de formateador. A continuación, el receptor de formateador deserializa el mensaje y lo reenvía a la comunicación remota, donde el mensaje se convierte en una llamada al método y se llama al objeto de servidor.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Properties" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ Properties { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.IDictionary" Usage="System.Runtime.Remoting.MetadataServices.SdlChannelSink.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una interfaz <see cref="T:System.Collections.IDictionary" /> de propiedades del receptor de canal actual.</summary>
        <value>Objeto <see cref="T:System.Collections.IDictionary" /> de propiedades del receptor de canales actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Para obtener más información, consulte [ &#91; \<topic://cpconchannelformatterconfigurationproperties >&#93;](http://msdn.microsoft.com/library/226ecf74-ebbd-4ea0-a701-dcf4441deefe).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>