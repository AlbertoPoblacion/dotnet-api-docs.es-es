<Type Name="FileSecurity" FullName="System.Security.AccessControl.FileSecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a7b5f2ecee6b8b90ecb7cd1bdd80bc8d66d8c9ce" />
    <Meta Name="ms.sourcegitcommit" Value="29c771f79cf4eac4f49e5fae5f1aa8b457acf146" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/21/2018" />
    <Meta Name="ms.locfileid" Value="36298653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FileSecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FileSecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.FileSecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FileSecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileSecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa el control de acceso y la seguridad de auditoría de un archivo. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.AccessControl.FileSecurity> clase especifica los derechos de acceso para un archivo del sistema y cómo auditar los intentos de acceso.  Esta clase representa los derechos de acceso y auditoría como un conjunto de reglas. Cada regla de acceso se representa mediante un <xref:System.Security.AccessControl.FileSystemAccessRule> objeto, mientras que cada regla de auditoría se representa mediante un <xref:System.Security.AccessControl.FileSystemAuditRule> objeto.  
  
 La <xref:System.Security.AccessControl.FileSecurity> clase es una abstracción del sistema de seguridad de archivos Microsoft Windows subyacente. En este sistema, cada archivo tiene una lista de control de acceso discrecional (DACL) que controla el acceso al archivo y una lista de control de acceso de sistema (SACL), que especifica los intentos de control de acceso que se auditan.  El <xref:System.Security.AccessControl.FileSystemAccessRule> y <xref:System.Security.AccessControl.FileSystemAuditRule> clases son abstracciones de las entradas de control de acceso (ACE) que comprenden las DACL y SACL.  
  
 La <xref:System.Security.AccessControl.FileSecurity> clase oculta muchos de los detalles de las DACL y SACL; no tiene que preocuparse de clasificación de ACE ni DACL null.  
  
 Use la <xref:System.Security.AccessControl.FileSecurity> clase para recuperar, agregar o cambiar las reglas de acceso que representan la lista DACL y SACL de un archivo.  
  
 Para conservar el acceso nuevo o modificado o las reglas a un archivo de auditoría, utilice el <xref:System.IO.FileInfo.SetAccessControl%2A> método. Para recuperar las reglas de acceso o de auditoría de un archivo existente, utilice el método <xref:System.IO.FileInfo.GetAccessControl%2A>.  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza la <xref:System.Security.AccessControl.FileSecurity> clase para agregar y, a continuación, quitar una entrada de lista (ACL) del control de acceso de un archivo.  Para ejecutar este ejemplo, debe proporcionar una cuenta de usuario o grupo válida.  
  
 [!code-cpp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.File.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.File.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.FileSecurity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor cuando desee crear vacío <xref:System.Security.AccessControl.FileSecurity> objeto que no se basa en un archivo existente.  A continuación, puede rellenar el objeto con información de control de acceso y aplicarlo a un archivo.  
  
 Puede agregar acceso o de auditoría de las reglas para la <xref:System.Security.AccessControl.FileSecurity> objeto mediante el <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> método. Puede quitar el acceso o de auditoría de reglas mediante el <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> método.  
  
 Para conservar el acceso nuevo o modificado o las reglas a un archivo de auditoría, utilice el <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> método.  Para obtener acceso o las reglas de un archivo existente de auditoría, utilice el <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">El sistema operativo actual no es Microsoft Windows 2000 o posterior.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileSecurity (string fileName, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string fileName, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fileName As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileSecurity(System::String ^ fileName, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="fileName">Ubicación del archivo a partir del que se va a crear un objeto <see cref="T:System.Security.AccessControl.FileSecurity" />.</param>
        <param name="includeSections">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlSections" /> que especifica el tipo de información de la lista de control de acceso (ACL) que se va a recuperar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.FileSecurity" /> a partir de un archivo especificado utilizando los valores especificados de la enumeración <see cref="T:System.Security.AccessControl.AccessControlSections" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor recupera la información de control de acceso para el archivo especificado y, a continuación, se crea un <xref:System.Security.AccessControl.FileSecurity> objeto que encapsula esa información.  A continuación, puede inspeccionar, agregar o eliminar la información de control de acceso para el archivo especificado.  
  
 Puede agregar acceso o de auditoría de las reglas para la <xref:System.Security.AccessControl.FileSecurity> objeto mediante el <xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A> método. Puede quitar el acceso o de auditoría de reglas mediante el <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A> método.  
  
 Para conservar el acceso nuevo o modificado o las reglas a un archivo de auditoría, utilice el <xref:System.IO.File.SetAccessControl%2A> o <xref:System.IO.FileInfo.SetAccessControl%2A> método.  Para obtener acceso o las reglas de un archivo existente de auditoría, utilice el <xref:System.IO.File.GetAccessControl%2A> o <xref:System.IO.FileInfo.GetAccessControl%2A> método.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="fileName" /> es una cadena de longitud cero que solo contiene espacios en blanco o uno o varios caracteres no válidos definidos por <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso especificada no es válida (por ejemplo, está en una unidad no asignada).</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado en el parámetro <paramref name="fileName" />.</exception>
        <exception cref="T:System.IO.IOException">Se produjo un error de E/S al abrir el archivo.</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="path" /> está en un formato no válido.</exception>
        <exception cref="T:System.Runtime.InteropServices.SEHException">El parámetro <paramref name="fileName" /> es <see langword="null" />.</exception>
        <exception cref="T:System.PlatformNotSupportedException">El sistema operativo actual no es Microsoft Windows 2000 o posterior.</exception>
        <exception cref="T:System.IO.PathTooLongException">La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">La cuenta del sistema actual no tiene privilegios administrativos.</exception>
        <exception cref="T:System.SystemException">No se encuentra el archivo.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El parámetro <paramref name="fileName" /> especificó un archivo que es de solo lectura.  -o bien- Esta operación no es compatible con la plataforma actual.  -o bien- El parámetro <paramref name="fileName" /> ha especificado un directorio.  -o bien- El autor de la llamada no dispone del permiso necesario.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para obtener permiso para tener acceso al archivo especificado por el <paramref name="name" /> parámetro. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" /> acción de seguridad: petición</permission>
        <block subset="none" type="usage">
          <para>El <see cref="M:System.Security.AccessControl.FileSecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" /> constructor requiere que la cuenta actual tengan privilegios administrativos. Para crear una nueva instancia de la <see cref="T:System.Security.AccessControl.FileSecurity" /> clase para un archivo específico con una cuenta que no tiene privilegios administrativos, utilice el <see cref="M:System.IO.FileStream.GetAccessControl" /> método.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>