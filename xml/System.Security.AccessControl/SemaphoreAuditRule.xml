<Type Name="SemaphoreAuditRule" FullName="System.Security.AccessControl.SemaphoreAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4f403058fabbb5f0586e35596663b00f26947487" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49138198" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SemaphoreAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SemaphoreAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.SemaphoreAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SemaphoreAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemaphoreAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type SemaphoreAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa un conjunto de derechos de acceso que se va a auditar para un usuario o grupo. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.AccessControl.SemaphoreAuditRule> clase es un conjunto de clases de .NET Framework proporciona para administrar la seguridad de control de acceso de Windows en semáforos de sistema con nombre. Para obtener información general de estas clases y su relación con las estructuras de control de acceso de Windows subyacentes, vea <xref:System.Security.AccessControl.SemaphoreSecurity>.  
  
> [!NOTE]
>  Seguridad de control de acceso de Windows solo es significativa para los semáforos con nombre del sistema. Si un <xref:System.Threading.Semaphore> objeto representa un semáforo local, el control de acceso es irrelevante.  
  
 Para obtener una lista de las reglas de auditoría que se aplica actualmente a un semáforo con nombre, use la <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> método para obtener un <xref:System.Security.AccessControl.SemaphoreSecurity> objeto y, a continuación, usar su <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> método para obtener una colección de <xref:System.Security.AccessControl.SemaphoreAuditRule> objetos.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> los objetos no se asignan uno a uno con entradas de control de acceso en la lista de control de acceso discrecional (DACL) subyacente. Cuando se obtiene el conjunto de todas las reglas de auditoría para un semáforo, el conjunto contiene el número mínimo de reglas actualmente necesarias para expresar todas las entradas de control de acceso.  
  
> [!NOTE]
>  Las entradas de control de acceso subyacente cambian al aplicar y quitar las reglas. La información de las reglas se combina si es posible, para mantener el menor número de entradas de control de acceso. Por lo tanto, al leer la lista de reglas actual, no podría ser exactamente igual que la lista de todas las reglas que ha agregado.  
  
 Use <xref:System.Security.AccessControl.SemaphoreAuditRule> objetos para especificar los derechos de acceso que se auditarán para un usuario o grupo. Para aplicar una regla a un semáforo de sistema con nombre, use la <xref:System.Threading.Semaphore.GetAccessControl%2A?displayProperty=nameWithType> método para obtener el <xref:System.Security.AccessControl.SemaphoreSecurity> objeto. Modificar el <xref:System.Security.AccessControl.SemaphoreSecurity> objeto mediante el uso de sus métodos para agregar la regla y, a continuación, utilice el <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> método volver a adjuntar el objeto de seguridad.  
  
> [!IMPORTANT]
>  Cambios en un <xref:System.Security.AccessControl.SemaphoreSecurity> objeto no afectan a los niveles de acceso del semáforo con nombre hasta que llame a la <xref:System.Threading.Semaphore.SetAccessControl%2A?displayProperty=nameWithType> método para asignar el objeto de seguridad modificada para el semáforo con nombre.  
  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> los objetos son inmutables. Seguridad para un semáforo se modifica utilizando los métodos de la <xref:System.Security.AccessControl.SemaphoreSecurity> clase para agregar o quitar reglas; al hacerlo, se modifican las entradas de control de acceso subyacente.  
  
> [!NOTE]
>  Seguridad en objetos de sincronización no es compatible con Windows 98 o Windows Millennium Edition.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemaphoreAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.SemaphoreRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.SemaphoreRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.SemaphoreAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.SemaphoreRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As SemaphoreRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemaphoreAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::SemaphoreRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.SemaphoreAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.SemaphoreRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.SemaphoreAuditRule" Usage="new System.Security.AccessControl.SemaphoreAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.SemaphoreRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">Usuario o grupo al que se aplica la regla. Debe ser de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" /> o de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que especifica los tipos de acceso que se van a auditar.</param>
        <param name="flags">Una combinación bit a bit de valores <see cref="T:System.Security.AccessControl.AuditFlags" /> que indica si el resultado de la operación auditada es de éxito, error o ambos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.SemaphoreAuditRule" />, que especifica el usuario o grupo que se va a auditar, los derechos que se van a auditar y si el resultado de operación auditada es de éxito, error o ambos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear un <xref:System.Security.Principal.NTAccount> desde una cadena que representa un nombre de usuario o grupo de objetos, utilice el <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> especifica un valor no válido.  
  
O bien 
 <paramref name="flags" /> especifica un valor no válido.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="identity" /> es <see langword="null" />.  
  
O bien 
 <paramref name="eventRights" /> es cero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> no es de tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />, ni de un tipo que, como <see cref="T:System.Security.Principal.NTAccount" />, se pueda convertir al tipo <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SemaphoreRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.SemaphoreRights SemaphoreRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.SemaphoreRights SemaphoreRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SemaphoreRights As SemaphoreRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::SemaphoreRights SemaphoreRights { System::Security::AccessControl::SemaphoreRights get(); };" />
      <MemberSignature Language="F#" Value="member this.SemaphoreRights : System.Security.AccessControl.SemaphoreRights" Usage="System.Security.AccessControl.SemaphoreAuditRule.SemaphoreRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.SemaphoreRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los derechos de acceso que se ven afectados por la regla de auditoría.</summary>
        <value>Combinación bit a bit de valores de <see cref="T:System.Security.AccessControl.SemaphoreRights" /> que indica los derechos afectados por la regla de auditoría.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.SemaphoreAuditRule> los objetos son inmutables. Puede crear una nueva regla de auditoría que representa un usuario diferente, derechos diferentes o una combinación diferente de <xref:System.Security.AccessControl.AuditFlags> valores, pero no se puede modificar una regla de auditoría existente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>