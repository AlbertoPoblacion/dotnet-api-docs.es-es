<Type Name="RegistryAccessRule" FullName="System.Security.AccessControl.RegistryAccessRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a10fa2e1cc108c3aba7b66c04ae68f8616d9c2c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36627842" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class RegistryAccessRule : System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit RegistryAccessRule extends System.Security.AccessControl.AccessRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.RegistryAccessRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class RegistryAccessRule&#xA;Inherits AccessRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryAccessRule sealed : System::Security::AccessControl::AccessRule" />
  <TypeSignature Language="F#" Value="type RegistryAccessRule = class&#xA;    inherit AccessRule" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AccessRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="90e58-101">Represents a set of access rights allowed or denied for a user or group.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90e58-101">Represents a set of access rights allowed or denied for a user or group.</span>
      </span>
      <span data-ttu-id="90e58-102">This class cannot be inherited.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90e58-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e58-103">La <xref:System.Security.AccessControl.RegistryAccessRule> clase es parte de un conjunto de clases que .NET Framework proporciona para administrar la seguridad de control de acceso de Windows en claves del registro.</span><span class="sxs-lookup"><span data-stu-id="90e58-103">The <xref:System.Security.AccessControl.RegistryAccessRule> class is one of a set of classes that the .NET Framework provides for managing Windows access control security on registry keys.</span></span> <span data-ttu-id="90e58-104">Para obtener información general de estas clases y su relación con las estructuras de control de acceso de Windows subyacentes, vea <xref:System.Security.AccessControl.RegistrySecurity>.</span><span class="sxs-lookup"><span data-stu-id="90e58-104">For an overview of these classes, and their relationship to the underlying Windows access control structures, see <xref:System.Security.AccessControl.RegistrySecurity>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90e58-105">Seguridad de control de acceso de Windows solo puede aplicarse a las claves del registro.</span><span class="sxs-lookup"><span data-stu-id="90e58-105">Windows access control security can only be applied to registry keys.</span></span> <span data-ttu-id="90e58-106">No se puede aplicar a pares de clave/valor individuales almacenados en una clave.</span><span class="sxs-lookup"><span data-stu-id="90e58-106">It cannot be applied to individual key/value pairs stored in a key.</span></span>  
  
 <span data-ttu-id="90e58-107">Para obtener una lista de las reglas que se aplican actualmente a una clave del registro, use el <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obtener un <xref:System.Security.AccessControl.RegistrySecurity> objeto y, a continuación, usar su <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> método para obtener una colección de <xref:System.Security.AccessControl.RegistryAccessRule> objetos.</span><span class="sxs-lookup"><span data-stu-id="90e58-107">To get a list of the rules currently applied to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get a <xref:System.Security.AccessControl.RegistrySecurity> object, and then use its <xref:System.Security.AccessControl.CommonObjectSecurity.GetAccessRules%2A> method to obtain a collection of <xref:System.Security.AccessControl.RegistryAccessRule> objects.</span></span>  
  
 <span data-ttu-id="90e58-108"><xref:System.Security.AccessControl.RegistryAccessRule> objetos no se asignan uno a uno con entradas de control de acceso en la lista de acceso de control discrecional (DACL) subyacente.</span><span class="sxs-lookup"><span data-stu-id="90e58-108"><xref:System.Security.AccessControl.RegistryAccessRule> objects do not map one-to-one with access control entries in the underlying discretionary control access list (DACL).</span></span> <span data-ttu-id="90e58-109">Cuando obtiene el conjunto de todas las reglas de acceso para una clave del registro, el conjunto contiene el número mínimo de reglas actualmente necesarias para expresar todas las entradas de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="90e58-109">When you get the set of all access rules for a registry key, the set contains the minimum number of rules currently required to express all the access control entries.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90e58-110">Las entradas de control de acceso subyacentes cambian al aplicar y quitar las reglas.</span><span class="sxs-lookup"><span data-stu-id="90e58-110">The underlying access control entries change as you apply and remove rules.</span></span> <span data-ttu-id="90e58-111">La información de las reglas se combina si es posible, para mantener el menor número de entradas de control de acceso.</span><span class="sxs-lookup"><span data-stu-id="90e58-111">The information in rules is merged if possible, to maintain the smallest number of access control entries.</span></span> <span data-ttu-id="90e58-112">Por lo tanto, al leer la lista actual de reglas, no podría ser exactamente igual que la lista de todas las reglas que ha agregado.</span><span class="sxs-lookup"><span data-stu-id="90e58-112">Thus, when you read the current list of rules, it might not look exactly like the list of all the rules you have added.</span></span>  
  
 <span data-ttu-id="90e58-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objetos para especificar los derechos de acceso para permitir o denegar a un usuario o grupo.</span><span class="sxs-lookup"><span data-stu-id="90e58-113">Use <xref:System.Security.AccessControl.RegistryAccessRule> objects to specify access rights to allow or deny to a user or group.</span></span> <span data-ttu-id="90e58-114">Un <xref:System.Security.AccessControl.RegistryAccessRule> objeto siempre representa permite acceso o deniega el acceso, nunca ambos.</span><span class="sxs-lookup"><span data-stu-id="90e58-114">A <xref:System.Security.AccessControl.RegistryAccessRule> object always represents either allowed access or denied access, never both.</span></span>  
  
 <span data-ttu-id="90e58-115">Para aplicar una regla a una clave del registro, utilice la <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> método para obtener la <xref:System.Security.AccessControl.RegistrySecurity> objeto.</span><span class="sxs-lookup"><span data-stu-id="90e58-115">To apply a rule to a registry key, use the <xref:Microsoft.Win32.RegistryKey.GetAccessControl%2A?displayProperty=nameWithType> method to get the <xref:System.Security.AccessControl.RegistrySecurity> object.</span></span> <span data-ttu-id="90e58-116">Modificar el <xref:System.Security.AccessControl.RegistrySecurity> objeto mediante el uso de sus métodos para agregar la regla y, a continuación, usar el <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para volver a adjuntar el objeto de seguridad.</span><span class="sxs-lookup"><span data-stu-id="90e58-116">Modify the <xref:System.Security.AccessControl.RegistrySecurity> object by using its methods to add the rule, and then use the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to reattach the security object.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="90e58-117">Cambios realizados en un <xref:System.Security.AccessControl.RegistrySecurity> objeto no afectan a los niveles de acceso de la clave del registro hasta que llame a la <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> método para asignar el objeto de seguridad alterado a la clave del registro.</span><span class="sxs-lookup"><span data-stu-id="90e58-117">Changes you make to a <xref:System.Security.AccessControl.RegistrySecurity> object do not affect the access levels of the registry key until you call the <xref:Microsoft.Win32.RegistryKey.SetAccessControl%2A?displayProperty=nameWithType> method to assign the altered security object to the registry key.</span></span>  
  
 <span data-ttu-id="90e58-118"><xref:System.Security.AccessControl.RegistryAccessRule> los objetos son inmutables.</span><span class="sxs-lookup"><span data-stu-id="90e58-118"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="90e58-119">Seguridad de una clave del registro se modifica utilizando los métodos de la <xref:System.Security.AccessControl.RegistrySecurity> clase para agregar o quitar reglas; tal y como lo hace, se modifican las entradas de control de acceso subyacentes.</span><span class="sxs-lookup"><span data-stu-id="90e58-119">Security for a registry key is modified using the methods of the <xref:System.Security.AccessControl.RegistrySecurity> class to add or remove rules; as you do this, the underlying access control entries are modified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90e58-120">En el ejemplo de código siguiente se muestra las reglas de acceso con herencia y propagación.</span><span class="sxs-lookup"><span data-stu-id="90e58-120">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="90e58-121">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> objeto, a continuación, crea y agrega dos reglas que tienen el <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> marca.</span><span class="sxs-lookup"><span data-stu-id="90e58-121">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="90e58-122">La primera regla no tiene ningún indicadores de propagación, mientras la segunda tiene <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> y <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="90e58-122">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="90e58-123">El programa muestra las reglas en la <xref:System.Security.AccessControl.RegistrySecurity> del objeto y, a continuación, utiliza el objeto para crear una subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-123">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the object to create a subkey.</span></span> <span data-ttu-id="90e58-124">El programa crea a un elemento secundario subclave y una una subclave y, a continuación, muestra la seguridad para cada subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-124">The program creates a child subkey and a grandchild subkey, and then displays the security for each subkey.</span></span> <span data-ttu-id="90e58-125">Por último, el programa elimina las claves de prueba.</span><span class="sxs-lookup"><span data-stu-id="90e58-125">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90e58-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-126">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="90e58-127">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-127">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="90e58-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-128">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="90e58-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-129">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="90e58-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-130">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90e58-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-131">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e58-132">Este constructor especifica la herencia y propagación de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="90e58-132">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="90e58-133">Es decir, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> y <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="90e58-133">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="90e58-134">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-134">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-135">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-135">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90e58-136">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-136">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="90e58-137">-or-  <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-137">-or-  <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="90e58-138">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-138">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="90e58-139">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-139">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="90e58-140">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-140">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="90e58-141">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-141">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values indicating whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90e58-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-142">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e58-143">Este constructor especifica la herencia y propagación de forma predeterminada.</span><span class="sxs-lookup"><span data-stu-id="90e58-143">This constructor specifies default propagation and inheritance.</span></span> <span data-ttu-id="90e58-144">Es decir, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> y <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="90e58-144">That is, <xref:System.Security.AccessControl.InheritanceFlags.None?displayProperty=nameWithType> and <xref:System.Security.AccessControl.PropagationFlags.None?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="90e58-145">Este constructor es equivalente a crear una <xref:System.Security.Principal.NTAccount> objeto, pasando `identity` a la <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor y pasar el recién creado <xref:System.Security.Principal.NTAccount> el objeto a la <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="90e58-145">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90e58-146">En el ejemplo de código siguiente se crea reglas de acceso del registro y se agregan a un <xref:System.Security.AccessControl.RegistrySecurity> objeto y muestra cómo las reglas que conceden y deniegan derechos permanecen aparte, mientras las reglas compatibles del mismo tipo se combina.</span><span class="sxs-lookup"><span data-stu-id="90e58-146">The following code example creates registry access rules and adds them to a <xref:System.Security.AccessControl.RegistrySecurity> object, showing how rules that allow and deny rights remain separate, while compatible rules of the same kind are merged.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistrySecurity.AddAccessRule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistrySecurity.AddAccessRule/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="90e58-147">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-147">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-148">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-148">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90e58-149">
            <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-149">
              <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="90e58-150">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-150">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="90e58-151">-or-  <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-151">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="90e58-152">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-152">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="90e58-153">The user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-153">The user or group the rule applies to.</span>
          </span>
          <span data-ttu-id="90e58-154">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-154">Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="90e58-155">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-155">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values specifying the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="90e58-156">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-156">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="90e58-157">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-157">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="90e58-158">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-158">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90e58-159">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-159">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e58-160">Todas las claves del registro son contenedores, por lo que es la única marca de herencia que es significativa para las claves del registro la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="90e58-160">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="90e58-161">Si no se especifica este marcador, los indicadores de propagación se omiten y se ve afectada sólo la clave inmediata.</span><span class="sxs-lookup"><span data-stu-id="90e58-161">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="90e58-162">Si el indicador está presente, la regla se propaga como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="90e58-162">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="90e58-163">La tabla se da por supuesto que hay una subclave S con una subclave CS secundaria y una subclave GS.</span><span class="sxs-lookup"><span data-stu-id="90e58-163">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="90e58-164">Es decir, la ruta de acceso para la segunda subclave S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="90e58-164">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="90e58-165">Indicadores de propagación</span><span class="sxs-lookup"><span data-stu-id="90e58-165">Propagation flags</span></span>|<span data-ttu-id="90e58-166">S</span><span class="sxs-lookup"><span data-stu-id="90e58-166">S</span></span>|<span data-ttu-id="90e58-167">CS</span><span class="sxs-lookup"><span data-stu-id="90e58-167">CS</span></span>|<span data-ttu-id="90e58-168">GS</span><span class="sxs-lookup"><span data-stu-id="90e58-168">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="90e58-169">X</span><span class="sxs-lookup"><span data-stu-id="90e58-169">X</span></span>|<span data-ttu-id="90e58-170">X</span><span class="sxs-lookup"><span data-stu-id="90e58-170">X</span></span>|<span data-ttu-id="90e58-171">X</span><span class="sxs-lookup"><span data-stu-id="90e58-171">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="90e58-172">X</span><span class="sxs-lookup"><span data-stu-id="90e58-172">X</span></span>|<span data-ttu-id="90e58-173">X</span><span class="sxs-lookup"><span data-stu-id="90e58-173">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="90e58-174">X</span><span class="sxs-lookup"><span data-stu-id="90e58-174">X</span></span>|<span data-ttu-id="90e58-175">X</span><span class="sxs-lookup"><span data-stu-id="90e58-175">X</span></span>|  
|<span data-ttu-id="90e58-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="90e58-176"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="90e58-177">X</span><span class="sxs-lookup"><span data-stu-id="90e58-177">X</span></span>||  
  
 <span data-ttu-id="90e58-178">El modelo para la segunda subclave secundaria rige todas las subclaves contenidas en esa segunda subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-178">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="90e58-179">Por ejemplo, si la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> marca se especifica para `inheritanceFlags` y <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> se especifica la marca de propagación para `propagationFlags`, esta regla no se aplica a la subclave inmediata, pero se aplican a todas sus subclaves secundarias inmediatas y a todas las subclaves Estas notas contienen.</span><span class="sxs-lookup"><span data-stu-id="90e58-179">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90e58-180">Aunque se puede especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> una marca para `inheritanceFlags`, no hay ningún punto de hacerlo.</span><span class="sxs-lookup"><span data-stu-id="90e58-180">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="90e58-181">Para los fines de control de acceso, los pares de nombre/valor de una subclave no son objetos independientes.</span><span class="sxs-lookup"><span data-stu-id="90e58-181">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="90e58-182">Los derechos de acceso a los pares de nombre/valor son controlados por los derechos de la subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-182">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="90e58-183">Además, dado que todas las subclaves son contenedores (es decir, pueden contener otras subclaves), no se ven afectados por la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca.</span><span class="sxs-lookup"><span data-stu-id="90e58-183">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="90e58-184">Por último, especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca complica de manera innecesaria el mantenimiento de reglas, puesto que interfiere con la combinación de las reglas de otro modo serían compatibles.</span><span class="sxs-lookup"><span data-stu-id="90e58-184">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="90e58-185">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-185">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-186">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-186">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-187">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-187">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-188">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-188">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90e58-189">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-189">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="90e58-190">-or-  <paramref name="registryRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-190">-or-  <paramref name="registryRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="90e58-191">
            <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-191">
              <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" />, nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RegistryAccessRule (string identity, System.Security.AccessControl.RegistryRights registryRights, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string identity, valuetype System.Security.AccessControl.RegistryRights registryRights, valuetype System.Security.AccessControl.InheritanceFlags inheritanceFlags, valuetype System.Security.AccessControl.PropagationFlags propagationFlags, valuetype System.Security.AccessControl.AccessControlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.RegistryAccessRule.#ctor(System.String,System.Security.AccessControl.RegistryRights,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RegistryAccessRule(System::String ^ identity, System::Security::AccessControl::RegistryRights registryRights, System::Security::AccessControl::InheritanceFlags inheritanceFlags, System::Security::AccessControl::PropagationFlags propagationFlags, System::Security::AccessControl::AccessControlType type);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.RegistryAccessRule : string * System.Security.AccessControl.RegistryRights * System.Security.AccessControl.InheritanceFlags * System.Security.AccessControl.PropagationFlags * System.Security.AccessControl.AccessControlType -&gt; System.Security.AccessControl.RegistryAccessRule" Usage="new System.Security.AccessControl.RegistryAccessRule (identity, registryRights, inheritanceFlags, propagationFlags, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.String" />
        <Parameter Name="registryRights" Type="System.Security.AccessControl.RegistryRights" />
        <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
        <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
      </Parameters>
      <Docs>
        <param name="identity">
          <span data-ttu-id="90e58-192">The name of the user or group the rule applies to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-192">The name of the user or group the rule applies to.</span>
          </span>
        </param>
        <param name="registryRights">
          <span data-ttu-id="90e58-193">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-193">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied.</span>
          </span>
        </param>
        <param name="inheritanceFlags">
          <span data-ttu-id="90e58-194">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-194">A bitwise combination of <see cref="T:System.Security.AccessControl.InheritanceFlags" /> flags specifying how access rights are inherited from other objects.</span>
          </span>
        </param>
        <param name="propagationFlags">
          <span data-ttu-id="90e58-195">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-195">A bitwise combination of <see cref="T:System.Security.AccessControl.PropagationFlags" /> flags specifying how access rights are propagated to other objects.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="90e58-196">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-196">One of the <see cref="T:System.Security.AccessControl.AccessControlType" /> values specifying whether the rights are allowed or denied.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90e58-197">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-197">Initializes a new instance of the <see cref="T:System.Security.AccessControl.RegistryAccessRule" /> class, specifying the name of the user or group the rule applies to, the access rights, the inheritance flags, the propagation flags, and whether the specified access rights are allowed or denied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e58-198">Todas las claves del registro son contenedores, por lo que es la única marca de herencia que es significativa para las claves del registro la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> marca.</span><span class="sxs-lookup"><span data-stu-id="90e58-198">All registry keys are containers, so the only inheritance flag that is meaningful for registry keys is the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="90e58-199">Si no se especifica este marcador, los indicadores de propagación se omiten y se ve afectada sólo la clave inmediata.</span><span class="sxs-lookup"><span data-stu-id="90e58-199">If this flag is not specified, the propagation flags are ignored, and only the immediate key is affected.</span></span> <span data-ttu-id="90e58-200">Si el indicador está presente, la regla se propaga como se muestra en la tabla siguiente.</span><span class="sxs-lookup"><span data-stu-id="90e58-200">If the flag is present, the rule is propagated as shown in the following table.</span></span> <span data-ttu-id="90e58-201">La tabla se da por supuesto que hay una subclave S con una subclave CS secundaria y una subclave GS.</span><span class="sxs-lookup"><span data-stu-id="90e58-201">The table assumes there is a subkey S with child subkey CS and grandchild subkey GS.</span></span> <span data-ttu-id="90e58-202">Es decir, la ruta de acceso para la segunda subclave S\CS\GS.</span><span class="sxs-lookup"><span data-stu-id="90e58-202">That is, the path for the grandchild subkey is S\CS\GS.</span></span>  
  
|<span data-ttu-id="90e58-203">Indicadores de propagación</span><span class="sxs-lookup"><span data-stu-id="90e58-203">Propagation flags</span></span>|<span data-ttu-id="90e58-204">S</span><span class="sxs-lookup"><span data-stu-id="90e58-204">S</span></span>|<span data-ttu-id="90e58-205">CS</span><span class="sxs-lookup"><span data-stu-id="90e58-205">CS</span></span>|<span data-ttu-id="90e58-206">GS</span><span class="sxs-lookup"><span data-stu-id="90e58-206">GS</span></span>|  
|-----------------------|-------|--------|--------|  
|<xref:System.Security.AccessControl.PropagationFlags.None>|<span data-ttu-id="90e58-207">X</span><span class="sxs-lookup"><span data-stu-id="90e58-207">X</span></span>|<span data-ttu-id="90e58-208">X</span><span class="sxs-lookup"><span data-stu-id="90e58-208">X</span></span>|<span data-ttu-id="90e58-209">X</span><span class="sxs-lookup"><span data-stu-id="90e58-209">X</span></span>|  
|<xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>|<span data-ttu-id="90e58-210">X</span><span class="sxs-lookup"><span data-stu-id="90e58-210">X</span></span>|<span data-ttu-id="90e58-211">X</span><span class="sxs-lookup"><span data-stu-id="90e58-211">X</span></span>||  
|<xref:System.Security.AccessControl.PropagationFlags.InheritOnly>||<span data-ttu-id="90e58-212">X</span><span class="sxs-lookup"><span data-stu-id="90e58-212">X</span></span>|<span data-ttu-id="90e58-213">X</span><span class="sxs-lookup"><span data-stu-id="90e58-213">X</span></span>|  
|<span data-ttu-id="90e58-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span><span class="sxs-lookup"><span data-stu-id="90e58-214"><xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit>, <xref:System.Security.AccessControl.PropagationFlags.InheritOnly></span></span>||<span data-ttu-id="90e58-215">X</span><span class="sxs-lookup"><span data-stu-id="90e58-215">X</span></span>||  
  
 <span data-ttu-id="90e58-216">El modelo para la segunda subclave secundaria rige todas las subclaves contenidas en esa segunda subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-216">The pattern for the grandchild subkey governs all subkeys contained by the grandchild subkey.</span></span>  
  
 <span data-ttu-id="90e58-217">Por ejemplo, si la <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> marca se especifica para `inheritanceFlags` y <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> se especifica la marca de propagación para `propagationFlags`, esta regla no se aplica a la subclave inmediata, pero se aplican a todas sus subclaves secundarias inmediatas y a todas las subclaves Estas notas contienen.</span><span class="sxs-lookup"><span data-stu-id="90e58-217">For example, if the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag is specified for `inheritanceFlags` and the <xref:System.Security.AccessControl.PropagationFlags.InheritOnly> propagation flag is specified for `propagationFlags`, this rule does not apply to the immediate subkey, but does apply to all its immediate child subkeys and to all subkeys they contain.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="90e58-218">Aunque se puede especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> una marca para `inheritanceFlags`, no hay ningún punto de hacerlo.</span><span class="sxs-lookup"><span data-stu-id="90e58-218">Although you can specify the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit?displayProperty=nameWithType> flag for `inheritanceFlags`, there is no point in doing so.</span></span> <span data-ttu-id="90e58-219">Para los fines de control de acceso, los pares de nombre/valor de una subclave no son objetos independientes.</span><span class="sxs-lookup"><span data-stu-id="90e58-219">For the purposes of access control, the name/value pairs in a subkey are not separate objects.</span></span> <span data-ttu-id="90e58-220">Los derechos de acceso a los pares de nombre/valor son controlados por los derechos de la subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-220">The access rights to name/value pairs are controlled by the rights of the subkey.</span></span> <span data-ttu-id="90e58-221">Además, dado que todas las subclaves son contenedores (es decir, pueden contener otras subclaves), no se ven afectados por la <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca.</span><span class="sxs-lookup"><span data-stu-id="90e58-221">Furthermore, since all subkeys are containers (that is, they can contain other subkeys), they are not affected by the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag.</span></span> <span data-ttu-id="90e58-222">Por último, especificar el <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> marca complica de manera innecesaria el mantenimiento de reglas, puesto que interfiere con la combinación de las reglas de otro modo serían compatibles.</span><span class="sxs-lookup"><span data-stu-id="90e58-222">Finally, specifying the <xref:System.Security.AccessControl.InheritanceFlags.ObjectInherit> flag needlessly complicates the maintenance of rules, because it interferes with the combination of otherwise compatible rules.</span></span>  
  
 <span data-ttu-id="90e58-223">Este constructor es equivalente a crear una <xref:System.Security.Principal.NTAccount> objeto, pasando `identity` a la <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor y pasar el recién creado <xref:System.Security.Principal.NTAccount> el objeto a la <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span><span class="sxs-lookup"><span data-stu-id="90e58-223">This constructor is equivalent to creating an <xref:System.Security.Principal.NTAccount> object, by passing `identity` to the <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor, and passing the newly created <xref:System.Security.Principal.NTAccount> object to the <xref:System.Security.AccessControl.RegistryAccessRule.%23ctor%28System.Security.Principal.IdentityReference%2CSystem.Security.AccessControl.RegistryRights%2CSystem.Security.AccessControl.InheritanceFlags%2CSystem.Security.AccessControl.PropagationFlags%2CSystem.Security.AccessControl.AccessControlType%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90e58-224">En el ejemplo de código siguiente se muestra las reglas de acceso con herencia y propagación.</span><span class="sxs-lookup"><span data-stu-id="90e58-224">The following code example demonstrates access rules with inheritance and propagation.</span></span> <span data-ttu-id="90e58-225">El ejemplo se crea un <xref:System.Security.AccessControl.RegistrySecurity> objeto y, a continuación, crea y agrega dos reglas que tienen el <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> marca.</span><span class="sxs-lookup"><span data-stu-id="90e58-225">The example creates a <xref:System.Security.AccessControl.RegistrySecurity> object, and then creates and adds two rules that have the <xref:System.Security.AccessControl.InheritanceFlags.ContainerInherit> flag.</span></span> <span data-ttu-id="90e58-226">La primera regla no tiene ningún indicadores de propagación, mientras la segunda tiene <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> y <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span><span class="sxs-lookup"><span data-stu-id="90e58-226">The first rule has no propagation flags, while the second has <xref:System.Security.AccessControl.PropagationFlags.NoPropagateInherit> and <xref:System.Security.AccessControl.PropagationFlags.InheritOnly>.</span></span>  
  
 <span data-ttu-id="90e58-227">El programa muestra las reglas en la <xref:System.Security.AccessControl.RegistrySecurity> objeto y, a continuación, utiliza el <xref:System.Security.AccessControl.RegistrySecurity> objeto que se va a crear una subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-227">The program displays the rules in the <xref:System.Security.AccessControl.RegistrySecurity> object, and then uses the <xref:System.Security.AccessControl.RegistrySecurity> object to create a subkey.</span></span> <span data-ttu-id="90e58-228">El programa crea a un elemento secundario subclave y una una subclave y, a continuación, muestra las reglas para cada subclave.</span><span class="sxs-lookup"><span data-stu-id="90e58-228">The program creates a child subkey and a grandchild subkey, and then displays the rules for each subkey.</span></span> <span data-ttu-id="90e58-229">Por último, el programa elimina las claves de prueba.</span><span class="sxs-lookup"><span data-stu-id="90e58-229">Finally, the program deletes the test keys.</span></span>  
  
 [!code-csharp[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/CS/source.cs#1)]
 [!code-vb[System.Security.AccessControl.RegistryAccessRule.ctor2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.AccessControl.RegistryAccessRule.ctor2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="90e58-230">
            <paramref name="registryRights" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-230">
              <paramref name="registryRights" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-231">-or-  <paramref name="type" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-231">-or-  <paramref name="type" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-232">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-232">-or-  <paramref name="inheritanceFlags" /> specifies an invalid value.</span>
          </span>
          <span data-ttu-id="90e58-233">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-233">-or-  <paramref name="propagationFlags" /> specifies an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="90e58-234">
            <paramref name="eventRights" /> is zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-234">
              <paramref name="eventRights" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="90e58-235">
            <paramref name="identity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-235">
              <paramref name="identity" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="90e58-236">-or-  <paramref name="identity" /> is a zero-length string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-236">-or-  <paramref name="identity" /> is a zero-length string.</span>
          </span>
          <span data-ttu-id="90e58-237">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-237">-or-  <paramref name="identity" /> is longer than 512 characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RegistryRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.RegistryRights RegistryRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.RegistryRights RegistryRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistryRights As RegistryRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::RegistryRights RegistryRights { System::Security::AccessControl::RegistryRights get(); };" />
      <MemberSignature Language="F#" Value="member this.RegistryRights : System.Security.AccessControl.RegistryRights" Usage="System.Security.AccessControl.RegistryAccessRule.RegistryRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Win32.Registry</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.RegistryRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90e58-238">Gets the rights allowed or denied by the access rule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-238">Gets the rights allowed or denied by the access rule.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90e58-239">Una combinación bit a bit de <see cref="T:System.Security.AccessControl.RegistryRights" /> valores que indican los derechos concedidos o denegados mediante la regla de acceso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90e58-239">A bitwise combination of <see cref="T:System.Security.AccessControl.RegistryRights" /> values indicating the rights allowed or denied by the access rule.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90e58-240"><xref:System.Security.AccessControl.RegistryAccessRule> los objetos son inmutables.</span><span class="sxs-lookup"><span data-stu-id="90e58-240"><xref:System.Security.AccessControl.RegistryAccessRule> objects are immutable.</span></span> <span data-ttu-id="90e58-241">Puede crear una nueva regla de acceso que representa un usuario diferente, derechos diferentes u otra <xref:System.Security.AccessControl.AccessControlType>, pero no se puede modificar una regla de acceso existente.</span><span class="sxs-lookup"><span data-stu-id="90e58-241">You can create a new access rule representing a different user, different rights, or a different <xref:System.Security.AccessControl.AccessControlType>, but you cannot modify an existing access rule.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>