<Type Name="DirectorySecurity" FullName="System.Security.AccessControl.DirectorySecurity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a33eb50acb3f609a04635cf0519202c579c75b1d" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52365093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DirectorySecurity : System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DirectorySecurity extends System.Security.AccessControl.FileSystemSecurity" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.DirectorySecurity" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DirectorySecurity&#xA;Inherits FileSystemSecurity" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySecurity sealed : System::Security::AccessControl::FileSystemSecurity" />
  <TypeSignature Language="F#" Value="type DirectorySecurity = class&#xA;    inherit FileSystemSecurity" />
  <AssemblyInfo>
    <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.FileSystemSecurity</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1">
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Representa el control de acceso y la seguridad de auditoría de un directorio. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.AccessControl.DirectorySecurity> clase especifica los derechos de acceso para un directorio del sistema y cómo auditar los intentos de acceso. Esta clase representa los derechos de acceso y auditoría como un conjunto de reglas. Cada regla de acceso se representa mediante un <xref:System.Security.AccessControl.FileSystemAccessRule> objeto, mientras que cada regla de auditoría se representa mediante un <xref:System.Security.AccessControl.FileSystemAuditRule> objeto.  
  
 La <xref:System.Security.AccessControl.DirectorySecurity> clase es una abstracción del sistema de seguridad de archivos de Windows subyacente. En este sistema, cada directorio tiene una lista de control de acceso discrecional (DACL), que controla el acceso al directorio y una lista de control de acceso del sistema (SACL), que especifica los intentos de control de acceso se auditan. El <xref:System.Security.AccessControl.FileSystemAccessRule> y <xref:System.Security.AccessControl.FileSystemAuditRule> clases son abstracciones de las entradas de control de acceso (ACE) que comprenden las DACL y las SACL.  
  
 La <xref:System.Security.AccessControl.DirectorySecurity> clase oculta muchos de los detalles de las DACL y las SACL; que no tiene que preocuparse sobre pedidos de ACE o DACL null.  
  
 Use la <xref:System.Security.AccessControl.FileSecurity> clase para recuperar, agregar o cambiar las reglas de acceso que representan la DACL y SACL de un archivo.  
  
 Las siguientes tablas se enumeran los métodos que puede usar para obtener acceso y mantener la seguridad del directorio.  
  
|Tarea|Métodos|  
|----------|-------------|  
|Agregar reglas|<xref:System.Security.AccessControl.FileSystemSecurity.AddAccessRule%2A?displayProperty=nameWithType><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.AddAuditRule%2A?displayProperty=nameWithType>|  
|Eliminar reglas|<xref:System.Security.AccessControl.FileSystemSecurity.RemoveAccessRule%2A?displayProperty=nameWithType><br /><br /> <xref:System.Security.AccessControl.FileSystemSecurity.RemoveAuditRule%2A?displayProperty=nameWithType>|  
|Recuperar el control de acceso a un directorio|<xref:System.IO.Directory.GetAccessControl%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.DirectoryInfo.GetAccessControl%2A?displayProperty=nameWithType>|  
|Conservar el control de acceso a un directorio|<xref:System.IO.Directory.SetAccessControl%2A?displayProperty=nameWithType><br /><br /> <xref:System.IO.DirectoryInfo.SetAccessControl%2A?displayProperty=nameWithType>|  
  
   
  
## Examples  
 El siguiente ejemplo de código utiliza el <xref:System.Security.AccessControl.DirectorySecurity> clase para agregar y, a continuación, quitar una entrada de lista (ACL) del control de acceso de un directorio.  Para ejecutar este ejemplo, debe proporcionar una cuenta de usuario o grupo válida.  
  
 [!code-cpp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/cpp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/cpp/sample.cpp#1)]
 [!code-csharp[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/csharp/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/CS/sample.cs#1)]
 [!code-vb[IO.DiretoryInfo.GetAccessControl-SetAccessControl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IO.DiretoryInfo.GetAccessControl-SetAccessControl/VB/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.DirectorySecurity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.DirectorySecurity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySecurity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.DirectorySecurity" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor cuando desee crear vacío <xref:System.Security.AccessControl.DirectorySecurity> objeto que no se basa en un directorio existente. A continuación, puede rellenar el objeto con información de control de acceso y aplicarlo a un directorio.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.PlatformNotSupportedException">El sistema operativo actual no es Microsoft Windows 2000 o posterior.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySecurity (string name, System.Security.AccessControl.AccessControlSections includeSections);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Security.AccessControl.AccessControlSections includeSections) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.DirectorySecurity.#ctor(System.String,System.Security.AccessControl.AccessControlSections)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, includeSections As AccessControlSections)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySecurity(System::String ^ name, System::Security::AccessControl::AccessControlSections includeSections);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.DirectorySecurity : string * System.Security.AccessControl.AccessControlSections -&gt; System.Security.AccessControl.DirectorySecurity" Usage="new System.Security.AccessControl.DirectorySecurity (name, includeSections)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.FileSystem.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
      </Parameters>
      <Docs>
        <param name="name">La ubicación de un directorio donde se va a crear un objeto <see cref="T:System.Security.AccessControl.DirectorySecurity" />.</param>
        <param name="includeSections">Uno de los valores de <see cref="T:System.Security.AccessControl.AccessControlSections" /> que especifica el tipo de información de la lista de control de acceso (ACL) que se va a recuperar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Security.AccessControl.DirectorySecurity" /> de un directorio especificado utilizando los valores especificados de la enumeración <see cref="T:System.Security.AccessControl.AccessControlSections" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor recupera la información de control de acceso para el directorio especificado y, a continuación, se crea un <xref:System.Security.AccessControl.DirectorySecurity> objeto que encapsula esa información. A continuación, puede inspeccionar, agregar o eliminar la información de control de acceso para el directorio especificado.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El parámetro <paramref name="name" /> es una cadena de longitud cero que solo contiene espacios en blanco o uno o varios caracteres no válidos definidos por <see cref="F:System.IO.Path.InvalidPathChars" />.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="name" /> es <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso especificada no es válida (por ejemplo, está en una unidad no asignada).</exception>
        <exception cref="T:System.IO.FileNotFoundException">No se encuentra el archivo especificado en el parámetro <paramref name="name" />.</exception>
        <exception cref="T:System.IO.IOException">Se ha producido un error de E/S al abrir el directorio.</exception>
        <exception cref="T:System.NotSupportedException">El parámetro <paramref name="name" /> tiene un formato que no es válido.</exception>
        <exception cref="T:System.PlatformNotSupportedException">El sistema operativo actual no es Microsoft Windows 2000 o posterior.</exception>
        <exception cref="T:System.IO.PathTooLongException">La ruta de acceso especificada, el nombre de archivo o ambos superan la longitud máxima definida por el sistema.</exception>
        <exception cref="T:System.Security.AccessControl.PrivilegeNotHeldException">La cuenta del sistema actual no tiene privilegios administrativos.</exception>
        <exception cref="T:System.SystemException">No se ha encontrado el directorio.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El parámetro <paramref name="name" /> especificó un directorio que es de solo lectura.  
  
O bien 
Esta operación no es compatible con la plataforma actual.  
  
O bien 
El llamador no dispone del permiso requerido.</exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Para obtener permiso para tener acceso al directorio especificado por el <paramref name="name" /> parámetro. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.NoAccess" /> , <see cref="F:System.Security.AccessControl.AccessControlActions.View" />  
  
Acción de seguridad: a petición</permission>
      </Docs>
    </Member>
  </Members>
</Type>