<Type Name="MutexAuditRule" FullName="System.Security.AccessControl.MutexAuditRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="24663a27a2fd28da09977627f0c2460edb2a16fb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37625956" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MutexAuditRule : System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MutexAuditRule extends System.Security.AccessControl.AuditRule" />
  <TypeSignature Language="DocId" Value="T:System.Security.AccessControl.MutexAuditRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MutexAuditRule&#xA;Inherits AuditRule" />
  <TypeSignature Language="C++ CLI" Value="public ref class MutexAuditRule sealed : System::Security::AccessControl::AuditRule" />
  <TypeSignature Language="F#" Value="type MutexAuditRule = class&#xA;    inherit AuditRule" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.AccessControl</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.AccessControl.AuditRule</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents a set of access rights to be audited for a user or group. This class cannot be inherited.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.AccessControl.MutexAuditRule> clase es un conjunto de clases de .NET Framework proporciona para administrar la seguridad de control de acceso de Windows en exclusiones mutuas del sistema con nombre. Para obtener información general de estas clases y su relación con las estructuras de control de acceso de Windows subyacentes, vea <xref:System.Security.AccessControl.MutexSecurity>.  
  
> [!NOTE]
>  Seguridad de control de acceso de Windows solo es significativa para las exclusiones mutuas del sistema con nombre. Si un <xref:System.Threading.Mutex> objeto representa una exclusión mutua local, el control de acceso es irrelevante.  
  
 Para obtener una lista de las reglas de auditoría se aplica actualmente a una exclusión mutua con nombre, use la <xref:System.Threading.Mutex.GetAccessControl%2A?displayProperty=nameWithType> método para obtener un <xref:System.Security.AccessControl.MutexSecurity> objeto y, a continuación, usar su <xref:System.Security.AccessControl.CommonObjectSecurity.GetAuditRules%2A> método para obtener una colección de <xref:System.Security.AccessControl.MutexAuditRule> objetos.  
  
 <xref:System.Security.AccessControl.MutexAuditRule> los objetos no se asignan uno a uno con entradas de control de acceso en la lista de control de acceso discrecional (DACL) subyacente. Cuando se obtiene el conjunto de todas las reglas de auditoría para una exclusión mutua, el conjunto contiene el número mínimo de reglas actualmente necesarias para expresar todas las entradas de control de acceso.  
  
> [!NOTE]
>  Las entradas de control de acceso subyacente cambian al aplicar y quitar las reglas. La información de las reglas se combina si es posible, para mantener el menor número de entradas de control de acceso. Por lo tanto, al leer la lista de reglas actual, no podría ser exactamente igual que la lista de todas las reglas que ha agregado.  
  
 Use <xref:System.Security.AccessControl.MutexAuditRule> objetos para especificar los derechos de acceso que se auditarán para un usuario o grupo. Para aplicar una regla a una exclusión mutua del sistema con nombre, use la <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> método para obtener el <xref:System.Security.AccessControl.MutexSecurity> objeto. Modificar el <xref:System.Security.AccessControl.MutexSecurity> objeto mediante el uso de sus métodos para agregar la regla y, a continuación, utilice el <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> método volver a adjuntar el objeto de seguridad.  
  
> [!IMPORTANT]
>  Cambios en un <xref:System.Security.AccessControl.MutexSecurity> objeto no afectan a los niveles de acceso de la exclusión mutua con nombre hasta que llame a la <xref:System.Threading.Mutex.SetAccessControl%2A?displayProperty=nameWithType> método para asignar el objeto de seguridad modificado a la exclusión mutua con nombre.  
  
 <xref:System.Security.AccessControl.MutexAuditRule> los objetos son inmutables. Seguridad de una exclusión mutua se modifica utilizando los métodos de la <xref:System.Security.AccessControl.MutexSecurity> clase para agregar o quitar reglas; al hacerlo, se modifican las entradas de control de acceso subyacente.  
  
> [!NOTE]
>  Seguridad en objetos de sincronización no es compatible con Windows 98 o Windows Millennium Edition.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MutexAuditRule (System.Security.Principal.IdentityReference identity, System.Security.AccessControl.MutexRights eventRights, System.Security.AccessControl.AuditFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IdentityReference identity, valuetype System.Security.AccessControl.MutexRights eventRights, valuetype System.Security.AccessControl.AuditFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.AccessControl.MutexAuditRule.#ctor(System.Security.Principal.IdentityReference,System.Security.AccessControl.MutexRights,System.Security.AccessControl.AuditFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IdentityReference, eventRights As MutexRights, flags As AuditFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MutexAuditRule(System::Security::Principal::IdentityReference ^ identity, System::Security::AccessControl::MutexRights eventRights, System::Security::AccessControl::AuditFlags flags);" />
      <MemberSignature Language="F#" Value="new System.Security.AccessControl.MutexAuditRule : System.Security.Principal.IdentityReference * System.Security.AccessControl.MutexRights * System.Security.AccessControl.AuditFlags -&gt; System.Security.AccessControl.MutexAuditRule" Usage="new System.Security.AccessControl.MutexAuditRule (identity, eventRights, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        <Parameter Name="eventRights" Type="System.Security.AccessControl.MutexRights" />
        <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
      </Parameters>
      <Docs>
        <param name="identity">The user or group the rule applies to. Must be of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> or a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be converted to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</param>
        <param name="eventRights">A bitwise combination of <see cref="T:System.Security.AccessControl.MutexRights" /> values specifying the kinds of access to audit.</param>
        <param name="flags">A bitwise combination of <see cref="T:System.Security.AccessControl.AuditFlags" /> values specifying whether to audit success, failure, or both.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Security.AccessControl.MutexAuditRule" /> class, specifying the user or group to audit, the rights to audit, and whether to audit success, failure, or both.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para crear un <xref:System.Security.Principal.NTAccount> desde una cadena que representa un nombre de usuario o grupo de objetos, utilice el <xref:System.Security.Principal.NTAccount.%23ctor%28System.String%29?displayProperty=nameWithType> constructor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="eventRights" /> specifies an invalid value.  -or-  <paramref name="flags" /> specifies an invalid value.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="identity" /> is <see langword="null" />.  -or-  <paramref name="eventRights" /> is zero.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="identity" /> is neither of type <see cref="T:System.Security.Principal.SecurityIdentifier" /> nor of a type such as <see cref="T:System.Security.Principal.NTAccount" /> that can be translated to type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MutexRights">
      <MemberSignature Language="C#" Value="public System.Security.AccessControl.MutexRights MutexRights { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.AccessControl.MutexRights MutexRights" />
      <MemberSignature Language="DocId" Value="P:System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MutexRights As MutexRights" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::AccessControl::MutexRights MutexRights { System::Security::AccessControl::MutexRights get(); };" />
      <MemberSignature Language="F#" Value="member this.MutexRights : System.Security.AccessControl.MutexRights" Usage="System.Security.AccessControl.MutexAuditRule.MutexRights" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.AccessControl</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.AccessControl.MutexRights</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the access rights affected by the audit rule.</summary>
        <value>Una combinación bit a bit de <see cref="T:System.Security.AccessControl.MutexRights" /> valores que indica los derechos afectados por la regla de auditoría.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Security.AccessControl.MutexAuditRule> los objetos son inmutables. Puede crear una nueva regla de auditoría que representa un usuario diferente, derechos diferentes o una combinación diferente de <xref:System.Security.AccessControl.AuditFlags> indicadores, pero no se puede modificar una regla de auditoría existente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>