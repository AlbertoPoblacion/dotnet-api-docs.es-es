<Type Name="ArrayList" FullName="System.Collections.ArrayList">
  <TypeSignature Language="C#" Value="public class ArrayList : ICloneable, System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArrayList extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ArrayList" />
  <TypeSignature Language="VB.NET" Value="Public Class ArrayList&#xA;Implements ICloneable, IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArrayList : ICloneable, System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.ArrayList/ArrayListDebugView))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a2e06-101">Implementa la interfaz <see cref="T:System.Collections.IList" /> utilizando una matriz cuyo tamaño aumenta dinámicamente cuando es necesario.</span><span class="sxs-lookup"><span data-stu-id="a2e06-101">Implements the <see cref="T:System.Collections.IList" /> interface using an array whose size is dynamically increased as required.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-102">La <xref:System.Collections.ArrayList> clase está diseñada para contener heterogéneas colecciones de objetos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-102">The <xref:System.Collections.ArrayList> class is designed to hold heterogeneous collections of objects.</span></span> <span data-ttu-id="a2e06-103">Sin embargo, no siempre ofrece el mejor rendimiento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-103">However, it does not always offer the best performance.</span></span> <span data-ttu-id="a2e06-104">En su lugar, se recomienda lo siguiente:</span><span class="sxs-lookup"><span data-stu-id="a2e06-104">Instead, we recommend the following:</span></span>  
  
-   <span data-ttu-id="a2e06-105">Para obtener una colección heterogénea de objetos, use la `List<Object>` (en C#) o `List(Of Object)` (en Visual Basic), escriba.</span><span class="sxs-lookup"><span data-stu-id="a2e06-105">For a heterogeneous collection of objects, use the `List<Object>` (in C#) or `List(Of Object)` (in Visual Basic) type.</span></span>  
  
-   <span data-ttu-id="a2e06-106">Para obtener una colección homogénea de objetos, use la <xref:System.Collections.Generic.List%601> clase.</span><span class="sxs-lookup"><span data-stu-id="a2e06-106">For a homogeneous collection of objects, use the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="a2e06-107">Vea la sección "Consideraciones de rendimiento" en el <xref:System.Collections.Generic.List%601> tema de referencia para obtener una explicación del rendimiento relativo de estas clases.</span><span class="sxs-lookup"><span data-stu-id="a2e06-107">See the "Performance Considerations" section in the <xref:System.Collections.Generic.List%601> reference topic for a discussion of the relative performance of these classes.</span></span>  
  
 <span data-ttu-id="a2e06-108">El <xref:System.Collections.ArrayList> no se garantiza que se ordenen.</span><span class="sxs-lookup"><span data-stu-id="a2e06-108">The <xref:System.Collections.ArrayList> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="a2e06-109">Se debe ordenar el <xref:System.Collections.ArrayList> mediante una llamada a su <xref:System.Collections.ArrayList.Sort%2A> método antes de realizar operaciones (como <xref:System.Collections.ArrayList.BinarySearch%2A>) que requieren el <xref:System.Collections.ArrayList> se ordenen.</span><span class="sxs-lookup"><span data-stu-id="a2e06-109">You must sort the <xref:System.Collections.ArrayList> by calling its <xref:System.Collections.ArrayList.Sort%2A> method prior to performing operations (such as <xref:System.Collections.ArrayList.BinarySearch%2A>) that require the <xref:System.Collections.ArrayList> to be sorted.</span></span> <span data-ttu-id="a2e06-110">Para mantener una colección que se ordena automáticamente cuando se agregan nuevos elementos, puede usar el <xref:System.Collections.Generic.SortedSet%601> clase.</span><span class="sxs-lookup"><span data-stu-id="a2e06-110">To maintain a collection that is automatically sorted as new elements are added, you can use the <xref:System.Collections.Generic.SortedSet%601> class.</span></span>  
  
 <span data-ttu-id="a2e06-111">La capacidad de un <xref:System.Collections.ArrayList> es el número de elementos de la <xref:System.Collections.ArrayList> puede contener.</span><span class="sxs-lookup"><span data-stu-id="a2e06-111">The capacity of an <xref:System.Collections.ArrayList> is the number of elements the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a2e06-112">Cuando se agregan elementos a un <xref:System.Collections.ArrayList>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-112">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required through reallocation.</span></span> <span data-ttu-id="a2e06-113">La capacidad puede reducirse mediante una llamada a <xref:System.Collections.ArrayList.TrimToSize%2A> o estableciendo la <xref:System.Collections.ArrayList.Capacity%2A> propiedad explícitamente.</span><span class="sxs-lookup"><span data-stu-id="a2e06-113">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span>  
  
 <span data-ttu-id="a2e06-114">Para un gran <xref:System.Collections.ArrayList> objetos, puede aumentar la capacidad máxima de 2 millones de elementos en un sistema de 64 bits estableciendo la `enabled` atributo del elemento de configuración para `true` en el entorno de tiempo de ejecución.</span><span class="sxs-lookup"><span data-stu-id="a2e06-114">For very large <xref:System.Collections.ArrayList> objects, you can increase the maximum capacity to 2 billion elements on a 64-bit system by setting the `enabled` attribute of the  configuration element to `true` in the run-time environment.</span></span>  
  
 <span data-ttu-id="a2e06-115">Pueden tener acceso a los elementos de esta colección utilizando un índice entero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-115">Elements in this collection can be accessed using an integer index.</span></span>  <span data-ttu-id="a2e06-116">Índices de esta colección son de base cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-116">Indexes in this collection are zero-based.</span></span>  
  
 <span data-ttu-id="a2e06-117">El <xref:System.Collections.ArrayList> colección acepta `null` como un valor válido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-117">The <xref:System.Collections.ArrayList> collection accepts `null` as a valid value.</span></span> <span data-ttu-id="a2e06-118">También permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-118">It also allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-119">Utilizar matrices multidimensionales como elementos en una <xref:System.Collections.ArrayList> no se admite la recopilación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-119">Using multidimensional arrays as elements in an <xref:System.Collections.ArrayList> collection is not supported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-120">En el ejemplo de código siguiente se muestra cómo crear e inicializar un <xref:System.Collections.ArrayList> y cómo mostrar sus valores.</span><span class="sxs-lookup"><span data-stu-id="a2e06-120">The following code example shows how to create and initialize an <xref:System.Collections.ArrayList> and how to display its values.</span></span>  
  
 [!code-cpp[Classic ArrayList Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="a2e06-121">Estático público (<see langword="Shared" /> en Visual Basic) miembros de este tipo son seguros para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-121">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span></span> <span data-ttu-id="a2e06-122">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-122">Any instance members are not guaranteed to be thread safe.</span></span>  
  
 <span data-ttu-id="a2e06-123">Un <see cref="T:System.Collections.ArrayList" /> puede admitir varios sistemas de lectura al mismo tiempo, siempre y cuando no se modifica la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-123">An <see cref="T:System.Collections.ArrayList" /> can support multiple readers concurrently, as long as the collection is not modified.</span></span> <span data-ttu-id="a2e06-124">Para garantizar la seguridad para subprocesos de la <see cref="T:System.Collections.ArrayList" />, todas las operaciones deben realizarse a través del contenedor devuelto por el <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> método.</span><span class="sxs-lookup"><span data-stu-id="a2e06-124">To guarantee the thread safety of the <see cref="T:System.Collections.ArrayList" />, all operations must be done through the wrapper returned by the <see cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" /> method.</span></span>  
  
 <span data-ttu-id="a2e06-125">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-125">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a2e06-126">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="a2e06-126">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a2e06-127">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-127">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span></threadsafe>
    <altmember cref="T:System.Collections.IList" />
    <altmember cref="T:System.Collections.Generic.List`1" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-128">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-128">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-129">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.ArrayList" /> que está vacía y tiene la capacidad inicial predeterminada.</span><span class="sxs-lookup"><span data-stu-id="a2e06-129">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the default initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-130">La capacidad de un <xref:System.Collections.ArrayList> es el número de elementos que la <xref:System.Collections.ArrayList> puede contener.</span><span class="sxs-lookup"><span data-stu-id="a2e06-130">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a2e06-131">Cuando se agregan elementos a un <xref:System.Collections.ArrayList>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="a2e06-131">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a2e06-132">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-132">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-133">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-133">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(System::Collections::ICollection ^ c);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="a2e06-134"><see cref="T:System.Collections.ICollection" /> cuyos elementos se copian en la nueva lista.</span><span class="sxs-lookup"><span data-stu-id="a2e06-134">The <see cref="T:System.Collections.ICollection" /> whose elements are copied to the new list.</span></span></param>
        <summary><span data-ttu-id="a2e06-135">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.ArrayList" /> que contiene elementos copiados de la colección especificada y que tiene la misma capacidad inicial que el número de elementos copiados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-135">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that contains elements copied from the specified collection and that has the same initial capacity as the number of elements copied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-136">La capacidad de un <xref:System.Collections.ArrayList> es el número de elementos que la <xref:System.Collections.ArrayList> puede contener.</span><span class="sxs-lookup"><span data-stu-id="a2e06-136">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a2e06-137">Cuando se agregan elementos a un <xref:System.Collections.ArrayList>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="a2e06-137">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a2e06-138">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-138">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-139">Los elementos se copian en el <xref:System.Collections.ArrayList> en el mismo orden que los lee la <xref:System.Collections.IEnumerator> de la <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-139">The elements are copied onto the <xref:System.Collections.ArrayList> in the same order they are read by the <xref:System.Collections.IEnumerator> of the <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="a2e06-140">Este constructor es una O (`n`) operación, donde `n` es el número de elementos de `c`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-140">This constructor is an O(`n`) operation, where `n` is the number of elements in `c`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-141"><paramref name="c" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-141"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArrayList (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArrayList(int capacity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity"><span data-ttu-id="a2e06-142">Número de elementos que puede almacenar inicialmente la lista nueva.</span><span class="sxs-lookup"><span data-stu-id="a2e06-142">The number of elements that the new list can initially store.</span></span></param>
        <summary><span data-ttu-id="a2e06-143">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.ArrayList" /> que está vacía y tiene la capacidad inicial especificada.</span><span class="sxs-lookup"><span data-stu-id="a2e06-143">Initializes a new instance of the <see cref="T:System.Collections.ArrayList" /> class that is empty and has the specified initial capacity.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-144">La capacidad de un <xref:System.Collections.ArrayList> es el número de elementos que la <xref:System.Collections.ArrayList> puede contener.</span><span class="sxs-lookup"><span data-stu-id="a2e06-144">The capacity of an <xref:System.Collections.ArrayList> is the number of elements that the <xref:System.Collections.ArrayList> can hold.</span></span> <span data-ttu-id="a2e06-145">Cuando se agregan elementos a un <xref:System.Collections.ArrayList>, la capacidad aumenta automáticamente según sea necesario mediante la reasignación de la matriz interna.</span><span class="sxs-lookup"><span data-stu-id="a2e06-145">As elements are added to an <xref:System.Collections.ArrayList>, the capacity is automatically increased as required by reallocating the internal array.</span></span>  
  
 <span data-ttu-id="a2e06-146">Si se puede estimar el tamaño de la colección, al especificar la capacidad inicial elimina la necesidad de realizar una serie de operaciones de cambio de tamaño al agregar elementos a la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-146">If the size of the collection can be estimated, specifying the initial capacity eliminates the need to perform a number of resizing operations while adding elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-147">Este constructor es una O (`n`) operación, donde `n` es `capacity`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-147">This constructor is an O(`n`) operation, where `n` is `capacity`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-148"><paramref name="capacity" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-148"><paramref name="capacity" /> is less than zero.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <Member MemberName="Adapter">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Adapter (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Adapter(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Adapter(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Adapter (list As IList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Adapter(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="a2e06-149"><see cref="T:System.Collections.IList" /> que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-149">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="a2e06-150">Crea un contenedor de <see cref="T:System.Collections.ArrayList" /> para una interfaz <see cref="T:System.Collections.IList" /> concreta.</span><span class="sxs-lookup"><span data-stu-id="a2e06-150">Creates an <see cref="T:System.Collections.ArrayList" /> wrapper for a specific <see cref="T:System.Collections.IList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-151">Contenedor de <see cref="T:System.Collections.ArrayList" /> para <see cref="T:System.Collections.IList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-151">The <see cref="T:System.Collections.ArrayList" /> wrapper around the <see cref="T:System.Collections.IList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-152"><xref:System.Collections.ArrayList.Adapter%2A> no copia el contenido de <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-152"><xref:System.Collections.ArrayList.Adapter%2A> does not copy the contents of <xref:System.Collections.IList>.</span></span> <span data-ttu-id="a2e06-153">En su lugar, sólo crea un <xref:System.Collections.ArrayList> envuelve <xref:System.Collections.IList>; por lo tanto, cambia a la <xref:System.Collections.IList> también afectan a la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-153">Instead, it only creates an <xref:System.Collections.ArrayList> wrapper around <xref:System.Collections.IList>; therefore, changes to the <xref:System.Collections.IList> also affect the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-154">El <xref:System.Collections.ArrayList> clase proporciona genérico <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> y <xref:System.Collections.ArrayList.Sort%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-154">The <xref:System.Collections.ArrayList> class provides generic <xref:System.Collections.ArrayList.Reverse%2A>, <xref:System.Collections.ArrayList.BinarySearch%2A> and <xref:System.Collections.ArrayList.Sort%2A> methods.</span></span> <span data-ttu-id="a2e06-155">Este contenedor puede ser un medio para utilizar estos métodos en <xref:System.Collections.IList>; sin embargo, realizar estas operaciones genéricas a través del contenedor puede ser menos eficiente que las operaciones aplicadas directamente en el <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-155">This wrapper can be a means to use those methods on <xref:System.Collections.IList>; however, performing these generic operations through the wrapper might be less efficient than operations applied directly on the <xref:System.Collections.IList>.</span></span>  
  
 <span data-ttu-id="a2e06-156">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-156">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="a2e06-157">Compatibilidad de versiones</span><span class="sxs-lookup"><span data-stu-id="a2e06-157">Version Compatibility</span></span>  
 <span data-ttu-id="a2e06-158">En .NET Framework versiones 1.0 y 1.1, al llamar a la <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> sobrecarga del método en el <xref:System.Collections.ArrayList> contenedor devuelve un enumerador que trata el segundo argumento como un límite superior en lugar de como un recuento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-158">In the .NET Framework version 1.0 and 1.1, calling the <xref:System.Collections.ArrayList.GetEnumerator%28System.Int32%2CSystem.Int32%29> method overload on the <xref:System.Collections.ArrayList> wrapper returned an enumerator that treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="a2e06-159">En el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] el segundo argumento se trata correctamente como un número.</span><span class="sxs-lookup"><span data-stu-id="a2e06-159">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-160"><paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-160"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
        <altmember cref="M:System.Collections.ArrayList.Reverse" />
        <altmember cref="M:System.Collections.ArrayList.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-161">Objeto <see cref="T:System.Object" /> que se va a agregar al final de la colección <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-161">The <see cref="T:System.Object" /> to be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-162">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-162">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-163">Agrega un objeto al final de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-163">Adds an object to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-164">Índice de <see cref="T:System.Collections.ArrayList" /> en el que se ha agregado <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-164">The <see cref="T:System.Collections.ArrayList" /> index at which the <paramref name="value" /> has been added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-165"><xref:System.Collections.ArrayList> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-165"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-166">Si <xref:System.Collections.ArrayList.Count%2A> ya es igual a <xref:System.Collections.ArrayList.Capacity%2A>, la capacidad de la <xref:System.Collections.ArrayList> se incrementa mediante la reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-166">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="a2e06-167">Si <xref:System.Collections.ArrayList.Count%2A> es menor que <xref:System.Collections.ArrayList.Capacity%2A>, este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-167">If <xref:System.Collections.ArrayList.Count%2A> is less than <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(1) operation.</span></span> <span data-ttu-id="a2e06-168">Si la capacidad debe aumentarse para alojar el nuevo elemento, este método se convierte en una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-168">If the capacity needs to be increased to accommodate the new element, this method becomes an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-169">En el ejemplo de código siguiente se muestra cómo agregar elementos a la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-169">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-170"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-170">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-171">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-171">-or-</span></span>  
  
 <span data-ttu-id="a2e06-172"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-172">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="c"><span data-ttu-id="a2e06-173"><see cref="T:System.Collections.ICollection" /> cuyos elementos deben agregarse al final de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-173">The <see cref="T:System.Collections.ICollection" /> whose elements should be added to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-174">La propia colección no puede ser <see langword="null" />, pero puede contener elementos que sean <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-174">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-175">Agrega los elementos de <see cref="T:System.Collections.ICollection" /> al final de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-175">Adds the elements of an <see cref="T:System.Collections.ICollection" /> to the end of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-176"><xref:System.Collections.ArrayList> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-176"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-177">El orden de los elementos de la <xref:System.Collections.ICollection> se conserva en el <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-177">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-178">Si el nuevo <xref:System.Collections.ArrayList.Count%2A> (actual <xref:System.Collections.ArrayList.Count%2A> más el tamaño de la colección) será mayor que <xref:System.Collections.ArrayList.Capacity%2A>, la capacidad de la <xref:System.Collections.ArrayList> se incrementa mediante la reasignación automática de la matriz interna para dar cabida a los nuevos elementos, y se copian los elementos existentes en la nueva matriz antes de que se agregan los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-178">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="a2e06-179">Si el <xref:System.Collections.ArrayList> puede dar cabida a los nuevos elementos sin aumentar la <xref:System.Collections.ArrayList.Capacity%2A>, este método es una O (`n`) operación, donde `n` es el número de elementos que se va a agregar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-179">If the <xref:System.Collections.ArrayList> can accommodate the new elements without increasing the <xref:System.Collections.ArrayList.Capacity%2A>, this method is an O(`n`) operation, where `n` is the number of elements to be added.</span></span> <span data-ttu-id="a2e06-180">Si la capacidad debe aumentarse para dar cabida a los nuevos elementos, este método se convierte en una O (`n` + `m`) operación, donde `n` es el número de elementos que se va a agregarse y `m` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-180">If the capacity needs to be increased to accommodate the new elements, this method becomes an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-181">En el ejemplo de código siguiente se muestra cómo agregar elementos a la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-181">The following code example shows how to add elements to the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-182"><paramref name="c" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-182"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-183"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-183">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-184">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-184">-or-</span></span>  
  
 <span data-ttu-id="a2e06-185"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-185">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-186">Utiliza un algoritmo de búsqueda binaria para localizar un elemento concreto en la <see cref="T:System.Collections.ArrayList" /> ordenada o en una parte de ella.</span><span class="sxs-lookup"><span data-stu-id="a2e06-186">Uses a binary search algorithm to locate a specific element in the sorted <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-187">Clase <see cref="T:System.Object" /> que se va a localizar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-187">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="a2e06-188">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-188">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-189">Busca la <see cref="T:System.Collections.ArrayList" /> completa ordenada para un elemento usando el comparador predeterminado y devuelve el índice de base cero del elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-189">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the default comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="a2e06-190">Índice de base cero de <paramref name="value" /> en la <see cref="T:System.Collections.ArrayList" /> ordenada si se encuentra <paramref name="value" />; en caso contrario, número negativo, que es el complemento bit a bit del índice del siguiente elemento mayor que <paramref name="value" /> o, si no hay ningún elemento mayor, el complemento bit a bit de la propiedad <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-190">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-191">El `value` parámetro y cada elemento de la <xref:System.Collections.ArrayList> debe implementar la <xref:System.IComparable> interfaz, que se usa para las comparaciones.</span><span class="sxs-lookup"><span data-stu-id="a2e06-191">The `value` parameter and each element of the <xref:System.Collections.ArrayList> must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="a2e06-192">Los elementos de la <xref:System.Collections.ArrayList> ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-192">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a2e06-193">Comparar `null` se permite con cualquier tipo y no genera una excepción cuando se usa <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-193">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="a2e06-194">Al ordenar, `null` se considera menor que cualquier otro objeto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-194">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="a2e06-195">Si el <xref:System.Collections.ArrayList> contiene más de un elemento con el mismo valor, el método devuelve solo una de las apariciones y puede devolver cualquiera de ellas, pero no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="a2e06-195">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="a2e06-196">Si el <xref:System.Collections.ArrayList> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-196">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="a2e06-197">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a2e06-197">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="a2e06-198">Cuando se inserta el valor en el <xref:System.Collections.ArrayList>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-198">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="a2e06-199">Este método es una O (registro `n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-199">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-200">En el ejemplo de código siguiente se muestra cómo utilizar <xref:System.Collections.ArrayList.BinarySearch%2A> para localizar un objeto específico en el <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-200">The following code example shows how to use <xref:System.Collections.ArrayList.BinarySearch%2A> to locate a specific object in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2e06-201">Ni <paramref name="value" /> ni los elementos de <see cref="T:System.Collections.ArrayList" /> implementan la interfaz <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-201">Neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2e06-202"><paramref name="value" /> no es del mismo tipo que los elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-202"><paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-203">Clase <see cref="T:System.Object" /> que se va a localizar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-203">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="a2e06-204">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-204">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="a2e06-205">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-205">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="a2e06-206">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-206">-or-</span></span>  
  
 <span data-ttu-id="a2e06-207"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-207"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="a2e06-208">Busca la <see cref="T:System.Collections.ArrayList" /> completa ordenada para un elemento usando el comparador especificado y devuelve el índice de base cero del elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-208">Searches the entire sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="a2e06-209">Índice de base cero de <paramref name="value" /> en la <see cref="T:System.Collections.ArrayList" /> ordenada si se encuentra <paramref name="value" />; en caso contrario, número negativo, que es el complemento bit a bit del índice del siguiente elemento mayor que <paramref name="value" /> o, si no hay ningún elemento mayor, el complemento bit a bit de la propiedad <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-209">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-210">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-210">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="a2e06-211">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer> instancia como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a2e06-211">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="a2e06-212">Si `comparer` se proporciona, los elementos de la <xref:System.Collections.ArrayList> se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.IComparer> implementación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-212">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="a2e06-213">Los elementos de la <xref:System.Collections.ArrayList> ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por `comparer`; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-213">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a2e06-214">Si `comparer` es `null`, la comparación se realiza mediante el <xref:System.IComparable> implementación proporcionada por el propio elemento o por el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-214">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="a2e06-215">Los elementos de la <xref:System.Collections.ArrayList> ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-215">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a2e06-216">Comparar `null` se permite con cualquier tipo y no genera una excepción cuando se usa <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-216">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="a2e06-217">Al ordenar, `null` se considera menor que cualquier otro objeto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-217">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="a2e06-218">Si el <xref:System.Collections.ArrayList> contiene más de un elemento con el mismo valor, el método devuelve solo una de las apariciones y puede devolver cualquiera de ellas, pero no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="a2e06-218">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="a2e06-219">Si el <xref:System.Collections.ArrayList> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-219">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="a2e06-220">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a2e06-220">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="a2e06-221">Cuando se inserta el valor en el <xref:System.Collections.ArrayList>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-221">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="a2e06-222">Este método es una O (registro `n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-222">This method is an O(log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-223">En el ejemplo siguiente se crea un <xref:System.Collections.ArrayList> de animales color.</span><span class="sxs-lookup"><span data-stu-id="a2e06-223">The following example creates an <xref:System.Collections.ArrayList> of colored animals.</span></span> <span data-ttu-id="a2e06-224">Proporcionado <xref:System.Collections.IComparer> realiza la comparación de cadenas para la búsqueda binaria.</span><span class="sxs-lookup"><span data-stu-id="a2e06-224">The provided <xref:System.Collections.IComparer> performs the string comparison for the binary search.</span></span> <span data-ttu-id="a2e06-225">Se muestran los resultados de una búsqueda iterativa y una búsqueda binaria.</span><span class="sxs-lookup"><span data-stu-id="a2e06-225">The results of both an iterative search and a binary search are displayed.</span></span>  
  
 [!code-cpp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.BinarySearch1 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.BinarySearch1 Example/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-226"><paramref name="comparer" /> es <see langword="null" /> y ni <paramref name="value" /> ni los elementos de <see cref="T:System.Collections.ArrayList" /> implementan la interfaz de <see cref="T:System.IComparable" /></span><span class="sxs-lookup"><span data-stu-id="a2e06-226"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2e06-227"><paramref name="comparer" /> es <see langword="null" /> y <paramref name="value" /> no es del mismo tipo que los elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-227"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public virtual int BinarySearch (int index, int count, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 BinarySearch(int32 index, int32 count, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.BinarySearch(System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BinarySearch (index As Integer, count As Integer, value As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int BinarySearch(int index, int count, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-228">Índice inicial de base cero del intervalo que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-228">The zero-based starting index of the range to search.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-229">Longitud del intervalo en el que se va a buscar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-229">The length of the range to search.</span></span></param>
        <param name="value"><span data-ttu-id="a2e06-230">Clase <see cref="T:System.Object" /> que se va a localizar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-230">The <see cref="T:System.Object" /> to locate.</span></span> <span data-ttu-id="a2e06-231">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-231">The value can be <see langword="null" />.</span></span></param>
        <param name="comparer"><span data-ttu-id="a2e06-232">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-232">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="a2e06-233">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-233">-or-</span></span>  
  
 <span data-ttu-id="a2e06-234"><see langword="null" /> para utilizar el comparador predeterminado, que es la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-234"><see langword="null" /> to use the default comparer that is the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="a2e06-235">Busca un elemento en un intervalo de elementos del objeto <see cref="T:System.Collections.ArrayList" /> ordenado usando el comparador especificado y devuelve el índice de base cero del elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-235">Searches a range of elements in the sorted <see cref="T:System.Collections.ArrayList" /> for an element using the specified comparer and returns the zero-based index of the element.</span></span></summary>
        <returns><span data-ttu-id="a2e06-236">Índice de base cero de <paramref name="value" /> en la <see cref="T:System.Collections.ArrayList" /> ordenada si se encuentra <paramref name="value" />; en caso contrario, número negativo, que es el complemento bit a bit del índice del siguiente elemento mayor que <paramref name="value" /> o, si no hay ningún elemento mayor, el complemento bit a bit de la propiedad <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-236">The zero-based index of <paramref name="value" /> in the sorted <see cref="T:System.Collections.ArrayList" />, if <paramref name="value" /> is found; otherwise, a negative number, which is the bitwise complement of the index of the next element that is larger than <paramref name="value" /> or, if there is no larger element, the bitwise complement of <see cref="P:System.Collections.ArrayList.Count" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-237">El comparador personaliza cómo se comparan los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-237">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="a2e06-238">Por ejemplo, puede usar un <xref:System.Collections.CaseInsensitiveComparer> instancia como comparador para realizar búsquedas de cadenas entre mayúsculas y minúsculas.</span><span class="sxs-lookup"><span data-stu-id="a2e06-238">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer> instance as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="a2e06-239">Si `comparer` se proporciona, los elementos de la <xref:System.Collections.ArrayList> se comparan con el valor especificado utilizando el parámetro <xref:System.Collections.IComparer> implementación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-239">If `comparer` is provided, the elements of the <xref:System.Collections.ArrayList> are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="a2e06-240">Los elementos de la <xref:System.Collections.ArrayList> ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por `comparer`; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-240">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a2e06-241">Si `comparer` es `null`, la comparación se realiza mediante el <xref:System.IComparable> implementación proporcionada por el propio elemento o por el valor especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-241">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="a2e06-242">Los elementos de la <xref:System.Collections.ArrayList> ya deben estar ordenados al aumentar el valor según el criterio de ordenación definido por el <xref:System.IComparable> implementación; en caso contrario, el resultado puede ser incorrecto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-242">The elements of the <xref:System.Collections.ArrayList> must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="a2e06-243">Comparar `null` se permite con cualquier tipo y no genera una excepción cuando se usa <xref:System.IComparable>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-243">Comparing `null` with any type is allowed and does not generate an exception when using <xref:System.IComparable>.</span></span> <span data-ttu-id="a2e06-244">Al ordenar, `null` se considera menor que cualquier otro objeto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-244">When sorting, `null` is considered to be less than any other object.</span></span>  
  
 <span data-ttu-id="a2e06-245">Si el <xref:System.Collections.ArrayList> contiene más de un elemento con el mismo valor, el método devuelve solo una de las apariciones y puede devolver cualquiera de ellas, pero no necesariamente la primera de ellas.</span><span class="sxs-lookup"><span data-stu-id="a2e06-245">If the <xref:System.Collections.ArrayList> contains more than one element with the same value, the method returns only one of the occurrences, and it might return any one of the occurrences, not necessarily the first one.</span></span>  
  
 <span data-ttu-id="a2e06-246">Si el <xref:System.Collections.ArrayList> no contiene el valor especificado, el método devuelve un entero negativo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-246">If the <xref:System.Collections.ArrayList> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="a2e06-247">Puede aplicar la operación de complemento bit a bit (~) a este entero negativo para obtener el índice del primer elemento que es mayor que el valor de búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a2e06-247">You can apply the bitwise complement operation (~) to this negative integer to get the index of the first element that is larger than the search value.</span></span> <span data-ttu-id="a2e06-248">Cuando se inserta el valor en el <xref:System.Collections.ArrayList>, este índice se debe utilizar como punto de inserción para mantener el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-248">When inserting the value into the <xref:System.Collections.ArrayList>, this index should be used as the insertion point to maintain the sort order.</span></span>  
  
 <span data-ttu-id="a2e06-249">Este método es una O (registro `n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-249">This method is an O(log `n`) operation, where `n` is `count`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-250"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-250"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
 <span data-ttu-id="a2e06-251">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-251">-or-</span></span>  
  
 <span data-ttu-id="a2e06-252"><paramref name="comparer" /> es <see langword="null" /> y ni <paramref name="value" /> ni los elementos de <see cref="T:System.Collections.ArrayList" /> implementan la interfaz de <see cref="T:System.IComparable" /></span><span class="sxs-lookup"><span data-stu-id="a2e06-252"><paramref name="comparer" /> is <see langword="null" /> and neither <paramref name="value" /> nor the elements of <see cref="T:System.Collections.ArrayList" /> implement the <see cref="T:System.IComparable" /> interface.</span></span></exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a2e06-253"><paramref name="comparer" /> es <see langword="null" /> y <paramref name="value" /> no es del mismo tipo que los elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-253"><paramref name="comparer" /> is <see langword="null" /> and <paramref name="value" /> is not of the same type as the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-254"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-254"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-255">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-255">-or-</span></span>  
  
 <span data-ttu-id="a2e06-256"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-256"><paramref name="count" /> is less than zero.</span></span></exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
    <Member MemberName="Capacity">
      <MemberSignature Language="C#" Value="public virtual int Capacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Capacity" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Capacity" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Capacity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Capacity { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e06-257">Obtiene o establece el número de elementos que puede contener <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-257">Gets or sets the number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></summary>
        <value><span data-ttu-id="a2e06-258">Número de elementos que puede contener <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-258">The number of elements that the <see cref="T:System.Collections.ArrayList" /> can contain.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-259"><xref:System.Collections.ArrayList.Capacity%2A> es el número de elementos que la <xref:System.Collections.ArrayList> puede almacenar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-259"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="a2e06-260"><xref:System.Collections.ArrayList.Count%2A> es el número de elementos que están realmente en la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-260"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-261"><xref:System.Collections.ArrayList.Capacity%2A> es siempre mayor o igual que <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-261"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="a2e06-262">Si <xref:System.Collections.ArrayList.Count%2A> supera <xref:System.Collections.ArrayList.Capacity%2A> al agregar elementos, la capacidad aumenta automáticamente mediante la reasignación de la matriz interna antes de copiar los elementos antiguos y agregar los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-262">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="a2e06-263">La capacidad puede reducirse mediante una llamada a <xref:System.Collections.ArrayList.TrimToSize%2A> o estableciendo la <xref:System.Collections.ArrayList.Capacity%2A> propiedad explícitamente.</span><span class="sxs-lookup"><span data-stu-id="a2e06-263">The capacity can be decreased by calling <xref:System.Collections.ArrayList.TrimToSize%2A> or by setting the <xref:System.Collections.ArrayList.Capacity%2A> property explicitly.</span></span> <span data-ttu-id="a2e06-264">Cuando el valor de <xref:System.Collections.ArrayList.Capacity%2A> se establece explícitamente, la matriz interna se reasigna para alojar la capacidad especificada.</span><span class="sxs-lookup"><span data-stu-id="a2e06-264">When the value of <xref:System.Collections.ArrayList.Capacity%2A> is set explicitly, the internal array is also reallocated to accommodate the specified capacity.</span></span>  
  
 <span data-ttu-id="a2e06-265">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad es una O (`n`) operación, donde `n` es la capacidad de nuevo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-265">Retrieving the value of this property is an O(1) operation; setting the property is an O(`n`) operation, where `n` is the new capacity.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-266"><see cref="P:System.Collections.ArrayList.Capacity" /> se establece en un valor que es menor que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-266"><see cref="P:System.Collections.ArrayList.Capacity" /> is set to a value that is less than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="a2e06-267">No hay memoria suficiente en el sistema.</span><span class="sxs-lookup"><span data-stu-id="a2e06-267">There is not enough memory available on the system.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-268">Quita todos los elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-268">Removes all elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-269"><xref:System.Collections.ArrayList.Count%2A> está establecido en cero, y también se liberan las referencias a otros objetos desde los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-269"><xref:System.Collections.ArrayList.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="a2e06-270"><xref:System.Collections.ArrayList.Capacity%2A> No cambie.</span><span class="sxs-lookup"><span data-stu-id="a2e06-270"><xref:System.Collections.ArrayList.Capacity%2A> remains unchanged.</span></span>  <span data-ttu-id="a2e06-271">Para restablecer la capacidad de la <xref:System.Collections.ArrayList>, llame a <xref:System.Collections.ArrayList.TrimToSize%2A> o establecer el <xref:System.Collections.ArrayList.Capacity%2A> propiedad directamente.</span><span class="sxs-lookup"><span data-stu-id="a2e06-271">To reset the capacity of the <xref:System.Collections.ArrayList>, call <xref:System.Collections.ArrayList.TrimToSize%2A> or set the <xref:System.Collections.ArrayList.Capacity%2A> property directly.</span></span> <span data-ttu-id="a2e06-272">Recortar vacío <xref:System.Collections.ArrayList> establece la capacidad de la <xref:System.Collections.ArrayList> en la capacidad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="a2e06-272">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="a2e06-273">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-273">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-274">En el ejemplo de código siguiente se muestra cómo se recortan las partes no utilizadas de la <xref:System.Collections.ArrayList> y cómo se borran los valores de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-274">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-275"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-275">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-276">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-276">-or-</span></span>  
  
 <span data-ttu-id="a2e06-277"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-277">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.TrimToSize" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-278">Crea una copia superficial de la colección <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-278">Creates a shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-279">Copia superficial de la colección <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-279">A shallow copy of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-280">Una copia superficial de una colección copia únicamente los elementos de la colección, si son tipos de referencia o tipos de valor, pero no copia los objetos que hacen referencia las referencias.</span><span class="sxs-lookup"><span data-stu-id="a2e06-280">A shallow copy of a collection copies only the elements of the collection, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="a2e06-281">Las referencias de la nueva colección apuntan a los mismos objetos que apuntan las referencias de la colección original.</span><span class="sxs-lookup"><span data-stu-id="a2e06-281">The references in the new collection point to the same objects that the references in the original collection point to.</span></span>  
  
 <span data-ttu-id="a2e06-282">En cambio, una copia en profundidad de una colección copia los elementos y todo lo que hacen referencia directa o indirectamente el elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-282">In contrast, a deep copy of a collection copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="a2e06-283">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-283">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public virtual bool Contains (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Contains (item As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a2e06-284">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-284">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-285">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-285">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-286">Determina si un elemento se encuentra en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-286">Determines whether an element is in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns>
          <span data-ttu-id="a2e06-287"><see langword="true" /> si <paramref name="item" /> se encuentra en la matriz <see cref="T:System.Collections.ArrayList" />; en caso contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-287"><see langword="true" /> if <paramref name="item" /> is found in the <see cref="T:System.Collections.ArrayList" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-288">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-288">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-289">Este método determina la igualdad llamando a <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-289">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2e06-290">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-290">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a2e06-291">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-291">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-292">Copia la <see cref="T:System.Collections.ArrayList" /> o una parte de la misma en una matriz unidimensional.</span><span class="sxs-lookup"><span data-stu-id="a2e06-292">Copies the <see cref="T:System.Collections.ArrayList" /> or a portion of it to a one-dimensional array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a2e06-293"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-293">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-294">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-294">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <summary><span data-ttu-id="a2e06-295">Copia la <see cref="T:System.Collections.ArrayList" /> completa en una <see cref="T:System.Array" /> unidimensional compatible, empezando en el principio de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-295">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the beginning of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-296">La matriz especificada debe ser de un tipo compatible.</span><span class="sxs-lookup"><span data-stu-id="a2e06-296">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="a2e06-297">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-297">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="a2e06-298">Los elementos se copian en el <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-298">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-299">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-299">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-300">En el ejemplo de código siguiente se muestra cómo copiar un <xref:System.Collections.ArrayList> en un unidimensional <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-300">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-301"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-301"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-302"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="a2e06-302"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="a2e06-303">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-303">-or-</span></span>  
  
 <span data-ttu-id="a2e06-304">El número de elementos del <see cref="T:System.Collections.ArrayList" /> de origen es mayor que el número de elementos que puede contener el <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-304">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the number of elements that the destination <paramref name="array" /> can contain.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a2e06-305">El tipo de la <see cref="T:System.Collections.ArrayList" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-305">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Array array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a2e06-306"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-306">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-307">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-307">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a2e06-308">Índice de base cero de <c>array</c> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="a2e06-308">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="a2e06-309">Copia la totalidad de <see cref="T:System.Collections.ArrayList" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-309">Copies the entire <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-310">La matriz especificada debe ser de un tipo compatible.</span><span class="sxs-lookup"><span data-stu-id="a2e06-310">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="a2e06-311">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-311">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="a2e06-312">Los elementos se copian en el <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-312">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-313">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-313">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-314">En el ejemplo de código siguiente se muestra cómo copiar un <xref:System.Collections.ArrayList> en un unidimensional <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-314">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-315"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-315"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-316"><paramref name="arrayIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-316"><paramref name="arrayIndex" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-317"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="a2e06-317"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="a2e06-318">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-318">-or-</span></span>  
  
 <span data-ttu-id="a2e06-319">El número de elementos de la <see cref="T:System.Collections.ArrayList" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-319">The number of elements in the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a2e06-320">El tipo de la <see cref="T:System.Collections.ArrayList" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-320">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int index, Array array, int arrayIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32 index, class System.Array array, int32 arrayIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.CopyTo(System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(int index, Array ^ array, int arrayIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-321">Índice de base cero de la <see cref="T:System.Collections.ArrayList" /> de origen donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="a2e06-321">The zero-based index in the source <see cref="T:System.Collections.ArrayList" /> at which copying begins.</span></span></param>
        <param name="array"><span data-ttu-id="a2e06-322"><see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-322">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-323">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-323">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a2e06-324">Índice de base cero de <c>array</c> donde comienza la copia.</span><span class="sxs-lookup"><span data-stu-id="a2e06-324">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-325">Número de elementos que se van a copiar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-325">The number of elements to copy.</span></span></param>
        <summary><span data-ttu-id="a2e06-326">Copia un intervalo de elementos de <see cref="T:System.Collections.ArrayList" /> en una <see cref="T:System.Array" /> unidimensional compatible, empezando en el índice especificado de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-326">Copies a range of elements from the <see cref="T:System.Collections.ArrayList" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-327">La matriz especificada debe ser de un tipo compatible.</span><span class="sxs-lookup"><span data-stu-id="a2e06-327">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="a2e06-328">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-328">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="a2e06-329">Los elementos se copian en el <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-329">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-330">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-330">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-331">En el ejemplo de código siguiente se muestra cómo copiar un <xref:System.Collections.ArrayList> en un unidimensional <xref:System.Array?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-331">The following code example shows how to copy an <xref:System.Collections.ArrayList> into a one-dimensional <xref:System.Array?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.CopyTo1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.CopyTo1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-332"><paramref name="array" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-332"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-333"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-333"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-334">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-334">-or-</span></span>  
  
 <span data-ttu-id="a2e06-335"><paramref name="arrayIndex" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-335"><paramref name="arrayIndex" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-336">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-336">-or-</span></span>  
  
 <span data-ttu-id="a2e06-337"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-337"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-338"><paramref name="array" /> es multidimensional.</span><span class="sxs-lookup"><span data-stu-id="a2e06-338"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="a2e06-339">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-339">-or-</span></span>  
  
 <span data-ttu-id="a2e06-340"><paramref name="index" /> es mayor o igual que el valor de <see cref="P:System.Collections.ArrayList.Count" /> de la <see cref="T:System.Collections.ArrayList" /> de origen.</span><span class="sxs-lookup"><span data-stu-id="a2e06-340"><paramref name="index" /> is equal to or greater than the <see cref="P:System.Collections.ArrayList.Count" /> of the source <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
 <span data-ttu-id="a2e06-341">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-341">-or-</span></span>  
  
 <span data-ttu-id="a2e06-342">El número de elementos de <paramref name="index" /> hasta el final de <see cref="T:System.Collections.ArrayList" /> de origen es mayor que el espacio disponible desde <paramref name="arrayIndex" /> hasta el final de <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-342">The number of elements from <paramref name="index" /> to the end of the source <see cref="T:System.Collections.ArrayList" /> is greater than the available space from <paramref name="arrayIndex" /> to the end of the destination <paramref name="array" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a2e06-343">El tipo de la <see cref="T:System.Collections.ArrayList" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span><span class="sxs-lookup"><span data-stu-id="a2e06-343">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e06-344">Obtiene el número de elementos contenido realmente en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-344">Gets the number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="a2e06-345">Número de elementos contenido realmente en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-345">The number of elements actually contained in the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-346"><xref:System.Collections.ArrayList.Capacity%2A> es el número de elementos que la <xref:System.Collections.ArrayList> puede almacenar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-346"><xref:System.Collections.ArrayList.Capacity%2A> is the number of elements that the <xref:System.Collections.ArrayList> can store.</span></span> <span data-ttu-id="a2e06-347"><xref:System.Collections.ArrayList.Count%2A> es el número de elementos que están realmente en la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-347"><xref:System.Collections.ArrayList.Count%2A> is the number of elements that are actually in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-348"><xref:System.Collections.ArrayList.Capacity%2A> es siempre mayor o igual que <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-348"><xref:System.Collections.ArrayList.Capacity%2A> is always greater than or equal to <xref:System.Collections.ArrayList.Count%2A>.</span></span> <span data-ttu-id="a2e06-349">Si <xref:System.Collections.ArrayList.Count%2A> supera <xref:System.Collections.ArrayList.Capacity%2A> al agregar elementos, la capacidad aumenta automáticamente mediante la reasignación de la matriz interna antes de copiar los elementos antiguos y agregar los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-349">If <xref:System.Collections.ArrayList.Count%2A> exceeds <xref:System.Collections.ArrayList.Capacity%2A> while adding elements, the capacity is automatically increased by reallocating the internal array before copying the old elements and adding the new elements.</span></span>  
  
 <span data-ttu-id="a2e06-350">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-350">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FixedSize">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-351">Devuelve un contenedor de lista con un tamaño fijo, donde se permite modificar elementos pero no agregarlos ni quitarlos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-351">Returns a list wrapper with a fixed size, where elements are allowed to be modified, but not added or removed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList FixedSize (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList FixedSize(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ FixedSize(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="a2e06-352"><see cref="T:System.Collections.ArrayList" /> que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-352">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="a2e06-353">Devuelve un contenedor de <see cref="T:System.Collections.ArrayList" /> con un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-353">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="a2e06-354">Contenedor de <see cref="T:System.Collections.ArrayList" /> con un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-354">An <see cref="T:System.Collections.ArrayList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-355">Este contenedor se puede utilizar para evitar adiciones y eliminaciones de los originales <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-355">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a2e06-356">Todavía se pueden modificar o reemplazar los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-356">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="a2e06-357">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="a2e06-357">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a2e06-358">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-358">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-359">En el ejemplo de código siguiente se muestra cómo crear un contenedor de tamaño fijo alrededor de un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-359">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-360"><paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-360"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FixedSize">
      <MemberSignature Language="C#" Value="public static System.Collections.IList FixedSize (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList FixedSize(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.FixedSize(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FixedSize (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ FixedSize(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="a2e06-361"><see cref="T:System.Collections.IList" /> que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-361">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="a2e06-362">Devuelve un contenedor de <see cref="T:System.Collections.IList" /> con un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-362">Returns an <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></summary>
        <returns><span data-ttu-id="a2e06-363">Contenedor de <see cref="T:System.Collections.IList" /> con un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-363">An <see cref="T:System.Collections.IList" /> wrapper with a fixed size.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-364">Este contenedor se puede utilizar para evitar adiciones y eliminaciones de los originales <xref:System.Collections.IList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-364">This wrapper can be used to prevent additions to and deletions from the original <xref:System.Collections.IList>.</span></span> <span data-ttu-id="a2e06-365">Todavía se pueden modificar o reemplazar los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-365">The elements can still be modified or replaced.</span></span>  
  
 <span data-ttu-id="a2e06-366">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="a2e06-366">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a2e06-367">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-367">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-368"><paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-368"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEnumerator">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-369">Devuelve un enumerador que recorre en iteración la colección <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-369">Returns an enumerator that iterates through the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-370">Devuelve un enumerador para la <see cref="T:System.Collections.ArrayList" /> completa.</span><span class="sxs-lookup"><span data-stu-id="a2e06-370">Returns an enumerator for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-371">Interfaz <see cref="T:System.Collections.IEnumerator" /> para toda la colección <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-371">An <see cref="T:System.Collections.IEnumerator" /> for the entire <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-372">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="a2e06-372">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a2e06-373">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="a2e06-373">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a2e06-374">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="a2e06-374">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a2e06-375">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-375">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a2e06-376"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="a2e06-376"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="a2e06-377">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-377">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a2e06-378">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-378">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-379"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-379"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a2e06-380"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-380"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a2e06-381">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-381">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a2e06-382">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-382">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a2e06-383">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-383">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a2e06-384">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-384">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-385">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="a2e06-385">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a2e06-386">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-386">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="a2e06-387">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-387">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a2e06-388">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2e06-388">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a2e06-389">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="a2e06-389">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a2e06-390">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-390">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-391">En el ejemplo siguiente se obtiene el enumerador para un <xref:System.Collections.ArrayList>y el enumerador para un intervalo de elementos de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-391">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetEnumerator(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator (index As Integer, count As Integer) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-392">Índice inicial de base cero de la sección de <see cref="T:System.Collections.ArrayList" /> a la que debe hacer referencia el enumerador.</span><span class="sxs-lookup"><span data-stu-id="a2e06-392">The zero-based starting index of the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-393">Número de elementos de la sección de <see cref="T:System.Collections.ArrayList" /> a la que debe hacer referencia el enumerador.</span><span class="sxs-lookup"><span data-stu-id="a2e06-393">The number of elements in the <see cref="T:System.Collections.ArrayList" /> section that the enumerator should refer to.</span></span></param>
        <summary><span data-ttu-id="a2e06-394">Devuelve un enumerador para un intervalo de elementos de la matriz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-394">Returns an enumerator for a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-395"><see cref="T:System.Collections.IEnumerator" /> para el intervalo de elementos especificado de la matriz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-395">An <see cref="T:System.Collections.IEnumerator" /> for the specified range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-396">El `foreach` instrucción del lenguaje C# (`for each` en Visual C++, `For Each` Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="a2e06-396">The `foreach` statement of the C# language (`for each` in Visual C++, `For Each` Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="a2e06-397">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="a2e06-397">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="a2e06-398">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="a2e06-398">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="a2e06-399">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-399">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="a2e06-400"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="a2e06-400"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="a2e06-401">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-401">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a2e06-402">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-402">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-403"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-403"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="a2e06-404"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-404"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="a2e06-405">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-405">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="a2e06-406">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-406">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="a2e06-407">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-407">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="a2e06-408">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-408">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-409">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="a2e06-409">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="a2e06-410">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-410">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="a2e06-411">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-411">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="a2e06-412">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2e06-412">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="a2e06-413">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="a2e06-413">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="a2e06-414">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-414">This method is an O(1) operation.</span></span>  
  
## <a name="version-compatibility"></a><span data-ttu-id="a2e06-415">Compatibilidad de versiones</span><span class="sxs-lookup"><span data-stu-id="a2e06-415">Version Compatibility</span></span>  
 <span data-ttu-id="a2e06-416">En las versiones de .NET Framework 1.0 y 1.1, el enumerador para un <xref:System.Collections.ArrayList> contenedor devuelto por el <xref:System.Collections.ArrayList.Adapter%2A> método trata el segundo argumento como un límite superior en lugar de como un recuento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-416">In the .NET Framework versions 1.0 and 1.1, the enumerator for an <xref:System.Collections.ArrayList> wrapper returned by the <xref:System.Collections.ArrayList.Adapter%2A> method treated the second argument as an upper bound rather than as a count.</span></span> <span data-ttu-id="a2e06-417">En el [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] el segundo argumento se trata correctamente como un número.</span><span class="sxs-lookup"><span data-stu-id="a2e06-417">In the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] the second argument is correctly treated as a count.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-418">En el ejemplo siguiente se obtiene el enumerador para un <xref:System.Collections.ArrayList>y el enumerador para un intervalo de elementos de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-418">The following example gets the enumerator for an <xref:System.Collections.ArrayList>, and the enumerator for a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-csharp[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR/collections.arraylist.getenumerator/cs/program.cs#1)]
 [!code-vb[Collections.ArrayList.GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/collections.arraylist.getenumerator/vb/program.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-419"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-419"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-420">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-420">-or-</span></span>  
  
 <span data-ttu-id="a2e06-421"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-421"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-422"><paramref name="index" /> y <paramref name="count" /> no especifican un intervalo válido en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-422"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetRange">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ArrayList GetRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ArrayList GetRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRange (index As Integer, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ArrayList ^ GetRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-423">Índice de <see cref="T:System.Collections.ArrayList" /> de base cero en el que empieza el intervalo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-423">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which the range starts.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-424">Número de elementos del intervalo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-424">The number of elements in the range.</span></span></param>
        <summary><span data-ttu-id="a2e06-425">Devuelve una <see cref="T:System.Collections.ArrayList" /> que representa un subconjunto de los elementos de la <see cref="T:System.Collections.ArrayList" /> de origen.</span><span class="sxs-lookup"><span data-stu-id="a2e06-425">Returns an <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-426"><see cref="T:System.Collections.ArrayList" /> que representa un subconjunto de los elementos de la <see cref="T:System.Collections.ArrayList" /> de origen.</span><span class="sxs-lookup"><span data-stu-id="a2e06-426">An <see cref="T:System.Collections.ArrayList" /> which represents a subset of the elements in the source <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-427">Este método no crea copias de los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-427">This method does not create copies of the elements.</span></span> <span data-ttu-id="a2e06-428">El nuevo <xref:System.Collections.ArrayList> es sólo una ventana de vista en el origen de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-428">The new <xref:System.Collections.ArrayList> is only a view window into the source <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a2e06-429">Sin embargo, todos los cambios subsiguientes en el origen de <xref:System.Collections.ArrayList> debe realizarse a través de esta ventana de vista <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-429">However, all subsequent changes to the source <xref:System.Collections.ArrayList> must be done through this view window <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a2e06-430">Si se realizan cambios directamente en el origen de <xref:System.Collections.ArrayList>, la ventana de vista <xref:System.Collections.ArrayList> se invalida cualquier operación en él, se devolverá un <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-430">If changes are made directly to the source <xref:System.Collections.ArrayList>, the view window <xref:System.Collections.ArrayList> is invalidated and any operations on it will return an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="a2e06-431">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-431">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-432">En el ejemplo de código siguiente se muestra cómo establecer y obtener un intervalo de elementos de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-432">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-433"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-433"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-434">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-434">-or-</span></span>  
  
 <span data-ttu-id="a2e06-435"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-435"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-436"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido de elementos en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-436"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-437">Devuelve el índice de base cero de la primera aparición de un valor en la <see cref="T:System.Collections.ArrayList" /> o en una parte de ella.</span><span class="sxs-lookup"><span data-stu-id="a2e06-437">Returns the zero-based index of the first occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-438">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-438">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-439">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-439">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-440">Busca el objeto <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la primera aparición en toda la colección <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-440">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-441">Índice de base cero de la primera aparición de <paramref name="value" /> en la totalidad de <see cref="T:System.Collections.ArrayList" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-441">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-442">El <xref:System.Collections.ArrayList> se busca hacia delante a partir del primer elemento y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-442">The <xref:System.Collections.ArrayList> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="a2e06-443">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-443">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-444">Este método determina la igualdad llamando a <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-444">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2e06-445">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-445">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a2e06-446">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-446">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-447">En el ejemplo de código siguiente se muestra cómo se determina el índice de la primera aparición de un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-447">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-448">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-448">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-449">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-449">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="a2e06-450">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a2e06-450">The zero-based starting index of the search.</span></span> <span data-ttu-id="a2e06-451">0 (cero) es válido en una lista vacía.</span><span class="sxs-lookup"><span data-stu-id="a2e06-451">0 (zero) is valid in an empty list.</span></span></param>
        <summary><span data-ttu-id="a2e06-452">Busca el objeto <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de la matriz <see cref="T:System.Collections.ArrayList" /> que abarca desde el índice especificado hasta el último elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-452">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the specified index to the last element.</span></span></summary>
        <returns><span data-ttu-id="a2e06-453">Índice de base cero de la primera aparición de <paramref name="value" /> dentro del intervalo de elementos de <see cref="T:System.Collections.ArrayList" /> que abarca desde <paramref name="startIndex" /> hasta el último elemento, si se encuentra; de lo contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-453">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-454">El <xref:System.Collections.ArrayList> se busca hacia delante, empezando en `startIndex` y terminando con el último elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-454">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="a2e06-455">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es el número de elementos de `startIndex` al final de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-455">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-456">Este método determina la igualdad llamando a <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-456">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2e06-457">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-457">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a2e06-458">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-458">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-459">En el ejemplo de código siguiente se muestra cómo se determina el índice de la primera aparición de un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-459">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-460"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-460"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public virtual int IndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.IndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-461">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-461">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-462">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-462">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="a2e06-463">Índice inicial de base cero de la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a2e06-463">The zero-based starting index of the search.</span></span> <span data-ttu-id="a2e06-464">0 (cero) es válido en una lista vacía.</span><span class="sxs-lookup"><span data-stu-id="a2e06-464">0 (zero) is valid in an empty list.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-465">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a2e06-465">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="a2e06-466">Busca el objeto <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la primera aparición dentro del intervalo de elementos de la matriz <see cref="T:System.Collections.ArrayList" /> que comienza en el índice especificado y contiene el número especificado de elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-466">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at the specified index and contains the specified number of elements.</span></span></summary>
        <returns><span data-ttu-id="a2e06-467">Índice de base cero de la primera aparición de <paramref name="value" /> dentro del intervalo de elementos de <see cref="T:System.Collections.ArrayList" /> que comienza en <paramref name="startIndex" /> y contiene el número de elementos de <paramref name="count" />, si se encuentra; de lo contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-467">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that starts at <paramref name="startIndex" /> and contains <paramref name="count" /> number of elements, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-468">El <xref:System.Collections.ArrayList> se busca hacia delante, empezando en `startIndex` y terminando en `startIndex` más `count` menos 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="a2e06-468">The <xref:System.Collections.ArrayList> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="a2e06-469">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-469">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="a2e06-470">Este método determina la igualdad llamando a <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-470">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2e06-471">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-471">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a2e06-472">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-472">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-473">En el ejemplo de código siguiente se muestra cómo se determina el índice de la primera aparición de un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-473">The following code example shows how to determine the index of the first occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-474"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-474"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
 <span data-ttu-id="a2e06-475">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-475">-or-</span></span>  
  
 <span data-ttu-id="a2e06-476"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-476"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-477">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-477">-or-</span></span>  
  
 <span data-ttu-id="a2e06-478"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-478"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-479">Índice de base cero en el que se debe insertar <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-479">The zero-based index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="a2e06-480"><see cref="T:System.Object" /> que se va a insertar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-480">The <see cref="T:System.Object" /> to insert.</span></span> <span data-ttu-id="a2e06-481">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-481">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-482">Inserta un elemento en <see cref="T:System.Collections.ArrayList" />, en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-482">Inserts an element into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-483"><xref:System.Collections.ArrayList> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-483"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-484">Si <xref:System.Collections.ArrayList.Count%2A> ya es igual a <xref:System.Collections.ArrayList.Capacity%2A>, la capacidad de la <xref:System.Collections.ArrayList> se incrementa mediante la reasignación automática de la matriz interna, y se copian los elementos existentes en la nueva matriz antes de agrega el nuevo elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-484">If <xref:System.Collections.ArrayList.Count%2A> already equals <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array, and the existing elements are copied to the new array before the new element is added.</span></span>  
  
 <span data-ttu-id="a2e06-485">Si `index` es igual a <xref:System.Collections.ArrayList.Count%2A>, `value` se agrega al final de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-485">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, `value` is added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-486">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del punto de inserción se desplazan hacia abajo para alojar el elemento nuevo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-486">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="a2e06-487">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-487">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a2e06-488">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="a2e06-488">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a2e06-489">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-489">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-490">En el ejemplo de código siguiente se muestra cómo insertar elementos en el <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-490">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-491"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-491"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-492">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-492">-or-</span></span>  
  
 <span data-ttu-id="a2e06-493"><paramref name="index" /> es mayor que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-493"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-494"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-494">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-495">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-495">-or-</span></span>  
  
 <span data-ttu-id="a2e06-496"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-496">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InsertRange">
      <MemberSignature Language="C#" Value="public virtual void InsertRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertRange(int index, System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-497">Índice de base cero donde se deben insertar los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-497">The zero-based index at which the new elements should be inserted.</span></span></param>
        <param name="c"><span data-ttu-id="a2e06-498"><see cref="T:System.Collections.ICollection" /> cuyos elementos se deben insertar en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-498">The <see cref="T:System.Collections.ICollection" /> whose elements should be inserted into the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-499">La propia colección no puede ser <see langword="null" />, pero puede contener elementos que sean <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-499">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-500">Inserta los elementos de una colección en <see cref="T:System.Collections.ArrayList" /> en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-500">Inserts the elements of a collection into the <see cref="T:System.Collections.ArrayList" /> at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-501"><xref:System.Collections.ArrayList> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-501"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-502">Si el nuevo <xref:System.Collections.ArrayList.Count%2A> (actual <xref:System.Collections.ArrayList.Count%2A> más el tamaño de la colección) será mayor que <xref:System.Collections.ArrayList.Capacity%2A>, la capacidad de la <xref:System.Collections.ArrayList> se incrementa mediante la reasignación automática de la matriz interna para dar cabida a los nuevos elementos, y se copian los elementos existentes en la nueva matriz antes de que se agregan los nuevos elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-502">If the new <xref:System.Collections.ArrayList.Count%2A> (the current <xref:System.Collections.ArrayList.Count%2A> plus the size of the collection) will be greater than <xref:System.Collections.ArrayList.Capacity%2A>, the capacity of the <xref:System.Collections.ArrayList> is increased by automatically reallocating the internal array to accommodate the new elements, and the existing elements are copied to the new array before the new elements are added.</span></span>  
  
 <span data-ttu-id="a2e06-503">Si `index` es igual a <xref:System.Collections.ArrayList.Count%2A>, los elementos se agregan al final de <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-503">If `index` is equal to <xref:System.Collections.ArrayList.Count%2A>, the elements are added to the end of <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-504">El orden de los elementos de la <xref:System.Collections.ICollection> se conserva en el <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-504">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-505">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del punto de inserción se desplazan hacia abajo para alojar el elemento nuevo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-505">In collections of contiguous elements, such as lists, the elements that follow the insertion point move down to accommodate the new element.</span></span> <span data-ttu-id="a2e06-506">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-506">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a2e06-507">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="a2e06-507">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a2e06-508">Este método es una O (`n` + `m`) operación, donde `n` es el número de elementos que se va a agregarse y `m` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-508">This method is an O(`n` + `m`) operation, where `n` is the number of elements to be added and `m` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-509">En el ejemplo de código siguiente se muestra cómo insertar elementos en el <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-509">The following code example shows how to insert elements into the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Insert Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Insert Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Insert Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Insert Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-510"><paramref name="c" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-510"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-511"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-511"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-512">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-512">-or-</span></span>  
  
 <span data-ttu-id="a2e06-513"><paramref name="index" /> es mayor que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-513"><paramref name="index" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-514"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-514">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-515">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-515">-or-</span></span>  
  
 <span data-ttu-id="a2e06-516"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-516">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public virtual bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e06-517">Obtiene un valor que indica si la interfaz <see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-517">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></summary>
        <value>
          <span data-ttu-id="a2e06-518">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-518"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> has a fixed size; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2e06-519">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-519">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-520">Una colección de tamaño fijo no permite agregar o quitar elementos una vez que se ha creado, pero sí permite modificar los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="a2e06-520">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="a2e06-521">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="a2e06-521">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a2e06-522">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-522">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-523">En el ejemplo de código siguiente se muestra cómo crear un contenedor de tamaño fijo alrededor de un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-523">The following code example shows how to create a fixed-size wrapper around an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsFixedSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsFixedSize Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e06-524">Obtiene un valor que indica si <see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-524">Gets a value indicating whether the <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="a2e06-525">Es <see langword="true" /> si la interfaz <see cref="T:System.Collections.ArrayList" /> es de solo lectura; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-525"><see langword="true" /> if the <see cref="T:System.Collections.ArrayList" /> is read-only; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2e06-526">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-526">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-527">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-527">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="a2e06-528">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="a2e06-528">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a2e06-529">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-529">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-530">En el ejemplo de código siguiente se muestra cómo crear un contenedor de solo lectura para un <xref:System.Collections.ArrayList> y cómo determinar si un <xref:System.Collections.ArrayList> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-530">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public virtual bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e06-531">Obtiene un valor que indica si el acceso a la interfaz <see cref="T:System.Collections.ArrayList" /> está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="a2e06-531">Gets a value indicating whether access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe).</span></span></summary>
        <value>
          <span data-ttu-id="a2e06-532">Es <see langword="true" /> si el acceso a <see cref="T:System.Collections.ArrayList" /> está sincronizado (es seguro para subprocesos); de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-532"><see langword="true" /> if access to the <see cref="T:System.Collections.ArrayList" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2e06-533">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-533">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-534">Para garantizar la seguridad para subprocesos de la <xref:System.Collections.ArrayList>, todas las operaciones deben realizarse a través del contenedor devuelto por el <xref:System.Collections.ArrayList.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a2e06-534">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through the wrapper returned by the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span>  
  
 <span data-ttu-id="a2e06-535">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-535">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a2e06-536">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="a2e06-536">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a2e06-537">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-537">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-538">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando el <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2e06-538">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a2e06-539">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-539">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 <span data-ttu-id="a2e06-540">En el ejemplo de código siguiente se muestra cómo sincronizar un <xref:System.Collections.ArrayList>, determinar si un <xref:System.Collections.ArrayList> está sincronizado y utilizar un sincronizada <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-540">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-541">Índice de base cero del elemento que se va a obtener o establecer.</span><span class="sxs-lookup"><span data-stu-id="a2e06-541">The zero-based index of the element to get or set.</span></span></param>
        <summary><span data-ttu-id="a2e06-542">Obtiene o establece el elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-542">Gets or sets the element at the specified index.</span></span></summary>
        <value><span data-ttu-id="a2e06-543">Elemento en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-543">The element at the specified index.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-544">El <xref:System.Collections.ArrayList.Item%2A> devuelve un <xref:System.Object>, por lo que puede que necesite convertir el valor devuelto al tipo original para procesarlos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-544">The <xref:System.Collections.ArrayList.Item%2A> returns an <xref:System.Object>, so you may need to cast the returned value to the original type in order to manipulate it.</span></span> <span data-ttu-id="a2e06-545">Es importante tener en cuenta que <xref:System.Collections.ArrayList> no es una colección fuertemente tipada.</span><span class="sxs-lookup"><span data-stu-id="a2e06-545">It is important to note that <xref:System.Collections.ArrayList> is not a strongly-typed collection.</span></span> <span data-ttu-id="a2e06-546">Para obtener una alternativa fuertemente tipado, consulte <xref:System.Collections.Generic.List%601>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-546">For a strongly-typed alternative, see <xref:System.Collections.Generic.List%601>.</span></span>  
  
 <span data-ttu-id="a2e06-547"><xref:System.Collections.ArrayList> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-547"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-548">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[index]`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-548">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[index]`.</span></span>  
  
 <span data-ttu-id="a2e06-549">El lenguaje C# utiliza la palabra clave para definir los indizadores en lugar de implementar la <xref:System.Collections.ArrayList.Item%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a2e06-549">The C# language uses the  keyword to define the indexers instead of implementing the <xref:System.Collections.ArrayList.Item%2A> property.</span></span> <span data-ttu-id="a2e06-550">Visual Basic implementa <xref:System.Collections.ArrayList.Item%2A> como propiedad predeterminada, lo que proporciona la misma funcionalidad de indización.</span><span class="sxs-lookup"><span data-stu-id="a2e06-550">Visual Basic implements <xref:System.Collections.ArrayList.Item%2A> as a default property, which provides the same indexing functionality.</span></span>  
  
 <span data-ttu-id="a2e06-551">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-551">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-552">En el ejemplo de código siguiente se crea un <xref:System.Collections.ArrayList> y se agregan varios elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-552">The following code example creates an <xref:System.Collections.ArrayList> and adds several items.</span></span> <span data-ttu-id="a2e06-553">En el ejemplo se muestra cómo tener acceso a elementos con el <xref:System.Collections.ArrayList.Item%2A> propiedad (el indizador en C#) y cambia un elemento mediante la asignación de un nuevo valor para el <xref:System.Collections.ArrayList.Item%2A> propiedad para un índice especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-553">The example demonstrates accessing elements with the <xref:System.Collections.ArrayList.Item%2A> property (the indexer in C#), and changing an element by assigning a new value to the <xref:System.Collections.ArrayList.Item%2A> property for a specified index.</span></span> <span data-ttu-id="a2e06-554">El ejemplo también muestra que el <xref:System.Collections.ArrayList.Item%2A> propiedad no puede usarse para obtener acceso o agregar elementos fuera del tamaño actual de la lista.</span><span class="sxs-lookup"><span data-stu-id="a2e06-554">The example also shows that the <xref:System.Collections.ArrayList.Item%2A> property cannot be used to access or add elements outside the current size of the list.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Item#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source.cs#1)]
 [!code-vb[System.Collections.ArrayList.Item#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source.vb#1)]  
  
 <span data-ttu-id="a2e06-555">En el ejemplo siguiente se usa el <xref:System.Collections.ArrayList.Item%2A> propiedad explícitamente para asignar valores a los elementos de la lista.</span><span class="sxs-lookup"><span data-stu-id="a2e06-555">The following example uses the <xref:System.Collections.ArrayList.Item%2A> property explicitly to assign values to items in the list.</span></span> <span data-ttu-id="a2e06-556">En el ejemplo se define una clase que hereda un <xref:System.Collections.ArrayList> y agrega un método para codificar los elementos de lista.</span><span class="sxs-lookup"><span data-stu-id="a2e06-556">The example defines a class that inherits an <xref:System.Collections.ArrayList> and adds a method to scramble the list items.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Item#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/cpp/source2.cpp#2)]
 [!code-csharp[System.Collections.ArrayList.Item#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/CS/source2.cs#2)]
 [!code-vb[System.Collections.ArrayList.Item#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Item/VB/source2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-557"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-557"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-558">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-558">-or-</span></span>  
  
 <span data-ttu-id="a2e06-559"><paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-559"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-560">Devuelve el índice de base cero de la última aparición de un valor en la <see cref="T:System.Collections.ArrayList" /> o en una parte de ella.</span><span class="sxs-lookup"><span data-stu-id="a2e06-560">Returns the zero-based index of the last occurrence of a value in the <see cref="T:System.Collections.ArrayList" /> or in a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-561">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-561">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-562">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-562">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-563">Busca el <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la última aparición en la <see cref="T:System.Collections.ArrayList" /> completa.</span><span class="sxs-lookup"><span data-stu-id="a2e06-563">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <returns><span data-ttu-id="a2e06-564">Índice de base cero de la última aparición de <paramref name="value" /> en todo el objeto <see cref="T:System.Collections.ArrayList" />, si se encuentra; en caso contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-564">The zero-based index of the last occurrence of <paramref name="value" /> within the entire the <see cref="T:System.Collections.ArrayList" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-565">El <xref:System.Collections.ArrayList> se realiza hacia atrás, empezando en el último elemento y terminando en el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-565">The <xref:System.Collections.ArrayList> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="a2e06-566">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-566">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-567">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-567">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a2e06-568">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-568">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-569">En el ejemplo de código siguiente se muestra cómo se determina el índice de la última aparición de un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-569">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-570">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-570">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-571">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-571">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="a2e06-572">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="a2e06-572">The zero-based starting index of the backward search.</span></span></param>
        <summary><span data-ttu-id="a2e06-573">Busca el objeto <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de la matriz <see cref="T:System.Collections.ArrayList" /> que abarca desde el primer elemento hasta el último índice especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-573">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to the specified index.</span></span></summary>
        <returns><span data-ttu-id="a2e06-574">Índice de base cero de la última aparición de <paramref name="value" /> dentro del intervalo de elementos de <see cref="T:System.Collections.ArrayList" /> que abarca desde el primer elemento hasta <paramref name="startIndex" />, si se encuentra; de lo contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-574">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-575">El <xref:System.Collections.ArrayList> es la búsqueda hacia atrás, empezando en `startIndex` y finaliza con el primer elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-575">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="a2e06-576">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es el número de elementos desde el principio de la <xref:System.Collections.ArrayList> a `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-576">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is the number of elements from the beginning of the <xref:System.Collections.ArrayList> to `startIndex`.</span></span>  
  
 <span data-ttu-id="a2e06-577">Este método determina la igualdad llamando a <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-577">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2e06-578">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-578">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a2e06-579">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-579">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-580">En el ejemplo de código siguiente se muestra cómo se determina el índice de la última aparición de un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-580">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-581"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-581"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public virtual int LastIndexOf (object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 LastIndexOf(object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.LastIndexOf(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LastIndexOf (value As Object, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int LastIndexOf(System::Object ^ value, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-582">Objeto <see cref="T:System.Object" /> que se va a buscar en la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-582">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-583">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-583">The value can be <see langword="null" />.</span></span></param>
        <param name="startIndex"><span data-ttu-id="a2e06-584">Índice inicial de base cero de la búsqueda hacia atrás.</span><span class="sxs-lookup"><span data-stu-id="a2e06-584">The zero-based starting index of the backward search.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-585">Número de elementos de la sección en la que se va a realizar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="a2e06-585">The number of elements in the section to search.</span></span></param>
        <summary><span data-ttu-id="a2e06-586">Busca el objeto <see cref="T:System.Object" /> especificado y devuelve el índice de base cero de la última aparición dentro del intervalo de elementos de la matriz <see cref="T:System.Collections.ArrayList" /> que contiene el número de elementos especificado y termina en el índice especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-586">Searches for the specified <see cref="T:System.Object" /> and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains the specified number of elements and ends at the specified index.</span></span></summary>
        <returns><span data-ttu-id="a2e06-587">Índice de base cero de la última aparición de <paramref name="value" /> dentro del intervalo de elementos de <see cref="T:System.Collections.ArrayList" /> que contiene el número de elementos de <paramref name="count" /> y termina en <paramref name="startIndex" />, si se encuentra; de lo contrario, -1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-587">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in the <see cref="T:System.Collections.ArrayList" /> that contains <paramref name="count" /> number of elements and ends at <paramref name="startIndex" />, if found; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-588">El <xref:System.Collections.ArrayList> es la búsqueda hacia atrás, empezando en `startIndex` y terminando en `startIndex` menos `count` más 1, si `count` es mayor que 0.</span><span class="sxs-lookup"><span data-stu-id="a2e06-588">The <xref:System.Collections.ArrayList> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="a2e06-589">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-589">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="a2e06-590">Este método determina la igualdad llamando a <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-590">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2e06-591">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `item` para determinar si existe cualquier elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-591">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `item` to determine whether item exists.</span></span> <span data-ttu-id="a2e06-592">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `item` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-592">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-593">En el ejemplo de código siguiente se muestra cómo se determina el índice de la última aparición de un elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-593">The following code example shows how to determine the index of the last occurrence of a specified element.</span></span> <span data-ttu-id="a2e06-594">Tenga en cuenta que `LastIndexOf` es una búsqueda hacia atrás; por lo tanto, `count` debe ser menor o igual que `startIndex` + 1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-594">Note that `LastIndexOf` is a backward search; therefore, `count` must be less than or equal to `startIndex` + 1.</span></span>  
  
 [!code-cpp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-595"><paramref name="startIndex" /> está fuera del intervalo de índices válidos para <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-595"><paramref name="startIndex" /> is outside the range of valid indexes for the <see cref="T:System.Collections.ArrayList" />.</span></span>  
  
 <span data-ttu-id="a2e06-596">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-596">-or-</span></span>  
  
 <span data-ttu-id="a2e06-597"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-597"><paramref name="count" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-598">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-598">-or-</span></span>  
  
 <span data-ttu-id="a2e06-599"><paramref name="startIndex" /> y <paramref name="count" /> no especifican una sección válida en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-599"><paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.IndexOf(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Contains(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadOnly">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-600">Devuelve un contenedor de lista de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-600">Returns a list wrapper that is read-only.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList ReadOnly (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList ReadOnly(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ ReadOnly(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="a2e06-601"><see cref="T:System.Collections.ArrayList" /> que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-601">The <see cref="T:System.Collections.ArrayList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="a2e06-602">Devuelve un contenedor de <see cref="T:System.Collections.ArrayList" /> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-602">Returns a read-only <see cref="T:System.Collections.ArrayList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="a2e06-603">Contenedor de <see cref="T:System.Collections.ArrayList" /> de solo lectura para <paramref name="list" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-603">A read-only <see cref="T:System.Collections.ArrayList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-604">Para evitar que las modificaciones a `list`, exponer `list` sólo a través de este contenedor.</span><span class="sxs-lookup"><span data-stu-id="a2e06-604">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="a2e06-605">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-605">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="a2e06-606">Si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="a2e06-606">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a2e06-607">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-607">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-608">En el ejemplo de código siguiente se muestra cómo crear un contenedor de solo lectura para un <xref:System.Collections.ArrayList> y cómo determinar si un <xref:System.Collections.ArrayList> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-608">The following code example shows how to create a read-only wrapper around an <xref:System.Collections.ArrayList> and how to determine if an <xref:System.Collections.ArrayList> is read-only.</span></span>  
  
 [!code-cpp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.ReadOnly1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.ReadOnly1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-609"><paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-609"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public static System.Collections.IList ReadOnly (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList ReadOnly(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ReadOnly(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReadOnly (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ ReadOnly(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="a2e06-610"><see cref="T:System.Collections.IList" /> que se va a incluir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-610">The <see cref="T:System.Collections.IList" /> to wrap.</span></span></param>
        <summary><span data-ttu-id="a2e06-611">Devuelve un contenedor de <see cref="T:System.Collections.IList" /> de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-611">Returns a read-only <see cref="T:System.Collections.IList" /> wrapper.</span></span></summary>
        <returns><span data-ttu-id="a2e06-612">Contenedor de <see cref="T:System.Collections.IList" /> de solo lectura para <paramref name="list" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-612">A read-only <see cref="T:System.Collections.IList" /> wrapper around <paramref name="list" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-613">Para evitar que las modificaciones a `list`, exponer `list` sólo a través de este contenedor.</span><span class="sxs-lookup"><span data-stu-id="a2e06-613">To prevent any modifications to `list`, expose `list` only through this wrapper.</span></span>  
  
 <span data-ttu-id="a2e06-614">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-614">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection.</span></span> <span data-ttu-id="a2e06-615">Si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="a2e06-615">If changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="a2e06-616">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-616">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-617"><paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-617"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="a2e06-618"><see cref="T:System.Object" /> que se va a quitar de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-618">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-619">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-619">The value can be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-620">Quita la primera aparición de un objeto específico de la interfaz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-620">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-621">Si el <xref:System.Collections.ArrayList> no contiene el objeto especificado, el <xref:System.Collections.ArrayList> permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="a2e06-621">If the <xref:System.Collections.ArrayList> does not contain the specified object, the <xref:System.Collections.ArrayList> remains unchanged.</span></span> <span data-ttu-id="a2e06-622">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="a2e06-622">No exception is thrown.</span></span>  
  
 <span data-ttu-id="a2e06-623">Este método realiza una búsqueda lineal; por lo tanto, este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-623">This method performs a linear search; therefore, this method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 <span data-ttu-id="a2e06-624">Este método determina la igualdad llamando a <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-624">This method determines equality by calling <xref:System.Object.Equals%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="a2e06-625">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="a2e06-625">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="a2e06-626">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-626">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a2e06-627">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="a2e06-627">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-628">En el ejemplo de código siguiente se muestra cómo quitar elementos de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-628">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-629"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-629">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-630">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-630">-or-</span></span>  
  
 <span data-ttu-id="a2e06-631"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-631">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-632">Índice de base cero del elemento que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-632">The zero-based index of the element to remove.</span></span></param>
        <summary><span data-ttu-id="a2e06-633">Quita el elemento situado en el índice especificado de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-633">Removes the element at the specified index of the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-634">Después de quita el elemento, se ajusta el tamaño de la colección y el valor de la <xref:System.Collections.ArrayList.Count%2A> propiedad disminuye en uno.</span><span class="sxs-lookup"><span data-stu-id="a2e06-634">After the element is removed, the size of the collection is adjusted and the value of the <xref:System.Collections.ArrayList.Count%2A> property is decreased by one.</span></span>  
  
 <span data-ttu-id="a2e06-635">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="a2e06-635">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="a2e06-636">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-636">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a2e06-637">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="a2e06-637">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a2e06-638">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-638">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-639">En el ejemplo de código siguiente se muestra cómo quitar elementos de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-639">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-640"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-640"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-641">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-641">-or-</span></span>  
  
 <span data-ttu-id="a2e06-642"><paramref name="index" /> es igual o mayor que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-642"><paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-643"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-643">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-644">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-644">-or-</span></span>  
  
 <span data-ttu-id="a2e06-645"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-645">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.Add(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.Insert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveRange">
      <MemberSignature Language="C#" Value="public virtual void RemoveRange (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveRange(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveRange (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveRange(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-646">Índice inicial de base cero del intervalo de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-646">The zero-based starting index of the range of elements to remove.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-647">Número de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-647">The number of elements to remove.</span></span></param>
        <summary><span data-ttu-id="a2e06-648">Quita todos los elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-648">Removes a range of elements from the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-649">En colecciones de elementos contiguos, como listas, los elementos que van a continuación del elemento eliminado se desplazan hacia arriba para ocupar el espacio libre.</span><span class="sxs-lookup"><span data-stu-id="a2e06-649">In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</span></span> <span data-ttu-id="a2e06-650">Si la colección está indizada, también se actualizan los índices de los elementos que se han movido.</span><span class="sxs-lookup"><span data-stu-id="a2e06-650">If the collection is indexed, the indexes of the elements that are moved are also updated.</span></span> <span data-ttu-id="a2e06-651">Este comportamiento no se aplica a las colecciones cuyos elementos se agrupan conceptualmente en sectores de almacenamiento, como una tabla hash.</span><span class="sxs-lookup"><span data-stu-id="a2e06-651">This behavior does not apply to collections where elements are conceptually grouped into buckets, such as a hash table.</span></span>  
  
 <span data-ttu-id="a2e06-652">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-652">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-653">En el ejemplo de código siguiente se muestra cómo quitar elementos de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-653">The following code example shows how to remove elements from the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Remove Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Remove Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Remove Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Remove Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-654"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-654"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-655">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-655">-or-</span></span>  
  
 <span data-ttu-id="a2e06-656"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-656"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-657"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido de elementos en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-657"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-658"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-658">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-659">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-659">-or-</span></span>  
  
 <span data-ttu-id="a2e06-660"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-660">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Remove(System.Object)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      </Docs>
    </Member>
    <Member MemberName="Repeat">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Repeat (object value, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Repeat(object value, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Repeat(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Repeat (value As Object, count As Integer) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Repeat(System::Object ^ value, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a2e06-661"><see cref="T:System.Object" /> que se va a copiar varias veces en la nueva <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-661">The <see cref="T:System.Object" /> to copy multiple times in the new <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-662">El valor puede ser <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-662">The value can be <see langword="null" />.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-663">Número de veces que se debe copiar <c>value</c>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-663">The number of times <c>value</c> should be copied.</span></span></param>
        <summary><span data-ttu-id="a2e06-664">Devuelve una <see cref="T:System.Collections.ArrayList" /> cuyos elementos son copias del valor especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-664">Returns an <see cref="T:System.Collections.ArrayList" /> whose elements are copies of the specified value.</span></span></summary>
        <returns><span data-ttu-id="a2e06-665"><see cref="T:System.Collections.ArrayList" /> con un número <paramref name="count" /> de elementos que son todos ellos copias de <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-665">An <see cref="T:System.Collections.ArrayList" /> with <paramref name="count" /> number of elements, all of which are copies of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-666"><xref:System.Collections.ArrayList> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-666"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-667">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-667">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-668">En el ejemplo de código siguiente se muestra cómo crear e inicializar una nueva <xref:System.Collections.ArrayList> con el mismo valor.</span><span class="sxs-lookup"><span data-stu-id="a2e06-668">The following code example shows how to create and initialize a new <xref:System.Collections.ArrayList> with the same value.</span></span>  
  
 [!code-cpp[Classic ArrayList.Repeat Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Repeat Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Repeat Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Repeat Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-669"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-669"><paramref name="count" /> is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-670">Invierte el orden de los elementos en la <see cref="T:System.Collections.ArrayList" /> o en una parte de ella.</span><span class="sxs-lookup"><span data-stu-id="a2e06-670">Reverses the order of the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-671">Invierte el orden de los elementos en la <see cref="T:System.Collections.ArrayList" /> completa.</span><span class="sxs-lookup"><span data-stu-id="a2e06-671">Reverses the order of the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-672">Este método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para invertir el orden de los elementos que el elemento situado en <xref:System.Collections.ArrayList> [i], donde i es un índice dentro del intervalo, se mueve a <xref:System.Collections.ArrayList> [j], donde j es igual a `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-672">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="a2e06-673">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-673">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-674">En el ejemplo de código siguiente se muestra cómo se invierte el criterio de ordenación de los valores de un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-674">The following code example shows how to reverse the sort order of the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-675"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-675">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public virtual void Reverse (int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reverse(int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Reverse(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reverse (index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reverse(int index, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-676">Índice inicial de base cero del intervalo que se va a invertir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-676">The zero-based starting index of the range to reverse.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-677">Número de elementos del intervalo que se va a invertir.</span><span class="sxs-lookup"><span data-stu-id="a2e06-677">The number of elements in the range to reverse.</span></span></param>
        <summary><span data-ttu-id="a2e06-678">Invierte el orden de los elementos en el intervalo especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-678">Reverses the order of the elements in the specified range.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-679">Este método usa <xref:System.Array.Reverse%2A?displayProperty=nameWithType> para invertir el orden de los elementos que el elemento situado en <xref:System.Collections.ArrayList> [i], donde i es un índice dentro del intervalo, se mueve a <xref:System.Collections.ArrayList> [j], donde j es igual a `index`  +  `index`  +  `count` - i - 1.</span><span class="sxs-lookup"><span data-stu-id="a2e06-679">This method uses <xref:System.Array.Reverse%2A?displayProperty=nameWithType> to reverse the order of the elements, such that the element at <xref:System.Collections.ArrayList> [i], where i is any index within the range, moves to <xref:System.Collections.ArrayList> [j], where j equals `index` + `index` + `count` - i - 1.</span></span>  
  
 <span data-ttu-id="a2e06-680">Este método es una O (`n`) operación, donde `n` es `count`.</span><span class="sxs-lookup"><span data-stu-id="a2e06-680">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-681">En el ejemplo de código siguiente se muestra cómo se invierte el criterio de ordenación de los valores de un intervalo de elementos en una <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-681">The following code example shows how to reverse the sort order of the values in a range of elements in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-682"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-682"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-683">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-683">-or-</span></span>  
  
 <span data-ttu-id="a2e06-684"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-684"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-685"><paramref name="index" /> y <paramref name="count" /> no denotan un intervalo válido de elementos en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-685"><paramref name="index" /> and <paramref name="count" /> do not denote a valid range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-686"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-686">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetRange">
      <MemberSignature Language="C#" Value="public virtual void SetRange (int index, System.Collections.ICollection c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRange(int32 index, class System.Collections.ICollection c) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.SetRange(System.Int32,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRange (index As Integer, c As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRange(int index, System::Collections::ICollection ^ c);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="c" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-687">Índice de <see cref="T:System.Collections.ArrayList" /> de base cero en el que empiezan a copiarse los elementos de <c>c</c>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-687">The zero-based <see cref="T:System.Collections.ArrayList" /> index at which to start copying the elements of <c>c</c>.</span></span></param>
        <param name="c"><span data-ttu-id="a2e06-688"><see cref="T:System.Collections.ICollection" /> cuyos elementos se copian en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-688">The <see cref="T:System.Collections.ICollection" /> whose elements to copy to the <see cref="T:System.Collections.ArrayList" />.</span></span> <span data-ttu-id="a2e06-689">La propia colección no puede ser <see langword="null" />, pero puede contener elementos que sean <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-689">The collection itself cannot be <see langword="null" />, but it can contain elements that are <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="a2e06-690">Copia los elementos de una colección en un intervalo de elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-690">Copies the elements of a collection over a range of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-691"><xref:System.Collections.ArrayList> acepta `null` como un valor válido y permite elementos duplicados.</span><span class="sxs-lookup"><span data-stu-id="a2e06-691"><xref:System.Collections.ArrayList> accepts `null` as a valid value and allows duplicate elements.</span></span>  
  
 <span data-ttu-id="a2e06-692">El orden de los elementos de la <xref:System.Collections.ICollection> se conserva en el <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-692">The order of the elements in the <xref:System.Collections.ICollection> is preserved in the <xref:System.Collections.ArrayList>.</span></span>  
  
 <span data-ttu-id="a2e06-693">Este método es una O (`n` + 1) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-693">This method is an O(`n` + 1) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-694">En el ejemplo de código siguiente se muestra cómo establecer y obtener un intervalo de elementos de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-694">The following code example shows how to set and get a range of elements in the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.SetRange Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.SetRange Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.SetRange Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.SetRange Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-695"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-695"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-696">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-696">-or-</span></span>  
  
 <span data-ttu-id="a2e06-697"><paramref name="index" /> más el número de elementos de <paramref name="c" /> es mayor que <see cref="P:System.Collections.ArrayList.Count" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-697"><paramref name="index" /> plus the number of elements in <paramref name="c" /> is greater than <see cref="P:System.Collections.ArrayList.Count" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-698"><paramref name="c" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-698"><paramref name="c" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-699"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-699">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.AddRange(System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.InsertRange(System.Int32,System.Collections.ICollection)" />
        <altmember cref="M:System.Collections.ArrayList.GetRange(System.Int32,System.Int32)" />
        <altmember cref="M:System.Collections.ArrayList.RemoveRange(System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-700">Ordena los elementos en la <see cref="T:System.Collections.ArrayList" /> o en una parte de ella.</span><span class="sxs-lookup"><span data-stu-id="a2e06-700">Sorts the elements in the <see cref="T:System.Collections.ArrayList" /> or a portion of it.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-701">Ordena todos los elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-701">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-702">Este método usa <xref:System.Array.Sort%2A?displayProperty=nameWithType>, que utiliza el algoritmo QuickSort.</span><span class="sxs-lookup"><span data-stu-id="a2e06-702">This method uses <xref:System.Array.Sort%2A?displayProperty=nameWithType>, which uses the QuickSort algorithm.</span></span> <span data-ttu-id="a2e06-703">El algoritmo QuickSort verás una comparación de ordenación (también denominada ordenación inestable), lo que significa que un "menor o igual a" operación de comparación determina cuál de los dos elementos se realizarán en primer lugar en la lista ordenada final.</span><span class="sxs-lookup"><span data-stu-id="a2e06-703">The QuickSort algorithm is a comparison sort (also called an unstable sort), which means that a "less than or equal to" comparison operation determines which of two elements should occur first in the final sorted list.</span></span> <span data-ttu-id="a2e06-704">Sin embargo, si dos elementos son iguales, puede que no se conserve su orden original.</span><span class="sxs-lookup"><span data-stu-id="a2e06-704">However, if two elements are equal, their original order might not be preserved.</span></span> <span data-ttu-id="a2e06-705">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="a2e06-705">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="a2e06-706">Para realizar una ordenación estable, debe implementar un personalizado <xref:System.Collections.IComparer> interfaz que se utiliza con las otras sobrecargas de este método.</span><span class="sxs-lookup"><span data-stu-id="a2e06-706">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface to use with the other overloads of this method.</span></span>  
  
 <span data-ttu-id="a2e06-707">En promedio, este método es una O (`n` registro `n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>; en el peor de los casos es una O (`n`^ 2) operación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-707">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-708">En el ejemplo de código siguiente se muestra cómo ordenar los valores de un <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-708">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Sort Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Sort Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Sort Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Sort Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-709"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-709">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="a2e06-710">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-710">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="a2e06-711">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-711">-or-</span></span>  
  
 <span data-ttu-id="a2e06-712">Referencia nula (<see langword="Nothing" /> en Visual Basic) para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-712">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="a2e06-713">Ordena los elementos en la <see cref="T:System.Collections.ArrayList" /> completa usando el comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-713">Sorts the elements in the entire <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-714">Use la <xref:System.Collections.ArrayList.Sort%2A> método para ordenar una lista de objetos con un comparador personalizado que implementa el <xref:System.Collections.IComparer> interfaz.</span><span class="sxs-lookup"><span data-stu-id="a2e06-714">Use the <xref:System.Collections.ArrayList.Sort%2A> method to  sort a list of objects with a custom comparer that implements the <xref:System.Collections.IComparer> interface.</span></span> <span data-ttu-id="a2e06-715">Si se pasa `null` para `comparer`, este método usa la <xref:System.IComparable> implementación de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-715">If you pass `null` for `comparer`, this method uses the <xref:System.IComparable> implementation of each element.</span></span> <span data-ttu-id="a2e06-716">En este caso, debe asegurarse de que los objetos contenidos en la lista implementan la <xref:System.Collections.IComparer> interfaz o una excepción se producirá.</span><span class="sxs-lookup"><span data-stu-id="a2e06-716">In this case, you must make sure that the objects contained in the list implement the <xref:System.Collections.IComparer> interface or an exception will occur.</span></span>  
  
 <span data-ttu-id="a2e06-717">Además, usando la <xref:System.IComparable> implementación significa que la lista realiza una ordenación de la comparación (también denominada ordenación inestable); es decir, si dos elementos son iguales, su orden podría no conservarse.</span><span class="sxs-lookup"><span data-stu-id="a2e06-717">In addition, using the <xref:System.IComparable> implementation means the list performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="a2e06-718">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="a2e06-718">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="a2e06-719">Para realizar una ordenación estable, debe implementar un personalizado <xref:System.Collections.IComparer> interfaz.</span><span class="sxs-lookup"><span data-stu-id="a2e06-719">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="a2e06-720">En promedio, este método es una O (`n` registro `n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>; en el peor de los casos es una O (`n`^ 2) operación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-720">On average, this method is an O(`n` log `n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>; in the worst case it is an O(`n`^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-721">En el ejemplo de código siguiente se muestra cómo ordenar los valores de un <xref:System.Collections.ArrayList> utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-721">The following code example shows how to sort the values in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CPP/arraylist_sort2.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/CS/arraylist_sort2.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_2/VB/arraylist_sort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-722"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-722">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2e06-723">Se produjo un error al comparar dos elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-723">An error occurred while comparing two elements.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-724"><see langword="null" /> se pasa para <paramref name="comparer" /> y los elementos de la lista no implementan <see cref="T:System.IComparable" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-724"><see langword="null" /> is passed for <paramref name="comparer" />, and the elements in the list do not implement <see cref="T:System.IComparable" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public virtual void Sort (int index, int count, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Sort(int32 index, int32 count, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Sort(System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Sort (index As Integer, count As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Sort(int index, int count, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="a2e06-725">Índice inicial de base cero del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-725">The zero-based starting index of the range to sort.</span></span></param>
        <param name="count"><span data-ttu-id="a2e06-726">Longitud del intervalo que se va a ordenar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-726">The length of the range to sort.</span></span></param>
        <param name="comparer"><span data-ttu-id="a2e06-727">Implementación de <see cref="T:System.Collections.IComparer" /> que se va a usar al comparar elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-727">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span></span>  
  
 <span data-ttu-id="a2e06-728">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-728">-or-</span></span>  
  
 <span data-ttu-id="a2e06-729">Referencia nula (<see langword="Nothing" /> en Visual Basic) para usar la implementación de <see cref="T:System.IComparable" /> de cada elemento.</span><span class="sxs-lookup"><span data-stu-id="a2e06-729">A null reference (<see langword="Nothing" /> in Visual Basic) to use the <see cref="T:System.IComparable" /> implementation of each element.</span></span></param>
        <summary><span data-ttu-id="a2e06-730">Ordena los elementos en un intervalo de elementos de la matriz <see cref="T:System.Collections.ArrayList" /> usando el comparador especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-730">Sorts the elements in a range of elements in <see cref="T:System.Collections.ArrayList" /> using the specified comparer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-731">Si `comparer` se establece en `null`, este método realiza una ordenación de la comparación (también denominada ordenación inestable); es decir, si dos elementos son iguales, su orden podría no conservarse.</span><span class="sxs-lookup"><span data-stu-id="a2e06-731">If `comparer` is set to `null`, this method performs a comparison sort (also called an unstable sort); that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="a2e06-732">En cambio, una ordenación estable conserva el orden de los elementos que son iguales.</span><span class="sxs-lookup"><span data-stu-id="a2e06-732">In contrast, a stable sort preserves the order of elements that are equal.</span></span> <span data-ttu-id="a2e06-733">Para realizar una ordenación estable, debe implementar un personalizado <xref:System.Collections.IComparer> interfaz.</span><span class="sxs-lookup"><span data-stu-id="a2e06-733">To perform a stable sort, you must implement a custom <xref:System.Collections.IComparer> interface.</span></span>  
  
 <span data-ttu-id="a2e06-734">En promedio, este método es una O (`n` registro `n`) operación, donde `n` es `count`; en el peor de los casos, es una operación O(n^2).</span><span class="sxs-lookup"><span data-stu-id="a2e06-734">On average, this method is an O(`n` log `n`) operation, where `n` is `count`; in the worst case it is an O(n^2) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-735">En el ejemplo de código siguiente se muestra cómo ordenar los valores en un intervalo de elementos en una <xref:System.Collections.ArrayList> utilizando el comparador predeterminado y un comparador personalizado que invierte el criterio de ordenación.</span><span class="sxs-lookup"><span data-stu-id="a2e06-735">The following code example shows how to sort the values in a range of elements in an <xref:System.Collections.ArrayList> using the default comparer and a custom comparer that reverses the sort order.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CPP/arraylist_sort3.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/CS/arraylist_sort3.cs#1)]
 [!code-vb[System.Collections.ArrayList.Sort_3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.Sort_3/VB/arraylist_sort3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="a2e06-736"><paramref name="index" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-736"><paramref name="index" /> is less than zero.</span></span>  
  
 <span data-ttu-id="a2e06-737">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-737">-or-</span></span>  
  
 <span data-ttu-id="a2e06-738"><paramref name="count" /> es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="a2e06-738"><paramref name="count" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a2e06-739"><paramref name="index" /> y <paramref name="count" /> no especifican un intervalo válido en <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-739"><paramref name="index" /> and <paramref name="count" /> do not specify a valid range in the <see cref="T:System.Collections.ArrayList" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-740"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-740">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="a2e06-741">Se produjo un error al comparar dos elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-741">An error occurred while comparing two elements.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Synchronized">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-742">Devuelve un contenedor de lista que está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="a2e06-742">Returns a list wrapper that is synchronized (thread safe).</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.ArrayList Synchronized (System.Collections.ArrayList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ArrayList Synchronized(class System.Collections.ArrayList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.ArrayList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As ArrayList) As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::ArrayList ^ Synchronized(System::Collections::ArrayList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.ArrayList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="a2e06-743"><see cref="T:System.Collections.ArrayList" /> que se va a sincronizar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-743">The <see cref="T:System.Collections.ArrayList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="a2e06-744">Devuelve un contenedor de la clase <see cref="T:System.Collections.ArrayList" /> que está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="a2e06-744">Returns an <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="a2e06-745">Contenedor de la clase <see cref="T:System.Collections.ArrayList" /> que está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="a2e06-745">An <see cref="T:System.Collections.ArrayList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-746">Para garantizar la seguridad para subprocesos de la <xref:System.Collections.ArrayList>, todas las operaciones deben realizarse a través de este contenedor.</span><span class="sxs-lookup"><span data-stu-id="a2e06-746">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="a2e06-747">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-747">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a2e06-748">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="a2e06-748">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a2e06-749">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-749">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-750">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando el <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2e06-750">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a2e06-751">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-751">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="a2e06-752">En el ejemplo de código siguiente se muestra cómo sincronizar un <xref:System.Collections.ArrayList>, determinar si un <xref:System.Collections.ArrayList> está sincronizado y utilizar un sincronizada <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-752">The following code example shows how to synchronize an <xref:System.Collections.ArrayList>, determine if an <xref:System.Collections.ArrayList> is synchronized and use a synchronized <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-753"><paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-753"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="Synchronized">
      <MemberSignature Language="C#" Value="public static System.Collections.IList Synchronized (System.Collections.IList list);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IList Synchronized(class System.Collections.IList list) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Synchronized (list As IList) As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IList ^ Synchronized(System::Collections::IList ^ list);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="list" Type="System.Collections.IList" />
      </Parameters>
      <Docs>
        <param name="list"><span data-ttu-id="a2e06-754"><see cref="T:System.Collections.IList" /> que se va a sincronizar.</span><span class="sxs-lookup"><span data-stu-id="a2e06-754">The <see cref="T:System.Collections.IList" /> to synchronize.</span></span></param>
        <summary><span data-ttu-id="a2e06-755">Devuelve un contenedor de la clase <see cref="T:System.Collections.IList" /> que está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="a2e06-755">Returns an <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></summary>
        <returns><span data-ttu-id="a2e06-756">Contenedor de la clase <see cref="T:System.Collections.IList" /> que está sincronizado (es seguro para subprocesos).</span><span class="sxs-lookup"><span data-stu-id="a2e06-756">An <see cref="T:System.Collections.IList" /> wrapper that is synchronized (thread safe).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-757">Para garantizar la seguridad para subprocesos de la <xref:System.Collections.ArrayList>, todas las operaciones deben realizarse a través de este contenedor.</span><span class="sxs-lookup"><span data-stu-id="a2e06-757">To guarantee the thread safety of the <xref:System.Collections.ArrayList>, all operations must be done through this wrapper.</span></span>  
  
 <span data-ttu-id="a2e06-758">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-758">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a2e06-759">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="a2e06-759">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a2e06-760">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-760">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-761">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando el <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2e06-761">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a2e06-762">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-762">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-763"><paramref name="list" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-763"><paramref name="list" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="P:System.Collections.ArrayList.SyncRoot" />
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public virtual object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ArrayList.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2e06-764">Obtiene un objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-764">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <value><span data-ttu-id="a2e06-765">Objeto que se puede usar para sincronizar el acceso a <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-765">An object that can be used to synchronize access to the <see cref="T:System.Collections.ArrayList" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-766">Para crear una versión sincronizada de la <xref:System.Collections.ArrayList>, use el <xref:System.Collections.ArrayList.Synchronized%2A> método.</span><span class="sxs-lookup"><span data-stu-id="a2e06-766">To create a synchronized version of the <xref:System.Collections.ArrayList>, use the <xref:System.Collections.ArrayList.Synchronized%2A> method.</span></span> <span data-ttu-id="a2e06-767">Sin embargo, las clases derivadas pueden proporcionar su propia versión sincronizada de la <xref:System.Collections.ArrayList> mediante el <xref:System.Collections.ArrayList.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="a2e06-767">However, derived classes can provide their own synchronized version of the <xref:System.Collections.ArrayList> using the <xref:System.Collections.ArrayList.SyncRoot%2A> property.</span></span> <span data-ttu-id="a2e06-768">El código de sincronización debe realizar las operaciones en el <xref:System.Collections.ArrayList.SyncRoot%2A> de la <xref:System.Collections.ArrayList>y no directamente en el <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-768">The synchronizing code must perform operations on the <xref:System.Collections.ArrayList.SyncRoot%2A> of the <xref:System.Collections.ArrayList>, not directly on the <xref:System.Collections.ArrayList>.</span></span> <span data-ttu-id="a2e06-769">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-769">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="a2e06-770">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo la <xref:System.Collections.ArrayList> objeto.</span><span class="sxs-lookup"><span data-stu-id="a2e06-770">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ArrayList> object.</span></span>  
  
 <span data-ttu-id="a2e06-771">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-771">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="a2e06-772">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="a2e06-772">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="a2e06-773">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-773">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-774">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando el <xref:System.Collections.ArrayList.SyncRoot%2A> durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="a2e06-774">The following code example shows how to lock the collection using the <xref:System.Collections.ArrayList.SyncRoot%2A> during the entire enumeration.</span></span>  
  
 [!code-cpp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/CS/source2.cs#2)]
 [!code-vb[Classic ArrayList.IsSynchronized Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.IsSynchronized Example/VB/source2.vb#2)]  
  
 <span data-ttu-id="a2e06-775">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="a2e06-775">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ArrayList.IsSynchronized" />
        <altmember cref="M:System.Collections.ArrayList.Synchronized(System.Collections.IList)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToArray">
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2e06-776">Copia los elementos de <see cref="T:System.Collections.ArrayList" /> en una nueva matriz.</span><span class="sxs-lookup"><span data-stu-id="a2e06-776">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual object[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ToArray () As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ ToArray();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-777">Copia los elementos de <see cref="T:System.Collections.ArrayList" /> en una nueva matriz de <see cref="T:System.Object" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-777">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new <see cref="T:System.Object" /> array.</span></span></summary>
        <returns><span data-ttu-id="a2e06-778">Matriz de <see cref="T:System.Object" /> que contiene copias de los elementos de <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-778">An <see cref="T:System.Object" /> array containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-779">Los elementos se copian utilizando <xref:System.Array.Copy%2A?displayProperty=nameWithType>, que es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-779">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public virtual Array ToArray (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Array ToArray(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.ToArray(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Array ^ ToArray(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="a2e06-780"><see cref="T:System.Type" /> de elemento de la matriz de destino que se va a crear y en la que se van a copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="a2e06-780">The element <see cref="T:System.Type" /> of the destination array to create and copy elements to.</span></span></param>
        <summary><span data-ttu-id="a2e06-781">Copia los elementos de la matriz <see cref="T:System.Collections.ArrayList" /> a una nueva matriz del tipo de elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-781">Copies the elements of the <see cref="T:System.Collections.ArrayList" /> to a new array of the specified element type.</span></span></summary>
        <returns><span data-ttu-id="a2e06-782">Una matriz del tipo de elemento especificado que contiene copias de los elementos de la matriz <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-782">An array of the specified element type containing copies of the elements of the <see cref="T:System.Collections.ArrayList" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-783">Todos los objetos en el <xref:System.Collections.ArrayList> objeto se convertirán a la <xref:System.Type> especificado en el `type` parámetro.</span><span class="sxs-lookup"><span data-stu-id="a2e06-783">All of the objects in the <xref:System.Collections.ArrayList> object will be cast to the <xref:System.Type> specified in the `type` parameter.</span></span>  
  
 <span data-ttu-id="a2e06-784">Los elementos se copian utilizando <xref:System.Array.Copy%2A?displayProperty=nameWithType>, que es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-784">The elements are copied using <xref:System.Array.Copy%2A?displayProperty=nameWithType>, which is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-785">En el siguiente ejemplo copia muestra cómo copiar los elementos de una <xref:System.Collections.ArrayList> a una matriz de cadenas.</span><span class="sxs-lookup"><span data-stu-id="a2e06-785">The following copy example shows how to copy the elements of an <xref:System.Collections.ArrayList> to a string array.</span></span>  
  
 [!code-cpp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CPP/arraylist_toarray.cpp#1)]
 [!code-csharp[System.Collections.ArrayList.ToArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/CS/arraylist_toarray.cs#1)]
 [!code-vb[System.Collections.ArrayList.ToArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ArrayList.ToArray/VB/arraylist_toarray.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a2e06-786"><paramref name="type" /> es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-786"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="a2e06-787">El tipo de la <see cref="T:System.Collections.ArrayList" /> de origen no puede convertirse automáticamente en el tipo especificado.</span><span class="sxs-lookup"><span data-stu-id="a2e06-787">The type of the source <see cref="T:System.Collections.ArrayList" /> cannot be cast automatically to the specified type.</span></span></exception>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="TrimToSize">
      <MemberSignature Language="C#" Value="public virtual void TrimToSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TrimToSize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ArrayList.TrimToSize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TrimToSize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TrimToSize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a2e06-788">Establece la capacidad en el número real de elementos que hay en la colección <see cref="T:System.Collections.ArrayList" />.</span><span class="sxs-lookup"><span data-stu-id="a2e06-788">Sets the capacity to the actual number of elements in the <see cref="T:System.Collections.ArrayList" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2e06-789">Este método se puede utilizar para minimizar la sobrecarga de memoria de la colección si ningún elemento nuevo se agregará a la colección.</span><span class="sxs-lookup"><span data-stu-id="a2e06-789">This method can be used to minimize a collection's memory overhead if no new elements will be added to the collection.</span></span>  
  
 <span data-ttu-id="a2e06-790">Para restablecer un <xref:System.Collections.ArrayList> a su estado inicial, llame a la <xref:System.Collections.ArrayList.Clear%2A> método antes de llamar a <xref:System.Collections.ArrayList.TrimToSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-790">To reset a <xref:System.Collections.ArrayList> to its initial state, call the <xref:System.Collections.ArrayList.Clear%2A> method before calling <xref:System.Collections.ArrayList.TrimToSize%2A>.</span></span> <span data-ttu-id="a2e06-791">Recortar vacío <xref:System.Collections.ArrayList> establece la capacidad de la <xref:System.Collections.ArrayList> en la capacidad predeterminada.</span><span class="sxs-lookup"><span data-stu-id="a2e06-791">Trimming an empty <xref:System.Collections.ArrayList> sets the capacity of the <xref:System.Collections.ArrayList> to the default capacity.</span></span>  
  
 <span data-ttu-id="a2e06-792">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ArrayList.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-792">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ArrayList.Count%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a2e06-793">En el ejemplo de código siguiente se muestra cómo se recortan las partes no utilizadas de la <xref:System.Collections.ArrayList> y cómo se borran los valores de la <xref:System.Collections.ArrayList>.</span><span class="sxs-lookup"><span data-stu-id="a2e06-793">The following code example shows how to trim the unused portions of the <xref:System.Collections.ArrayList> and how to clear the values of the <xref:System.Collections.ArrayList>.</span></span>  
  
 [!code-cpp[Classic ArrayList.Clear Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ArrayList.Clear Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/CS/source.cs#1)]
 [!code-vb[Classic ArrayList.Clear Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic ArrayList.Clear Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a2e06-794"><see cref="T:System.Collections.ArrayList" /> es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="a2e06-794">The <see cref="T:System.Collections.ArrayList" /> is read-only.</span></span>  
  
 <span data-ttu-id="a2e06-795">O bien</span><span class="sxs-lookup"><span data-stu-id="a2e06-795">-or-</span></span>  
  
 <span data-ttu-id="a2e06-796"><see cref="T:System.Collections.ArrayList" /> tiene un tamaño fijo.</span><span class="sxs-lookup"><span data-stu-id="a2e06-796">The <see cref="T:System.Collections.ArrayList" /> has a fixed size.</span></span></exception>
        <altmember cref="M:System.Collections.ArrayList.Clear" />
        <altmember cref="P:System.Collections.ArrayList.Capacity" />
        <altmember cref="P:System.Collections.ArrayList.Count" />
      </Docs>
    </Member>
  </Members>
</Type>