<Type Name="DictionaryBase" FullName="System.Collections.DictionaryBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="65985fb884fc3e9f8ea0e99a2fb18bb6607c9a63" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DictionaryBase : System.Collections.IDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit DictionaryBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IDictionary, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.DictionaryBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DictionaryBase&#xA;Implements IDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class DictionaryBase abstract : System::Collections::IDictionary" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9d306-101">Proporciona la clase base <see langword="abstract" /> para una colección de pares clave-valor fuertemente tipada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d306-101">Provides the <see langword="abstract" /> base class for a strongly typed collection of key/value pairs.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-102">La instrucción foreach del lenguaje C# (for each en Visual Basic), devuelve un objeto del tipo de los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-102">The foreach statement of the C# language (for each in Visual Basic) returns an object of the type of the elements in the collection.</span></span> <span data-ttu-id="9d306-103">Puesto que cada elemento de la <xref:System.Collections.DictionaryBase> es un par clave/valor, el tipo de elemento no es el tipo de la clave o el tipo del valor.</span><span class="sxs-lookup"><span data-stu-id="9d306-103">Since each element of the <xref:System.Collections.DictionaryBase> is a key/value pair, the element type is not the type of the key or the type of the value.</span></span> <span data-ttu-id="9d306-104">En su lugar, el tipo de elemento es <xref:System.Collections.DictionaryEntry>.</span><span class="sxs-lookup"><span data-stu-id="9d306-104">Instead, the element type is <xref:System.Collections.DictionaryEntry>.</span></span>  
  
 <span data-ttu-id="9d306-105">El `foreach` instrucción es un contenedor del enumerador, que sólo permite la lectura de no escritura a la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-105">The `foreach` statement is a wrapper around the enumerator, which only allows reading from, not writing to, the collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9d306-106">Dado que las claves se pueden heredar y su comportamiento puede cambiar, no se puede garantizar su unicidad absoluta mediante comparaciones utilizando el <xref:System.Type.Equals%2A> método.</span><span class="sxs-lookup"><span data-stu-id="9d306-106">Because keys can be inherited and their behavior changed, their absolute uniqueness cannot be guaranteed by comparisons using the <xref:System.Type.Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-107">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-107">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="9d306-108">Estático público (<see langword="Shared" /> en Visual Basic) miembros de este tipo son seguros para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d306-108">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="9d306-109">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d306-109">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="9d306-110">Esta implementación no proporciona un contenedor sincronizado (es seguro para subprocesos) para una <see cref="T:System.Collections.DictionaryBase" />, pero las clases derivadas pueden crear sus propias versiones sincronizadas de la <see cref="T:System.Collections.DictionaryBase" /> mediante el <see cref="P:System.Collections.ICollection.SyncRoot" /> propiedad.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d306-110">This implementation does not provide a synchronized (thread-safe) wrapper for a <see cref="T:System.Collections.DictionaryBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.DictionaryBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="9d306-111">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d306-111">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="9d306-112">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d306-112">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="9d306-113">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9d306-113">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="9d306-114">Esta clase base se proporciona para facilitar a los implementadores que creen una colección fuertemente tipada personalizada.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9d306-114">This base class is provided to make it easier for implementers to create a strongly typed custom collection.</span>
        </span>
        <span data-ttu-id="9d306-115">Se recomienda ampliar esta clase base en lugar de crear sus propios los implementadores.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9d306-115">Implementers are encouraged to extend this base class instead of creating their own.</span>
        </span>
        <span data-ttu-id="9d306-116">Los miembros de esta clase base están protegidos y están diseñados para usarse a través de una clase derivada solo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="9d306-116">Members of this base class are protected and are intended to be used through a derived class only.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.Hashtable" />
    <altmember cref="T:System.Collections.IDictionary" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DictionaryBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DictionaryBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d306-117">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-117">Initializes a new instance of the <see cref="T:System.Collections.DictionaryBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-118">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-118">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d306-119">Borra el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-119">Clears the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-120"><xref:System.Collections.DictionaryBase.Count%2A> está establecido en cero, y también se liberan las referencias a otros objetos desde los elementos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-120"><xref:System.Collections.DictionaryBase.Count%2A> is set to zero, and references to other objects from elements of the collection are also released.</span></span>  
  
 <span data-ttu-id="9d306-121">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.DictionaryBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-121">This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9d306-122">
            <see cref="T:System.Array" /> unidimensional que es el destino de los objetos <see cref="T:System.Collections.DictionaryEntry" /> copiados de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-122">The one-dimensional <see cref="T:System.Array" /> that is the destination of the <see cref="T:System.Collections.DictionaryEntry" /> objects copied from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
          <span data-ttu-id="9d306-123">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-123">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9d306-124">Índice de base cero de <c>array</c> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-124">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-125">Copia los elementos de <see cref="T:System.Collections.DictionaryBase" /> a una <see cref="T:System.Array" /> unidimensional en el índice especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-125">Copies the <see cref="T:System.Collections.DictionaryBase" /> elements to a one-dimensional <see cref="T:System.Array" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-126">Los elementos se copian en el <xref:System.Array> en el mismo orden en el que el enumerador recorre en iteración la <xref:System.Collections.DictionaryBase>.</span><span class="sxs-lookup"><span data-stu-id="9d306-126">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Collections.DictionaryBase>.</span></span>  
  
 <span data-ttu-id="9d306-127">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.DictionaryBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-127">This method is an O(`n`) operation, where `n` is <xref:System.Collections.DictionaryBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d306-128">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-128">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9d306-129">
            <paramref name="index" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-129">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9d306-130">
            <paramref name="array" /> es multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-130">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="9d306-131">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-131">-or-</span>
          </span>
          <span data-ttu-id="9d306-132">El número de elementos de la <see cref="T:System.Collections.DictionaryBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-132">The number of elements in the source <see cref="T:System.Collections.DictionaryBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9d306-133">El tipo de la <see cref="T:System.Collections.DictionaryBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-133">The type of the source <see cref="T:System.Collections.DictionaryBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="M:System.Collections.DictionaryBase.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-134">Obtiene el número de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-134">Gets the number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-135">Número de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-135">The number of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-136">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-136">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dictionary">
      <MemberSignature Language="C#" Value="protected System.Collections.IDictionary Dictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Dictionary" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.Dictionary" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Dictionary As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::IDictionary ^ Dictionary { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-137">Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-137">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-138">
            <see cref="T:System.Collections.IDictionary" /> que representa la propia instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-138">An <see cref="T:System.Collections.IDictionary" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-139">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-139">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-140">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-140">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-141">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-141">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionaryEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IDictionaryEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IDictionaryEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IDictionaryEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionaryEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d306-142">Devuelve un <see cref="T:System.Collections.IDictionaryEnumerator" /> que itera por la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-142">Returns an <see cref="T:System.Collections.IDictionaryEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d306-143">
            <see cref="T:System.Collections.IDictionaryEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-143">An <see cref="T:System.Collections.IDictionaryEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-144">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="9d306-144">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="9d306-145">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="9d306-145">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="9d306-146">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9d306-146">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9d306-147">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-147">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9d306-148"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="9d306-148"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="9d306-149">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="9d306-149">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9d306-150">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-150">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="9d306-151"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-151"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="9d306-152"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="9d306-152"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9d306-153">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="9d306-153">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9d306-154">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="9d306-154">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="9d306-155">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="9d306-155">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="9d306-156">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-156">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="9d306-157">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="9d306-157">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9d306-158">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="9d306-158">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="9d306-159">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9d306-159">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="9d306-160">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="9d306-160">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="9d306-161">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="9d306-161">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="9d306-162">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-162">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-163">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-163">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerHashtable">
      <MemberSignature Language="C#" Value="protected System.Collections.Hashtable InnerHashtable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Hashtable InnerHashtable" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.InnerHashtable" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerHashtable As Hashtable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Hashtable ^ InnerHashtable { System::Collections::Hashtable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Hashtable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-164">Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-164">Gets the list of elements contained in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-165">
            <see cref="T:System.Collections.Hashtable" /> que representa la propia instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-165">A <see cref="T:System.Collections.Hashtable" /> representing the <see cref="T:System.Collections.DictionaryBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-166">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-166">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-167">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-167">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d306-168">Ejecuta procesos personalizados adicionales antes de borrar el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-168">Performs additional custom processes before clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-169">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción antes de que se borra la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-169">The default implementation of this method is intended to be overridden by a derived class to perform some action before the collection is cleared.</span></span>  
  
 <span data-ttu-id="9d306-170">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-170">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-171">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-171">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-172">Este método permite a los implementadores definir procesos que deben realizarse antes de eliminar todos los elementos de subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-172">This method allows implementers to define processes that must be performed before deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-173">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-173">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-174">
              <see cref="M:System.Collections.DictionaryBase.OnClear" /> se invoca antes del comportamiento Clear estándar, mientras que <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> se invoca después del comportamiento Clear estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-174">
                <see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span>
            </span>
            <span data-ttu-id="9d306-175">Por ejemplo, los implementadores pueden excluir determinados elementos de eliminación por un método Clear global.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-175">For example, implementers can exempt certain elements from deletion by a global Clear.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d306-176">Realiza procesos personalizados adicionales después de borrar el contenido de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-176">Performs additional custom processes after clearing the contents of the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-177">La implementación predeterminada de este método está pensada para ser reemplazado por una clase derivada para realizar alguna acción después de que se borra la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-177">The default implementation of this method is intended to be overridden by a derived class to perform some action after the collection is cleared.</span></span>  
  
 <span data-ttu-id="9d306-178">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-178">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-179">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-179">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-180">Este método permite a los implementadores definir procesos que deben realizarse después de eliminar todos los elementos de subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-180">This method allows implementers to define processes that must be performed after deleting all the elements from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-181">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-181">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-182">
              <see cref="M:System.Collections.DictionaryBase.OnClear" /> se invoca antes del comportamiento Clear estándar, mientras que <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> se invoca después del comportamiento Clear estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-182">
                <see cref="M:System.Collections.DictionaryBase.OnClear" /> is invoked before the standard Clear behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnClearComplete" /> is invoked after the standard Clear behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnGet">
      <MemberSignature Language="C#" Value="protected virtual object OnGet (object key, object currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object OnGet(object key, object currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnGet (key As Object, currentValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ OnGet(System::Object ^ key, System::Object ^ currentValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="currentValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-183">Clave del elemento que se va a obtener.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-183">The key of the element to get.</span>
          </span>
        </param>
        <param name="currentValue">
          <span data-ttu-id="9d306-184">Valor actual del elemento asociado a <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-184">The current value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-185">Obtiene el elemento con la clave y valor especificados en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-185">Gets the element with the specified key and value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d306-186">
            <see cref="T:System.Object" /> que contiene el elemento con la clave y el valor especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-186">An <see cref="T:System.Object" /> containing the element with the specified key and value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-187">La implementación predeterminada de este método devuelve `currentValue`.</span><span class="sxs-lookup"><span data-stu-id="9d306-187">The default implementation of this method returns `currentValue`.</span></span> <span data-ttu-id="9d306-188">Está pensado para ser invalidado por una clase derivada para realizar otras acciones cuando se recupera el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-188">It is intended to be overridden by a derived class to perform additional action when the specified element is retrieved.</span></span>  
  
 <span data-ttu-id="9d306-189">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-189">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-190">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-190">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-191">Este método permite a los implementadores definir procesos que deben realizarse cuando se ejecute el comportamiento estándar de Get de subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-191">This method allows implementers to define processes that must be performed when executing the standard Get behavior of the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-192">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-192">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-193">
              <see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> puede utilizarse para especificar los procesos que deben realizarse antes de devolver el valor recuperado del subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-193">
                <see cref="M:System.Collections.DictionaryBase.OnGet(System.Object,System.Object)" /> can be used to specify processes to perform before returning the value retrieved from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-194">Por ejemplo, los implementadores pueden convertir el valor en otro tipo antes de devolverlo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-194">For example, implementers can cast the value into another type before returning it.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-195">Clave del elemento que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-195">The key of the element to insert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d306-196">Valor del elemento que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-196">The value of the element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-197">Realiza procesos personalizados adicionales antes de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-197">Performs additional custom processes before inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-198">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción antes de que se inserta el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-198">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is inserted.</span></span>  
  
 <span data-ttu-id="9d306-199">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-199">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-200">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-200">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-201">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-201">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-202">Este método permite a los implementadores definir procesos que deben realizarse antes de insertar el elemento en subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-202">This method allows implementers to define processes that must be performed before inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-203">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-203">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-204">
              <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> se invoca antes del comportamiento estándar de Insert, mientras que <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> se invoca después del comportamiento estándar de Insert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-204">
                <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.</span>
            </span>
            <span data-ttu-id="9d306-205">Por ejemplo, los implementadores pueden restringir qué tipos de objetos se pueden insertar en el <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-205">For example, implementers can restrict which types of objects can be inserted into the <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-206">Clave del elemento que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-206">The key of the element to insert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d306-207">Valor del elemento que se va a insertar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-207">The value of the element to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-208">Realiza procesos personalizados adicionales después de insertar un nuevo elemento en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-208">Performs additional custom processes after inserting a new element into the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-209">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción después de inserta el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-209">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is inserted.</span></span>  
  
 <span data-ttu-id="9d306-210">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-210">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-211">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-211">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-212">Este método permite a los implementadores definir procesos que deben realizarse después de insertar el elemento en subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-212">This method allows implementers to define processes that must be performed after inserting the element into the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-213">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-213">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-214">
              <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> se invoca antes del comportamiento estándar de Insert, mientras que <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> se invoca después del comportamiento estándar de Insert.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-214">
                <see cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" /> is invoked before the standard Insert behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" /> is invoked after the standard Insert behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-215">Clave del elemento que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-215">The key of the element to remove.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d306-216">Valor del elemento que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-216">The value of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-217">Realiza procesos personalizados adicionales antes de quitar un elemento de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-217">Performs additional custom processes before removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-218">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción antes de que se quita el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-218">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is removed.</span></span>  
  
 <span data-ttu-id="9d306-219">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-219">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-220">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-220">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-221">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-221">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-222">Este método permite a los implementadores definir procesos que deben realizarse antes de quitar el elemento de subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-222">This method allows implementers to define processes that must be performed before removing the element from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-223">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-223">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-224">
              <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> se invoca antes del comportamiento Remove estándar, mientras que <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> se invoca después del comportamiento Remove estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-224">
                <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.</span>
            </span>
            <span data-ttu-id="9d306-225">Por ejemplo, los implementadores pueden impedir la eliminación de elementos produciendo siempre una excepción en <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-225">For example, implementers can prevent removal of elements by always throwing an exception in <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-226">Clave del elemento que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-226">The key of the element to remove.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d306-227">Valor del elemento que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-227">The value of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-228">Realiza procesos personalizados adicionales después de quitar un elemento de la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-228">Performs additional custom processes after removing an element from the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-229">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción después de quita el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-229">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is removed.</span></span>  
  
 <span data-ttu-id="9d306-230">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-230">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-231">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-231">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-232">Este método permite a los implementadores definir procesos que deben realizarse después de quitar el elemento de subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-232">This method allows implementers to define processes that must be performed after removing the element from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-233">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-233">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-234">
              <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> se invoca antes del comportamiento Remove estándar, mientras que <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> se invoca después del comportamiento Remove estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-234">
                <see cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" /> is invoked before the standard Remove behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)" /> is invoked after the standard Remove behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnSet">
      <MemberSignature Language="C#" Value="protected virtual void OnSet (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSet(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSet (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSet(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-235">Clave del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-235">The key of the element to locate.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="9d306-236">Antiguo valor del elemento asociado a <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-236">The old value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="9d306-237">Nuevo valor del elemento asociado a <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-237">The new value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-238">Realiza procesos personalizados adicionales antes de establecer un valor en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-238">Performs additional custom processes before setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-239">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción antes de establece el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-239">The default implementation of this method is intended to be overridden by a derived class to perform some action before the specified element is set.</span></span>  
  
 <span data-ttu-id="9d306-240">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-240">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-241">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-241">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-242">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-242">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-243">Este método permite a los implementadores definir procesos que deben realizarse antes de establecer el elemento especificado en subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-243">This method allows implementers to define processes that must be performed before setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-244">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-244">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-245">
              <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> se invoca antes del comportamiento estándar de Set, mientras que <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> se invoca después del comportamiento Set estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-245">
                <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span>
            </span>
            <span data-ttu-id="9d306-246">Por ejemplo, los implementadores pueden restringir los valores que se pueden sobrescribir realizando una comprobación dentro de <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-246">For example, implementers can restrict which values can be overwritten by performing a check inside <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnSetComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnSetComplete (object key, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetComplete(object key, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetComplete (key As Object, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetComplete(System::Object ^ key, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-247">Clave del elemento que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-247">The key of the element to locate.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="9d306-248">Antiguo valor del elemento asociado a <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-248">The old value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="9d306-249">Nuevo valor del elemento asociado a <c>key</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-249">The new value of the element associated with <c>key</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-250">Realiza procesos personalizados adicionales después de establecer un valor en la instancia de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-250">Performs additional custom processes after setting a value in the <see cref="T:System.Collections.DictionaryBase" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-251">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción después de establece el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-251">The default implementation of this method is intended to be overridden by a derived class to perform some action after the specified element is set.</span></span>  
  
 <span data-ttu-id="9d306-252">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-252">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-253">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-253">The default implementation of this method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-254">Este método permite a los implementadores definir procesos que deben realizarse después de establecer el elemento especificado en subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-254">This method allows implementers to define processes that must be performed after setting the specified element in the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-255">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-255">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-256">
              <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> se invoca antes del comportamiento estándar de Set, mientras que <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> se invoca después del comportamiento Set estándar.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-256">
                <see cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" /> is invoked before the standard Set behavior, whereas <see cref="M:System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)" /> is invoked after the standard Set behavior.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (key As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-257">Clave del elemento que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-257">The key of the element to validate.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d306-258">Valor del elemento que se va a validar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-258">The value of the element to validate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-259">Ejecuta procesos personalizados adicionales al validar el elemento con la clave y valor especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-259">Performs additional custom processes when validating the element with the specified key and value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-260">La implementación predeterminada de este método está pensada para ser invalidado por una clase derivada para realizar alguna acción cuando se valida el elemento especificado.</span><span class="sxs-lookup"><span data-stu-id="9d306-260">The default implementation of this method is intended to be overridden by a derived class to perform some action when the specified element is validated.</span></span>  
  
 <span data-ttu-id="9d306-261">Los métodos On \* sólo se invocan en la instancia devuelta por la <xref:System.Collections.DictionaryBase.Dictionary%2A> propiedad, pero no en la instancia devuelta por la <xref:System.Collections.DictionaryBase.InnerHashtable%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-261">The On\* methods are invoked only on the instance returned by the <xref:System.Collections.DictionaryBase.Dictionary%2A> property, but not on the instance returned by the <xref:System.Collections.DictionaryBase.InnerHashtable%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-262">La implementación predeterminada de este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-262">The default implementation of this method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-263">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-263">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="9d306-264">Este método permite a los implementadores definir procesos que deben realizarse cuando se ejecute el comportamiento estándar de subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-264">This method allows implementers to define processes that must be performed when executing the standard behavior of the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
            <span data-ttu-id="9d306-265">Al definir este método, los implementadores pueden agregar funcionalidad a los métodos heredados sin tener que invalidar todos los demás métodos.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-265">By defining this method, implementers can add functionality to inherited methods without having to override all other methods.</span>
            </span>
            <span data-ttu-id="9d306-266">
              <see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> puede utilizarse para imponer restricciones sobre el tipo de objetos que se aceptan en la colección.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-266">
                <see cref="M:System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)" /> can be used to impose restrictions on the type of objects that are accepted into the collection.</span>
            </span>
            <span data-ttu-id="9d306-267">La implementación predeterminada impide <see langword="null" /> desde que se ha agregado a o quitaron subyacente <see cref="T:System.Collections.Hashtable" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="9d306-267">The default implementation prevents <see langword="null" /> from being added to or removed from the underlying <see cref="T:System.Collections.Hashtable" />.</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)" />
        <altmember cref="M:System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-268">Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.DictionaryBase" /> está sincronizado (es seguro para subprocesos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-268">Gets a value indicating whether access to a <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-269">Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.DictionaryBase" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-269">
              <see langword="true" /> if access to the <see cref="T:System.Collections.DictionaryBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9d306-270">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-270">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-271">Un <xref:System.Collections.DictionaryBase> objeto no está sincronizado.</span><span class="sxs-lookup"><span data-stu-id="9d306-271">A <xref:System.Collections.DictionaryBase> object is not synchronized.</span></span> <span data-ttu-id="9d306-272">Las clases derivadas pueden proporcionar una versión sincronizada de la <xref:System.Collections.DictionaryBase> clase utilizando el <xref:System.Collections.ICollection.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-272">Derived classes can provide a synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-273">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9d306-273">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9d306-274">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="9d306-274">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9d306-275">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9d306-275">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-276">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando la <xref:System.Collections.ICollection.SyncRoot%2A> propiedad durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="9d306-276">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="9d306-277">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-277">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-278">Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-278">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-279">Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-279">An object that can be used to synchronize access to the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-280">Las clases derivadas pueden proporcionar su propia versión sincronizada de la <xref:System.Collections.DictionaryBase> clase utilizando el <xref:System.Collections.ICollection.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-280">Derived classes can provide their own synchronized version of the <xref:System.Collections.DictionaryBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="9d306-281">El código de sincronización debe realizar las operaciones en el <xref:System.Collections.ICollection.SyncRoot%2A> propiedad de la <xref:System.Collections.DictionaryBase> objeto, no directamente en la <xref:System.Collections.DictionaryBase> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d306-281">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.DictionaryBase> object, not directly on the <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="9d306-282">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="9d306-282">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="9d306-283">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo la <xref:System.Collections.DictionaryBase> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d306-283">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.DictionaryBase> object.</span></span>  
  
 <span data-ttu-id="9d306-284">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9d306-284">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9d306-285">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="9d306-285">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9d306-286">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9d306-286">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-287">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando la <xref:System.Collections.ICollection.SyncRoot%2A> propiedad durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="9d306-287">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/source2.cpp#3)]
 [!code-csharp[System.Collections.DictionaryBase#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/source2.cs#3)]
 [!code-vb[System.Collections.DictionaryBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/source2.vb#3)]  
  
 <span data-ttu-id="9d306-288">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-288">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="M:System.Collections.Hashtable.Synchronized(System.Collections.Hashtable)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Add">
      <MemberSignature Language="C#" Value="void IDictionary.Add (object key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Add(object key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Add (key As Object, value As Object) Implements IDictionary.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Add(System::Object ^ key, System::Object ^ value) = System::Collections::IDictionary::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Add(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-289">Clave del elemento que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-289">The key of the element to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9d306-290">Valor del elemento que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-290">The value of the element to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-291">Agrega un elemento con la clave y el valor especificados a <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-291">Adds an element with the specified key and value into the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-292">Un objeto que no tiene ninguna correlación entre su estado y su valor de código hash debe general no se utiliza como clave.</span><span class="sxs-lookup"><span data-stu-id="9d306-292">An object that has no correlation between its state and its hash code value should typically not be used as the key.</span></span> <span data-ttu-id="9d306-293">Por ejemplo, <xref:System.String> objetos son mejores que <xref:System.Text.StringBuilder> objetos para su uso como claves.</span><span class="sxs-lookup"><span data-stu-id="9d306-293">For example, <xref:System.String> objects are better than <xref:System.Text.StringBuilder> objects for use as keys.</span></span>  
  
 <span data-ttu-id="9d306-294">También puede usar el <xref:System.Collections.IDictionary.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <xref:System.Collections.DictionaryBase>; por ejemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="9d306-294">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="9d306-295">Sin embargo, si la clave especificada ya existe en el <xref:System.Collections.DictionaryBase>, y establece el <xref:System.Collections.IDictionary.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="9d306-295">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="9d306-296">En cambio, la <xref:System.Collections.IDictionary.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="9d306-296">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="9d306-297">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-297">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-298">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-298">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d306-299">
            <paramref name="key" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-299">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9d306-300">Ya existe un elemento con la misma clave en <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-300">An element with the same key already exists in the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d306-301">
            <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-301">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="9d306-302">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-302">-or-</span>
          </span>
          <span data-ttu-id="9d306-303">
            <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-303">The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
        <altmember cref="P:System.Collections.IDictionary.Item(System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Contains">
      <MemberSignature Language="C#" Value="bool IDictionary.Contains (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IDictionary.Contains(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (key As Object) As Boolean Implements IDictionary.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IDictionary.Contains(System::Object ^ key) = System::Collections::IDictionary::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-304">Clave que se buscará en <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-304">The key to locate in the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-305">Determina si <see cref="T:System.Collections.DictionaryBase" /> contiene una clave específica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-305">Determines whether the <see cref="T:System.Collections.DictionaryBase" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d306-306">
            <see langword="true" /> si la colección <see cref="T:System.Collections.DictionaryBase" /> contiene un elemento con la clave especificada; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-306">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> contains an element with the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-307">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-307">This method is an O(1) operation.</span></span>  
  
 <span data-ttu-id="9d306-308">A partir de .NET Framework 2.0, este método usa los objetos de la colección <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos en `key` para determinar si `item` existe.</span><span class="sxs-lookup"><span data-stu-id="9d306-308">Starting with the .NET Framework 2.0, this method uses the collection’s objects’ <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods on `key` to determine whether `item` exists.</span></span> <span data-ttu-id="9d306-309">En las versiones anteriores de .NET Framework, esta determinación se realizó utilizando el <xref:System.Object.Equals%2A> y <xref:System.IComparable.CompareTo%2A> métodos de la `key` parámetro en los objetos de la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-309">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `key` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-310">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-310">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d306-311">
            <paramref name="key" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-311">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IDictionary.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-312">Obtiene un valor que indica si un objeto <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-312">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-313">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-313">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9d306-314">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-314">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-315">Una colección con un tamaño fijo no permite la adición o eliminación de elementos después de crea la colección, pero sí permite modificar los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="9d306-315">A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but does allow the modification of existing elements.</span></span>  
  
 <span data-ttu-id="9d306-316">Una colección con un tamaño fijo es simplemente una colección con un contenedor que impide agregar y quitar elementos; por lo tanto, si se realizan cambios en la colección subyacente, incluida la adición o eliminación de elementos, la colección de tamaño fijo refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="9d306-316">A collection with a fixed size is simply a collection with a wrapper that prevents adding and removing elements; therefore, if changes are made to the underlying collection, including the addition or removal of elements, the fixed-size collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9d306-317">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-317">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IDictionary.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IDictionary.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IDictionary.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IDictionary.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-318">Obtiene un valor que indica si un objeto <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-318">Gets a value indicating whether a <see cref="T:System.Collections.DictionaryBase" /> object is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-319">Es <see langword="true" /> si el objeto <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura; en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-319">
              <see langword="true" /> if the <see cref="T:System.Collections.DictionaryBase" /> object is read-only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9d306-320">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-320">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-321">Una colección de solo lectura no permite que se agreguen, quiten o modifiquen elementos una vez que se ha creado.</span><span class="sxs-lookup"><span data-stu-id="9d306-321">A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</span></span>  
  
 <span data-ttu-id="9d306-322">Una colección que es de solo lectura es simplemente una colección con un contenedor que impide modificar la colección; por lo tanto, si se realizan cambios en la colección subyacente, la colección de solo lectura refleja esos cambios.</span><span class="sxs-lookup"><span data-stu-id="9d306-322">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="9d306-323">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-323">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IDictionary.Item[object key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IDictionary.Item(object)" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(key As Object) As Object Implements IDictionary.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IDictionary.Item[System::Object ^] { System::Object ^ get(System::Object ^ key); void set(System::Object ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Item(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-324">Clave cuyo valor se va a obtener o a establecer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-324">The key whose value to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-325">Obtiene o establece el valor asociado a la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-325">Gets or sets the value associated with the specified key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-326">Valor asociado a la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-326">The value associated with the specified key.</span>
          </span>
          <span data-ttu-id="9d306-327">Si no se encuentra la clave especificada, al intentar obtenerla se devuelve <see langword="null" /> y al intentar establecerla se crea una nueva entrada con la clave especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-327">If the specified key is not found, attempting to get it returns <see langword="null" />, and attempting to set it creates a new element using the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-328">Esta propiedad permite obtener acceso a un elemento específico de la colección utilizando la sintaxis siguiente: `myCollection[key]`.</span><span class="sxs-lookup"><span data-stu-id="9d306-328">This property provides the ability to access a specific element in the collection by using the following syntax: `myCollection[key]`.</span></span>  
  
 <span data-ttu-id="9d306-329">También puede usar el <xref:System.Collections.IDictionary.Item%2A> propiedad para agregar nuevos elementos estableciendo el valor de una clave que no existe en el <xref:System.Collections.DictionaryBase>; por ejemplo, `myCollection["myNonexistentKey"] = myValue`.</span><span class="sxs-lookup"><span data-stu-id="9d306-329">You can also use the <xref:System.Collections.IDictionary.Item%2A> property to add new elements by setting the value of a key that does not exist in the <xref:System.Collections.DictionaryBase>; for example, `myCollection["myNonexistentKey"] = myValue`.</span></span> <span data-ttu-id="9d306-330">Sin embargo, si la clave especificada ya existe en el <xref:System.Collections.DictionaryBase>, y establece el <xref:System.Collections.IDictionary.Item%2A> propiedad sobrescribe el valor anterior.</span><span class="sxs-lookup"><span data-stu-id="9d306-330">However, if the specified key already exists in the <xref:System.Collections.DictionaryBase>, setting the <xref:System.Collections.IDictionary.Item%2A> property overwrites the old value.</span></span> <span data-ttu-id="9d306-331">En cambio, la <xref:System.Collections.IDictionary.Add%2A> método no modifica los elementos existentes.</span><span class="sxs-lookup"><span data-stu-id="9d306-331">In contrast, the <xref:System.Collections.IDictionary.Add%2A> method does not modify existing elements.</span></span>  
  
 <span data-ttu-id="9d306-332">La recuperación del valor de esta propiedad es una operación o (1); establecer la propiedad también es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-332">Retrieving the value of this property is an O(1) operation; setting the property is also an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-333">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-333">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d306-334">
            <paramref name="key" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-334">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d306-335">La propiedad está establecida y <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-335">The property is set and the <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="9d306-336">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-336">-or-</span>
          </span>
          <span data-ttu-id="9d306-337">La propiedad está establecida, <paramref name="key" /> no existe en la colección y el objeto <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-337">The property is set, <paramref name="key" /> does not exist in the collection, and the <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Keys">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Keys" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Keys" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Keys As ICollection Implements IDictionary.Keys" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-338">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-338">Gets an <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-339">Objeto <see cref="T:System.Collections.ICollection" /> que contiene las claves del objeto <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-339">An <see cref="T:System.Collections.ICollection" /> object containing the keys in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-340">El orden de las claves de la <xref:System.Collections.ICollection> objeto no está especificado, pero es el mismo orden que los valores asociados en la <xref:System.Collections.ICollection> objeto devuelto por la <xref:System.Collections.IDictionary.Values%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-340">The order of the keys in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated values in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Values%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-341">El valor devuelto <xref:System.Collections.ICollection> no es una copia estática; en su lugar, el <xref:System.Collections.ICollection> hace referencia a las claves de la versión original <xref:System.Collections.DictionaryBase> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d306-341">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the keys in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="9d306-342">Por consiguiente, los cambios a la <xref:System.Collections.DictionaryBase> continuarán reflejarse en el valor devuelto <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="9d306-342">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="9d306-343">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-343">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-344">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> propiedad de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-344">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Values" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Remove">
      <MemberSignature Language="C#" Value="void IDictionary.Remove (object key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IDictionary.Remove(object key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (key As Object) Implements IDictionary.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IDictionary.Remove(System::Object ^ key) = System::Collections::IDictionary::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IDictionary.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="9d306-345">Clave del elemento que se va a quitar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-345">The key of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9d306-346">Quita el elemento con la clave especificada de <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-346">Removes the element with the specified key from the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-347">Si el <xref:System.Collections.DictionaryBase> no contiene un elemento con la clave especificada, el <xref:System.Collections.DictionaryBase> permanece sin cambios.</span><span class="sxs-lookup"><span data-stu-id="9d306-347">If the <xref:System.Collections.DictionaryBase> does not contain an element with the specified key, the <xref:System.Collections.DictionaryBase> remains unchanged.</span></span> <span data-ttu-id="9d306-348">No se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="9d306-348">No exception is thrown.</span></span>  
  
 <span data-ttu-id="9d306-349">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-349">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-350">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-350">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9d306-351">
            <paramref name="key" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-351">
              <paramref name="key" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9d306-352">
            <see cref="T:System.Collections.DictionaryBase" /> es de solo lectura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-352">The <see cref="T:System.Collections.DictionaryBase" /> is read-only.</span>
          </span>
          <span data-ttu-id="9d306-353">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-353">-or-</span>
          </span>
          <span data-ttu-id="9d306-354">
            <see cref="T:System.Collections.DictionaryBase" /> tiene un tamaño fijo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-354">The <see cref="T:System.Collections.DictionaryBase" /> has a fixed size.</span>
          </span>
        </exception>
        <altmember cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" />
        <altmember cref="M:System.Collections.IDictionary.Remove(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IDictionary.Values">
      <MemberSignature Language="C#" Value="System.Collections.ICollection System.Collections.IDictionary.Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection System.Collections.IDictionary.Values" />
      <MemberSignature Language="DocId" Value="P:System.Collections.DictionaryBase.System#Collections#IDictionary#Values" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Values As ICollection Implements IDictionary.Values" />
      <MemberSignature Language="C++ CLI" Value="property System::Collections::ICollection ^ System.Collections.IDictionary.Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IDictionary.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9d306-355">Obtiene un objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-355">Gets an <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9d306-356">Objeto <see cref="T:System.Collections.ICollection" /> que contiene los valores del objeto <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-356">An <see cref="T:System.Collections.ICollection" /> object containing the values in the <see cref="T:System.Collections.DictionaryBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-357">El orden de los valores de la <xref:System.Collections.ICollection> objeto no está especificado, pero es el mismo orden que las claves asociadas en la <xref:System.Collections.ICollection> objeto devuelto por la <xref:System.Collections.IDictionary.Keys%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="9d306-357">The order of the values in the <xref:System.Collections.ICollection> object is unspecified, but is the same order as the associated keys in the <xref:System.Collections.ICollection> object returned by the <xref:System.Collections.IDictionary.Keys%2A> property.</span></span>  
  
 <span data-ttu-id="9d306-358">El valor devuelto <xref:System.Collections.ICollection> no es una copia estática; en su lugar, el <xref:System.Collections.ICollection> hace referencia a los valores de la versión original <xref:System.Collections.DictionaryBase> objeto.</span><span class="sxs-lookup"><span data-stu-id="9d306-358">The returned <xref:System.Collections.ICollection> is not a static copy; instead, the <xref:System.Collections.ICollection> refers back to the values in the original <xref:System.Collections.DictionaryBase> object.</span></span> <span data-ttu-id="9d306-359">Por consiguiente, los cambios a la <xref:System.Collections.DictionaryBase> continuarán reflejarse en el valor devuelto <xref:System.Collections.ICollection>.</span><span class="sxs-lookup"><span data-stu-id="9d306-359">Therefore, changes to the <xref:System.Collections.DictionaryBase> continue to be reflected in the returned <xref:System.Collections.ICollection>.</span></span>  
  
 <span data-ttu-id="9d306-360">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="9d306-360">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9d306-361">El siguiente ejemplo de código implementa la <xref:System.Collections.DictionaryBase> clase y utiliza esa implementación para crear un diccionario de <xref:System.String> claves y valores que tienen un <xref:System.String.Length%2A> propiedad de 5 caracteres o menos.</span><span class="sxs-lookup"><span data-stu-id="9d306-361">The following code example implements the <xref:System.Collections.DictionaryBase> class and uses that implementation to create a dictionary of <xref:System.String> keys and values that have a <xref:System.String.Length%2A> property of 5 characters or less.</span></span>  
  
 [!code-cpp[System.Collections.DictionaryBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CPP/dictionarybase.cpp#1)]
 [!code-csharp[System.Collections.DictionaryBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.DictionaryBase/CS/dictionarybase.cs#1)]
 [!code-vb[System.Collections.DictionaryBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.DictionaryBase/VB/dictionarybase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="P:System.Collections.IDictionary.Keys" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9d306-362">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que itera a través del objeto <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-362">Returns an <see cref="T:System.Collections.IEnumerator" /> that iterates through the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9d306-363">Estructura <see cref="T:System.Collections.IEnumerator" /> para la colección <see cref="T:System.Collections.DictionaryBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9d306-363">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.DictionaryBase" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9d306-364">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="9d306-364">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="9d306-365">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="9d306-365">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="9d306-366">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="9d306-366">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="9d306-367">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="9d306-367">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="9d306-368"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="9d306-368"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span> <span data-ttu-id="9d306-369">En esta posición, al llamar a <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="9d306-369">At this position, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="9d306-370">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-370">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="9d306-371"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-371"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="9d306-372"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="9d306-372"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="9d306-373">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="9d306-373">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="9d306-374">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="9d306-374">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="9d306-375">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, si se llama <xref:System.Collections.IEnumerator.Current%2A> produce una excepción.</span><span class="sxs-lookup"><span data-stu-id="9d306-375">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, calling <xref:System.Collections.IEnumerator.Current%2A> throws an exception.</span></span> <span data-ttu-id="9d306-376">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="9d306-376">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="9d306-377">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="9d306-377">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="9d306-378">Si se realizan cambios en la colección, como agregar, modificar, o eliminar elementos, el enumerador queda permanentemente invalidado y la siguiente llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> o <xref:System.Collections.IEnumerator.Reset%2A> produce una <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="9d306-378">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="9d306-379">Si la colección se modifica entre <xref:System.Collections.IEnumerator.MoveNext%2A> y <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> devuelve el elemento que está establecido, aunque el enumerador ya haya quedado invalidado.</span><span class="sxs-lookup"><span data-stu-id="9d306-379">If the collection is modified between <xref:System.Collections.IEnumerator.MoveNext%2A> and <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A> returns the element that it is set to, even if the enumerator is already invalidated.</span></span>  
  
 <span data-ttu-id="9d306-380">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9d306-380">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="9d306-381">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="9d306-381">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="9d306-382">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="9d306-382">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="9d306-383">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="9d306-383">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionaryEnumerator" />
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
  </Members>
</Type>