<Type Name="StructuralComparisons" FullName="System.Collections.StructuralComparisons">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="668ad4d9af0b3fc3183fba44c3af17319b3d3ced" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30366549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class StructuralComparisons" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit StructuralComparisons extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Collections.StructuralComparisons" />
  <TypeSignature Language="VB.NET" Value="Public Class StructuralComparisons" />
  <TypeSignature Language="C++ CLI" Value="public ref class StructuralComparisons abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Collections</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona objetos para realizar una comparación estructural de dos objetos de colección.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Collections.StructuralComparisons> clase devuelve los siguientes dos objetos de comparación predefinidos:  
  
-   Un <xref:System.Collections.IComparer> implementación que se puede pasar a un método como <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> o <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> para realizar una comparación estructural de dos objetos. Está diseñado para indicar si el primer objeto es anterior, posterior o se produce en la misma posición que el segundo objeto en el criterio de ordenación.  
  
-   Un <xref:System.Collections.IEqualityComparer> implementación que se puede pasar a un método como <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> o <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> para realizar una comparación de igualdad estructural.  
  
 Los objetos se pueden usar para realizar una comparación estructural o una comparación de igualdad estructural de dos objetos de colección, como los objetos de matriz o tupla. En la comparación estructural, dos objetos se comparan basándose en sus valores. Los objetos se pueden ordenar según algunos criterios, y dos objetos se consideran iguales cuando tienen valores iguales, no porque hacen referencia al mismo objeto físico  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StructuralComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IComparer StructuralComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IComparer StructuralComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.StructuralComparisons.StructuralComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StructuralComparer As IComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IComparer ^ StructuralComparer { System::Collections::IComparer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto predefinido que realiza una comparación estructural de dos objetos.</summary>
        <value>Un objeto predefinido que se usa para realizar una comparación estructural de dos objetos de colección.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Collections.IComparer> objeto devuelto por esta propiedad se pasa al método de comparación de un objeto de colección, como <xref:System.Array.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> o <xref:System.Tuple%603.System%23Collections%23IStructuralComparable%23CompareTo%28System.Object%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>, sus <xref:System.Collections.IComparer.Compare%2A> método se llama para cada miembro de una matriz o de los componentes de una tupla. Esta implementación de la <xref:System.Collections.IComparer.Compare%2A> método se comporta como sigue cuando compara cada elemento de un objeto de colección con el elemento correspondiente de otro objeto de colección:  
  
-   Se considera que dos elementos que son `null` son iguales y considera que un elemento null a ser inferior a un elemento que no sea null.  
  
-   Si el primer elemento de la comparación se puede convertir en un <xref:System.Collections.IStructuralComparable> objeto (en otras palabras, si es un objeto de colección que implementa el <xref:System.Collections.IStructuralComparable> interfaz), llama el <xref:System.Collections.IStructuralComparable.CompareTo%2A> método.  
  
-   Si el primer elemento de la comparación no puede convertirse a un <xref:System.Collections.IStructuralComparable> objeto (en otras palabras, si no es un objeto de colección que implementa el <xref:System.Collections.IStructuralComparable> interfaz), llama a la `Comparer.Default.Compare` método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Comparer" />
      </Docs>
    </Member>
    <Member MemberName="StructuralEqualityComparer">
      <MemberSignature Language="C#" Value="public static System.Collections.IEqualityComparer StructuralEqualityComparer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEqualityComparer StructuralEqualityComparer" />
      <MemberSignature Language="DocId" Value="P:System.Collections.StructuralComparisons.StructuralEqualityComparer" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property StructuralEqualityComparer As IEqualityComparer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEqualityComparer ^ StructuralEqualityComparer { System::Collections::IEqualityComparer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEqualityComparer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un objeto predefinido que compara dos objetos para comprobar su igualdad estructural.</summary>
        <value>Un objeto predefinido que se usa para comparar dos objetos de colección y comprobar su igualdad estructural.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando el <xref:System.Collections.IComparer> objeto devuelto por esta propiedad se pasa al método de comparación de igualdad de un objeto de colección, como <xref:System.Array.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType> o <xref:System.Tuple%603.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29?displayProperty=nameWithType>, sus <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> método se llama para cada miembro de una matriz o de los componentes de una tupla. Esta implementación de la <xref:System.Collections.IEqualityComparer.Equals%2A> método se comporta como sigue cuando compara cada elemento de un objeto de colección con el elemento correspondiente de otro objeto de colección:  
  
-   Si ambos elementos son `null`, considera que los dos elementos son iguales.  
  
-   Si un elemento es null pero el otro elemento no es, considera que los dos elementos que se va a distinguir.  
  
-   Si el primer elemento de la comparación se puede convertir en un <xref:System.Collections.IStructuralEquatable> objeto (en otras palabras, si es un objeto de colección que implementa el <xref:System.Collections.IStructuralEquatable> interfaz), llama el <xref:System.Collections.IStructuralEquatable.Equals%2A?displayProperty=nameWithType> método.  
  
-   Si el primer elemento de la comparación no puede convertirse a un <xref:System.Collections.IStructuralEquatable> objeto (en otras palabras, si no es un objeto de colección que implementa el <xref:System.Collections.IStructuralEquatable> interfaz), llama el elemento `Equals` método.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Comparer" />
      </Docs>
    </Member>
  </Members>
</Type>