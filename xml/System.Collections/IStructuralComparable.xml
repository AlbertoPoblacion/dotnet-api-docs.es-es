<Type Name="IStructuralComparable" FullName="System.Collections.IStructuralComparable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cf8d7de2981a659a0ec7ffa7680e40f16114e0a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30368059" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IStructuralComparable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IStructuralComparable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.IStructuralComparable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IStructuralComparable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IStructuralComparable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Admite la comparación estructural de objetos de colección.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Collections.IStructuralComparable> interfaz permite implementar comparaciones personalizadas para los miembros de la colección. Es decir, puede definir exactamente lo que significa para que un objeto de colección preceda, siga o se producen en la misma posición en el criterio de ordenación como un segundo objeto de colección. A continuación, puede especificar que esta definición se usa con un tipo de colección que acepta el <xref:System.Collections.IStructuralComparable> interfaz.  
  
 La interfaz tiene un solo miembro, <xref:System.Collections.IStructuralComparable.CompareTo%2A>, que determina si el objeto de colección actual es menor, igual o mayor que un segundo objeto en el criterio de ordenación. La comparación real de los miembros o los elementos de la instancia actual con los de un segundo objeto se realiza mediante un <xref:System.Collections.IComparer> implementación de interfaz, que contiene la definición de su comparación personalizada.  
  
> [!NOTE]
>  El <xref:System.Collections.IStructuralComparable> interfaz solo admite comparaciones estructurales de ordenación o clasificación. La <xref:System.Collections.IStructuralEquatable> interfaz es compatible con las comparaciones personalizadas de igualdad estructural.  
  
 .NET Framework proporciona a dos comparadores predeterminados. Uno es devuelto por la <xref:System.Collections.StructuralComparisons.StructuralComparer%2A?displayProperty=nameWithType> propiedad; la otra es devuelto por la <xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType> propiedad.  
  
 Las clases de tupla genéricas (<xref:System.Tuple%601>, <xref:System.Tuple%602>, <xref:System.Tuple%603>, etc.) y la <xref:System.Array> clase proporcione implementaciones explícitas de la <xref:System.Collections.IStructuralComparable> interfaz. Conversión (en C#) o convirtiendo (en Visual Basic) de la instancia actual de una matriz o tupla a una <xref:System.Collections.IStructuralComparable> valor de la interfaz y proporcionar su <xref:System.Collections.IComparer> implementación como argumento para el <xref:System.Collections.IStructuralComparable.CompareTo%2A> método, puede definir un criterio de ordenación personalizado para la matriz o colección. Sin embargo, no se llama el <xref:System.Collections.IStructuralComparable.CompareTo%2A> (método) directamente en la mayoría de los casos. En su lugar, el <xref:System.Collections.IStructuralComparable.CompareTo%2A> método llama a métodos de ordenación como <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29>. En este caso, defina su <xref:System.Collections.IComparer> implementación y pasarlo como argumento al constructor de clase de una ordenación método o una colección del objeto. El <xref:System.Collections.IStructuralComparable.CompareTo%2A> método con el comparador personalizado, a continuación, se llama automáticamente cada vez que se ordena la colección.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una matriz de <xref:System.Tuple%606> objetos que contiene los datos de la población de tres ciudades de Estados Unidos de 1960 a 2000. Primer componente es del séxtuplo es el nombre de la ciudad. Los cinco componentes restantes representan la población en intervalos de diez años de 1960 a 2000.  
  
 El `PopulationComparer` clase proporciona un <xref:System.Collections.IComparer> implementación que permite a la matriz de séxtuplas que ordenarse por cualquiera de sus componentes. Se proporcionan dos valores a la `PopulationComparer` clase en su constructor: la posición del componente que define el criterio de ordenación y un valor booleano que indica si los objetos de tupla deberían estar ordenados en orden ascendente o descendente.  
  
 El ejemplo, a continuación, muestra los elementos de la matriz sin ordenar, ordena por el tercer componente (la población de 1970) y mostrarlos y, a continuación, ordena por el sexto componente (la población de 2000) y mostrarlos. Tenga en cuenta que el ejemplo no llama directamente el <xref:System.Collections.IStructuralComparable.CompareTo%2A> método. Se llama al método de forma implícita la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> método para cada objeto de tupla de la matriz.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.Collections.IStructuralEquatable" />
    <altmember cref="P:System.Collections.StructuralComparisons.StructuralComparer" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As Object, comparer As IComparer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">Objeto que se va a comparar con la instancia actual.</param>
        <param name="comparer">Objeto que compara los miembros del objeto de colección actual con los miembros correspondientes de <c>other</c>.</param>
        <summary>Determina si el objeto de colección actual precede o sigue a otro objeto en el criterio de ordenación, o aparece en la misma posición que él.</summary>
        <returns>Un entero que indica la relación del objeto de colección actual con <paramref name="other" />, como se muestra en la tabla siguiente.  
  
 <list type="table"><listheader><term> Valor devuelto  
  
 </term><description> Descripción  
  
 </description></listheader><item><term> -1  
  
 </term><description> La instancia actual precede a <paramref name="other" />.  
  
 </description></item><item><term> 0  
  
 </term><description> La instancia actual y <paramref name="other" /> son iguales.  
  
 </description></item><item><term> 1  
  
 </term><description> La instancia actual es posterior a <paramref name="other" />.  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Collections.IStructuralComparable.CompareTo%2A> método admite la comparación estructural personalizada y ordenación de matriz y objetos de tupla. El <xref:System.Collections.IStructuralComparable.CompareTo%2A> llamadas al método el `comparer` del objeto <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> método para comparar elementos de matriz individuales o componentes de la tupla, empezando por el primer elemento o componente. Las llamadas individuales a <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> final y el <xref:System.Collections.IStructuralComparable.CompareTo%2A> método devuelve un valor cuando una de las siguientes condiciones es true:  
  
-   El <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> método devuelve -1.  
  
-   El <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> método devuelve 1.  
  
-   El <xref:System.Collections.IComparer.Compare%2A?displayProperty=nameWithType> método se llama para el último elemento o componente en el objeto de colección.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una matriz de <xref:System.Tuple%606> objetos que contiene los datos de la población de tres ciudades de Estados Unidos de 1960 a 2000. Primer componente es del séxtuplo es el nombre de la ciudad. Los cinco componentes restantes representan la población en intervalos de diez años de 1960 a 2000.  
  
 El `PopulationComparer` clase proporciona un <xref:System.Collections.IComparer> implementación que permite a la matriz de séxtuplas que ordenarse por cualquiera de sus componentes. Se proporcionan dos valores a la `PopulationComparer` clase en su constructor: la posición del componente que define el criterio de ordenación, y un <xref:System.Boolean> valor que indica si los objetos de tupla deberían estar ordenados en orden ascendente o descendente.  
  
 El ejemplo, a continuación, muestra los elementos de la matriz sin ordenar, ordena por el tercer componente (la población de 1970) y mostrarlos y, a continuación, ordena por el sexto componente (la población de 2000) y mostrarlos. Tenga en cuenta que el ejemplo no llama directamente el <xref:System.Collections.IStructuralComparable.CompareTo%2A?displayProperty=nameWithType> implementación. Se llama al método de forma implícita la <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29> método para cada objeto de tupla de la matriz.  
  
 [!code-csharp[System.Tuple\`6.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`6.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`6.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`6.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Esta instancia y <paramref name="other" /> no son del mismo tipo.</exception>
        <altmember cref="T:System.Collections.IComparer" />
      </Docs>
    </Member>
  </Members>
</Type>