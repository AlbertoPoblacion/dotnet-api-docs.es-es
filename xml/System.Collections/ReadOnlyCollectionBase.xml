<Type Name="ReadOnlyCollectionBase" FullName="System.Collections.ReadOnlyCollectionBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8dc969bb4180a41a4a3642449038c15e5e069bc3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ReadOnlyCollectionBase : System.Collections.ICollection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ReadOnlyCollectionBase extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ReadOnlyCollectionBase&#xA;Implements ICollection" />
  <TypeSignature Language="C++ CLI" Value="public ref class ReadOnlyCollectionBase abstract : System::Collections::ICollection" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.NonGeneric</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="79dab-101">Proporciona la clase base <see langword="abstract" /> de una colección de sólo lectura no genérica fuertemente tipada.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79dab-101">Provides the <see langword="abstract" /> base class for a strongly typed non-generic read-only collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79dab-102">Un <xref:System.Collections.ReadOnlyCollectionBase> instancia siempre es de solo lectura.</span><span class="sxs-lookup"><span data-stu-id="79dab-102">A <xref:System.Collections.ReadOnlyCollectionBase> instance is always read-only.</span></span> <span data-ttu-id="79dab-103">Consulte <xref:System.Collections.CollectionBase> para obtener una versión modificable de esta clase.</span><span class="sxs-lookup"><span data-stu-id="79dab-103">See <xref:System.Collections.CollectionBase> for a modifiable version of this class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79dab-104">El siguiente ejemplo de código implementa la <xref:System.Collections.ReadOnlyCollectionBase> clase.</span><span class="sxs-lookup"><span data-stu-id="79dab-104">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="79dab-105">Estático público (<see langword="Shared" /> en Visual Basic) miembros de este tipo son seguros para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79dab-105">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="79dab-106">No se garantiza que los miembros de instancias sean seguros para la ejecución de subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79dab-106">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="79dab-107">Esta implementación no proporciona un sincronizada contenedor (es seguro para subprocesos) para una <see cref="T:System.Collections.ReadOnlyCollectionBase" />, pero las clases derivadas pueden crear sus propias versiones sincronizadas de la <see cref="T:System.Collections.ReadOnlyCollectionBase" /> mediante el <see cref="P:System.Collections.ICollection.SyncRoot" /> propiedad.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79dab-107">This implementation does not provide a synchronized (thread safe) wrapper for a <see cref="T:System.Collections.ReadOnlyCollectionBase" />, but derived classes can create their own synchronized versions of the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> using the <see cref="P:System.Collections.ICollection.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="79dab-108">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79dab-108">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="79dab-109">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79dab-109">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="79dab-110">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="79dab-110">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="79dab-111">Esta clase base se proporciona para facilitar a los implementadores que creen una colección fuertemente tipada de personalizada de solo lectura.</span>
        <span class="sxs-lookup">
          <span data-stu-id="79dab-111">This base class is provided to make it easier for implementers to create a strongly typed read-only custom collection.</span>
        </span>
        <span data-ttu-id="79dab-112">Se recomienda ampliar esta clase base en lugar de crear sus propios los implementadores.</span>
        <span class="sxs-lookup">
          <span data-stu-id="79dab-112">Implementers are encouraged to extend this base class instead of creating their own.</span>
        </span>
        <span data-ttu-id="79dab-113">Los miembros de esta clase base están protegidos y están diseñados para usarse a través de una clase derivada solo.</span>
        <span class="sxs-lookup">
          <span data-stu-id="79dab-113">Members of this base class are protected and are intended to be used through a derived class only.</span>
        </span>
        <span data-ttu-id="79dab-114">Esta clase habilita la colección subyacente a través de la <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> propiedad, que está pensado para su uso exclusivo de las clases que se derivan directamente de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
        <span class="sxs-lookup">
          <span data-stu-id="79dab-114">This class makes the underlying collection available through the <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> property, which is intended for use only by classes that are derived directly from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
        </span>
        <span data-ttu-id="79dab-115">La clase derivada debe asegurarse de que sus propios usuarios no pueden modificar la colección subyacente.</span>
        <span class="sxs-lookup">
          <span data-stu-id="79dab-115">The derived class must ensure that its own users cannot modify the underlying collection.</span>
        </span>
      </para>
    </block>
    <altmember cref="T:System.Collections.ArrayList" />
    <altmember cref="T:System.Collections.CollectionBase" />
    <altmember cref="N:System.Collections.Generic" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ReadOnlyCollectionBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ReadOnlyCollectionBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79dab-116">Inicializa una nueva instancia de la clase <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-116">Initializes a new instance of the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79dab-117">Este constructor es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="79dab-117">This constructor is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public virtual int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.Count" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79dab-118">Obtiene el número de elementos incluidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-118">Gets the number of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79dab-119">Número de elementos incluidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-119">The number of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
          <span data-ttu-id="79dab-120">La recuperación del valor de esta propiedad es una operación O(1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-120">Retrieving the value of this property is an O(1) operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="79dab-121">El siguiente ejemplo de código implementa la <xref:System.Collections.ReadOnlyCollectionBase> clase.</span><span class="sxs-lookup"><span data-stu-id="79dab-121">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="79dab-122">Devuelve un enumerador que recorre en iteración la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-122">Returns an enumerator that iterates through the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="79dab-123">
            <see cref="T:System.Collections.IEnumerator" /> correspondiente a la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-123">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79dab-124">La instrucción `foreach` del lenguaje C# (`for each` en Visual Basic) oculta la complejidad de los enumeradores.</span><span class="sxs-lookup"><span data-stu-id="79dab-124">The `foreach` statement of the C# language (`for each` in Visual Basic) hides the complexity of the enumerators.</span></span>  <span data-ttu-id="79dab-125">Por lo tanto, se recomienda el uso de `foreach`, en lugar de manipular directamente el enumerador.</span><span class="sxs-lookup"><span data-stu-id="79dab-125">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="79dab-126">Los enumeradores pueden usarse para leer los datos de la colección, pero no para modificar la colección subyacente.</span><span class="sxs-lookup"><span data-stu-id="79dab-126">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="79dab-127">En principio, el enumerador se coloca antes del primer elemento de la colección.</span><span class="sxs-lookup"><span data-stu-id="79dab-127">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="79dab-128"><xref:System.Collections.IEnumerator.Reset%2A> también devuelve el enumerador a esta posición.</span><span class="sxs-lookup"><span data-stu-id="79dab-128"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="79dab-129">En esta posición, el valor de propiedad <xref:System.Collections.IEnumerator.Current%2A> está sin definir.</span><span class="sxs-lookup"><span data-stu-id="79dab-129">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="79dab-130">Por lo tanto, debe llamar a <xref:System.Collections.IEnumerator.MoveNext%2A> para adelantar el enumerador hasta el primer elemento de la colección antes de leer el valor de <xref:System.Collections.IEnumerator.Current%2A>.</span><span class="sxs-lookup"><span data-stu-id="79dab-130">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="79dab-131"><xref:System.Collections.IEnumerator.Current%2A> devuelve el mismo objeto hasta que se llama a <xref:System.Collections.IEnumerator.MoveNext%2A> o a <xref:System.Collections.IEnumerator.Reset%2A>.</span><span class="sxs-lookup"><span data-stu-id="79dab-131"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="79dab-132"><xref:System.Collections.IEnumerator.MoveNext%2A> establece <xref:System.Collections.IEnumerator.Current%2A> en el siguiente elemento.</span><span class="sxs-lookup"><span data-stu-id="79dab-132"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="79dab-133">Si <xref:System.Collections.IEnumerator.MoveNext%2A> pasa el final de la colección, el enumerador se coloca después del último elemento de la colección y <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`.</span><span class="sxs-lookup"><span data-stu-id="79dab-133">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="79dab-134">Mientras el enumerador permanezca en esta posición, las llamadas subsiguientes a <xref:System.Collections.IEnumerator.MoveNext%2A> también devolver `false`.</span><span class="sxs-lookup"><span data-stu-id="79dab-134">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="79dab-135">Si la última llamada a <xref:System.Collections.IEnumerator.MoveNext%2A> devuelve `false`, <xref:System.Collections.IEnumerator.Current%2A> no está definido.</span><span class="sxs-lookup"><span data-stu-id="79dab-135">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="79dab-136">Para volver a establecer el valor de <xref:System.Collections.IEnumerator.Current%2A> en el primer elemento de la colección, se puede llamar primero a <xref:System.Collections.IEnumerator.Reset%2A> y después a <xref:System.Collections.IEnumerator.MoveNext%2A>.</span><span class="sxs-lookup"><span data-stu-id="79dab-136">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="79dab-137">Un enumerador es válido mientras la colección no cambie.</span><span class="sxs-lookup"><span data-stu-id="79dab-137">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="79dab-138">Si se hacen cambios en la colección (como agregar, modificar o eliminar elementos), el enumerador queda invalidado permanentemente y su comportamiento es indefinido.</span><span class="sxs-lookup"><span data-stu-id="79dab-138">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="79dab-139">El enumerador no tiene acceso exclusivo a la colección y, por tanto, la enumeración en una colección no es intrínsicamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="79dab-139">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</span></span>  <span data-ttu-id="79dab-140">A fin de garantizar la seguridad de los subprocesos, se puede bloquear la colección durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="79dab-140">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="79dab-141">Para permitir que varios subprocesos obtengan acceso de lectura y escritura a la colección, debe implementar su propia sincronización.</span><span class="sxs-lookup"><span data-stu-id="79dab-141">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="79dab-142">Este método es una operación o (1).</span><span class="sxs-lookup"><span data-stu-id="79dab-142">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79dab-143">El siguiente ejemplo de código implementa la <xref:System.Collections.ReadOnlyCollectionBase> clase.</span><span class="sxs-lookup"><span data-stu-id="79dab-143">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="InnerList">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList InnerList { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ArrayList InnerList" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.InnerList" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InnerList As ArrayList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ArrayList ^ InnerList { System::Collections::ArrayList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79dab-144">Obtiene la lista de elementos incluidos en la instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-144">Gets the list of elements contained in the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79dab-145">
            <see cref="T:System.Collections.ArrayList" /> que representa la propia instancia de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-145">An <see cref="T:System.Collections.ArrayList" /> representing the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> instance itself.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79dab-146">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="79dab-146">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79dab-147">El siguiente ejemplo de código implementa la <xref:System.Collections.ReadOnlyCollectionBase> clase.</span><span class="sxs-lookup"><span data-stu-id="79dab-147">The following code example implements the <xref:System.Collections.ReadOnlyCollectionBase> class.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/readonlycollectionbase.cpp#1)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/readonlycollectionbase.cs#1)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/readonlycollectionbase.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="79dab-148">Esta clase habilita la colección subyacente a través de la <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> propiedad, que está pensado para su uso exclusivo de las clases que se derivan directamente de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79dab-148">This class makes the underlying collection available through the <see cref="P:System.Collections.ReadOnlyCollectionBase.InnerList" /> property, which is intended for use only by classes that are derived directly from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
            </span>
            <span data-ttu-id="79dab-149">La clase derivada debe asegurarse de que sus propios usuarios no pueden modificar la colección subyacente.</span>
            <span class="sxs-lookup">
              <span data-stu-id="79dab-149">The derived class must ensure that its own users cannot modify the underlying collection.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="79dab-150">
            <see cref="T:System.Array" /> unidimensional que constituye el destino de los elementos copiados de <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-150">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          </span>
          <span data-ttu-id="79dab-151">La matriz <see cref="T:System.Array" /> debe tener una indización de base cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-151">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="79dab-152">Índice de base cero de <c>array</c> donde comienza la copia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-152">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="79dab-153">Copia la totalidad de <see cref="T:System.Collections.ReadOnlyCollectionBase" /> en una matriz <see cref="T:System.Array" /> unidimensional compatible, comenzando en el índice especificado de la matriz de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-153">Copies the entire <see cref="T:System.Collections.ReadOnlyCollectionBase" /> to a compatible one-dimensional <see cref="T:System.Array" />, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79dab-154">La matriz especificada debe ser de un tipo compatible.</span><span class="sxs-lookup"><span data-stu-id="79dab-154">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="79dab-155">Este método usa <xref:System.Array.Copy%2A?displayProperty=nameWithType> para copiar los elementos.</span><span class="sxs-lookup"><span data-stu-id="79dab-155">This method uses <xref:System.Array.Copy%2A?displayProperty=nameWithType> to copy the elements.</span></span>  
  
 <span data-ttu-id="79dab-156">Este método es una O (`n`) operación, donde `n` es <xref:System.Collections.ReadOnlyCollectionBase.Count%2A>.</span><span class="sxs-lookup"><span data-stu-id="79dab-156">This method is an O(`n`) operation, where `n` is <xref:System.Collections.ReadOnlyCollectionBase.Count%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="79dab-157">
            <paramref name="array" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-157">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="79dab-158">
            <paramref name="index" /> es menor que cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-158">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="79dab-159">
            <paramref name="array" /> es multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-159">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="79dab-160">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-160">-or-</span>
          </span>
          <span data-ttu-id="79dab-161">El número de elementos de la <see cref="T:System.Collections.ReadOnlyCollectionBase" /> de origen es mayor que el espacio disponible desde <paramref name="index" /> hasta el final de la <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-161">The number of elements in the source <see cref="T:System.Collections.ReadOnlyCollectionBase" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="79dab-162">El tipo de la <see cref="T:System.Collections.ReadOnlyCollectionBase" /> de origen no puede convertirse automáticamente al tipo de la <paramref name="array" /> de destino.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-162">The type of the source <see cref="T:System.Collections.ReadOnlyCollectionBase" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79dab-163">Obtiene un valor que indica si el acceso a un objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" /> está sincronizado (es seguro para subprocesos).</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-163">Gets a value indicating whether access to a <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79dab-164">Es <see langword="true" /> si el acceso al objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" /> está sincronizado (es seguro para subprocesos); en caso contrario, es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-164">
              <see langword="true" /> if access to the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="79dab-165">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79dab-166">Un <xref:System.Collections.ReadOnlyCollectionBase> objeto no está sincronizado.</span><span class="sxs-lookup"><span data-stu-id="79dab-166">A <xref:System.Collections.ReadOnlyCollectionBase> object is not synchronized.</span></span> <span data-ttu-id="79dab-167">Las clases derivadas pueden proporcionar una versión sincronizada de la <xref:System.Collections.ReadOnlyCollectionBase> clase utilizando el <xref:System.Collections.ICollection.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="79dab-167">Derived classes can provide a synchronized version of the <xref:System.Collections.ReadOnlyCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="79dab-168">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="79dab-168">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="79dab-169">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="79dab-169">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="79dab-170">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="79dab-170">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79dab-171">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando la <xref:System.Collections.ICollection.SyncRoot%2A> propiedad durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="79dab-171">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/source2.cs#2)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/source2.vb#2)]  
  
 <span data-ttu-id="79dab-172">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="79dab-172">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.NonGeneric</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="79dab-173">Obtiene un objeto que se puede utilizar para sincronizar el acceso a un objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-173">Gets an object that can be used to synchronize access to a <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="79dab-174">Objeto que puede utilizarse para sincronizar el acceso al objeto <see cref="T:System.Collections.ReadOnlyCollectionBase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="79dab-174">An object that can be used to synchronize access to the <see cref="T:System.Collections.ReadOnlyCollectionBase" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79dab-175">Las clases derivadas pueden proporcionar su propia versión sincronizada de la <xref:System.Collections.ReadOnlyCollectionBase> clase utilizando el <xref:System.Collections.ICollection.SyncRoot%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="79dab-175">Derived classes can provide their own synchronized version of the <xref:System.Collections.ReadOnlyCollectionBase> class using the <xref:System.Collections.ICollection.SyncRoot%2A> property.</span></span> <span data-ttu-id="79dab-176">El código de sincronización debe realizar las operaciones en el <xref:System.Collections.ICollection.SyncRoot%2A> propiedad de la <xref:System.Collections.ReadOnlyCollectionBase> objeto, no directamente en la <xref:System.Collections.ReadOnlyCollectionBase> objeto.</span><span class="sxs-lookup"><span data-stu-id="79dab-176">The synchronizing code must perform operations on the <xref:System.Collections.ICollection.SyncRoot%2A> property of the <xref:System.Collections.ReadOnlyCollectionBase> object, not directly on the <xref:System.Collections.ReadOnlyCollectionBase> object.</span></span> <span data-ttu-id="79dab-177">De este modo, se garantiza el funcionamiento correcto de las colecciones derivadas de otros objetos.</span><span class="sxs-lookup"><span data-stu-id="79dab-177">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="79dab-178">En concreto, mantiene la sincronización correcta con otros subprocesos que podrían modificar al mismo tiempo la <xref:System.Collections.ReadOnlyCollectionBase> objeto.</span><span class="sxs-lookup"><span data-stu-id="79dab-178">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the <xref:System.Collections.ReadOnlyCollectionBase> object.</span></span>  
  
 <span data-ttu-id="79dab-179">Enumerar una colección no es intrínsecamente un procedimiento seguro para subprocesos.</span><span class="sxs-lookup"><span data-stu-id="79dab-179">Enumerating through a collection is intrinsically not a thread-safe procedure.</span></span> <span data-ttu-id="79dab-180">Incluso cuando una colección está sincronizada, otros subprocesos todavía pueden modificarla, lo que hace que el enumerador produzca una excepción.</span><span class="sxs-lookup"><span data-stu-id="79dab-180">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="79dab-181">Con el fin de garantizar la seguridad para la ejecución de subprocesos durante la enumeración, se puede bloquear la colección durante toda la enumeración o detectar las excepciones resultantes de los cambios realizados por otros subprocesos.</span><span class="sxs-lookup"><span data-stu-id="79dab-181">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="79dab-182">En el ejemplo de código siguiente se muestra cómo bloquear la colección utilizando la <xref:System.Collections.ICollection.SyncRoot%2A> propiedad durante toda la enumeración.</span><span class="sxs-lookup"><span data-stu-id="79dab-182">The following code example shows how to lock the collection using the <xref:System.Collections.ICollection.SyncRoot%2A> property during the entire enumeration.</span></span>  
  
 [!code-cpp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CPP/source2.cpp#2)]
 [!code-csharp[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/CS/source2.cs#2)]
 [!code-vb[System.Collections.ReadOnlyCollectionBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Collections.ReadOnlyCollectionBase/VB/source2.vb#2)]  
  
 <span data-ttu-id="79dab-183">La recuperación del valor de esta propiedad es una operación O(1).</span><span class="sxs-lookup"><span data-stu-id="79dab-183">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
      </Docs>
    </Member>
  </Members>
</Type>