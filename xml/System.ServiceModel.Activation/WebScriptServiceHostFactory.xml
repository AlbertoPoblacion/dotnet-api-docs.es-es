<Type Name="WebScriptServiceHostFactory" FullName="System.ServiceModel.Activation.WebScriptServiceHostFactory">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6ecfa901a91795ceace62b7adc30a81ee3cef5f3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36527095" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WebScriptServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebScriptServiceHostFactory extends System.ServiceModel.Activation.ServiceHostFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class WebScriptServiceHostFactory&#xA;Inherits ServiceHostFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebScriptServiceHostFactory : System::ServiceModel::Activation::ServiceHostFactory" />
  <TypeSignature Language="F#" Value="type WebScriptServiceHostFactory = class&#xA;    inherit ServiceHostFactory" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Activation.ServiceHostFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Agrega automáticamente un extremo ASP.NET AJAX a un servicio, sin requerir configuración, en un entorno de hospedaje administrado que activa dinámicamente instancias de host para el servicio en respuesta a los mensajes entrantes.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este generador proporciona una manera de agregar un punto de conexión ASP.NET AJAX a un servicio sin requerir la configuración. El extremo se agrega a cualquier otro extremo que se defina en la configuración, si hay alguno. Los entornos de hospedaje administrados que admiten este tipo de activación dinámica del host son Internet Information Services (IIS) y WAS (Windows Process Activation Services).  
  
 Para utilizar este generador, especifique la <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> en el `Factory` atributo de la [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) directiva.  
  
 El extremo ASP.NET AJAX creado por este generador se configura con <xref:System.ServiceModel.WebHttpBinding> y <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>, con todos los valores predeterminados. El punto de conexión se crea en una dirección vacía relativa al archivo .svc. Si la configuración de servicio ya define un extremo en esta dirección, se inicia <xref:System.InvalidOperationException> y el servicio no se inicia.  
  
   
  
## Examples  
 Especifique el <xref:System.ServiceModel.Activation.WebScriptServiceHostFactory> para el valor de la `Factory` de atributo en el [ @ServiceHost ](~/docs/framework/configure-apps/file-schema/wcf-directive/servicehost.md) directiva para activar un extremo de AJAX de ASP.NET para el `MyService` servicio tal y como se muestra en el ejemplo siguiente.  
  
```  
<% @ServiceHost   
Service="MyService"  
Language="C#"  
Debug="true"  
Factory="WebScriptServiceHostFactory"  
%>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebScriptServiceHostFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebScriptServiceHostFactory();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Activation.WebScriptServiceHostFactory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, se llama a este constructor automáticamente por Windows Communication Foundation (WCF) como parte de la activación del servicio: no es necesario llamar a este método manualmente.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateServiceHost">
      <MemberSignature Language="C#" Value="protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.ServiceModel.ServiceHost CreateServiceHost(class System.Type serviceType, class System.Uri[] baseAddresses) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Activation.WebScriptServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateServiceHost (serviceType As Type, baseAddresses As Uri()) As ServiceHost" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::ServiceModel::ServiceHost ^ CreateServiceHost(Type ^ serviceType, cli::array &lt;Uri ^&gt; ^ baseAddresses);" />
      <MemberSignature Language="F#" Value="override this.CreateServiceHost : Type * Uri[] -&gt; System.ServiceModel.ServiceHost" Usage="webScriptServiceHostFactory.CreateServiceHost (serviceType, baseAddresses)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHost</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
        <Parameter Name="baseAddresses" Type="System.Uri[]" />
      </Parameters>
      <Docs>
        <param name="serviceType">Tipo de servicio que se va a hospedar.</param>
        <param name="baseAddresses">
          <see cref="T:System.Array" /> de tipo <see cref="T:System.Uri" /> que contiene las direcciones base para el servicio hospedado.</param>
        <summary>Crea una clase derivada de <see cref="T:System.ServiceModel.ServiceHost" /> para un tipo especificado de servicio con una dirección base concreta que se puede utilizar para habilitar automáticamente los extremos ASP.NET AJAX en ciertos escenarios.</summary>
        <returns>Crea un <see cref="T:System.ServiceModel.ServiceHost" /> para el tipo de servicio especificado con la dirección base especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, se llama a este método automáticamente por Windows Communication Foundation (WCF) como parte de la activación del servicio: no es necesario llamar a este método manualmente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Otro servicio utiliza la misma dirección base u otro extremo está utilizando la misma dirección que el extremo ASP.NET AJAX que este generador intenta crear.</exception>
      </Docs>
    </Member>
  </Members>
</Type>