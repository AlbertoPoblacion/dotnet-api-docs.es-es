<Type Name="IOperationContractGenerationExtension" FullName="System.ServiceModel.Description.IOperationContractGenerationExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b2cdb9c2b6fec7974f8e51c25fd5c92050d629a2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616919" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IOperationContractGenerationExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IOperationContractGenerationExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IOperationContractGenerationExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IOperationContractGenerationExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IOperationContractGenerationExtension" />
  <TypeSignature Language="F#" Value="type IOperationContractGenerationExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define los métodos llamados durante la generación del contrato que puede utilizarse para modificar el código generado para una operación.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente la interfaz <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> en un comportamiento de la operación (un tipo <xref:System.ServiceModel.Description.IOperationBehavior?displayProperty=nameWithType>) para habilitarlo y modificar el código generado cuando un contrato o extremo está compilado en el código. Normalmente, una extensión <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> personalizada inserta un comportamiento de operación personalizado en la colección <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> durante la llamada a <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 El siguiente ejemplo de código muestra la implementación del método <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> que agrega una cadena a la sección de comentarios de la operación utilizando el espacio de nombres <xref:System.CodeDom?displayProperty=nameWithType>.  
  
  
  
 El siguiente ejemplo de código muestra cómo el comportamiento de la operación que implementa <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> se inserta en la colección <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> durante la llamada a <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 Por último, el siguiente ejemplo de código muestra la operación generada tanto en Visual Basic como en C#.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GenerateOperation">
      <MemberSignature Language="C#" Value="public void GenerateOperation (System.ServiceModel.Description.OperationContractGenerationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateOperation(class System.ServiceModel.Description.OperationContractGenerationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation(System.ServiceModel.Description.OperationContractGenerationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GenerateOperation (context As OperationContractGenerationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GenerateOperation(System::ServiceModel::Description::OperationContractGenerationContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GenerateOperation : System.ServiceModel.Description.OperationContractGenerationContext -&gt; unit" Usage="iOperationContractGenerationExtension.GenerateOperation context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Description.OperationContractGenerationContext" />
      </Parameters>
      <Docs>
        <param name="context">El contexto activo que contiene los tipos <see cref="N:System.CodeDom" /> necesarios para modificar la operación generada.</param>
        <summary>Implemente para modificar el Code Document Object Model antes del proceso de generación de contrato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalmente, una extensión <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> personalizada inserta un comportamiento de operación personalizado en la colección <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> durante la llamada a <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType> o <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportEndpoint%2A?displayProperty=nameWithType>.  
  
 Se llama al método <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> una vez para cada contrato.  
  
   
  
## Examples  
 El siguiente ejemplo de código muestra la implementación del método <xref:System.ServiceModel.Description.IOperationContractGenerationExtension.GenerateOperation%2A> que agrega una cadena a la sección de comentarios de la operación utilizando el espacio de nombres <xref:System.CodeDom?displayProperty=nameWithType>.  
  
  
  
 El siguiente ejemplo de código muestra cómo el comportamiento de la operación que implementa <xref:System.ServiceModel.Description.IOperationContractGenerationExtension> se inserta en la colección <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A?displayProperty=nameWithType> durante la llamada a <xref:System.ServiceModel.Description.IWsdlImportExtension.ImportContract%2A?displayProperty=nameWithType>.  
  
 [!code-csharp[C_CustomWSDLExtensions#4](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#4)]  
  
 Por último, el siguiente ejemplo de código muestra la operación generada tanto en Visual Basic como en C#.  
  
 [!code-csharp[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#3)]
 [!code-vb[C_CustomWSDLExtensions#3](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>