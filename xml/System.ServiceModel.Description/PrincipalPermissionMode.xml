<Type Name="PrincipalPermissionMode" FullName="System.ServiceModel.Description.PrincipalPermissionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79f46d53f4511a777d9d7f073432bd85655d96d2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36616766" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum PrincipalPermissionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed PrincipalPermissionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.PrincipalPermissionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum PrincipalPermissionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class PrincipalPermissionMode" />
  <TypeSignature Language="F#" Value="type PrincipalPermissionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Sets the mode for authorization checks when using the <see cref="T:System.Security.Permissions.PrincipalPermissionAttribute" /> to control access to a method.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al aplicar <xref:System.Security.Permissions.PrincipalPermissionAttribute> a un método, este modo especifica qué conjunto de funciones se utiliza para autorizar el acceso. De forma predeterminada, el atributo utiliza los grupos de Windows (como `Administrator` o `Users`) para especificar la función a la que debe pertenecer el usuario.  
  
 Para establecer mediante programación el modo, cree una instancia de la clase `ServiceHost`, a continuación, busque <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior> en su colección de comportamientos y establezca <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> en la enumeración adecuada. En el ejemplo siguiente se establece la propiedad en UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#1](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#1)]
 [!code-vb[PrincipalPermissionMode#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#1)]  
  
 También puede establecer el comportamiento en configuración agregando un [ &lt;serviceAuthorization&gt; ](~/docs/framework/configure-apps/file-schema/wcf/serviceauthorization-element.md) a la [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md) de un archivo de configuración, tal como se muestra en el código siguiente.  
  
 [!code-csharp[PrincipalPermissionMode#10](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#10)]
 [!code-vb[PrincipalPermissionMode#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#10)]  
  
 La enumeración afecta a cómo el atributo <xref:System.Security.Permissions.PrincipalPermissionAttribute> autoriza a un usuario cuando se aplica a un método. El ejemplo siguiente aplica el atributo a un método y exige que el usuario pertenezca al grupo Usuarios del equipo. Este código sólo funcionará cuando <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode%2A> se establece en `UseWindowsGroup` (el valor predeterminado).  
  
 [!code-csharp[PrincipalPermissionMode#2](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#2)]
 [!code-vb[PrincipalPermissionMode#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#2)]  
  
## <a name="useaspnetroles"></a>UseAspNetRoles  
 El valor de UseAspNetRoles se utiliza para todos los tipos de credenciales. Este modo permite que Windows Communication Foundation (WCF) para utilizar el proveedor de funciones ASP.NET para tomar decisiones de autorización.  
  
 Cuando la credencial de un servicio es un certificado X.509, puede establecer la propiedad `Name` de <xref:System.Security.Permissions.PrincipalPermissionAttribute> en una cadena compuesta de valores concatenados del campo Asunto y el campo Huella digital, tal y como muestra el ejemplo siguiente.  
  
 [!code-csharp[PrincipalPermissionMode#3](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#3)]
 [!code-vb[PrincipalPermissionMode#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#3)]  
  
 La cadena concatenada está compuesta de los valores del asunto y la huella digital separados por un punto y coma y un espacio.  
  
 También es posible que un certificado tenga un conjunto de campos Asunto con una cadena nula. En ese caso, puede establecer la propiedad `Name` en un punto y coma seguido por un espacio y, a continuación, la huella digital; como se muestra en el ejemplo siguiente.  
  
 [!code-csharp[PrincipalPermissionMode#4](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#4)]
 [!code-vb[PrincipalPermissionMode#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#4)]  
  
 Si un proveedor de funciones de ASP.NET está presente, también puede establecer la propiedad <xref:System.Security.Permissions.PrincipalPermissionAttribute.Role%2A> en una función en la base de datos. De manera predeterminada, la base de datos está representada por <xref:System.Web.Security.SqlRoleProvider>. También puede establecer un proveedor de funciones personalizado con la propiedad <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider%2A> de la clase <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>. El siguiente código establece la función en `Administrators`. Tenga en cuenta que el proveedor de funciones debe asignar la cuenta de usuario a esa función.  
  
 [!code-csharp[PrincipalPermissionMode#13](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#13)]
 [!code-vb[PrincipalPermissionMode#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#13)]  
  
 Para obtener más información sobre el proveedor de funciones de ASP.NET, vea [How To: Use el Administrador de roles de ASP.NET 2.0](http://go.microsoft.com/fwlink/?LinkId=96692).  
  
 Para obtener más información sobre el uso de WCF y el proveedor de roles, consulte [Cómo: utilizar el proveedor de funciones de ASP.NET con un servicio](~/docs/framework/wcf/feature-details/how-to-use-the-aspnet-role-provider-with-a-service.md).  
  
## <a name="custom"></a>Personalizados  
 Si la propiedad está establecida en Custom, también debe proporcionar una clase personalizada que implementa la <xref:System.IdentityModel.Policy.IAuthorizationPolicy> clase. Esta clase es responsable de proporcionar la representación del objeto de `IPrincipal` del autor de la llamada dentro de la colección <xref:System.IdentityModel.Policy.EvaluationContext.Properties%2A>. Debe almacenar la instancia `IPrincipal` en la colección de propiedades utilizando la clave de cadena "Principal", como se muestra en el ejemplo siguiente.  
  
```  
evaluationContext.Properties["Principal"]=new CustomPrincipal(identity);  
```  
  
## <a name="background"></a>Fondo  
 La seguridad basada en funciones en [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] permite a las aplicaciones especificar autorizaciones mediante código. Al especificar la demanda <xref:System.Security.Permissions.PrincipalPermission>, <xref:System.Threading.Thread.CurrentPrincipal%2A> debe satisfacer el requisito `PrincipalPermission`. Por ejemplo, el usuario debe estar en una función o grupo específico. De lo contrario, el subproceso no está autorizado a ejecutar el código, lo que produce una excepción. WCF proporciona un conjunto de <xref:System.ServiceModel.Description.PrincipalPermissionMode> selecciones para especificar el <xref:System.Threading.Thread.CurrentPrincipal%2A> tomando como base <xref:System.Security.SecurityContext> en consecuencia.  
  
   
  
## Examples  
 En el ejemplo siguiente se muestra cómo especificar UseAspNetRoles.  
  
 [!code-csharp[PrincipalPermissionMode#7](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#7)]
 [!code-vb[PrincipalPermissionMode#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#7)]  
  
 En el ejemplo siguiente se muestra cómo especificar personalizado.  
  
 [!code-csharp[PrincipalPermissionMode#8](~/samples/snippets/csharp/VS_Snippets_CFX/principalpermissionmode/cs/source.cs#8)]
 [!code-vb[PrincipalPermissionMode#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/principalpermissionmode/vb/source.vb#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Always">
      <MemberSignature Language="C#" Value="Always" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Always = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberSignature Language="VB.NET" Value="Always" />
      <MemberSignature Language="C++ CLI" Value="Always" />
      <MemberSignature Language="F#" Value="Always = 4" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Always" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Always enables the user to specify a <see cref="T:System.Security.Principal.IPrincipal" /> class for <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="Custom" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode Custom = int32(3)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberSignature Language="VB.NET" Value="Custom" />
      <MemberSignature Language="C++ CLI" Value="Custom" />
      <MemberSignature Language="F#" Value="Custom = 3" Usage="System.ServiceModel.Description.PrincipalPermissionMode.Custom" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Enables the user to specify a custom <see cref="T:System.Security.Principal.IPrincipal" /> class for <see cref="P:System.Threading.Thread.CurrentPrincipal" />.</summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.ServiceModel.Description.PrincipalPermissionMode.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is not set.</summary>
      </Docs>
    </Member>
    <Member MemberName="UseAspNetRoles">
      <MemberSignature Language="C#" Value="UseAspNetRoles" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseAspNetRoles = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberSignature Language="VB.NET" Value="UseAspNetRoles" />
      <MemberSignature Language="C++ CLI" Value="UseAspNetRoles" />
      <MemberSignature Language="F#" Value="UseAspNetRoles = 2" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseAspNetRoles" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on the [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] role provider (<see cref="T:System.Web.Security.RoleProvider" />).</summary>
      </Docs>
    </Member>
    <Member MemberName="UseWindowsGroups">
      <MemberSignature Language="C#" Value="UseWindowsGroups" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Description.PrincipalPermissionMode UseWindowsGroups = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="UseWindowsGroups" />
      <MemberSignature Language="C++ CLI" Value="UseWindowsGroups" />
      <MemberSignature Language="F#" Value="UseWindowsGroups = 1" Usage="System.ServiceModel.Description.PrincipalPermissionMode.UseWindowsGroups" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.PrincipalPermissionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <see cref="P:System.Threading.Thread.CurrentPrincipal" /> is set based on Windows (<see cref="T:System.Security.Principal.WindowsPrincipal" />). If the user identity is not associated with a Windows account, anonymous Windows is used.</summary>
      </Docs>
    </Member>
  </Members>
</Type>