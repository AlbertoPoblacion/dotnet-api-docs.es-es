<Type Name="WsdlImporter" FullName="System.ServiceModel.Description.WsdlImporter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="af5395ac45cc2238b88c7c7283e21c2d0e814790" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53513169" /></Metadata><TypeSignature Language="C#" Value="public class WsdlImporter : System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WsdlImporter extends System.ServiceModel.Description.MetadataImporter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.WsdlImporter" />
  <TypeSignature Language="VB.NET" Value="Public Class WsdlImporter&#xA;Inherits MetadataImporter" />
  <TypeSignature Language="C++ CLI" Value="public ref class WsdlImporter : System::ServiceModel::Description::MetadataImporter" />
  <TypeSignature Language="F#" Value="type WsdlImporter = class&#xA;    inherit MetadataImporter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Description.MetadataImporter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importa los metadatos del lenguaje de descripción de servicios Web (WSDL) 1.1 con datos adjuntos de WS-Policy.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la clase<xref:System.ServiceModel.Description.WsdlImporter> para importar metadatos, así como para convertir esa información en varias clases que representan información de contrato y de extremo.  
  
 La clase base para <xref:System.ServiceModel.Description.WsdlImporter>, la clase <xref:System.ServiceModel.Description.MetadataImporter>, define métodos para importar de manera selectiva información de contrato y punto de conexión y propiedades que exponen cualquier error de importación y aceptan información de tipo importante para el proceso de importación y conversión. El tipo <xref:System.ServiceModel.Description.WsdlImporter> utiliza a los importadores de la directiva personalizados (implementaciones <xref:System.ServiceModel.Description.IPolicyImportExtension>) de su tipo primario para administrar a las instrucciones de directiva personalizadas y sus propios importadores de WSDL personalizados (implementaciones <xref:System.ServiceModel.Description.IWsdlImportExtension>) para administrar los elementos WSDL personalizados. Para obtener más información, consulte [extender el sistema de metadatos](~/docs/framework/wcf/extending/extending-the-metadata-system.md).  
  
 Al importar la directiva de los documentos WSDL, el tipo <xref:System.ServiceModel.Description.WsdlImporter> probará hasta 32 combinaciones de alternativas de la directiva asociadas a los asuntos de directiva de WSDL diferentes.  Si ninguna combinación se importa limpiamente, la primera combinación se utiliza para construir un enlace personalizado parcial.  
  
 Además de estos métodos y propiedades, <xref:System.ServiceModel.Description.WsdlImporter> también implementa métodos que admiten la importación de información de enlace y propiedades que proporcionan acceso a cualquier documento de directiva, documentos y extensiones WSDL y documentos de esquema XML. Para obtener información sobre cómo extender <xref:System.ServiceModel.Description.WsdlImporter> para admitir elementos WSDL personalizados, vea <xref:System.ServiceModel.Description.IWsdlImportExtension>.  
  
 Normalmente la clase <xref:System.ServiceModel.Description.WsdlImporter> se utiliza en un proceso de tres pasos.  
  
1.  Cree un objeto <xref:System.ServiceModel.Description.WsdlImporter> y pase un objeto <xref:System.ServiceModel.Description.MetadataSet> al constructor.  
  
2.  Llame al método `Import` adecuado para recuperar los resultados.  
  
3.  Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si se han producido errores de importación.  
  
> [!NOTE]
>  Al importar los tipos de puerto de WSDL, si el elemento QName del tipo de puerto coincide a continuación con una entrada en el diccionario <xref:System.ServiceModel.Description.MetadataImporter.KnownContracts%2A> no se importa el tipo de puerto y en su lugar se utiliza el contrato conocido.  
  
 Ningún valor se devuelve de las propiedades <xref:System.ServiceModel.Description.WsdlImporter> hasta que se llama a uno de los métodos de importación. Custom <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> objetos se pueden cargar en el <xref:System.ServiceModel.Description.WsdlImporter> mediante programación o mediante la configuración del cliente [ &lt;wsdlImporters&gt; ](~/docs/framework/configure-apps/file-schema/wcf/wsdlimporters.md) elemento.  
  
 Los metadatos que se importan cuando los puntos de conexión de servicio no se pueden utilizar para crear un tiempo de ejecución o exportar los metadatos, porque los puntos de conexión importados no contienen ninguna información del tipo administrado. Para utilizar los metadatos para crear un cliente o servicio en tiempo de ejecución o generar los metadatos, debe generar y compilar primero el código de los metadatos y utilizar esta información de tipo para crear un nuevo objeto <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> mediante <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo utilizar <xref:System.ServiceModel.Description.WsdlImporter> para agregar un <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType> personalizado, importar todos los contratos y compilar esos contratos y guardarlos en un archivo.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter metadata" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
      </Parameters>
      <Docs>
        <param name="metadata">Una colección de documentos de metadatos de los que se extrae contrato, punto de conexión e información de enlace.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.WsdlImporter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el constructor <xref:System.ServiceModel.Description.WsdlImporter.%23ctor%2A> para crear un objeto <xref:System.ServiceModel.Description.WsdlImporter> a partir de un conjunto de documentos de metadatos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso más común de la clase <xref:System.ServiceModel.Description.WsdlImporter> con la clase <xref:System.ServiceModel.Description.MetadataResolver>.  
  
 [!code-csharp[C_CustomWSDLExtensions#10](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
      </Parameters>
      <Docs>
        <param name="metadata">Los metadatos descargados.</param>
        <param name="policyImportExtensions">Los importadores de la directiva personalizados importaban las instrucciones de directiva personalizadas.</param>
        <param name="wsdlImportExtensions">Los importadores del WSDL personalizados importaban los elementos WSDL personalizados.</param>
        <summary>Crea un objeto <see cref="T:System.ServiceModel.Description.WsdlImporter" /> a partir de los metadatos, los importadores de directiva personalizados y los importadores de WSDL personalizados especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para controlar los metadatos que se van a importar y los importadores de WSDL y directiva que se van a utilizar.  
  
> [!NOTE]
>  Si los importadores de directiva personalizados o los importadores de WSDL personalizados se pasan a este constructor, no se carga ningún importador personalizado especificado en los archivos de configuración de la aplicación. Si desea agregar un importador personalizado, debe reconstruir las colecciones de importadores antes de utilizar este constructor. Vea la sección de ejemplo.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo agregar un nuevo importador de WSDL personalizado (`WSDLDocumentationImporter`) al conjunto predeterminado de importadores antes de utilizar el objeto <xref:System.ServiceModel.Description.WsdlImporter>.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El argumento <paramref name="metadata" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WsdlImporter (System.ServiceModel.Description.MetadataSet metadata, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, System.ServiceModel.Description.MetadataImporterQuotas quotas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.MetadataSet metadata, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IPolicyImportExtension&gt; policyImportExtensions, class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; wsdlImportExtensions, class System.ServiceModel.Description.MetadataImporterQuotas quotas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.#ctor(System.ServiceModel.Description.MetadataSet,System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IPolicyImportExtension},System.Collections.Generic.IEnumerable{System.ServiceModel.Description.IWsdlImportExtension},System.ServiceModel.Description.MetadataImporterQuotas)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (metadata As MetadataSet, policyImportExtensions As IEnumerable(Of IPolicyImportExtension), wsdlImportExtensions As IEnumerable(Of IWsdlImportExtension), quotas As MetadataImporterQuotas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WsdlImporter(System::ServiceModel::Description::MetadataSet ^ metadata, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IPolicyImportExtension ^&gt; ^ policyImportExtensions, System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ wsdlImportExtensions, System::ServiceModel::Description::MetadataImporterQuotas ^ quotas);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.WsdlImporter : System.ServiceModel.Description.MetadataSet * seq&lt;System.ServiceModel.Description.IPolicyImportExtension&gt; * seq&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; * System.ServiceModel.Description.MetadataImporterQuotas -&gt; System.ServiceModel.Description.WsdlImporter" Usage="new System.ServiceModel.Description.WsdlImporter (metadata, policyImportExtensions, wsdlImportExtensions, quotas)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="metadata" Type="System.ServiceModel.Description.MetadataSet" />
        <Parameter Name="policyImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IPolicyImportExtension&gt;" />
        <Parameter Name="wsdlImportExtensions" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" />
        <Parameter Name="quotas" Type="System.ServiceModel.Description.MetadataImporterQuotas" />
      </Parameters>
      <Docs>
        <param name="metadata">Los metadatos descargados.</param>
        <param name="policyImportExtensions">Los importadores de la directiva personalizados importaban las instrucciones de directiva personalizadas.</param>
        <param name="wsdlImportExtensions">Los importadores del WSDL personalizados importaban los elementos WSDL personalizados.</param>
        <param name="quotas">La cantidad de metadatos para recuperar cada vez.</param>
        <summary>Crea un objeto <see cref="T:System.ServiceModel.Description.WsdlImporter" /> a partir de los metadatos, los importadores de directiva personalizados y los importadores de WSDL personalizados especificados.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este constructor para controlar los metadatos que se van a importar y los importadores de WSDL y directiva que se van a utilizar.  
  
> [!NOTE]
>  Si los importadores de directiva personalizados o los importadores de WSDL personalizados se pasan a este constructor, no se carga ningún importador personalizado especificado en los archivos de configuración de la aplicación. Si desea agregar un importador personalizado, debe reconstruir las colecciones de importadores antes de utilizar este constructor. Vea la sección de ejemplo.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo agregar un nuevo importador de WSDL personalizado (`WSDLDocumentationImporter`) al conjunto predeterminado de importadores antes de utilizar el objeto <xref:System.ServiceModel.Description.WsdlImporter>.  
  
 [!code-csharp[C_CustomWSDLExtensions#11](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El argumento <paramref name="metadata" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllBindings">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt; ImportAllBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Channels.Binding&gt; ImportAllBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportAllBindings () As Collection(Of Binding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Channels::Binding ^&gt; ^ ImportAllBindings();" />
      <MemberSignature Language="F#" Value="member this.ImportAllBindings : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;" Usage="wsdlImporter.ImportAllBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Channels.Binding&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un conjunto de objetos <see cref="T:System.ServiceModel.Channels.Binding" /> importados de los documentos de metadatos.</summary>
        <returns>Un conjunto de objetos <see cref="T:System.ServiceModel.Channels.Binding" /> importados de los documentos de metadatos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.WsdlImporter.ImportAllBindings%2A> para importar toda la información de enlace de los documentos de metadatos y devolverlos como objetos <xref:System.ServiceModel.Channels.Binding>. Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar los objetos devueltos.  
  
 Para importar un enlace de WSDL concreto, vea el método <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllContracts">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ContractDescription&gt; ImportAllContracts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllContracts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllContracts () As Collection(Of ContractDescription)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ ImportAllContracts();" />
      <MemberSignature Language="F#" Value="override this.ImportAllContracts : unit -&gt; System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;" Usage="wsdlImporter.ImportAllContracts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ContractDescription&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un conjunto de objetos <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representan información del tipo de puerto en los documentos de metadatos.</summary>
        <returns>Un conjunto de objetos <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representan información del tipo de puerto en los documentos de metadatos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.WsdlImporter.ImportAllContracts%2A> para importar toda la información de tipo de puerto WSDL desde los documentos de metadatos y devolverlos como objetos <xref:System.ServiceModel.Description.ContractDescription>. Se recomienda comprobar la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar los objetos devueltos.  
  
 Para importar sólo uno tipo de puerto, vea el método <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo utilizar <xref:System.ServiceModel.Description.WsdlImporter> para agregar un <xref:System.Runtime.Serialization.IDataContractSurrogate?displayProperty=nameWithType> personalizado, importar todos los contratos y compilar esos contratos y guardarlos en un archivo.  
  
 [!code-csharp[C_CustomWSDLExtensions#8](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/client.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportAllEndpoints">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Description.ServiceEndpointCollection ImportAllEndpoints() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ImportAllEndpoints () As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Description::ServiceEndpointCollection ^ ImportAllEndpoints();" />
      <MemberSignature Language="F#" Value="override this.ImportAllEndpoints : unit -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportAllEndpoints " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa los puntos de conexión en documentos WSDL.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa los extremos en documentos WSDL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.WsdlImporter.ImportAllEndpoints%2A> para importar toda la información de punto final de los documentos de metadatos y devolverlos como una colección de objetos <xref:System.ServiceModel.Description.ServiceEndpoint>. Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar los objetos devueltos.  
  
 Para importar sólo un puerto del WSDL concreto, vea el método <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding ImportBinding (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Binding ImportBinding(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportBinding(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportBinding (wsdlBinding As Binding) As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Binding ^ ImportBinding(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportBinding : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Channels.Binding" Usage="wsdlImporter.ImportBinding wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Un objeto <see cref="T:System.Web.Services.Description.Binding" /> que representa la información de enlace en un archivo de metadatos.</param>
        <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Channels.Binding" /> que representa la información de enlace de un conjunto de documentos de metadatos.</summary>
        <returns>Un objeto <see cref="T:System.ServiceModel.Channels.Binding" /> que representa la información de enlace de un conjunto de documentos de metadatos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.WsdlImporter.ImportBinding%2A> para utilizar un objeto <xref:System.Web.Services.Description.Binding?displayProperty=nameWithType> para buscar información de enlace en los metadatos y devolver esa información de enlace como un objeto <xref:System.ServiceModel.Channels.Binding?displayProperty=nameWithType>. Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar el objeto devuelto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
        <exception cref="T:System.ArgumentNullException">El parámetro <paramref name="wsdlBinding" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportContract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription ImportContract (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ContractDescription ImportContract(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportContract(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportContract (wsdlPortType As PortType) As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ContractDescription ^ ImportContract(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportContract : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ContractDescription" Usage="wsdlImporter.ImportContract wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">Un objeto <see cref="T:System.Web.Services.Description.PortType" /> que representa el tipo de puerto deseado.</param>
        <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representa los metadatos ubicados por la información del tipo de puerto especificada.</summary>
        <returns>Un objeto <see cref="T:System.ServiceModel.Description.ContractDescription" /> que representa los metadatos situados por la información del tipo de puerto especificada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.WsdlImporter.ImportContract%2A> para utilizar un objeto <xref:System.Web.Services.Description.PortType?displayProperty=nameWithType> para buscar información de tipo de puerto en los metadatos y devolver esa información de enlace como objeto <xref:System.ServiceModel.Description.ContractDescription>. Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar el objeto devuelto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
        <exception cref="T:System.ArgumentNullException">El tipo de puerto es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoint">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpoint ImportEndpoint (System.Web.Services.Description.Port wsdlPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpoint ImportEndpoint(class System.Web.Services.Description.Port wsdlPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoint(System.Web.Services.Description.Port)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoint (wsdlPort As Port) As ServiceEndpoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpoint ^ ImportEndpoint(System::Web::Services::Description::Port ^ wsdlPort);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoint : System.Web.Services.Description.Port -&gt; System.ServiceModel.Description.ServiceEndpoint" Usage="wsdlImporter.ImportEndpoint wsdlPort" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPort" Type="System.Web.Services.Description.Port" />
      </Parameters>
      <Docs>
        <param name="wsdlPort">Un objeto <see cref="T:System.Web.Services.Description.Port" /> que representa la información de puerto de WSDL deseada.</param>
        <summary>Devuelve un objeto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> desde un conjunto de documentos de metadatos que utiliza información del objeto <see cref="T:System.Web.Services.Description.Port" /> especificado.</summary>
        <returns>Un objeto <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> que representa la información de puerto del WSDL concreta en el documento de metadatos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.WsdlImporter.ImportEndpoint%2A> para utilizar un objeto <xref:System.Web.Services.Description.Port?displayProperty=nameWithType> para buscar información de tipo de puerto en los metadatos y devolver esa información de enlace como objeto <xref:System.ServiceModel.Description.ServiceEndpoint>. Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar el objeto devuelto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="wsdlPort" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ImportEndpoints">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Devuelve una colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> que coincide con todos los puertos de WSDL que utilizan un enlace especificado, asociado con un tipo de puerto especificado o dentro de un servicio de WSDL especificado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Binding wsdlBinding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Binding wsdlBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Binding)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlBinding As Binding) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Binding ^ wsdlBinding);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Binding -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlBinding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlBinding" Type="System.Web.Services.Description.Binding" />
      </Parameters>
      <Docs>
        <param name="wsdlBinding">Un objeto <see cref="T:System.Web.Services.Description.Binding" /> utilizado en un puerto de WSDL.</param>
        <summary>Devuelve <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos los tipos de puerto de WSDL mediante el <see cref="T:System.Web.Services.Description.Binding" />especificado.</summary>
        <returns><see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos los tipos de puerto de WSDL mediante el <see cref="T:System.Web.Services.Description.Binding" />especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar el objeto devuelto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="wsdlBinding" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.PortType wsdlPortType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.PortType wsdlPortType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.PortType)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlPortType As PortType) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::PortType ^ wsdlPortType);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.PortType -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlPortType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlPortType" Type="System.Web.Services.Description.PortType" />
      </Parameters>
      <Docs>
        <param name="wsdlPortType">El objeto <see cref="T:System.Web.Services.Description.PortType" /> que se utiliza para buscar la información de puerto de WSDL asociada.</param>
        <summary>Devuelve <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos los tipos de puerto de WSDL asociados al <see cref="T:System.Web.Services.Description.PortType" /> especificado.</summary>
        <returns>Una <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos los tipos de puerto WSDL asociados al <see cref="T:System.Web.Services.Description.PortType" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar el objeto devuelto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="wsdlPortType" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ImportEndpoints">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints (System.Web.Services.Description.Service wsdlService);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Description.ServiceEndpointCollection ImportEndpoints(class System.Web.Services.Description.Service wsdlService) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.WsdlImporter.ImportEndpoints(System.Web.Services.Description.Service)" />
      <MemberSignature Language="VB.NET" Value="Public Function ImportEndpoints (wsdlService As Service) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Description::ServiceEndpointCollection ^ ImportEndpoints(System::Web::Services::Description::Service ^ wsdlService);" />
      <MemberSignature Language="F#" Value="member this.ImportEndpoints : System.Web.Services.Description.Service -&gt; System.ServiceModel.Description.ServiceEndpointCollection" Usage="wsdlImporter.ImportEndpoints wsdlService" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wsdlService" Type="System.Web.Services.Description.Service" />
      </Parameters>
      <Docs>
        <param name="wsdlService">El objeto <see cref="T:System.Web.Services.Description.Service" /> en el cual buscar información de puerto de WSDL.</param>
        <summary>Devuelve <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos los tipos de puerto de WSDL dentro del <see cref="T:System.Web.Services.Description.Service" /> especificado.</summary>
        <returns>Una <see cref="T:System.ServiceModel.Description.ServiceEndpointCollection" /> que representa todos los tipos de puerto de WSDL dentro del <see cref="T:System.Web.Services.Description.Service" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Compruebe la propiedad <xref:System.ServiceModel.Description.MetadataImporter.Errors%2A> para determinar si existen errores de importación antes de usar el objeto devuelto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.ServiceModel.Description.WsdlImporter" /> ha encontrado un error.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="wsdlService" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WsdlDocuments">
      <MemberSignature Language="C#" Value="public System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Services.Description.ServiceDescriptionCollection WsdlDocuments" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlDocuments As ServiceDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Description::ServiceDescriptionCollection ^ WsdlDocuments { System::Web::Services::Description::ServiceDescriptionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlDocuments : System.Web.Services.Description.ServiceDescriptionCollection" Usage="System.ServiceModel.Description.WsdlImporter.WsdlDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Services.Description.ServiceDescriptionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene y establece un conjunto de objetos <see cref="T:System.Web.Services.Description.ServiceDescription" /> que describen la información del contrato en los documentos de metadatos.</summary>
        <value>Una colección de objetos <see cref="T:System.Web.Services.Description.ServiceDescription" /> que describen la información del contrato en los documentos de metadatos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 No se rellena la propiedad <xref:System.ServiceModel.Description.WsdlImporter.WsdlDocuments%2A> hasta que se llame a un método de importación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WsdlImportExtensions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.KeyedByTypeCollection`1&lt;class System.ServiceModel.Description.IWsdlImportExtension&gt; WsdlImportExtensions" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WsdlImportExtensions As KeyedByTypeCollection(Of IWsdlImportExtension)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ WsdlImportExtensions { System::Collections::Generic::KeyedByTypeCollection&lt;System::ServiceModel::Description::IWsdlImportExtension ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WsdlImportExtensions : System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;" Usage="System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.KeyedByTypeCollection&lt;System.ServiceModel.Description.IWsdlImportExtension&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un conjunto de objetos <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> que se usan para importar información de WSDL personalizada.</summary>
        <value>Un conjunto de objetos <see cref="T:System.ServiceModel.Description.IWsdlImportExtension" /> que se usan para importar información de WSDL personalizada.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la propiedad <xref:System.ServiceModel.Description.WsdlImporter.WsdlImportExtensions%2A> para agregar o quitar importadores de WSDL personalizados.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlSchemas">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet XmlSchemas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaSet XmlSchemas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XmlSchemas As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaSet ^ XmlSchemas { System::Xml::Schema::XmlSchemaSet ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XmlSchemas : System.Xml.Schema.XmlSchemaSet" Usage="System.ServiceModel.Description.WsdlImporter.XmlSchemas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un conjunto de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que describen los tipos en los metadatos.</summary>
        <value>Un conjunto de objetos <see cref="T:System.Xml.Schema.XmlSchema" /> que describen los tipos en los metadatos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad no se rellena hasta que se llama a uno de los métodos de importación.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>