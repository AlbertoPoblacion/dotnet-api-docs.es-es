<Type Name="IPolicyImportExtension" FullName="System.ServiceModel.Description.IPolicyImportExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4dacb12e8f4ae55b6d400f859ad650b5f3a4f3e5" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316299" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPolicyImportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPolicyImportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IPolicyImportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPolicyImportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPolicyImportExtension" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define un método para los objetos que importan aserciones de directiva personalizadas de los enlaces.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente la interfaz <xref:System.ServiceModel.Description.IPolicyImportExtension> para buscar información WSDL expuesta por un extremo determinado para las aserciones de directiva personalizadas sobre capacidades o requisitos del extremo. Normalmente, un importador de directivas busca una aserción concreta y, o bien inserta un elemento de enlace o lo configura, o modifica el contrato para admitir los requisitos de la aserción.  
  
 A diferencia de su homólogo, <xref:System.ServiceModel.Description.IPolicyExportExtension>, <xref:System.ServiceModel.Description.IPolicyImportExtension> no requiere la implementación por parte de un objeto <xref:System.ServiceModel.Channels.BindingElement>; puede cargarse utilizando la sección de configuración de cliente mostrada en la sección Ejemplos, o mediante programación agregándolo al constructor <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=nameWithType>.  
  
 Windows Communication Foundation (WCF) pasa dos objetos para el <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> método, un <xref:System.ServiceModel.Description.MetadataImporter> y <xref:System.ServiceModel.Description.PolicyConversionContext>. Normalmente, el objeto <xref:System.ServiceModel.Description.PolicyConversionContext> ya contiene las aserciones de directiva para cada ámbito de enlace.  
  
 Una implementación <xref:System.ServiceModel.Description.IPolicyImportExtension> realiza los pasos siguientes:  
  
1.  Busca la aserción de directiva personalizada de la que es responsable llamando a <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, o los métodos <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>, dependiendo del ámbito.  
  
2.  Quita la aserción de directiva especificada de la colección. El método <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> busca, devuelve y quita la aserción en un paso.  
  
3.  Modifique la pila de enlace o el contrato agregando un <xref:System.ServiceModel.Channels.BindingElement> personalizado obligatorio a la propiedad <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>, o modificando la propiedad <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType>.  
  
 El paso 2 es importante. Después de han llamado a todos los importadores de directivas, WCF comprueba la existencia de las aserciones de directiva que permanecen. Si existe una, WCF supone que la importación de la directiva fue incorrecta y no importó el enlace asociado.  
  
> [!IMPORTANT]
>  Un proveedor de metadatos malintencionado puede intentar enviar XML incorrecto como parte de los metadatos, para aprovecharse de un importador de directivas. Se recomienda encarecidamente que los importadores de directivas personalizados sean resistentes a todos los formularios de XML que puedan pasarles.  
  
 Las implementaciones <xref:System.ServiceModel.Description.MetadataImporter> personalizadas deben implementar su propio objeto <xref:System.ServiceModel.Description.PolicyConversionContext> para extraer las aserciones de directiva asociadas al formato de metadatos personalizado.  
  
 Si desea exportar e importar elementos WSDL personalizados que no son aserciones de la directiva, vea <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=nameWithType> y <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Puede usar directivas personalizadas importadores y exportadores con el [la herramienta de utilidad de metadatos de ServiceModel (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) mediante el uso de los mismos elementos de configuración en un archivo de configuración y el `/svcutilConfig:<configFile>` opción.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso del método <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> para buscar, devolver y quitar la aserción en un paso.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 El ejemplo de código siguiente muestra el archivo de configuración de la aplicación cliente para cargar el importador de directivas personalizado cuando se invoca <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType>.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 El ejemplo de código siguiente muestra el uso de <xref:System.ServiceModel.Description.MetadataResolver> para descargar y resolver los metadatos en los objetos de descripción.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ImportPolicy">
      <MemberSignature Language="C#" Value="public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ImportPolicy(class System.ServiceModel.Description.MetadataImporter importer, class System.ServiceModel.Description.PolicyConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ImportPolicy (importer As MetadataImporter, context As PolicyConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ImportPolicy(System::ServiceModel::Description::MetadataImporter ^ importer, System::ServiceModel::Description::PolicyConversionContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importer" Type="System.ServiceModel.Description.MetadataImporter" />
        <Parameter Name="context" Type="System.ServiceModel.Description.PolicyConversionContext" />
      </Parameters>
      <Docs>
        <param name="importer">Objeto <see cref="T:System.ServiceModel.Description.MetadataImporter" /> que se va a utilizar.</param>
        <param name="context">
          <see cref="T:System.ServiceModel.Description.PolicyConversionContext" /> que contiene las aserciones de directiva que pueden importarse, y las colecciones de elementos de enlace a las que puede agregarse los elementos de enlace de implementación.</param>
        <summary>Define un método que puede importar aserciones de directivas personalizadas y agregar elementos de enlace de implementación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente el método `ImportPolicy` para obtener las aserciones de directiva y realizar alguna modificación del contrato importado, o establecer un enlace para admitir la aserción. Normalmente, un importador de directivas responde a la búsqueda de una aserción de directiva personalizada mediante la configuración o inserción de un elemento de enlace en el enlace que se importa.  
  
 Windows Communication Foundation (WCF) pasa dos objetos para el <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> método, un <xref:System.ServiceModel.Description.MetadataImporter> y <xref:System.ServiceModel.Description.PolicyConversionContext>. Normalmente, el objeto <xref:System.ServiceModel.Description.PolicyConversionContext> ya contiene las aserciones de directiva para cada ámbito de enlace.  
  
 Una implementación <xref:System.ServiceModel.Description.IPolicyImportExtension> realiza los pasos siguientes:  
  
1.  Busca la aserción de directiva personalizada de la que es responsable llamando a <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, o los métodos <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>, dependiendo del ámbito.  
  
2.  Quita la aserción de directiva especificada de la colección. El método <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> busca, devuelve y quita la aserción en un paso.  
  
3.  Modifica la pila de enlace o el contrato agregando un <xref:System.ServiceModel.Channels.BindingElement> personalizado obligatorio a la propiedad <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>, o modificando la propiedad <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=nameWithType>.  
  
 El paso 2 es importante. Después de han llamado a todos los importadores de directivas, WCF comprueba la existencia de las aserciones de directiva que permanecen. Si existe una, WCF supone que la importación de la directiva fue incorrecta y no importó el enlace asociado.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso del método <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=nameWithType> para buscar, devolver y quitar la aserción en un paso.  
  
 [!code-csharp[CustomPolicySample#1](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/policyimporter.cs#1)]
 [!code-vb[CustomPolicySample#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/policyimporter.vb#1)]  
  
 El ejemplo de código siguiente muestra el archivo de configuración de la aplicación cliente para cargar el importador de directivas personalizado cuando se invoca <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=nameWithType>.  
  
 [!code-xml[CustomPolicySample#7](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.exe.config#7)]   
  
 El ejemplo de código siguiente muestra el uso de <xref:System.ServiceModel.Description.MetadataResolver> para descargar y resolver los metadatos en los objetos de descripción.  
  
 [!code-csharp[CustomPolicySample#10](~/samples/snippets/csharp/VS_Snippets_CFX/custompolicysample/cs/client.cs#10)]
 [!code-vb[CustomPolicySample#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/custompolicysample/vb/client.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>