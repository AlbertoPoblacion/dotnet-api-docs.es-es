<Type Name="MetadataResolver" FullName="System.ServiceModel.Description.MetadataResolver">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c546170d261df7d8412eaecde731741e9393c1ea" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694470" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class MetadataResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit MetadataResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.MetadataResolver" />
  <TypeSignature Language="VB.NET" Value="Public Class MetadataResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataResolver abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Recupera e importa los metadatos como objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la clase <xref:System.ServiceModel.Description.MetadataResolver> para importar rápidamente los extremos para un servicio de los metadatos. Esta clase descarga y convierte los metadatos en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>. Para descargar los metadatos y procesar esta información como <xref:System.ServiceModel.Description.MetadataSet?displayProperty=nameWithType>, vea <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso de la clase <xref:System.ServiceModel.Description.MetadataResolver> para devolver los metadatos como una colección de los objetos <xref:System.ServiceModel.Description.ServiceEndpoint> que se utilizan a continuación para conectarse a una instancia del servicio.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 El ejemplo de código siguiente muestra el uso de <xref:System.ServiceModel.Description.MetadataResolver> para descargar y devolver los metadatos como una colección de objetos <xref:System.ServiceModel.Description.ServiceEndpoint> utilizando una solicitud HTTP GET en lugar de WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginResolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comienza una llamada asincrónica que resuelve una dirección de los metadatos en una colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para ese servicio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Estos métodos comienzan versiones asincrónicas de los métodos <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="callback">Delegado de devolución de llamada asincrónica al que se va a llamar cuando finalice la llamada.</param>
        <param name="asyncState">Estado asociado a la llamada asincrónica.</param>
        <summary>Comienza una llamada asincrónica que resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados, utilizando la dirección especificada y estado asincrónico y delegado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de resolución asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos y el <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predeterminado es <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, el contrato o la devolución de llamada es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es <see langword="null" /> o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.ServiceModel.EndpointAddress address, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As EndpointAddress, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">El contrato para el que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="callback">Delegado de devolución de llamada asincrónica al que se va a llamar cuando finalice la llamada.</param>
        <param name="asyncState">Estado asociado a la llamada asincrónica.</param>
        <summary>Comienza una llamada asincrónica que resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado, utilizando la dirección especificada y estado asincrónico y delegado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de resolución asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos y el <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predeterminado es <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 Este método requiere que especifique un tipo de contrato. Puede especificar el contrato declarando la interfaz de servicio en el código de cliente o con un cliente WCF generado por Svcutil.exe. Si la interfaz cambia (agregando una nueva operación, por ejemplo) debe actualizar la interfaz en el código de cliente o generar a un nuevo cliente WCF. Si no lo hace, se producirá una excepción . Por ejemplo, suponga que tiene un servicio que implementa un contrato de servicios denominado ICalculator que define Add(), Sub(), Mult() y Div(). Crear una aplicación cliente y generar el cliente de WCF. Agrega a continuación un método a ICalculator, denominado Echo(). Si, a continuación, escribir una aplicación que llama <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> sin generar un nuevo cliente WCF, obtendrá la excepción siguiente.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, el contrato o la devolución de llamada es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizado para recuperar los metadatos.</param>
        <param name="callback">Delegado de devolución de llamada asincrónica al que se va a llamar cuando finalice la llamada.</param>
        <param name="asyncState">Estado asociado a la llamada asincrónica.</param>
        <summary>Comienza una llamada asincrónica que resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados, utilizando la dirección especificada <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> y estado asincrónico y delegado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de resolución asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado de <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> es <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, el contrato, el cliente o la devolución de llamada es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es nulo o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="mode">Modo de recuperación.</param>
        <param name="callback">Delegado de devolución de llamada asincrónica al que se va a llamar cuando finalice la llamada.</param>
        <param name="asyncState">Estado asociado a la llamada asincrónica.</param>
        <summary>Comienza una llamada asincrónica que resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados, utilizando la dirección especificada, el valor <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> y estado asincrónico y delegado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de resolución asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, el contrato o la devolución de llamada es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es nulo o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contract">El contrato para el que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="mode">Modo de recuperación.</param>
        <param name="callback">Delegado de devolución de llamada asincrónica al que se va a llamar cuando finalice la llamada.</param>
        <param name="asyncState">Estado asociado a la llamada asincrónica.</param>
        <summary>Comienza una llamada asincrónica que resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado, utilizando la dirección especificada <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> y estado asincrónico y delegado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de resolución asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, el contrato o la devolución de llamada es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginResolve">
      <MemberSignature Language="C#" Value="public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IAsyncResult BeginResolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BeginResolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient, callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IAsyncResult ^ BeginResolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="mode">Modo de recuperación.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizado para recuperar los metadatos.</param>
        <param name="callback">Delegado de devolución de llamada asincrónica al que se va a llamar cuando finalice la llamada.</param>
        <param name="asyncState">Estado asociado a la llamada asincrónica.</param>
        <summary>Comienza una llamada asincrónica que resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados, utilizando la dirección especificada <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />, <see cref="T:System.ServiceModel.Description.MetadataExchangeClientMode" /> y estado asincrónico y delegado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de resolución asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, el contrato o la devolución de llamada es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es nulo o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndResolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection EndResolve(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EndResolve (result As IAsyncResult) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ EndResolve(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">El objeto <see cref="T:System.IAsyncResult" /> que se recibió de una llamada al método <see cref="Overload:System.ServiceModel.Description.MetadataResolver.BeginResolve" />.</param>
        <summary>Completa una llamada asincrónica para resolver metadatos en una colección de puntos de conexión.</summary>
        <returns>Una colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los extremos contenidos en los metadatos.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Finaliza una llamada asincrónica a uno de los métodos <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resolve">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Descarga y resuelve una dirección de metadatos en los objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para ese servicio.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
 Para los métodos `Resolve` tanto sincrónicos como asincrónicos, se devuelve una colección vacía si no se importó ningún extremo o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <summary>Resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados utilizando la dirección de los metadatos especificada.</summary>
        <returns>Colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos y el <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predeterminado es <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección o la colección de contratos es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es nulo o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As EndpointAddress) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="contract">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <summary>Descarga y resuelve una dirección de metadatos en una colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para un contrato especificado en una dirección especificada.</summary>
        <returns>Colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> para especificar el contrato y la dirección de los metadatos que se utilizarán al descargar y resolver metadatos.  
  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos y el <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> predeterminado es <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 Este método requiere que especifique un tipo de contrato. Puede especificar el contrato declarando la interfaz de servicio en el código de cliente o con un cliente WCF generado por Svcutil.exe. Si la interfaz cambia (agregando una nueva operación, por ejemplo) debe actualizar la interfaz en el código de cliente o generar a un nuevo cliente WCF. Si no lo hace, se producirá una excepción . Por ejemplo, suponga que tiene un servicio que implementa un contrato de servicios denominado ICalculator que define Add(), Sub(), Mult() y Div(). Crear una aplicación cliente y generar el cliente de WCF. Agrega a continuación un método a ICalculator, denominado Echo(). Si, a continuación, escribir una aplicación que llama <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29> sin generar un nuevo cliente WCF, obtendrá la excepción siguiente.  
  
 `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso de la clase <xref:System.ServiceModel.Description.MetadataResolver> para devolver los metadatos como una colección de los objetos <xref:System.ServiceModel.Description.ServiceEndpoint> que se utilizan a continuación para conectarse a una instancia del servicio.  
  
 [!code-csharp[MetadataResolver#1](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección o el contrato es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.ServiceModel.EndpointAddress address, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As EndpointAddress, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, System::ServiceModel::EndpointAddress ^ address, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizado para recuperar los metadatos.</param>
        <summary>Resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados utilizando la dirección de metadatos especificada y <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" />. </summary>
        <returns>Colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado de <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=nameWithType> es <xref:System.ServiceModel.Description.MetadataExchangeClientMode.MetadataExchange?displayProperty=nameWithType>.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, la colección de contratos o el cliente es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es nulo o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="mode">Modo de recuperación.</param>
        <summary>Resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados utilizando la dirección y el modo de transferencia especificados. </summary>
        <returns>Colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección o la colección de contratos es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es nulo o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Type contract, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contract As Type, address As Uri, mode As MetadataExchangeClientMode) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(Type ^ contract, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contract" Type="System.Type" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
      </Parameters>
      <Docs>
        <param name="contract">El contrato para el que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="mode">Modo de recuperación.</param>
        <summary>Resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado utilizando la dirección y el modo de transferencia especificados. </summary>
        <returns>Colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el método <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A> para especificar un contrato y direcciones y el mecanismo de la descarga que se va a utilizar.  
  
 La configuración predeterminada en <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType> se utiliza para recuperar los metadatos.  
  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso de <xref:System.ServiceModel.Description.MetadataResolver> para descargar y devolver los metadatos como una colección de objetos <xref:System.ServiceModel.Description.ServiceEndpoint> utilizando una solicitud HTTP GET en lugar de WS-Transfer.  
  
 [!code-csharp[MetadataResolver#2](~/samples/snippets/csharp/VS_Snippets_CFX/metadataresolver/cs/client.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección o el contrato es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt; contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.Description.ServiceEndpointCollection Resolve(class System.Collections.Generic.IEnumerable`1&lt;class System.ServiceModel.Description.ContractDescription&gt; contracts, class System.Uri address, valuetype System.ServiceModel.Description.MetadataExchangeClientMode mode, class System.ServiceModel.Description.MetadataExchangeClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Resolve (contracts As IEnumerable(Of ContractDescription), address As Uri, mode As MetadataExchangeClientMode, client As MetadataExchangeClient) As ServiceEndpointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::Description::ServiceEndpointCollection ^ Resolve(System::Collections::Generic::IEnumerable&lt;System::ServiceModel::Description::ContractDescription ^&gt; ^ contracts, Uri ^ address, System::ServiceModel::Description::MetadataExchangeClientMode mode, System::ServiceModel::Description::MetadataExchangeClient ^ client);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceEndpointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contracts" Type="System.Collections.Generic.IEnumerable&lt;System.ServiceModel.Description.ContractDescription&gt;" />
        <Parameter Name="address" Type="System.Uri" />
        <Parameter Name="mode" Type="System.ServiceModel.Description.MetadataExchangeClientMode" />
        <Parameter Name="client" Type="System.ServiceModel.Description.MetadataExchangeClient" />
      </Parameters>
      <Docs>
        <param name="contracts">Los contratos para los que se van a descargar y resolver los metadatos.</param>
        <param name="address">Dirección de los metadatos.</param>
        <param name="mode">Modo de recuperación.</param>
        <param name="client">
          <see cref="T:System.ServiceModel.Description.MetadataExchangeClient" /> utilizado para recuperar los metadatos.</param>
        <summary>Resuelve una dirección de metadatos en objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para los contratos especificados utilizando la dirección, el modo de transferencia y el cliente de transferencia especificados. </summary>
        <returns>Colección de objetos <see cref="T:System.ServiceModel.Description.ServiceEndpoint" /> para el contrato especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para descargar metadatos pero no resolver la información en objetos <xref:System.ServiceModel.Description.ServiceEndpoint>, use directamente <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Se devuelve una colección vacía si no se importaron extremos o si ningún extremo coincidía con el contrato. Si se devuelve una colección vacía, se escribe un seguimiento de la advertencia.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La dirección, la colección de contratos o el cliente es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="contracts" /> está vacío, por lo menos un miembro de <paramref name="contracts" /> es nulo o <paramref name="contracts" /> contiene más de un contrato con el mismo nombre y espacio de nombres.</exception>
      </Docs>
    </Member>
  </Members>
</Type>