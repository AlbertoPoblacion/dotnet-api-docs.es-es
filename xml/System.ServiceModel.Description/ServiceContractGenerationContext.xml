<Type Name="ServiceContractGenerationContext" FullName="System.ServiceModel.Description.ServiceContractGenerationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4971f19072d950f58f93cfb74e2b52300b514f7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36417258" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ServiceContractGenerationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceContractGenerationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceContractGenerationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceContractGenerationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceContractGenerationContext" />
  <TypeSignature Language="F#" Value="type ServiceContractGenerationContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Se pasa al método <see cref="M:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract(System.ServiceModel.Description.ServiceContractGenerationContext)" /> para habilitar la modificación de un contrato de servicio y su contexto antes de generar el código.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el objeto <xref:System.ServiceModel.Description.ServiceContractGenerationContext> pasado al método <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%2A?displayProperty=nameWithType> para modificar el modelo de objetos de documento del código antes de la generación de código. Normalmente, la interfaz <xref:System.ServiceModel.Description.IServiceContractGenerationExtension?displayProperty=nameWithType> se implementa en una implementación <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=nameWithType> personalizada utilizada para importar los elementos WSDL personalizados o, de lo contrario, modificar el código en el nivel de servicio o de operación. Para modificar el código en el nivel de la operación, vea <xref:System.ServiceModel.Description.IOperationContractGenerationExtension?displayProperty=nameWithType>.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el uso del objeto <xref:System.ServiceModel.Description.ServiceContractGenerationContext> pasado al método <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%2A?displayProperty=nameWithType> para agregar comentarios de código extraídos de los elementos WSDL personalizados.  
  
 [!code-csharp[C_CustomWSDLExtensions#12](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#12)]  
  
 El ejemplo de código siguiente muestra los comentarios de código resultantes.  
  
 [!code-csharp[C_CustomWSDLExtensions#13](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#13)]
 [!code-vb[C_CustomWSDLExtensions#13](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#13)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContractGenerationContext (System.ServiceModel.Description.ServiceContractGenerator serviceContractGenerator, System.ServiceModel.Description.ContractDescription contract, System.CodeDom.CodeTypeDeclaration contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceContractGenerator serviceContractGenerator, class System.ServiceModel.Description.ContractDescription contract, class System.CodeDom.CodeTypeDeclaration contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ContractDescription,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContractGenerationContext(System::ServiceModel::Description::ServiceContractGenerator ^ serviceContractGenerator, System::ServiceModel::Description::ContractDescription ^ contract, System::CodeDom::CodeTypeDeclaration ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.ServiceContractGenerationContext : System.ServiceModel.Description.ServiceContractGenerator * System.ServiceModel.Description.ContractDescription * System.CodeDom.CodeTypeDeclaration -&gt; System.ServiceModel.Description.ServiceContractGenerationContext" Usage="new System.ServiceModel.Description.ServiceContractGenerationContext (serviceContractGenerator, contract, contractType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceContractGenerator" Type="System.ServiceModel.Description.ServiceContractGenerator" />
        <Parameter Name="contract" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="contractType" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="serviceContractGenerator">Generador del código del contrato.</param>
        <param name="contract">Descripción del contrato que se va a generar.</param>
        <param name="contractType">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> para el código de contrato que se genera.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" /> mediante el generador de contrato, la descripción del mismo y la declaración de tipos de código del contrato especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceContractGenerationContext (System.ServiceModel.Description.ServiceContractGenerator serviceContractGenerator, System.ServiceModel.Description.ContractDescription contract, System.CodeDom.CodeTypeDeclaration contractType, System.CodeDom.CodeTypeDeclaration duplexCallbackType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Description.ServiceContractGenerator serviceContractGenerator, class System.ServiceModel.Description.ContractDescription contract, class System.CodeDom.CodeTypeDeclaration contractType, class System.CodeDom.CodeTypeDeclaration duplexCallbackType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceContractGenerationContext.#ctor(System.ServiceModel.Description.ServiceContractGenerator,System.ServiceModel.Description.ContractDescription,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceContractGenerationContext(System::ServiceModel::Description::ServiceContractGenerator ^ serviceContractGenerator, System::ServiceModel::Description::ContractDescription ^ contract, System::CodeDom::CodeTypeDeclaration ^ contractType, System::CodeDom::CodeTypeDeclaration ^ duplexCallbackType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Description.ServiceContractGenerationContext : System.ServiceModel.Description.ServiceContractGenerator * System.ServiceModel.Description.ContractDescription * System.CodeDom.CodeTypeDeclaration * System.CodeDom.CodeTypeDeclaration -&gt; System.ServiceModel.Description.ServiceContractGenerationContext" Usage="new System.ServiceModel.Description.ServiceContractGenerationContext (serviceContractGenerator, contract, contractType, duplexCallbackType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceContractGenerator" Type="System.ServiceModel.Description.ServiceContractGenerator" />
        <Parameter Name="contract" Type="System.ServiceModel.Description.ContractDescription" />
        <Parameter Name="contractType" Type="System.CodeDom.CodeTypeDeclaration" />
        <Parameter Name="duplexCallbackType" Type="System.CodeDom.CodeTypeDeclaration" />
      </Parameters>
      <Docs>
        <param name="serviceContractGenerator">Generador del código del contrato.</param>
        <param name="contract">Descripción del contrato que se va a generar.</param>
        <param name="contractType">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> para el código de contrato que se genera.</param>
        <param name="duplexCallbackType">
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> para el código de contrato dúplex que se va a generar.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceContractGenerationContext" /> mediante el generador de contrato, la descripción del mismo y la declaración de tipos de código del contrato especificados.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contract">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ContractDescription Contract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ContractDescription Contract" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceContractGenerationContext.Contract" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Contract As ContractDescription" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ContractDescription ^ Contract { System::ServiceModel::Description::ContractDescription ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Contract : System.ServiceModel.Description.ContractDescription" Usage="System.ServiceModel.Description.ServiceContractGenerationContext.Contract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ContractDescription</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.ServiceModel.Description.ContractDescription" /> para el contrato actual.</summary>
        <value>
          <see cref="T:System.ServiceModel.Description.ContractDescription" /> para el contrato actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la propiedad <xref:System.ServiceModel.Description.ServiceContractGenerationContext.Contract%2A> para examinar la <xref:System.ServiceModel.Description.ContractDescription?displayProperty=nameWithType> del contrato actual.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeDeclaration ContractType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceContractGenerationContext.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeDeclaration ^ ContractType { System::CodeDom::CodeTypeDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : System.CodeDom.CodeTypeDeclaration" Usage="System.ServiceModel.Description.ServiceContractGenerationContext.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.CodeDom.CodeTypeDeclaration" /> para el contrato actual.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> para el contrato actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la propiedad <xref:System.ServiceModel.Description.ServiceContractGenerationContext.ContractType%2A> para examinar o modificar <xref:System.CodeDom.CodeTypeDeclaration?displayProperty=nameWithType> del contrato actual antes de generar el código.  
  
   
  
## Examples  
 El ejemplo siguiente muestra el uso del objeto <xref:System.ServiceModel.Description.ServiceContractGenerationContext> pasado al método <xref:System.ServiceModel.Description.IServiceContractGenerationExtension.GenerateContract%2A?displayProperty=nameWithType> para agregar comentarios de código extraídos de los elementos WSDL personalizados.  
  
 [!code-csharp[C_CustomWSDLExtensions#12](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationimporter.cs#12)]  
  
 El ejemplo de código siguiente muestra los comentarios de código resultantes.  
  
 [!code-csharp[C_CustomWSDLExtensions#13](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.cs#13)]
 [!code-vb[C_CustomWSDLExtensions#13](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/newgeneratedcontract.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DuplexCallbackType">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeTypeDeclaration DuplexCallbackType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.CodeTypeDeclaration DuplexCallbackType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceContractGenerationContext.DuplexCallbackType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DuplexCallbackType As CodeTypeDeclaration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::CodeTypeDeclaration ^ DuplexCallbackType { System::CodeDom::CodeTypeDeclaration ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DuplexCallbackType : System.CodeDom.CodeTypeDeclaration" Usage="System.ServiceModel.Description.ServiceContractGenerationContext.DuplexCallbackType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeTypeDeclaration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene <see cref="T:System.CodeDom.CodeTypeDeclaration" /> para el contrato de devolución de llamada dúplex del contrato del servicio.</summary>
        <value>
          <see cref="T:System.CodeDom.CodeTypeDeclaration" /> para el contrato de devolución de llamada dúplex del contrato del servicio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la propiedad <xref:System.ServiceModel.Description.ServiceContractGenerationContext.DuplexCallbackType%2A> para examinar o modificar <xref:System.CodeDom.CodeTypeDeclaration?displayProperty=nameWithType> para el contrato de devolución de llamada dúplex del contrato del servicio antes de generar el código.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Operations">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.OperationContractGenerationContext&gt; Operations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.OperationContractGenerationContext&gt; Operations" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceContractGenerationContext.Operations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Operations As Collection(Of OperationContractGenerationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::OperationContractGenerationContext ^&gt; ^ Operations { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::OperationContractGenerationContext ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Operations : System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.OperationContractGenerationContext&gt;" Usage="System.ServiceModel.Description.ServiceContractGenerationContext.Operations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.OperationContractGenerationContext&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una colección de los objetos <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" /> que representan las operaciones del contrato.</summary>
        <value>Colección de objetos <see cref="T:System.ServiceModel.Description.OperationContractGenerationContext" /> que representan las operaciones del contrato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la propiedad <xref:System.ServiceModel.Description.ServiceContractGenerationContext.Operations%2A> para examinar o modificar los objetos <xref:System.ServiceModel.Description.OperationContractGenerationContext?displayProperty=nameWithType> que representan las operaciones del contrato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceContractGenerator">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.ServiceContractGenerator ServiceContractGenerator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.ServiceContractGenerator ServiceContractGenerator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceContractGenerationContext.ServiceContractGenerator" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceContractGenerator As ServiceContractGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::ServiceContractGenerator ^ ServiceContractGenerator { System::ServiceModel::Description::ServiceContractGenerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceContractGenerator : System.ServiceModel.Description.ServiceContractGenerator" Usage="System.ServiceModel.Description.ServiceContractGenerationContext.ServiceContractGenerator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.ServiceContractGenerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> que generará el contrato.</summary>
        <value>
          <see cref="T:System.ServiceModel.Description.ServiceContractGenerator" /> que generará el contrato.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la propiedad <xref:System.ServiceModel.Description.ServiceContractGenerationContext.ServiceContractGenerator%2A> para examinar o modificar el generador de código que creará el código de contrato.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>