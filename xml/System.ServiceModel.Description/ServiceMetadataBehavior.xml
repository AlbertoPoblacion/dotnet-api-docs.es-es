<Type Name="ServiceMetadataBehavior" FullName="System.ServiceModel.Description.ServiceMetadataBehavior">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bb327fc4666a325fadd27c51df12450a4cffcfff" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48650569" /></Metadata><TypeSignature Language="C#" Value="public class ServiceMetadataBehavior : System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ServiceMetadataBehavior extends System.Object implements class System.ServiceModel.Description.IServiceBehavior" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.ServiceMetadataBehavior" />
  <TypeSignature Language="VB.NET" Value="Public Class ServiceMetadataBehavior&#xA;Implements IServiceBehavior" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceMetadataBehavior : System::ServiceModel::Description::IServiceBehavior" />
  <TypeSignature Language="F#" Value="type ServiceMetadataBehavior = class&#xA;    interface IServiceBehavior" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Controla la publicación de metadatos de servicio e información asociada.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Agregar un <xref:System.ServiceModel.Description.ServiceMetadataBehavior> de objeto para el <xref:System.ServiceModel.Description.ServiceDescription.Behaviors%2A?displayProperty=nameWithType> colección (o la [ &lt;serviceMetadata&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md) elemento en un archivo de configuración de aplicación) para habilitar o deshabilitar la publicación de metadatos del servicio. Sin embargo, agregar el comportamiento a un servicio no es suficiente para habilitar la publicación de los metadatos:  
  
-   Para habilitar la recuperación de metadatos de GET de WS-Transfer, también debe agregar un extremo a su servicio en el que el contrato es `IMetadataExchange`. Para obtener un ejemplo, vea [Cómo: Publicar metadatos para un servicio mediante código](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-code.md). El extremo `IMetadataExchange` se puede configurar igual que cualquier otro extremo.  
  
-   Para habilitar la recuperación de metadatos de HTTP GET, establezca la propiedad <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> como `true`. Para obtener más información acerca de la dirección de metadatos HTTP GET, vea <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A>.  
  
 La dirección del extremo `IMetadataExchange` sigue las reglas normales con respecto a la combinación de direcciones base y direcciones de extremo. Para obtener más información, consulte [la publicación de metadatos](~/docs/framework/wcf/feature-details/publishing-metadata.md).  
  
 Para habilitar la publicación de metadatos mediante un archivo de configuración, agregue el [ &lt;serviceMetadata&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicemetadata.md) elemento a la [ &lt;serviceBehaviors&gt; ](~/docs/framework/configure-apps/file-schema/wcf/servicebehaviors.md)elemento y asocie el elemento con el [ &lt;servicio&gt; ](~/docs/framework/configure-apps/file-schema/wcf/service.md) para el que desea publicar los metadatos del elemento. Para obtener un ejemplo, vea [Cómo: Publicar metadatos para un servicio mediante un archivo de configuración](~/docs/framework/wcf/feature-details/how-to-publish-metadata-for-a-service-using-a-configuration-file.md). La clase tiene los siguientes miembros:  
  
-   La propiedad <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> especifica si los metadatos se devuelven en las solicitudes HTTP/GET.  
  
-   La propiedad (junto con las direcciones base) <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> especifica la dirección HTTP/GET.  
  
-   La propiedad <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> especifica si los metadatos se devuelven para una solicitud HTTPS/GET.  
  
-   La propiedad (junto con las direcciones base) <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> especifican la dirección HTTPS/GET.  
  
-   La propiedad <xref:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter%2A> devuelve el exportador subyacente.  
  
 Normalmente <xref:System.ServiceModel.Description.ServiceMetadataBehavior> se utiliza desde un archivo de configuración de la aplicación. Vea la sección Ejemplo para obtener un ejemplo de código.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra el uso de <xref:System.ServiceModel.Description.ServiceMetadataBehavior> en un archivo de configuración para habilitar la compatibilidad de los metadatos para solicitudes HTTP GET y solicitudes GET de WS-Transfer.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceMetadataBehavior ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceMetadataBehavior();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.ServiceMetadataBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crea <xref:System.ServiceModel.Description.ServiceMetadataBehavior> con los valores siguientes:  
  
-   La propiedad <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled%2A> es `false`.  
  
-   La propiedad <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled%2A> es `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExternalMetadataLocation">
      <MemberSignature Language="C#" Value="public Uri ExternalMetadataLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ExternalMetadataLocation" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property ExternalMetadataLocation As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ExternalMetadataLocation { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExternalMetadataLocation : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que es la ubicación de metadatos del servicio.</summary>
        <value>La ubicación de los metadatos del servicio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Devuelve una referencia a una ubicación de los metadatos externa a los clientes. La propiedad <xref:System.ServiceModel.Description.ServiceMetadataBehavior.ExternalMetadataLocation%2A> puede ser relativa o absoluta. Si es relativa, el cliente resuelve la dirección en relación con <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> o <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A>, dependiendo de cómo recuperó los metadatos el cliente.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">El valor es absoluto y el esquema no es http ni https.</exception>
      </Docs>
    </Member>
    <Member MemberName="HttpGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un enlace utilizado para configurar la recuperación de metadatos cuando el transporte es HTTP.</summary>
        <value><see cref="T:System.ServiceModel.Channels.Binding" /> que se puede utilizar para recuperar los metadatos sobre el protocolo HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En versiones anteriores de WCF, la recuperación de metadatos se logró utilizando HTTP GET para tener acceso a la página de ayuda del servicio a través de un explorador web. Solo se admitió <xref:System.ServiceModel.Channels.HttpTransportBindingElement>.  En el caso de la recuperación de metadatos mediante HTTPS GET, solo se admitió <xref:System.ServiceModel.Channels.HttpsTransportBindingElement>.   Las propiedades HttpsGetBinding y HttpGetBinding permiten el uso de enlaces para la recuperación de metadatos utilizando HTTP GET (o HTTPS GET) y que se puedan configurar los enlaces usados para tener acceso a las páginas web del servicio, ya sea mediante programación o a través de archivos de configuración.  
  
 Para obtener más información acerca de cómo recuperar las páginas de ayuda, use el <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> y <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> propiedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si publicar o no los metadatos del servicio para la recuperación utilizando una solicitud HTTP/GET.</summary>
        <value><see langword="true" /> si WSDL está publicado; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> es relativo, la dirección en la que se publican los metadatos es la dirección base y la dirección de servicio más una cadena de consulta `?wsdl`.  
  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> es absoluto, la dirección en la que se publican los metadatos es el valor del valor <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> más una querystring `?wsdl`.  
  
 Por ejemplo, si la dirección de servicio es `http://localhost:8080/CalculatorService` y <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> es una cadena vacía, la dirección de los metadatos de HTTP/GET es `http://localhost:8080/CalculatorService?wsdl`.  
  
 Si no habilita esta propiedad y no cambia <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> o lo establece como una dirección relativa, se producirá una excepción en el tiempo de ejecución cuando el host del servicio se abra sin una dirección base para HTTP.  
  
   
  
## Examples  
 El siguiente ejemplo de código demuestra el uso de <xref:System.ServiceModel.Description.ServiceMetadataBehavior> en un archivo de configuración para permitir la admisión de los metadatos para las solicitudes HTTP/GET y transferencia de WS/GET.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ubicación de publicación de los metadatos para solicitudes HTTP/GET.</summary>
        <value>La ubicación absoluta o relativa de los metadatos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> es relativo, la dirección en la que se publican los metadatos es la dirección base y la dirección de servicio más una cadena de consulta `?wsdl`.  
  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> es absoluto, la dirección en la que se publican los metadatos es este valor más una cadena de consulta `?wsdl`.  
  
 Por ejemplo, si la dirección de servicio es `http://localhost:8080/CalculatorService` y <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpGetUrl%2A> es una cadena vacía, la dirección de los metadatos de HTTP/GET es `http://localhost:8080/CalculatorService?wsdl`.  
  
   
  
## Examples  
 El siguiente ejemplo de código demuestra el uso de <xref:System.ServiceModel.Description.ServiceMetadataBehavior> en un archivo de configuración para permitir la admisión de los metadatos para las solicitudes HTTP/GET y transferencia de WS/GET.  
  
 [!code-csharp[ServiceMetadataBehavior#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicemetadatabehavior/cs/hostapplication.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetBinding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Binding HttpsGetBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.Binding HttpsGetBinding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetBinding As Binding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::Binding ^ HttpsGetBinding { System::ServiceModel::Channels::Binding ^ get(); void set(System::ServiceModel::Channels::Binding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetBinding : System.ServiceModel.Channels.Binding with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Binding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un enlace utilizado para configurar la recuperación de metadatos cuando el transporte es HTTPS.</summary>
        <value><see cref="T:System.ServiceModel.Channels.Binding" /> que se puede utilizar para recuperar los metadatos sobre el protocolo HTTPS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En versiones anteriores de WCF, la recuperación de metadatos se logró utilizando HTTP GET para tener acceso a la página de ayuda del servicio a través de un explorador web. Solo se admitió <xref:System.ServiceModel.Channels.HttpTransportBindingElement>.  En el caso de la recuperación de metadatos mediante HTTPS GET, solo se admitió <xref:System.ServiceModel.Channels.HttpsTransportBindingElement>.   Las propiedades HttpsGetBinding y HttpGetBinding permiten el uso de enlaces para la recuperación de metadatos utilizando HTTP GET (o HTTPS GET) y que se puedan configurar los enlaces usados para tener acceso a las páginas web del servicio, ya sea mediante programación o a través de archivos de configuración.  
  
 Para obtener más información acerca de cómo recuperar las páginas de ayuda, use el <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpHelpPageBinding%2A> y <xref:System.ServiceModel.Description.ServiceDebugBehavior.HttpsHelpPageBinding%2A> propiedades.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetEnabled">
      <MemberSignature Language="C#" Value="public bool HttpsGetEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HttpsGetEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HttpsGetEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetEnabled : bool with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si publicar o no los metadatos del servicio para la recuperación utilizando una solicitud HTTPS/GET.</summary>
        <value><see langword="true" /> si WSDL está publicado; en caso contrario, <see langword="false" />. El valor predeterminado es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> es relativo, la dirección en la que se publican los metadatos es la dirección base y la dirección de servicio más una cadena de consulta `?wsdl`.  
  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> es absoluto, la dirección en la que se publican los metadatos es el valor del valor <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> más una querystring `?wsdl`.  
  
 Por ejemplo, si la dirección de servicio es `https://localhost:8080/CalculatorService` y <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> es una cadena vacía, la dirección de los metadatos HTTPS/GET es `https://localhost:8080/CalculatorService?wsdl`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HttpsGetUrl">
      <MemberSignature Language="C#" Value="public Uri HttpsGetUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri HttpsGetUrl" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property HttpsGetUrl As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ HttpsGetUrl { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HttpsGetUrl : Uri with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.UriTypeConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la ubicación de publicación de los metadatos para solicitudes HTTPS/GET.</summary>
        <value>La dirección de los metadatos HTTPS.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> es relativo, la dirección en la que se publican los metadatos es la dirección base y la dirección de servicio más una cadena de consulta `?wsdl`.  
  
 Si el valor de <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> es absoluto, la dirección en la que se publican los metadatos es el valor del valor <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> más una querystring `?wsdl`.  
  
 Por ejemplo, si la dirección de servicio es `https://localhost:8080/CalculatorService` y <xref:System.ServiceModel.Description.ServiceMetadataBehavior.HttpsGetUrl%2A> es una cadena vacía, la dirección de los metadatos HTTPS/GET es `https://localhost:8080/CalculatorService?wsdl`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataExporter">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.MetadataExporter MetadataExporter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Description.MetadataExporter MetadataExporter" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberSignature Language="VB.NET" Value="Public Property MetadataExporter As MetadataExporter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::MetadataExporter ^ MetadataExporter { System::ServiceModel::Description::MetadataExporter ^ get(); void set(System::ServiceModel::Description::MetadataExporter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MetadataExporter : System.ServiceModel.Description.MetadataExporter with get, set" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MetadataExporter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.MetadataExporter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el objeto <see cref="T:System.ServiceModel.Description.MetadataExporter" /> interno utilizado para publicar los metadatos del servicio.</summary>
        <value>El objeto <see cref="T:System.ServiceModel.Description.MetadataExporter" /> interno.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el objeto <xref:System.ServiceModel.Description.MetadataExporter> para modificar la publicación de los metadatos del servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MexContractName">
      <MemberSignature Language="C#" Value="public const string MexContractName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MexContractName" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberSignature Language="VB.NET" Value="Public Const MexContractName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MexContractName;" />
      <MemberSignature Language="F#" Value="val mutable MexContractName : string" Usage="System.ServiceModel.Description.ServiceMetadataBehavior.MexContractName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve la cadena <c>IMetadataContract</c>.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.AddBindingParameters">
      <MemberSignature Language="C#" Value="void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ parameters) = System::ServiceModel::Description::IServiceBehavior::AddBindingParameters;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="parameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="description">Descripción del servicio que se va a configurar.</param>
        <param name="serviceHostBase">Host de servicio.</param>
        <param name="endpoints">puntos de conexión que se van a configurar.</param>
        <param name="parameters">Los parámetros de enlace que se van a configurar.</param>
        <summary>Implementación de <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> que configura los enlaces subyacentes para admitir el comportamiento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::ApplyDispatchBehavior;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">La descripción del servicio que se va a modificar.</param>
        <param name="serviceHostBase">Host de servicio.</param>
        <summary>Implementación de <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> que configura los enlaces subyacentes para admitir el comportamiento en el servicio.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Ni <paramref name="description" /> ni <paramref name="serviceHostBase" /> son <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">La dirección de destino de <paramref name="serviceHostBase" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Description.IServiceBehavior.Validate">
      <MemberSignature Language="C#" Value="void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Description.IServiceBehavior.Validate(class System.ServiceModel.Description.ServiceDescription description, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.ServiceMetadataBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Description.IServiceBehavior.Validate(System::ServiceModel::Description::ServiceDescription ^ description, System::ServiceModel::ServiceHostBase ^ serviceHostBase) = System::ServiceModel::Description::IServiceBehavior::Validate;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Description.IServiceBehavior.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="description">La descripción del servicio que debe validarse.</param>
        <param name="serviceHostBase">Host de servicio.</param>
        <summary>Implementación de <see cref="T:System.ServiceModel.Description.IServiceBehavior" /> que valida que la descripción del servicio pueda admitir el comportamiento.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>