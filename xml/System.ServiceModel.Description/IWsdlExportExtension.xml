<Type Name="IWsdlExportExtension" FullName="System.ServiceModel.Description.IWsdlExportExtension">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e406e68bf451c2255e551d55a19e32774dc9762d" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57962060" /></Metadata><TypeSignature Language="C#" Value="public interface IWsdlExportExtension" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWsdlExportExtension" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.IWsdlExportExtension" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWsdlExportExtension" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWsdlExportExtension" />
  <TypeSignature Language="F#" Value="type IWsdlExportExtension = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define los comportamientos del extremo o del contrato que pueden exportar los metadatos personalizados.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para modificar y extender el Lenguaje de descripción de servicios Web (WSDL) exportado por objetos <xref:System.ServiceModel.Description.WsdlExporter>, ha de implementarse la interfaz <xref:System.ServiceModel.Description.IWsdlExportExtension> en un punto de conexión, contrato o comportamiento de la operación (un objeto que implementa o <xref:System.ServiceModel.Description.IContractBehavior>, <xref:System.ServiceModel.Description.IEndpointBehavior>o <xref:System.ServiceModel.Description.IOperationBehavior>) y agregar el comportamiento a <xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A>, <xref:System.ServiceModel.Description.ContractDescription.Behaviors%2A>o la propiedad <xref:System.ServiceModel.Description.OperationDescription.Behaviors%2A>. Además, también puede implementar <xref:System.ServiceModel.Description.IWsdlExportExtension> en un <xref:System.ServiceModel.Channels.BindingElement>.  
  
> [!NOTE]
>  No se invocan nunca las implementaciones <xref:System.ServiceModel.Description.IWsdlExportExtension> si se implementan como <xref:System.ServiceModel.Description.IServiceBehavior>.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension> no exporta las aserciones de directiva personalizadas aunque Windows Communication Foundation (WCF) se exporta las aserciones de directiva de enlace personalizado para el elemento adecuado dentro de WSDL. Si desea exportar las aserciones de directiva personalizadas, implemente la interfaz <xref:System.ServiceModel.Description.IPolicyExportExtension>.  
  
 El proceso de publicación de metadatos comienza llamando a <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoints%2A?displayProperty=nameWithType> que a su vez llama a <xref:System.ServiceModel.Description.WsdlExporter.ExportEndpoint%2A?displayProperty=nameWithType> para cada extremo.  
  
 El punto de conexión se exporta exportando primero su contrato. Cuando se exporta un contrato el <xref:System.ServiceModel.Description.WsdlExporter?displayProperty=nameWithType> llama al método <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A?displayProperty=nameWithType> en todas las implementaciones <xref:System.ServiceModel.Description.IWsdlExportExtension> del contrato, y los comportamientos de la operación para ese contrato. Las operaciones que utilizan las acciones de carácter comodín no se exportan en metadatos, por lo que no se exportan las implementaciones <xref:System.ServiceModel.Description.IWsdlExportExtension> en los comportamientos de operación para estas operaciones.  
  
 Después de exportar el contrato, el puerto y el enlace se exportan y se asocian las expresiones de directiva exportadas.  
  
 <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> y los métodos <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> proporcionan el acceso a las <xref:System.ServiceModel.Description.WsdlExporter> para que <xref:System.ServiceModel.Description.IWsdlExportExtension> implementaciones puedan crear informes de errores irrecuperables y advertencias a través de la propiedad <xref:System.ServiceModel.Description.MetadataExporter.Errors%2A>. Los objetos de contexto pasados a ambos métodos proporcionan las asignaciones convenientes desde los elementos WSDL exportados a las propiedades de <xref:System.ServiceModel.Description.ContractDescription> y los objetos <xref:System.ServiceModel.Description.ServiceEndpoint>.  
  
 Si una implementación <xref:System.ServiceModel.Description.IWsdlExportExtension> produce una excepción en exportación, los metadatos generados están en un estado incoherente y se debería descartar el objeto <xref:System.ServiceModel.Description.WsdlExporter>.  
  
> [!NOTE]
>  La extensión de exportación personalizada se debe ejecutar cuando el serializador integrado rellene la descripción del servicio.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra <xref:System.ServiceModel.Description.IWsdlExportExtension> que agrega los atributos de documentación personalizados al archivo WSDL como anotaciones del WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExportContract">
      <MemberSignature Language="C#" Value="public void ExportContract (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlContractConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportContract(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlContractConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportContract (exporter As WsdlExporter, context As WsdlContractConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportContract(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlContractConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportContract : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlContractConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportContract (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlContractConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.WsdlExporter" /> que exporta la información del contrato.</param>
        <param name="context">Proporciona las asignaciones entre los elementos WSDL exportados y la descripción del contrato.</param>
        <summary>Escribe los elementos del Lenguaje de descripción de servicios Web (WSDL) personalizados en el WSDL generado para un contrato.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama al método <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A> cuando el sistema de exportación de metadatos está exportando el contrato. Sólo los comportamientos de contracto y operación que implementan <xref:System.ServiceModel.Description.IWsdlExportExtension> obtienen la llamada <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>. Todo los comportamientos que implementan <xref:System.ServiceModel.Description.IWsdlExportExtension> obtienen la llamada <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A>.  
  
 Utilice el parámetro `context` para modificar el WSDL que va a ser exportado. Para obtener un ejemplo, vea la sección Ejemplo.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra <xref:System.ServiceModel.Description.IWsdlExportExtension> que agrega los atributos de documentación personalizados al archivo WSDL como anotaciones del WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportEndpoint">
      <MemberSignature Language="C#" Value="public void ExportEndpoint (System.ServiceModel.Description.WsdlExporter exporter, System.ServiceModel.Description.WsdlEndpointConversionContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExportEndpoint(class System.ServiceModel.Description.WsdlExporter exporter, class System.ServiceModel.Description.WsdlEndpointConversionContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExportEndpoint (exporter As WsdlExporter, context As WsdlEndpointConversionContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExportEndpoint(System::ServiceModel::Description::WsdlExporter ^ exporter, System::ServiceModel::Description::WsdlEndpointConversionContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ExportEndpoint : System.ServiceModel.Description.WsdlExporter * System.ServiceModel.Description.WsdlEndpointConversionContext -&gt; unit" Usage="iWsdlExportExtension.ExportEndpoint (exporter, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exporter" Type="System.ServiceModel.Description.WsdlExporter" Index="0" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="context" Type="System.ServiceModel.Description.WsdlEndpointConversionContext" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="exporter"><see cref="T:System.ServiceModel.Description.WsdlExporter" /> que exporta la información del extremo.</param>
        <param name="context">Proporciona las asignaciones de los elementos WSDL exportados a la descripción del extremo.</param>
        <summary>Escribe los elementos del Lenguaje de descripción de servicios Web (WSDL) personalizados en el WSDL generado para un extremo.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Implemente el método <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportEndpoint%2A> para modificar el WSDL exportado para un punto de conexión. Se llama a este método cuando el contrato ha sido exportado por <xref:System.ServiceModel.Description.IWsdlExportExtension.ExportContract%2A>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra <xref:System.ServiceModel.Description.IWsdlExportExtension> que agrega los atributos de documentación personalizados al archivo WSDL como anotaciones del WSDL.  
  
 [!code-csharp[C_CustomWSDLExtensions#6](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#6)]  
[!code-csharp[C_CustomWSDLExtensions#7](~/samples/snippets/csharp/VS_Snippets_CFX/c_customwsdlextensions/cs/wsdldocumentationattribute.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>