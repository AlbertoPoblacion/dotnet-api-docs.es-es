<Type Name="DurableServiceAttribute" FullName="System.ServiceModel.Description.DurableServiceAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4424be81ad86be7f5a77dc766676f811d3fb9d97" /><Meta Name="ms.sourcegitcommit" Value="6f3d3181d9ca22a1ab46a7f61f3ee152f2b844ea" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/27/2018" /><Meta Name="ms.locfileid" Value="50178580" /></Metadata><TypeSignature Language="C#" Value="public sealed class DurableServiceAttribute : Attribute, System.ServiceModel.Administration.IWmiInstanceProvider, System.ServiceModel.Description.IServiceBehavior, System.ServiceModel.IContextSessionProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DurableServiceAttribute extends System.Attribute implements class System.ServiceModel.Administration.IWmiInstanceProvider, class System.ServiceModel.Description.IServiceBehavior, class System.ServiceModel.IContextSessionProvider" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Description.DurableServiceAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DurableServiceAttribute&#xA;Inherits Attribute&#xA;Implements IContextSessionProvider, IServiceBehavior, IWmiInstanceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class DurableServiceAttribute sealed : Attribute, System::ServiceModel::Administration::IWmiInstanceProvider, System::ServiceModel::Description::IServiceBehavior, System::ServiceModel::IContextSessionProvider" />
  <TypeSignature Language="F#" Value="type DurableServiceAttribute = class&#xA;    inherit Attribute&#xA;    interface IServiceBehavior&#xA;    interface IContextSessionProvider&#xA;    interface IWmiInstanceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Administration.IWmiInstanceProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Description.IServiceBehavior</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.IContextSessionProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica el comportamiento de ejecución interno de la implementación de un contrato de servicio duradero.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los elementos siguientes se comprueban como parte de la lógica de validación de los servicios duraderos:  
  
-   Todos los enlaces con sesión poseen un elemento de enlace de contexto como <xref:System.ServiceModel.Configuration.WSHttpContextBindingElement> o <xref:System.ServiceModel.Configuration.NetTcpContextBindingElement>  
  
-   El valor <xref:System.ServiceModel.ConcurrencyMode> no debe establecerse como Multiple.  
  
-   El valor <xref:System.ServiceModel.InstanceContextMode> debe ser PerSession.  
  
-   Debe haber un punto de conexión con sesión configurado para el servicio.  
  
-   Si el contrato no acepta las sesiones, <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> debe establecerse en `true` para todas las operaciones.  
  
-   Si el contrato permite o acepta las sesiones, todas las operaciones para las que <xref:System.ServiceModel.Description.DurableOperationAttribute.CanCreateInstance%2A> se establece en `true` deben ser operaciones solicitud/respuesta, es decir, <xref:System.Workflow.Activities.OperationInfo.IsOneWay%2A> no puede establecerse en`true`.  
  
-   Si <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> se establece en `true`, todas las operaciones del servicio se deben marcar con <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> establecido en `true`, o se deben marcar con <xref:System.ServiceModel.TransactionFlowOption.Mandatory?displayProperty=nameWithType>. Además, <xref:System.ServiceModel.ConcurrencyMode> debe establecerse en Single.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DurableServiceAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DurableServiceAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Description.DurableServiceAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBindingParameters">
      <MemberSignature Language="C#" Value="public void AddBindingParameters (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, System.ServiceModel.Channels.BindingParameterCollection bindingParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddBindingParameters(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase, class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Description.ServiceEndpoint&gt; endpoints, class System.ServiceModel.Channels.BindingParameterCollection bindingParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddBindingParameters(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase, System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Description::ServiceEndpoint ^&gt; ^ endpoints, System::ServiceModel::Channels::BindingParameterCollection ^ bindingParameters);" />
      <MemberSignature Language="F#" Value="abstract member AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit&#xA;override this.AddBindingParameters : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase * System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt; * System.ServiceModel.Channels.BindingParameterCollection -&gt; unit" Usage="durableServiceAttribute.AddBindingParameters (serviceDescription, serviceHostBase, endpoints, bindingParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
        <Parameter Name="endpoints" Type="System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Description.ServiceEndpoint&gt;" />
        <Parameter Name="bindingParameters" Type="System.ServiceModel.Channels.BindingParameterCollection" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">Sin implementar.</param>
        <param name="serviceHostBase">Sin implementar.</param>
        <param name="endpoints">Sin implementar.</param>
        <param name="bindingParameters">Sin implementar.</param>
        <summary>No se implementa en <see cref="T:System.ServiceModel.Description.DurableServiceAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyDispatchBehavior">
      <MemberSignature Language="C#" Value="public void ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyDispatchBehavior(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyDispatchBehavior(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.ApplyDispatchBehavior : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="durableServiceAttribute.ApplyDispatchBehavior (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">Descripción del servicio.</param>
        <param name="serviceHostBase">Host de servicio.</param>
        <summary>Personaliza el tiempo de ejecución del servicio para admitir las propiedades de comportamiento del servicio duradero, como por ejemplo especificar un <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> para el servicio.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveStateInOperationTransaction">
      <MemberSignature Language="C#" Value="public bool SaveStateInOperationTransaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SaveStateInOperationTransaction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction" />
      <MemberSignature Language="VB.NET" Value="Public Property SaveStateInOperationTransaction As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SaveStateInOperationTransaction { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SaveStateInOperationTransaction : bool with get, set" Usage="System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un valor que indica si el estado de instancia de servicio se mantiene en el <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> utilizando la misma transacción con la que se ejecuta la operación.</summary>
        <value><see langword="true" />, si mantiene el estado de la instancia de servicio utilizando la misma transacción; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> se establece en `true`, todas las operaciones del servicio se deben marcar con <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A?displayProperty=nameWithType> establecido en `true`, o se deben marcar con <xref:System.ServiceModel.TransactionFlowOption.Mandatory?displayProperty=nameWithType>. Además, <xref:System.ServiceModel.ConcurrencyMode> debe establecerse en Single.  
  
 Cuando se establece <xref:System.ServiceModel.Description.DurableServiceAttribute.SaveStateInOperationTransaction%2A> en `true` el estado del servicio es transaccional con la transacción de la operación. Esto significa que si la transacción de la operación se revierte, el estado del servicio también se revertirá.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Administration.IWmiInstanceProvider.FillInstance">
      <MemberSignature Language="C#" Value="void IWmiInstanceProvider.FillInstance (System.ServiceModel.Administration.IWmiInstance wmiInstance);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ServiceModel.Administration.IWmiInstanceProvider.FillInstance(class System.ServiceModel.Administration.IWmiInstance wmiInstance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.System#ServiceModel#Administration#IWmiInstanceProvider#FillInstance(System.ServiceModel.Administration.IWmiInstance)" />
      <MemberSignature Language="VB.NET" Value="Sub FillInstance (wmiInstance As IWmiInstance) Implements IWmiInstanceProvider.FillInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ServiceModel.Administration.IWmiInstanceProvider.FillInstance(System::ServiceModel::Administration::IWmiInstance ^ wmiInstance) = System::ServiceModel::Administration::IWmiInstanceProvider::FillInstance;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wmiInstance" Type="System.ServiceModel.Administration.IWmiInstance" />
      </Parameters>
      <Docs>
        <param name="wmiInstance">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Administration.IWmiInstanceProvider.GetInstanceType">
      <MemberSignature Language="C#" Value="string IWmiInstanceProvider.GetInstanceType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ServiceModel.Administration.IWmiInstanceProvider.GetInstanceType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.System#ServiceModel#Administration#IWmiInstanceProvider#GetInstanceType" />
      <MemberSignature Language="VB.NET" Value="Function GetInstanceType () As String Implements IWmiInstanceProvider.GetInstanceType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ServiceModel.Administration.IWmiInstanceProvider.GetInstanceType() = System::ServiceModel::Administration::IWmiInstanceProvider::GetInstanceType;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownExceptionAction">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Description.UnknownExceptionAction UnknownExceptionAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Description.UnknownExceptionAction UnknownExceptionAction" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction" />
      <MemberSignature Language="VB.NET" Value="Public Property UnknownExceptionAction As UnknownExceptionAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Description::UnknownExceptionAction UnknownExceptionAction { System::ServiceModel::Description::UnknownExceptionAction get(); void set(System::ServiceModel::Description::UnknownExceptionAction value); };" />
      <MemberSignature Language="F#" Value="member this.UnknownExceptionAction : System.ServiceModel.Description.UnknownExceptionAction with get, set" Usage="System.ServiceModel.Description.DurableServiceAttribute.UnknownExceptionAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Description.UnknownExceptionAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el valor de enumeración de <see cref="T:System.ServiceModel.Description.UnknownExceptionAction" /> asociado al servicio duradero.</summary>
        <value>Valor de enumeración <see cref="T:System.ServiceModel.Description.UnknownExceptionAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea una instancia de <xref:System.ServiceModel.Description.DurableServiceAttribute>, establece este valor de propiedad en <xref:System.ServiceModel.Description.UnknownExceptionAction.TerminateInstance>. Esto significa que siempre que el servicio duradero encuentre una excepción desconocida, se finalizará la instancia del servicio y se eliminará cualquier información de estado del almacén de persistencia.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public void Validate (System.ServiceModel.Description.ServiceDescription serviceDescription, System.ServiceModel.ServiceHostBase serviceHostBase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Validate(class System.ServiceModel.Description.ServiceDescription serviceDescription, class System.ServiceModel.ServiceHostBase serviceHostBase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Description.DurableServiceAttribute.Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Validate(System::ServiceModel::Description::ServiceDescription ^ serviceDescription, System::ServiceModel::ServiceHostBase ^ serviceHostBase);" />
      <MemberSignature Language="F#" Value="abstract member Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit&#xA;override this.Validate : System.ServiceModel.Description.ServiceDescription * System.ServiceModel.ServiceHostBase -&gt; unit" Usage="durableServiceAttribute.Validate (serviceDescription, serviceHostBase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceDescription" Type="System.ServiceModel.Description.ServiceDescription" />
        <Parameter Name="serviceHostBase" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="serviceDescription">Descripción del servicio.</param>
        <param name="serviceHostBase">Host de servicio.</param>
        <summary>Comprueba que todas las operaciones duraderas del servicio se establecen correctamente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>