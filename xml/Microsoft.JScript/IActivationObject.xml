<Type Name="IActivationObject" FullName="Microsoft.JScript.IActivationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="01b1514efd67910e621ec264cd90ae2401b79bae" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30336899" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IActivationObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80420-101">Define los métodos para resolver el ámbito.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80420-101">Defines methods for resolving scope.</span>
      </span>
      <span data-ttu-id="80420-102">Esta interfaz la implementan todos los objetos que forman parte de la jerarquía de ámbitos.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80420-102">This interface is implemented by all objects that take part in a scope hierarchy.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.ActivationObject" />
    <altmember cref="T:Microsoft.JScript.ScriptObject" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
    <altmember cref="T:System.Reflection.FieldInfo" />
  </Docs>
  <Members>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetDefaultThisObject();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80420-103">Cuando se implementa en una clase, obtiene el ámbito predeterminado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-103">When implemented in a class, gets the current default scope.</span>
          </span>
          <span data-ttu-id="80420-104">Objeto contenido del ámbito de una instrucción <see langword="with" /> o ámbito global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-104">Either the contained object of a <see langword="with" /> statement scope, or the global scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80420-105">Ámbito predeterminado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-105">The current default scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="80420-106">Nombre del campo que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-106">The name of the field to search for.</span>
          </span>
        </param>
        <param name="lexLevel">
          <span data-ttu-id="80420-107">Nivel léxico de la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-107">The lexical level to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80420-108">Cuando se implementa en una clase, devuelve el campo con el nombre especificado buscando en la jerarquía de ámbitos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-108">When implemented in a class, returns a field that has the specified name by searching the scope hierarchy.</span>
          </span>
          <span data-ttu-id="80420-109">Este método busca solo en el ámbito especificado por el nivel léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-109">This method searches only the scope that is specified by the lexical level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80420-110">Objeto <see cref="T:System.Reflection.FieldInfo" /> con el nombre especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-110">A <see cref="T:System.Reflection.FieldInfo" /> object that has the specified name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80420-111">Este método se aplica a los campos que no se pueden resolver en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="80420-111">This method applies to fields that cannot be resolved at compile time.</span></span> <span data-ttu-id="80420-112">Esto sucede cuando un `eval` expresión hace referencia a un campo en el ámbito externo.</span><span class="sxs-lookup"><span data-stu-id="80420-112">This happens when an `eval` expression refers to a field in the outer scope.</span></span> <span data-ttu-id="80420-113">Dado que el `eval` expresión puede declarar un campo local con el mismo nombre, el campo no puede ser el origen del enlace para el campo de ámbito externo.</span><span class="sxs-lookup"><span data-stu-id="80420-113">Because the `eval` expression can declare a local field with the same name, the field cannot be early bound to the outer scope field.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80420-114">Cuando se implementa en una clase, obtiene el ámbito global buscando en la jerarquía de ámbitos hasta que encuentre un ámbito con variables estáticas, por ejemplo, un ámbito de módulo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-114">When implemented in a class, gets the global scope by searching the scope hierarchy until it finds a scope that includes static variables, for example, a module scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80420-115">Ámbito global.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-115">The global scope.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::FieldInfo ^ GetLocalField(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="80420-116">Nombre del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-116">The name of the field.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80420-117">Cuando se implementa en una clase, obtiene la declaración local del campo con el nombre especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-117">When implemented in a class, gets the local declaration of a field that has the specified name.</span>
          </span>
          <span data-ttu-id="80420-118">Este método se utiliza en tiempo de compilación para la comprobación de errores.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-118">This is used at compile time for error checking.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80420-119">Declaración local del campo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-119">The local declaration of the field.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="80420-120">Nombre del miembro que se va a buscar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-120">The name of the member to search for.</span>
          </span>
        </param>
        <param name="lexlevel">
          <span data-ttu-id="80420-121">Nivel léxico de la búsqueda.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-121">The lexical level to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80420-122">Cuando se implementa en una clase, obtiene el valor del miembro especificado buscando en la jerarquía de ámbitos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-122">When implemented in a class, gets the value of the specified member by searching the scope hierarchy.</span>
          </span>
          <span data-ttu-id="80420-123">Este método busca solo en el ámbito especificado por el nivel léxico.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-123">This method searches only the scope that is specified by the lexical level.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80420-124">Valor del miembro especificado en <paramref name="name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80420-124">The value of the member <paramref name="name" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80420-125">Este método se aplica a los miembros que no se pueden resolver en tiempo de compilación.</span><span class="sxs-lookup"><span data-stu-id="80420-125">This method applies to members that cannot be resolved at compile time.</span></span> <span data-ttu-id="80420-126">Esto se produce cuando un `eval` expresión hace referencia a un miembro en el ámbito externo.</span><span class="sxs-lookup"><span data-stu-id="80420-126">This occurs when an `eval` expression refers to a member in the outer scope.</span></span> <span data-ttu-id="80420-127">Dado que el `eval` expresión puede declarar un miembro local con el mismo nombre, el miembro no puede ser el origen del enlace al miembro del ámbito externo.</span><span class="sxs-lookup"><span data-stu-id="80420-127">Because the `eval` expression can declare a local member with the same name, the member cannot be early bound to the outer scope member.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ActivationObject" />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
  </Members>
</Type>