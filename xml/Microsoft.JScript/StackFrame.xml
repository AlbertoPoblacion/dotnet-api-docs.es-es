<Type Name="StackFrame" FullName="Microsoft.JScript.StackFrame">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="50984fcc8364c9b744e869a729c7f24759eb8ac5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37716666" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class StackFrame : Microsoft.JScript.ScriptObject, Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit StackFrame extends Microsoft.JScript.ScriptObject implements class Microsoft.JScript.IActivationObject" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.StackFrame" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class StackFrame&#xA;Inherits ScriptObject&#xA;Implements IActivationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class StackFrame sealed : Microsoft::JScript::ScriptObject, Microsoft::JScript::IActivationObject" />
  <TypeSignature Language="F#" Value="type StackFrame = class&#xA;    inherit ScriptObject&#xA;    interface IActivationObject" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.JScript.IActivationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa un marco de pila para ejecutar código. Esta clase contiene métodos para resolver el ámbito. Pertenece a la categoría de estados de compilación y estados en tiempo de ejecución.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.JScript.Closure" />
    <altmember cref="T:Microsoft.JScript.Globals" />
    <altmember cref="T:Microsoft.JScript.GlobalScope" />
  </Docs>
  <Members>
    <Member MemberName="closureInstance">
      <MemberSignature Language="C#" Value="public object closureInstance;" />
      <MemberSignature Language="ILAsm" Value=".field public object closureInstance" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.StackFrame.closureInstance" />
      <MemberSignature Language="VB.NET" Value="Public closureInstance As Object " />
      <MemberSignature Language="C++ CLI" Value="public: System::Object ^ closureInstance;" />
      <MemberSignature Language="F#" Value="val mutable closureInstance : obj" Usage="Microsoft.JScript.StackFrame.closureInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena una referencia al llamador del marco de pila actual.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los tipos posibles para este objeto incluyen <xref:Microsoft.JScript.StackFrame>, <xref:Microsoft.JScript.JSObject>, <xref:Microsoft.JScript.ScriptFunction>, y <xref:System.RuntimeTypeHandle>.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultThisObject">
      <MemberSignature Language="C#" Value="public object GetDefaultThisObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetDefaultThisObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.GetDefaultThisObject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDefaultThisObject () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetDefaultThisObject();" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultThisObject : unit -&gt; obj&#xA;override this.GetDefaultThisObject : unit -&gt; obj" Usage="stackFrame.GetDefaultThisObject " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetDefaultThisObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el actual ámbito predeterminado, que es el objeto contenido del ámbito de una instrucción <see langword="with" /> o el ámbito global.</summary>
        <returns>Ámbito predeterminado actual.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo GetField (string name, int lexLevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo GetField(string name, int32 lexLevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.GetField(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetField (name As String, lexLevel As Integer) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ GetField(System::String ^ name, int lexLevel);" />
      <MemberSignature Language="F#" Value="override this.GetField : string * int -&gt; System.Reflection.FieldInfo" Usage="stackFrame.GetField (name, lexLevel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetField(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexLevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del campo que se va a buscar.</param>
        <param name="lexLevel">Nivel léxico de la búsqueda.</param>
        <summary>Obtiene el campo con el nombre especificado buscando en la jerarquía de ámbitos. Este método busca solo en el ámbito especificado por el nivel léxico.</summary>
        <returns>Es null en todos los casos.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetGlobalScope">
      <MemberSignature Language="C#" Value="public Microsoft.JScript.GlobalScope GetGlobalScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.JScript.GlobalScope GetGlobalScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.GetGlobalScope" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalScope () As GlobalScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Microsoft::JScript::GlobalScope ^ GetGlobalScope();" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope&#xA;override this.GetGlobalScope : unit -&gt; Microsoft.JScript.GlobalScope" Usage="stackFrame.GetGlobalScope " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetGlobalScope</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.JScript.GlobalScope</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene el ámbito global buscando en la jerarquía de ámbitos hasta que encuentre un ámbito con variables estáticas, por ejemplo, un ámbito de módulo.</summary>
        <returns>Ámbito global.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="stackFrame.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del miembro que se va a buscar.</param>
        <param name="bindingAttr">Combinación bit a bit de los valores de enumeración que especifica cómo debe realizarse la búsqueda de miembros por reflexión.</param>
        <summary>Recupera una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondientes a todos los miembros que coinciden con el nombre especificado.</summary>
        <returns>Matriz de objetos que coinciden con el argumento <paramref name="name" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="stackFrame.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Combinación bit a bit de los valores de enumeración que especifica cómo debe realizarse la búsqueda de miembros por reflexión.</param>
        <summary>Recupera una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondientes a todos los miembros del objeto actual.</summary>
        <returns>Matriz de objetos que contiene todos los miembros del objeto actual.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="GetMemberValue">
      <MemberSignature Language="C#" Value="public object GetMemberValue (string name, int lexlevel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetMemberValue(string name, int32 lexlevel) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.GetMemberValue(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMemberValue (name As String, lexlevel As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetMemberValue(System::String ^ name, int lexlevel);" />
      <MemberSignature Language="F#" Value="abstract member GetMemberValue : string * int -&gt; obj&#xA;override this.GetMemberValue : string * int -&gt; obj" Usage="stackFrame.GetMemberValue (name, lexlevel)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetMemberValue(System.String,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="lexlevel" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del miembro que se va a buscar.</param>
        <param name="lexlevel">Nivel léxico de la búsqueda.</param>
        <summary>Obtiene el valor del miembro especificado buscando en la jerarquía de ámbitos. Este método busca solo en el ámbito especificado por el nivel léxico.</summary>
        <returns>Valor del miembro especificado en <paramref name="name" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="localVars">
      <MemberSignature Language="C#" Value="public object[] localVars;" />
      <MemberSignature Language="ILAsm" Value=".field public object[] localVars" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.StackFrame.localVars" />
      <MemberSignature Language="VB.NET" Value="Public localVars As Object() " />
      <MemberSignature Language="C++ CLI" Value="public: cli::array &lt;System::Object ^&gt; ^ localVars;" />
      <MemberSignature Language="F#" Value="val mutable localVars : obj[]" Usage="Microsoft.JScript.StackFrame.localVars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena las variables locales de este marco de pila.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="Microsoft.JScript.IActivationObject.GetLocalField">
      <MemberSignature Language="C#" Value="System.Reflection.FieldInfo IActivationObject.GetLocalField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.FieldInfo Microsoft.JScript.IActivationObject.GetLocalField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.Microsoft#JScript#IActivationObject#GetLocalField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetLocalField (name As String) As FieldInfo Implements IActivationObject.GetLocalField" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::FieldInfo ^ Microsoft.JScript.IActivationObject.GetLocalField(System::String ^ name) = Microsoft::JScript::IActivationObject::GetLocalField;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.JScript.IActivationObject.GetLocalField(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del campo.</param>
        <summary>Obtiene la declaración local del campo con el nombre especificado. Este método se utiliza en tiempo de compilación para la comprobación de errores.</summary>
        <returns>Declaración local del campo.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="PushStackFrameForMethod">
      <MemberSignature Language="C#" Value="public static void PushStackFrameForMethod (object thisob, Microsoft.JScript.JSLocalField[] fields, Microsoft.JScript.Vsa.VsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushStackFrameForMethod(object thisob, class Microsoft.JScript.JSLocalField[] fields, class Microsoft.JScript.Vsa.VsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.PushStackFrameForMethod(System.Object,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushStackFrameForMethod (thisob As Object, fields As JSLocalField(), engine As VsaEngine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushStackFrameForMethod(System::Object ^ thisob, cli::array &lt;Microsoft::JScript::JSLocalField ^&gt; ^ fields, Microsoft::JScript::Vsa::VsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="static member PushStackFrameForMethod : obj * Microsoft.JScript.JSLocalField[] * Microsoft.JScript.Vsa.VsaEngine -&gt; unit" Usage="Microsoft.JScript.StackFrame.PushStackFrameForMethod (thisob, fields, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thisob" Type="System.Object" />
        <Parameter Name="fields" Type="Microsoft.JScript.JSLocalField[]" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.VsaEngine" />
      </Parameters>
      <Docs>
        <param name="thisob">Objeto que contiene el método.</param>
        <param name="fields">Variables locales del marco de pila.</param>
        <param name="engine">Referencia al motor de scripting.</param>
        <summary>Crea un nuevo objeto <see cref="T:Microsoft.JScript.StackFrame" /> para un método y lo inserta en la pila de ámbitos globales.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
    <Member MemberName="PushStackFrameForStaticMethod">
      <MemberSignature Language="C#" Value="public static void PushStackFrameForStaticMethod (RuntimeTypeHandle thisclass, Microsoft.JScript.JSLocalField[] fields, Microsoft.JScript.Vsa.VsaEngine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PushStackFrameForStaticMethod(valuetype System.RuntimeTypeHandle thisclass, class Microsoft.JScript.JSLocalField[] fields, class Microsoft.JScript.Vsa.VsaEngine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.StackFrame.PushStackFrameForStaticMethod(System.RuntimeTypeHandle,Microsoft.JScript.JSLocalField[],Microsoft.JScript.Vsa.VsaEngine)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub PushStackFrameForStaticMethod (thisclass As RuntimeTypeHandle, fields As JSLocalField(), engine As VsaEngine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PushStackFrameForStaticMethod(RuntimeTypeHandle thisclass, cli::array &lt;Microsoft::JScript::JSLocalField ^&gt; ^ fields, Microsoft::JScript::Vsa::VsaEngine ^ engine);" />
      <MemberSignature Language="F#" Value="static member PushStackFrameForStaticMethod : RuntimeTypeHandle * Microsoft.JScript.JSLocalField[] * Microsoft.JScript.Vsa.VsaEngine -&gt; unit" Usage="Microsoft.JScript.StackFrame.PushStackFrameForStaticMethod (thisclass, fields, engine)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="thisclass" Type="System.RuntimeTypeHandle" />
        <Parameter Name="fields" Type="Microsoft.JScript.JSLocalField[]" />
        <Parameter Name="engine" Type="Microsoft.JScript.Vsa.VsaEngine" />
      </Parameters>
      <Docs>
        <param name="thisclass">Clase que contiene el método estático.</param>
        <param name="fields">Variables locales del marco de pila.</param>
        <param name="engine">Referencia al motor de scripting.</param>
        <summary>Crea un nuevo objeto <see cref="T:Microsoft.JScript.StackFrame" /> para un método estático y lo inserta en la pila de ámbitos globales.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:Microsoft.JScript.IActivationObject" />
        <altmember cref="T:Microsoft.JScript.Closure" />
        <altmember cref="T:Microsoft.JScript.Globals" />
        <altmember cref="T:Microsoft.JScript.GlobalScope" />
      </Docs>
    </Member>
  </Members>
</Type>