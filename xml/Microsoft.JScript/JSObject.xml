<Type Name="JSObject" FullName="Microsoft.JScript.JSObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9cc9282cb259c707a24c654bde9a7fa7ae5958a9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36662945" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JSObject : Microsoft.JScript.ScriptObject, System.Collections.IEnumerable, System.Reflection.IReflect, System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JSObject extends Microsoft.JScript.ScriptObject implements class System.Collections.IEnumerable, class System.Reflection.IReflect, class System.Runtime.InteropServices.Expando.IExpando" />
  <TypeSignature Language="DocId" Value="T:Microsoft.JScript.JSObject" />
  <TypeSignature Language="VB.NET" Value="Public Class JSObject&#xA;Inherits ScriptObject&#xA;Implements IEnumerable, IExpando, IReflect" />
  <TypeSignature Language="C++ CLI" Value="public ref class JSObject : Microsoft::JScript::ScriptObject, System::Collections::IEnumerable, System::Reflection::IReflect, System::Runtime::InteropServices::Expando::IExpando" />
  <TypeSignature Language="F#" Value="type JSObject = class&#xA;    inherit ScriptObject&#xA;    interface IEnumerable&#xA;    interface IExpando&#xA;    interface IReflect" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.JScript</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.JScript.ScriptObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Reflection.IReflect</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices.Expando.IExpando</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa un objeto en JScript. Esta clase pertenece a la categoría de objetos y funciones.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JSObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JSObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:Microsoft.JScript.JSObject" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Reflection.IReflect" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="AddField">
      <MemberSignature Language="C#" Value="public System.Reflection.FieldInfo AddField (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo AddField(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.AddField(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddField (name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::FieldInfo ^ AddField(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member AddField : string -&gt; System.Reflection.FieldInfo&#xA;override this.AddField : string -&gt; System.Reflection.FieldInfo" Usage="jSObject.AddField name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del campo que se va a agregar.</param>
        <summary>Agrega el campo especificado al objeto.</summary>
        <returns>Nuevo campo, en caso de que se haya agregado correctamente.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="F:Microsoft.JScript.JSObject.field_table" />
      </Docs>
    </Member>
    <Member MemberName="field_table">
      <MemberSignature Language="C#" Value="protected System.Collections.ArrayList field_table;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Collections.ArrayList field_table" />
      <MemberSignature Language="DocId" Value="F:Microsoft.JScript.JSObject.field_table" />
      <MemberSignature Language="VB.NET" Value="Protected field_table As ArrayList " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Collections::ArrayList ^ field_table;" />
      <MemberSignature Language="F#" Value="val mutable field_table : System.Collections.ArrayList" Usage="Microsoft.JScript.JSObject.field_table" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ArrayList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Almacena una lista de campos que se agregan y se quitan dinámicamente del objeto.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMember(string name, valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.GetMember(System.String,System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMember (name As String, bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMember(System::String ^ name, System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMember : string * System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="jSObject.GetMember (name, bindingAttr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del miembro que se va a buscar.</param>
        <param name="bindingAttr">Combinación bit a bit de los valores de enumeración que especifica cómo debe realizarse la búsqueda de miembros por reflexión.</param>
        <summary>Obtiene una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondientes a todos los miembros que coinciden con el nombre especificado.</summary>
        <returns>Matriz de miembros que coinciden con el argumento <paramref name="name" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MemberInfo[] GetMembers(valuetype System.Reflection.BindingFlags bindingAttr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.GetMembers(System.Reflection.BindingFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMembers (bindingAttr As BindingFlags) As MemberInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::MemberInfo ^&gt; ^ GetMembers(System::Reflection::BindingFlags bindingAttr);" />
      <MemberSignature Language="F#" Value="override this.GetMembers : System.Reflection.BindingFlags -&gt; System.Reflection.MemberInfo[]" Usage="jSObject.GetMembers bindingAttr" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
      </Parameters>
      <Docs>
        <param name="bindingAttr">Combinación bit a bit de los valores de enumeración que especifica cómo debe realizarse la búsqueda de miembros por reflexión.</param>
        <summary>Obtiene una matriz de objetos <see cref="T:System.Reflection.MemberInfo" /> correspondientes a todos los miembros del objeto de script actual.</summary>
        <returns>Matriz de objetos que contiene todos los miembros del objeto actual.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.IReflect" />
      </Docs>
    </Member>
    <Member MemberName="SetMemberValue2">
      <MemberSignature Language="C#" Value="public void SetMemberValue2 (string name, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMemberValue2(string name, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.SetMemberValue2(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMemberValue2 (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMemberValue2(System::String ^ name, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetMemberValue2 : string * obj -&gt; unit" Usage="jSObject.SetMemberValue2 (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del campo cuyo valor debe establecerse.</param>
        <param name="value">Nuevo valor del campo.</param>
        <summary>Establece el valor de un campo que se agregó dinámicamente al objeto y se almacenó en <see cref="F:Microsoft.JScript.JSObject.field_table" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Reflection.IReflect" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve un enumerador que recorre en iteración los miembros del objeto.</summary>
        <returns>Objeto enumerador que se usa para recorrer en iteración los miembros del objeto.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="F:Microsoft.JScript.JSObject.field_table" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddMethod">
      <MemberSignature Language="C#" Value="System.Reflection.MethodInfo IExpando.AddMethod (string name, Delegate method);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.MethodInfo System.Runtime.InteropServices.Expando.IExpando.AddMethod(string name, class System.Delegate method) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Function AddMethod (name As String, method As Delegate) As MethodInfo Implements IExpando.AddMethod" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::MethodInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddMethod(System::String ^ name, Delegate ^ method) = System::Runtime::InteropServices::Expando::IExpando::AddMethod;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="method" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="name">Nombre del método que se va a agregar.</param>
        <param name="method">El delegado al método.</param>
        <summary>Agrega el método especificado al objeto. <see cref="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddMethod(System.String,System.Delegate)" /> no se implementa en JScript.</summary>
        <returns>Es null en todos los casos.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="F:Microsoft.JScript.JSObject.field_table" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.AddProperty">
      <MemberSignature Language="C#" Value="System.Reflection.PropertyInfo IExpando.AddProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Reflection.PropertyInfo System.Runtime.InteropServices.Expando.IExpando.AddProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#AddProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function AddProperty (name As String) As PropertyInfo Implements IExpando.AddProperty" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Reflection::PropertyInfo ^ System.Runtime.InteropServices.Expando.IExpando.AddProperty(System::String ^ name) = System::Runtime::InteropServices::Expando::IExpando::AddProperty;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nombre de la propiedad que se va a agregar.</param>
        <summary>Agrega la propiedad especificada al objeto. Este método no se implementa en JScript.</summary>
        <returns>Es null en todos los casos.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="F:Microsoft.JScript.JSObject.field_table" />
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices.Expando.IExpando.RemoveMember">
      <MemberSignature Language="C#" Value="void IExpando.RemoveMember (System.Reflection.MemberInfo m);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(class System.Reflection.MemberInfo m) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.System#Runtime#InteropServices#Expando#IExpando#RemoveMember(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveMember (m As MemberInfo) Implements IExpando.RemoveMember" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices.Expando.IExpando.RemoveMember(System::Reflection::MemberInfo ^ m) = System::Runtime::InteropServices::Expando::IExpando::RemoveMember;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Reflection.MemberInfo" />
      </Parameters>
      <Docs>
        <param name="m">Nombre del miembro que se va a quitar.</param>
        <summary>Quita el miembro especificado del objeto.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
        <altmember cref="F:Microsoft.JScript.JSObject.field_table" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.JScript.JSObject.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jSObject.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.JScript</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una cadena que representa el objeto actual.</summary>
        <returns>Una cadena que representa el objeto actual.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.JScript.ScriptObject" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Reflection.IReflect" />
        <altmember cref="T:System.Runtime.InteropServices.Expando.IExpando" />
      </Docs>
    </Member>
  </Members>
</Type>