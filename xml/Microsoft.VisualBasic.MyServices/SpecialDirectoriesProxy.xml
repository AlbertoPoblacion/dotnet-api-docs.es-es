<Type Name="SpecialDirectoriesProxy" FullName="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62da6b39267047391118f6cc3868cba4ba56b876" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39906082" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SpecialDirectoriesProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi SpecialDirectoriesProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class SpecialDirectoriesProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpecialDirectoriesProxy" />
  <TypeSignature Language="F#" Value="type SpecialDirectoriesProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona propiedades para obtener acceso a directorios a los que suele hacerse referencia.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la ruta de acceso del directorio que se hace referencia está vacía, normalmente debido a que el sistema operativo no admite el directorio, un <xref:System.IO.DirectoryNotFoundException> es una excepción.  
  
 No hay barra diagonal inversa (\\) aparece al final de la ruta de acceso.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.FileSystem.SpecialDirectories` objeto.  
  
|En|Vea|  
|--------|---------|  
|Leer desde el directorio Mis documentos|[Recuperar el contenido del directorio Mis documentos](~/docs/visual-basic/developing-apps/programming/drives-directories-files/how-to-retrieve-the-contents-of-the-my-documents-directory.md)|  
  
## <a name="availability-by-project-type"></a>Disponibilidad por tipo de proyecto  
  
|Tipo de proyecto|Disponible|  
|------------------|---------------|  
|Aplicación Windows|**Sí**|  
|Biblioteca de clases|**Sí**|  
|Aplicación de consola|**Sí**|  
|Biblioteca de controles de Windows|**Sí**|  
|Biblioteca de controles Web|**Sí**|  
|Servicio de Windows|**Sí**|  
|Sitio web|**Sí**|  
  
   
  
## Examples  
 Este ejemplo devuelve el `filePath` para el usuario del directorio de escritorio y lo muestra.  
  
 [!code-vb[VbVbcnMyFileSystem#80](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#80)]  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
    <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
  </Docs>
  <Members>
    <Member MemberName="AllUsersApplicationData">
      <MemberSignature Language="C#" Value="public string AllUsersApplicationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AllUsersApplicationData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllUsersApplicationData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AllUsersApplicationData { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllUsersApplicationData : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.AllUsersApplicationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un nombre de ruta de acceso que señala al directorio de datos de la aplicación para todos los usuarios.</summary>
        <value>Ruta de acceso al directorio de datos de la aplicación para todos los usuarios.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La `SpecialDirectories` objeto contiene las rutas de acceso a directorios normalmente se hace referencia.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso al directorio de datos de la aplicación para todos los usuarios en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#79](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#79)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUserApplicationData">
      <MemberSignature Language="C#" Value="public string CurrentUserApplicationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CurrentUserApplicationData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUserApplicationData As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CurrentUserApplicationData { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUserApplicationData : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.CurrentUserApplicationData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un nombre de ruta de acceso que señala al directorio de datos de la aplicación para el usuario actual.</summary>
        <value>Ruta de acceso al directorio de datos de la aplicación para el usuario actual.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto SpecialDirectories contiene rutas de acceso a directorios normalmente se hace referencia.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso al directorio de datos de aplicación para el usuario actual en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#48](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#48)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="Desktop">
      <MemberSignature Language="C#" Value="public string Desktop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Desktop" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Desktop As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Desktop { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Desktop : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Desktop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Escritorio.</summary>
        <value>Ruta de acceso al directorio Escritorio.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El objeto SpecialDirectories contiene rutas de acceso a directorios normalmente se hace referencia.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso al directorio escritorio en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#60](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#60)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="MyDocuments">
      <MemberSignature Language="C#" Value="public string MyDocuments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MyDocuments" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MyDocuments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MyDocuments { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MyDocuments : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un nombre de ruta de acceso que apunta al directorio My Documents.</summary>
        <value>Ruta de acceso al directorio Mis documentos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La `SpecialDirectories` objeto contiene las rutas de acceso a directorios normalmente se hace referencia.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso del directorio Mis documentos en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#53](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#53)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="MyMusic">
      <MemberSignature Language="C#" Value="public string MyMusic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MyMusic" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MyMusic As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MyMusic { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MyMusic : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyMusic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Mi música.</summary>
        <value>Ruta de acceso al directorio Mi música.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La `SpecialDirectories` objeto contiene las rutas de acceso a directorios normalmente se hace referencia.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso para el directorio Mi música en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#26](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#26)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="MyPictures">
      <MemberSignature Language="C#" Value="public string MyPictures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MyPictures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MyPictures As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MyPictures { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MyPictures : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.MyPictures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Mis imágenes.</summary>
        <value>Ruta de acceso al directorio Mis imágenes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La `SpecialDirectories` objeto contiene las rutas de acceso a directorios normalmente se hace referencia.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso del directorio Mis imágenes en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#77](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#77)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="ProgramFiles">
      <MemberSignature Language="C#" Value="public string ProgramFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProgramFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProgramFiles As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProgramFiles { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProgramFiles : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.ProgramFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene una ruta de acceso que apunta al directorio **Archivos de programa**.</summary>
        <value>La ruta de acceso a la **archivos de programa** directory.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La `SpecialDirectories` objeto contiene las rutas de acceso a directorios normalmente se hace referencia. El **archivos de programa** directorio contiene archivos de programa del equipo.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso para el **archivos de programa** directorio un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#90](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#90)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="Programs">
      <MemberSignature Language="C#" Value="public string Programs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Programs" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Programs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Programs { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Programs : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Programs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Programas.</summary>
        <value>Ruta de acceso al directorio Programas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La `SpecialDirectories` objeto contiene las rutas de acceso a directorios normalmente se hace referencia. Directorio programas contiene grupos de programas del usuario.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso para el directorio de programas en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#61](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#61)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
    <Member MemberName="Temp">
      <MemberSignature Language="C#" Value="public string Temp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Temp" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Temp As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Temp { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Temp : string" Usage="Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy.Temp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de la ruta de acceso que apunta al directorio Temp.</summary>
        <value>Ruta de acceso al directorio Temp.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La `SpecialDirectories` objeto contiene las rutas de acceso a directorios normalmente se hace referencia.  
  
   
  
## Examples  
 Este ejemplo muestra la ruta de acceso para el directorio Temp en un <xref:System.Windows.Forms.MessageBox>.  
  
 [!code-vb[VbVbcnMyFileSystem#31](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbcnMyFileSystem/VB/Class1.vb#31)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.DirectoryNotFoundException">La ruta de acceso está vacía, habitualmente porque el sistema operativo no admite el directorio.</exception>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">Controla el acceso a las variables de entorno del sistema y del usuario. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">Controla la capacidad para tener acceso a archivos y carpetas. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</permission>
        <forInternalUseOnly />
        <altmember cref="T:Microsoft.VisualBasic.FileIO.FileSystem" />
      </Docs>
    </Member>
  </Members>
</Type>