<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="82e9e458c4b00643df865bc2c965666039ee5a5c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36659039" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <TypeSignature Language="F#" Value="type RegistryProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides properties and methods for manipulating the registry.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para usar estas propiedades, debe tener permisos de lectura y escritura desde el <xref:System.Security.Permissions.RegistryPermissionAccess> enumeración. Cualquier código que se ejecuta con plena confianza (bajo la directiva de seguridad predeterminada, es cualquier código instalado en la unidad de disco duro local del usuario) tiene los permisos necesarios para tener acceso al registro. Para obtener más información, vea la clase <xref:System.Security.Permissions.RegistryPermission>.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer datos del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo lee el valor `Name` de `HKEY_CURRENT_USER\Software\MyApp` y lo muestra en un cuadro de mensaje.  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to <see langword="HKEY_CLASSES_ROOT" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` se utiliza principalmente para almacenar información sobre las asociaciones de archivo en Windows.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda sólo los privilegios necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear el acceso a variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo obtiene los nombres de las subclaves de la `ClassesRoot` clave del registro y se agregan a `ListBox1`.  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 Este ejemplo requiere que haya un `ListBox` denominado `ListBox1` en el proyecto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to <see langword="HKEY_CURRENT_CONFIG" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` se utiliza principalmente para almacenar la configuración para dispositivos en el equipo.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda sólo los privilegios necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear el acceso a variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo crea la subclave `MyDeviceSettings`.  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type which provides access to <see langword="HKEY_CURRENT_USER" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` se utiliza principalmente para almacenar la configuración por usuario, como colores y fuentes, en Windows. La clave varía según el usuario.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear el acceso a variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo elimina la subclave `Software\MyCompany\Preferences\UserData`.  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_DYNDATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` se utiliza para almacenar datos de registro dinámicos, como los utilizados por los controladores de dispositivo Virtual y solo se admite en sistemas Windows 95 ó 98. En sistemas que no son Windows 95 ó 98, llamar a cualquier método de la clave devuelta por `Registry.DynData`, como `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`, `GetValueCount`, etc., se producirá un <xref:System.IO.IOException>.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear el acceso a variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo elimina el árbol de la subclave `Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * string * obj -&gt; obj" Usage="registryProxy.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="defaultValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Key from which the value is to be retrieved. Required.</param>
        <param name="valueName">
          <see langword="String" />. Value to be retrieved. Required.</param>
        <param name="defaultValue">
          <see langword="Object" />. Default value to be supplied if the value does not exist. Required.</param>
        <summary>Gets a value from a registry key.</summary>
        <returns>Gets a value from a registry key.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `valueName` no distingue entre mayúsculas y minúsculas.  
  
 Una clave del registro puede contener un valor que no esté asociado a ningún nombre. Cuando este valor sin nombre se muestra en el editor del registro, aparece la cadena "(Default)" en lugar del nombre. Para recuperar este valor sin nombre, especifique null o una cadena vacía ("") para `valueName`.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `GetValue` método.  
  
|En|Vea|  
|--------|---------|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo lee el valor `Name` de `HKEY_CURRENT_USER\Software\MyApp` y lo muestra en un `MessageBox`.  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to read from the registry key.</exception>
        <exception cref="T:System.IO.IOException">The <see cref="T:Microsoft.Win32.RegistryKey" /> that contains the specified value has been marked for deletion.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> does not begin with a valid registry root.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">para leer desde el registro. Enumeración asociada: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">para leer una clave del registro de tipo REG_EXPAND_SZ. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_LOCAL_MACHINE" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` Normalmente se utiliza para almacenar la configuración que no varían de un usuario a otro en Windows. Todos los usuarios del equipo comparten esta clave. Sus cinco subclaves (`Hardware`, `SAM`, `Security`, `Software`, y `System`) contienen datos de configuración para el equipo local.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear el acceso a variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 En este ejemplo se abre la subclave `Software\MyCompany\Preferences` y establece el valor `FontColor` a `"red"`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_PERFORMANCE_DATA" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` se utiliza para tener acceso a información de rendimiento de los componentes de software. Cada componente de software crea claves para sus objetos y contadores cuando se instala y escribe los datos del contador mientras se ejecuta. Estos datos no se almacenan en el registro, aunque el registro se utiliza para tener acceso a él. En su lugar, al llamar a funciones de registro a través de `HKEY_PERFORMANCE_DATA` hace que el sistema recopilar los datos de los administradores de objeto de sistema adecuado.  
  
 Esta clave no existe en los sistemas Windows 98; un intento de usar distinto de llamar a la `Name` método producirá una <xref:System.IO.IOException>.  
  
 Esta clave no se escriben normalmente intenta crear una subclave en ella se iniciará una <xref:System.IO.IOException>.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear el acceso a variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo obtiene el valor `ThisSoftware` desde el `MyCompany` subclave.  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Writes a value to a registry key.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Name of the key to be written to. Required.</param>
        <param name="valueName">
          <see langword="String" />. Name of the value to be written. Required.</param>
        <param name="value">
          <see langword="Object" />. Value to be written. Required.</param>
        <summary>Writes a value to a registry key.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la clave especificada o el valor no existe, se crea.  
  
 Este es un ejemplo de una tarea que implica el `My.Computer.Registry.SetValue` método.  
  
|En|Vea|  
|--------|---------|  
|Establecer un valor en una clave del registro|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 Este ejemplo establece el valor `FontColor` a "rojo" en la clave `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> does not begin with a valid registry root.  -or-  <paramref name="valueName" /> is longer than the maximum length allowed (255 characters).</exception>
        <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access..</exception>
        <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Para modificar la clave del registro especificada si existe, o para crear la clave del registro si aún no existe. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" />
        <Parameter Name="valueName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
      </Parameters>
      <Docs>
        <param name="keyName">
          <see langword="String" />. Name of the key to be written to. Required.</param>
        <param name="valueName">
          <see langword="String" />. Name of the value to be written. Required.</param>
        <param name="value">
          <see langword="Object" />. Value to be written. Required.</param>
        <param name="valueKind">
          <see cref="T:Microsoft.Win32.RegistryValueKind" />. Required.</param>
        <summary>Writes a value to a registry key.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la clave especificada o el valor no existe, se crea.  
  
 Este es un ejemplo de una tarea que implica el `My.Computer.Registry.SetValue` método.  
  
|En|Vea|  
|--------|---------|  
|Establecer un valor en una clave del registro|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 Este ejemplo establece el valor `FontColor` a "rojo" en la clave `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="value" /> is <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keyName" /> does not begin with a valid registry root.  -or-  <paramref name="keyName" /> is longer than the maximum length allowed (255 characters).  -or-  The type of <paramref name="value" /> does not match the registry data type specified by <paramref name="valueKind" />, therefore the data cannot be converted properly.</exception>
        <exception cref="T:System.UnauthorizedAccessException">The <see cref="T:Microsoft.Win32.RegistryKey" /> is read-only, and thus cannot be written to; for example, it is a root-level node, or it has not been opened with write access.</exception>
        <exception cref="T:System.Security.SecurityException">The user does not have the permissions required to create or modify registry keys.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Para modificar la clave del registro especificada si existe, o para crear la clave del registro si aún no existe. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <see cref="T:Microsoft.Win32.RegistryKey" /> type, which provides access to <see langword="HKEY_USERS" />.</summary>
        <value>
          <see cref="T:Microsoft.Win32.RegistryKey" />
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` se utiliza principalmente para almacenar la configuración predeterminada para los usuarios de la primera vez.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Acceso a las variables del Registro|  
|-----------|----------------------------------|  
|AllAccess|Creación, lectura y escritura|  
|Crear|Crear|  
|NoAccess|Sin acceso.|  
|Leer|Leer|  
|Write|Write|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|**En**|**Vea**|  
|------------|-------------|  
|Crear una clave del registro y establezca su valor|[Crear una clave del Registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Eliminar una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Leer un valor a partir de una clave del Registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo cuenta y muestra el número de valores en la clave del registro.  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
      </Docs>
    </Member>
  </Members>
</Type>