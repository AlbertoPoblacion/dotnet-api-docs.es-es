<Type Name="RegistryProxy" FullName="Microsoft.VisualBasic.MyServices.RegistryProxy">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2782e231f7e871bb563a95ced6e98693888e030" /><Meta Name="ms.sourcegitcommit" Value="95e24aee1283af2f120fc5da4b0bdc0712ab698f" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="05/06/2019" /><Meta Name="ms.locfileid" Value="65135757" /></Metadata><TypeSignature Language="C#" Value="public class RegistryProxy" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi RegistryProxy extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.MyServices.RegistryProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class RegistryProxy" />
  <TypeSignature Language="C++ CLI" Value="public ref class RegistryProxy" />
  <TypeSignature Language="F#" Value="type RegistryProxy = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
    <AssemblyVersion>10.0.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona propiedades y métodos para manipular el Registro.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para usar estas propiedades, debe tener permisos de lectura y escritura desde el <xref:System.Security.Permissions.RegistryPermissionAccess> enumeración. Cualquier código que se ejecuta con plena confianza (bajo la directiva de seguridad predeterminada, es cualquier código instalado en la unidad de disco duro local del usuario) tiene los permisos necesarios para tener acceso al registro. Para obtener más información, vea la clase <xref:System.Security.Permissions.RegistryPermission>.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer datos del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo lee el valor `Name` desde `HKEY_CURRENT_USER\Software\MyApp` y lo muestra en un cuadro de mensaje.  
  
 [!code-vb[VbVbalrMyRegistry#8](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:Microsoft.Win32.Registry" />
    <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
    <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
  </Docs>
  <Members>
    <Member MemberName="ClassesRoot">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey ClassesRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey ClassesRoot" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClassesRoot As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ ClassesRoot { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClassesRoot : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.ClassesRoot" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Win32.RegistryKey" /> tipo que proporciona acceso a <see langword="HKEY_CLASSES_ROOT" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CLASSES_ROOT` se utiliza principalmente para almacenar información acerca de las asociaciones de archivo en Windows.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceder los privilegios necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear acceso a las variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 En este ejemplo obtiene los nombres de las subclaves de la `ClassesRoot` clave del registro y los agrega a `ListBox1`.  
  
 [!code-vb[VbVbalrMyRegistry#10](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#10)]  
  
 En este ejemplo requiere que haya un `ListBox` denominado `ListBox1` en el proyecto.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.ClassesRoot" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentConfig">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentConfig { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentConfig" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConfig As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentConfig { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConfig : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentConfig" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Win32.RegistryKey" /> tipo que proporciona acceso a <see langword="HKEY_CURRENT_CONFIG" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_CONFIG` se utiliza principalmente para almacenar la configuración de dispositivos en el equipo.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceder los privilegios necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear acceso a las variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo crea la subclave `MyDeviceSettings`.  
  
 [!code-vb[VbVbalrMyRegistry#5](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentConfig" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="CurrentUser">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey CurrentUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey CurrentUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentUser As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ CurrentUser { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentUser : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.CurrentUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Win32.RegistryKey" /> tipo que proporciona acceso a <see langword="HKEY_CURRENT_USER" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_CURRENT_USER` se utiliza principalmente para almacenar la configuración por usuario, como colores y fuentes, en Windows. La clave varía según el usuario.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear acceso a las variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo elimina la subclave `Software\MyCompany\Preferences\UserData`.  
  
 [!code-vb[VbVbalrMyRegistry#2](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.CurrentUser" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="DynData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey DynData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey DynData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DynData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ DynData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DynData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.DynData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The DynData registry key works only on Win9x, which is not supported by this version of the .NET Framework.  Use the PerformanceData registry key instead.  This property will be removed from a future version of the framework.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Win32.RegistryKey" /> tipo, que proporciona acceso a <see langword="HKEY_DYNDATA" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_DYNDATA` se utiliza para almacenar los datos del registro dinámicos, como los usados por los controladores de dispositivo Virtual y solo se admite en sistemas Windows 95 ó 98. En los sistemas que no son Windows 95/98, llamar a cualquier método de la clave devuelta por `Registry.DynData`, tales como `CreateSubKey`, `DeleteSubKey`, `GetSubKeyCount`, `GetValueCount`, etc., se producirá un <xref:System.IO.IOException>.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear acceso a las variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo elimina el árbol de la subclave `Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#1](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.DynData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (string keyName, string valueName, object defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public instance object GetValue(string keyName, string valueName, object defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.GetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (keyName As String, valueName As String, defaultValue As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ defaultValue);" />
      <MemberSignature Language="F#" Value="member this.GetValue : string * string * obj -&gt; obj" Usage="registryProxy.GetValue (keyName, valueName, defaultValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="defaultValue" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. Clave desde el que el valor se va a recuperar. Obligatorio.</param>
        <param name="valueName"><see langword="String" />. Valor que se va a recuperar. Obligatorio.</param>
        <param name="defaultValue"><see langword="Object" />. Valor predeterminado que se proporcione si el valor no existe. Obligatorio.</param>
        <summary>Obtiene un valor de una clave del registro.</summary>
        <returns>Obtiene un valor de una clave del registro.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `valueName` no distingue entre mayúsculas y minúsculas.  
  
 Una clave del registro puede contener un valor que no esté asociado a ningún nombre. Cuando este valor sin nombre se muestra en el editor del registro, aparece la cadena "(Default)" en lugar del nombre. Para recuperar este valor sin nombre, especifique null o una cadena vacía ("") para `valueName`.  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `GetValue` método.  
  
|En|Vea|  
|--------|---------|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo lee el valor `Name` desde `HKEY_CURRENT_USER\Software\MyApp` y lo muestra en un `MessageBox`.  
  
 [!code-vb[VbVbalrMyRegistry#9](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para leer la clave del registro.</exception>
        <exception cref="T:System.IO.IOException">El <see cref="T:Microsoft.Win32.RegistryKey" /> que contiene el valor se ha marcado para su eliminación.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> no comienza con una raíz del registro válida.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">para leer desde el registro. Enumeración asociada: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Read" /></permission>
        <permission cref="T:System.Security.Permissions.EnvironmentPermission">para leer la clave del registro del tipo REG_EXPAND_SZ. Enumeración asociada: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></permission>
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="LocalMachine">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey LocalMachine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey LocalMachine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalMachine As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ LocalMachine { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalMachine : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.LocalMachine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Win32.RegistryKey" /> tipo, que proporciona acceso a <see langword="HKEY_LOCAL_MACHINE" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_LOCAL_MACHINE` Normalmente se usa para almacenar la configuración que no varía de un usuario a otro en Windows. Todos los usuarios del equipo comparten esta clave. Sus cinco subclaves (`Hardware`, `SAM`, `Security`, `Software`, y `System`) contienen los datos de configuración para el equipo local.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear acceso a las variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 Este ejemplo abre la subclave `Software\MyCompany\Preferences` y establece el valor `FontColor` a `"red"`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.LocalMachine" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="PerformanceData">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey PerformanceData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey PerformanceData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PerformanceData As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ PerformanceData { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PerformanceData : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.PerformanceData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Win32.RegistryKey" /> tipo, que proporciona acceso a <see langword="HKEY_PERFORMANCE_DATA" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_PERFORMANCE_DATA` se usa para tener acceso a información de rendimiento de los componentes de software. Cada componente de software crea claves para sus objetos y contadores cuando se instala y escribe los datos del contador mientras se esté ejecutando. Estos datos no se almacenan en el registro, aunque el registro se usa para acceder a él. En su lugar, una llamada a funciones de registro a través de `HKEY_PERFORMANCE_DATA` hace que el sistema recopilar los datos de los administradores de objeto de sistema adecuado.  
  
 Esta clave no existe en sistemas Windows 98; intenta usarlo distinto de llamar a la `Name` método producirá una <xref:System.IO.IOException>.  
  
 Esta clave normalmente no se puede escribir intenta crear una subclave en ella se iniciará una <xref:System.IO.IOException>.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Descripción|  
|-----------|-----------------|  
|AllAccess|Crear, leer y acceso de escritura a las variables del registro.|  
|Crear|Crear acceso a las variables del registro.|  
|NoAccess|Sin acceso a las variables del registro.|  
|Leer|Acceso de lectura a las variables del registro.|  
|Write|Acceso de escritura a las variables del registro.|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|En|Vea|  
|--------|---------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 En este ejemplo obtiene el valor `ThisSoftware` desde el `MyCompany` subclave.  
  
 [!code-vb[VbVbalrMyRegistry#7](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.PerformanceData" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Escribe un valor en una clave del registro.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. Nombre de la clave que se va a escribir en. Obligatorio.</param>
        <param name="valueName"><see langword="String" />. Nombre del valor que se va a escribir. Obligatorio.</param>
        <param name="value"><see langword="Object" />. Valor que se escribirá. Obligatorio.</param>
        <summary>Escribe un valor en una clave del registro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la clave especificada o el valor no existe, se crea.  
  
 Este es un ejemplo de una tarea que implica la `My.Computer.Registry.SetValue` método.  
  
|En|Vea|  
|--------|---------|  
|Establecer un valor en una clave del registro|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 Este ejemplo establece el valor `FontColor` al "rojo" en la clave `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="value" /> es <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> no comienza con una raíz del registro válida.  
  
-o bien- 
 <paramref name="valueName" /> es mayor que la longitud máxima permitida (255 caracteres).</exception>
        <exception cref="T:System.UnauthorizedAccessException"><see cref="T:Microsoft.Win32.RegistryKey" /> es de solo lectura y, por tanto, no permite la escritura (por ejemplo, es un nodo del nivel raíz o no se ha abierto con acceso de escritura).</exception>
        <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para crear o modificar claves del registro.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Para modificar la clave del registro especificada, si existe, o para crear la clave del registro si aún no existe. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (string keyName, string valueName, object value, Microsoft.Win32.RegistryValueKind valueKind);" />
      <MemberSignature Language="ILAsm" Value=".method public instance void SetValue(string keyName, string valueName, object value, valuetype Microsoft.Win32.RegistryValueKind valueKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.MyServices.RegistryProxy.SetValue(System.String,System.String,System.Object,Microsoft.Win32.RegistryValueKind)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (keyName As String, valueName As String, value As Object, valueKind As RegistryValueKind)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::String ^ keyName, System::String ^ valueName, System::Object ^ value, Microsoft::Win32::RegistryValueKind valueKind);" />
      <MemberSignature Language="F#" Value="member this.SetValue : string * string * obj * Microsoft.Win32.RegistryValueKind -&gt; unit" Usage="registryProxy.SetValue (keyName, valueName, value, valueKind)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyName" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueName" Type="System.String" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="keyName"><see langword="String" />. Nombre de la clave que se va a escribir en. Obligatorio.</param>
        <param name="valueName"><see langword="String" />. Nombre del valor que se va a escribir. Obligatorio.</param>
        <param name="value"><see langword="Object" />. Valor que se escribirá. Obligatorio.</param>
        <param name="valueKind"><see cref="T:Microsoft.Win32.RegistryValueKind" />. Obligatorio.</param>
        <summary>Escribe un valor en una clave del registro.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la clave especificada o el valor no existe, se crea.  
  
 Este es un ejemplo de una tarea que implica la `My.Computer.Registry.SetValue` método.  
  
|En|Vea|  
|--------|---------|  
|Establecer un valor en una clave del registro|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
  
   
  
## Examples  
 Este ejemplo establece el valor `FontColor` al "rojo" en la clave `HKEY_LOCAL_MACHINE\Software\MyCompany\Preferences`.  
  
 [!code-vb[VbVbalrMyRegistry#3](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="value" /> es <see langword="Nothing" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="keyName" /> no comienza con una raíz del registro válida.  
  
-o bien- 
 <paramref name="keyName" /> es mayor que la longitud máxima permitida (255 caracteres).  
  
-o bien- 
El tipo de <paramref name="value" /> no coincide con el tipo de datos del registro especificado por <paramref name="valueKind" />, por lo tanto, los datos no se puede convertir correctamente.</exception>
        <exception cref="T:System.UnauthorizedAccessException">El <see cref="T:Microsoft.Win32.RegistryKey" /> es de solo lectura y, por tanto, no se puede escribir en; por ejemplo, es un nodo del nivel raíz, o no se abrió con acceso de escritura.</exception>
        <exception cref="T:System.Security.SecurityException">El usuario no tiene los permisos necesarios para crear o modificar claves del registro.</exception>
        <permission cref="T:System.Security.Permissions.RegistryPermission">Para modificar la clave del registro especificada, si existe, o para crear la clave del registro si aún no existe. Enumeraciones asociadas: <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Write" />, <see cref="F:System.Security.Permissions.RegistryPermissionAccess.Create" /></permission>
        <altmember cref="T:Microsoft.Win32.RegistryValueKind" />
        <altmember cref="Overload:Microsoft.Win32.Registry.SetValue" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
    <Member MemberName="Users">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.RegistryKey Users { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.RegistryKey Users" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Users As RegistryKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::RegistryKey ^ Users { Microsoft::Win32::RegistryKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Users : Microsoft.Win32.RegistryKey" Usage="Microsoft.VisualBasic.MyServices.RegistryProxy.Users" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic.Core</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.RegistryKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Devuelve un <see cref="T:Microsoft.Win32.RegistryKey" /> tipo, que proporciona acceso a <see langword="HKEY_USERS" />.</summary>
        <value><see cref="T:Microsoft.Win32.RegistryKey" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HKEY_USERS` se utiliza principalmente para almacenar la configuración predeterminada para los usuarios de la primera vez.  
  
 El <xref:System.Security.Permissions.RegistryPermission> (clase), que se encuentra en la <xref:System.Security.Permissions> espacio de nombres, controla el acceso a las variables del registro. No deben almacenarse variables de Registro en ubicaciones de memoria donde pueda obtener acceso el código sin <xref:System.Security.Permissions.RegistryPermission>. De forma similar, al conceder permisos, conceda los privilegios mínimos necesarios para realizar el trabajo.  
  
 Los valores de acceso de permiso del Registro se definen mediante la enumeración <xref:System.Security.Permissions.RegistryPermissionAccess>. En la tabla siguiente se detallan sus miembros.  
  
|Valor|Acceso a las variables del Registro|  
|-----------|----------------------------------|  
|AllAccess|Creación, lectura y escritura|  
|Crear|Crear|  
|NoAccess|Sin acceso.|  
|Leer|Leer|  
|Write|Write|  
  
 En la tabla siguiente se muestra ejemplos de tareas que implican la `My.Computer.Registry` objeto.  
  
|**En**|**Vea**|  
|------------|-------------|  
|Crear una clave del registro y establecer su valor|[Cómo: Crear una clave del registro y establecer su valor](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-create-a-registry-key-and-set-its-value.md)|  
|Eliminar una clave del registro|[Cómo: Eliminar una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-delete-a-registry-key.md)|  
|Leer un valor de una clave del registro|[Cómo: Leer un valor de una clave del registro](~/docs/visual-basic/developing-apps/programming/computer-resources/how-to-read-a-value-from-a-registry-key.md)|  
  
   
  
## Examples  
 En este ejemplo cuenta y muestra el número de valores de la clave del registro.  
  
 [!code-vb[VbVbalrMyRegistry#4](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbVbalrMyRegistry/VB/Class1.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.Win32.RegistryKey" />
        <altmember cref="F:Microsoft.Win32.Registry.Users" />
        <related type="Article" href="~/docs/visual-basic/language-reference/objects/index.md">Objetos (Visual Basic)</related>
        <related type="Article" href="~/docs/visual-basic/developing-apps/programming/computer-resources/reading-from-and-writing-to-the-registry.md">Leer y escribir en el Registro (Visual Basic)</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9980aff7-2f69-492b-8f66-29a9a76d3df5">Seguridad y Registro</related>
      </Docs>
    </Member>
  </Members>
</Type>