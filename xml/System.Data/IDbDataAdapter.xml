<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ad7ef39687c100899e7bccb842a442f2c82c114b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37668547" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <TypeSignature Language="F#" Value="type IDbDataAdapter = interface&#xA;    interface IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d6455-101">Representa un conjunto de propiedades relacionadas con comandos que se utilizan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar un origen de datos, y la implementan los proveedores de datos de .NET Framework que tienen acceso a bases de datos relacionales.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d6455-101">Represents a set of command-related properties that are used to fill the <see cref="T:System.Data.DataSet" /> and update a data source, and is implemented by .NET Framework data providers that access relational databases.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6455-102">El <xref:System.Data.IDbDataAdapter> interfaz hereda de la <xref:System.Data.IDataAdapter> interfaz y permite que un objeto crear un objeto DataAdapter diseñado para su uso con una base de datos relacional.</span><span class="sxs-lookup"><span data-stu-id="d6455-102">The <xref:System.Data.IDbDataAdapter> interface inherits from the <xref:System.Data.IDataAdapter> interface and allows an object to create a DataAdapter designed for use with a relational database.</span></span> <span data-ttu-id="d6455-103">El <xref:System.Data.IDbDataAdapter> interfaz y, opcionalmente, la clase de utilidad <xref:System.Data.Common.DbDataAdapter>, permiten que una clase heredera implemente una clase DataAdapter, que representa el puente entre un origen de datos y un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="d6455-103">The <xref:System.Data.IDbDataAdapter> interface and, optionally, the utility class, <xref:System.Data.Common.DbDataAdapter>, allow an inheriting class to implement a DataAdapter class, which represents the bridge between a data source and a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="d6455-104">Para obtener más información sobre las clases DataAdapter, vea [llenar un DataSet desde un objeto DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span><span class="sxs-lookup"><span data-stu-id="d6455-104">For more information about DataAdapter classes, see [Populating a DataSet from a DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md).</span></span> <span data-ttu-id="d6455-105">Para obtener más información sobre la implementación de proveedores de datos de .NET Framework, vea [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span><span class="sxs-lookup"><span data-stu-id="d6455-105">For more information about implementing .NET Framework data providers, see [&#91;\<topic://cpconimplementingnetdataprovider>&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).</span></span>  
  
 <span data-ttu-id="d6455-106">Una aplicación no crea una instancia de la <xref:System.Data.IDbDataAdapter> interfaz directamente, sino que crea una instancia de una clase que herede <xref:System.Data.IDbDataAdapter> y <xref:System.Data.Common.DbDataAdapter>.</span><span class="sxs-lookup"><span data-stu-id="d6455-106">An application does not create an instance of the <xref:System.Data.IDbDataAdapter> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbDataAdapter> and <xref:System.Data.Common.DbDataAdapter>.</span></span>  
  
 <span data-ttu-id="d6455-107">Las clases que heredan <xref:System.Data.IDbDataAdapter> debe implementar los miembros heredados y suelen definir miembros adicionales para agregar funcionalidad específica del proveedor.</span><span class="sxs-lookup"><span data-stu-id="d6455-107">Classes that inherit <xref:System.Data.IDbDataAdapter> must implement the inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="d6455-108">Por ejemplo, el <xref:System.Data.IDbDataAdapter> interfaz define el <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propiedad y el <xref:System.Data.Common.DbDataAdapter> interfaz define un <xref:System.Data.IDataAdapter.Fill%2A> método que toma un <xref:System.Data.DataTable> como un parámetro.</span><span class="sxs-lookup"><span data-stu-id="d6455-108">For example, the <xref:System.Data.IDbDataAdapter> interface defines the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property, and the <xref:System.Data.Common.DbDataAdapter> interface defines a <xref:System.Data.IDataAdapter.Fill%2A> method that takes a <xref:System.Data.DataTable> as a parameter.</span></span> <span data-ttu-id="d6455-109">A su vez, el <xref:System.Data.OleDb.OleDbDataAdapter> clase hereda la <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propiedad y el <xref:System.Data.Common.DbDataAdapter.Fill%2A> método y también define dos sobrecargas adicionales de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método que toma un objeto ADO Recordset como parámetro.</span><span class="sxs-lookup"><span data-stu-id="d6455-109">In turn, the <xref:System.Data.OleDb.OleDbDataAdapter> class inherits the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> property and the <xref:System.Data.Common.DbDataAdapter.Fill%2A> method, and also defines two additional overloads of the <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> method that take an ADO Recordset object as a parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6455-110">El ejemplo siguiente utiliza las clases derivadas, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> y <xref:System.Data.SqlClient.SqlConnection>, para seleccionar registros de un origen de datos.</span><span class="sxs-lookup"><span data-stu-id="d6455-110">The following example uses the derived classes, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> and <xref:System.Data.SqlClient.SqlConnection>, to select records from a data source.</span></span> <span data-ttu-id="d6455-111">El relleno <xref:System.Data.DataSet> , a continuación, se devuelve.</span><span class="sxs-lookup"><span data-stu-id="d6455-111">The filled <xref:System.Data.DataSet> is then returned.</span></span> <span data-ttu-id="d6455-112">Para lograr esto, se pasa al método inicializada <xref:System.Data.DataSet>, una cadena de conexión y una cadena de consulta que es una instrucción SELECT de Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="d6455-112">To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.</span></span>  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="d6455-113">
        <para>Para promover la coherencia entre los proveedores de datos de .NET Framework, asigne el nombre de la clase heredada en el formulario <paramref name="Prv" /> DataAdapter donde <paramref name="Prv" /> es el prefijo uniforme que se asigna a todas las clases en un espacio de nombres del proveedor de datos de .NET Framework específico. Por ejemplo, <paramref name="Sql" /> es el prefijo de la <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> clase en el <see langword="System.Data.SqlClient" /> espacio de nombres.  Al heredar de la <see cref="T:System.Data.IDbDataAdapter" /> interfaz, debe implementar los siguientes constructores: <list type="table"><listheader><term> elemento </term><description> descripción </description></listheader><item><term> PrvDataAdapter() </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter.  </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand) </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter con la instrucción SQL SELECT especificada.  </description></item><item><term> PrvDataAdapter (selectCommandText de cadena, cadena selectConnectionString) </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter con una instrucción SELECT de SQL y una cadena de conexión.  </description></item><item><term> PrvDataAdapter (cadena selectCommandText, PrvConnection selectConnection) </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter con una instrucción SELECT de SQL y un objeto PrvConnection.  </description></item></list></para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="d6455-113">
          <para>To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="Prv" /> DataAdapter where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace. For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> class in the <see langword="System.Data.SqlClient" /> namespace.  When you inherit from the <see cref="T:System.Data.IDbDataAdapter" /> interface, you should implement the following constructors:  <list type="table"><listheader><term> Item  </term><description> Description  </description></listheader><item><term> PrvDataAdapter()  </term><description> Initializes a new instance of the PrvDataAdapter class.  </description></item><item><term> PrvDataAdapter(PrvCommand selectCommand)  </term><description> Initializes a new instance of the PrvDataAdapter class with the specified SQL SELECT statement.  </description></item><item><term> PrvDataAdapter(string selectCommandText, string selectConnectionString)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a connection string.  </description></item><item><term> PrvDataAdapter(string selectCommandText, PrvConnection selectConnection)  </term><description> Initializes a new instance of the PrvDataAdapter class with an SQL SELECT statement and a PrvConnection object.  </description></item></list></para>
        </span>
      </span>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6455-114">Obtiene o establece una instrucción SQL para eliminar registros del conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-114">Gets or sets an SQL statement for deleting records from the data set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6455-115">
            <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-115">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to delete records in the data source for deleted rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6455-116">Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> puede generar automáticamente si se establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="d6455-116">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="d6455-117">A continuación, se generan los comandos adicionales que no se establece CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="d6455-117">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="d6455-118">Esta lógica de generación requiere información de columna de clave esté presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="d6455-118">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="d6455-119">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="d6455-119">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="d6455-120">Cuando <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> se asigna a creada anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="d6455-120">When <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="d6455-121">El <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.IDbCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-121">The <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6455-122">En el ejemplo siguiente se crea una instancia de heredadas <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="d6455-122">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> properties.</span></span> <span data-ttu-id="d6455-123">Supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-123">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6455-124">Obtiene o establece una instrucción SQL utilizada para insertar nuevos registros en el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-124">Gets or sets an SQL statement used to insert new records into the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6455-125">
            <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-125">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to insert records in the data source for new rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6455-126">Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.IDbDataAdapter.InsertCommand%2A> puede generar automáticamente si se establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="d6455-126">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.InsertCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="d6455-127">A continuación, se generan los comandos adicionales que no se establece CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="d6455-127">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="d6455-128">Esta lógica de generación requiere información de columna de clave esté presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="d6455-128">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="d6455-129">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="d6455-129">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="d6455-130">Cuando <xref:System.Data.IDbDataAdapter.InsertCommand%2A> se asigna a creada anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="d6455-130">When <xref:System.Data.IDbDataAdapter.InsertCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="d6455-131">El <xref:System.Data.IDbDataAdapter.InsertCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.IDbCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-131">The <xref:System.Data.IDbDataAdapter.InsertCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6455-132">Si la ejecución de este comando devuelve filas, estas filas se pueden agregar a la <xref:System.Data.DataSet> según cómo configure el <xref:System.Data.IDbCommand.UpdatedRowSource%2A> propiedad de la <xref:System.Data.IDbCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-132">If execution of this command returns rows, these rows may be added to the <xref:System.Data.DataSet> depending on how you set the <xref:System.Data.IDbCommand.UpdatedRowSource%2A> property of the <xref:System.Data.IDbCommand> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6455-133">En el ejemplo siguiente se crea una instancia de heredadas <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="d6455-133">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="d6455-134">Supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-134">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6455-135">Obtiene o establece una instrucción SQL utilizada para seleccionar registros en el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-135">Gets or sets an SQL statement used to select records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6455-136">
            <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-136">An <see cref="T:System.Data.IDbCommand" /> that is used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to select records from data source for placement in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6455-137">Cuando <xref:System.Data.IDbDataAdapter.SelectCommand%2A> se asigna a creada anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="d6455-137">When <xref:System.Data.IDbDataAdapter.SelectCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="d6455-138">El <xref:System.Data.IDbDataAdapter.SelectCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.IDbCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-138">The <xref:System.Data.IDbDataAdapter.SelectCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
 <span data-ttu-id="d6455-139">Si el <xref:System.Data.IDbDataAdapter.SelectCommand%2A> no devuelve ninguna fila, no hay tablas se agregan a la <xref:System.Data.DataSet>, y no se genera ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="d6455-139">If the <xref:System.Data.IDbDataAdapter.SelectCommand%2A> does not return any rows, no tables are added to the <xref:System.Data.DataSet>, and no exception is raised.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6455-140">En el ejemplo siguiente se crea una instancia de heredadas <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="d6455-140">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> properties.</span></span> <span data-ttu-id="d6455-141">Supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-141">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Data.IDbCommand with get, set" Usage="System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d6455-142">Obtiene o establece una instrucción SQL utilizada para actualizar registros en el origen de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-142">Gets or sets an SQL statement used to update records in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d6455-143">
            <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d6455-143">An <see cref="T:System.Data.IDbCommand" /> used during <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> to update records in the data source for modified rows in the data set.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d6455-144">Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, el <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> puede generar automáticamente si se establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="d6455-144">During <xref:System.Data.Common.DbDataAdapter.Update%2A>, if this property is not set and primary key information is present in the <xref:System.Data.DataSet>, the <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> can be generated automatically if you set the `SelectCommand` property of a .NET Framework data provider.</span></span> <span data-ttu-id="d6455-145">A continuación, se generan los comandos adicionales que no se establece CommandBuilder.</span><span class="sxs-lookup"><span data-stu-id="d6455-145">Then, any additional commands that you do not set are generated by the CommandBuilder.</span></span> <span data-ttu-id="d6455-146">Esta lógica de generación requiere información de columna de clave esté presente en el <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="d6455-146">This generation logic requires key column information to be present in the <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="d6455-147">Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span><span class="sxs-lookup"><span data-stu-id="d6455-147">For more information see [Generating Commands with CommandBuilders](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).</span></span>  
  
 <span data-ttu-id="d6455-148">Cuando <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> se asigna a creada anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clona.</span><span class="sxs-lookup"><span data-stu-id="d6455-148">When <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> is assigned to a previously created <xref:System.Data.IDbCommand>, the <xref:System.Data.IDbCommand> is not cloned.</span></span> <span data-ttu-id="d6455-149">El <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> mantiene una referencia a la que se han creado anteriormente <xref:System.Data.IDbCommand> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-149">The <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> maintains a reference to the previously created <xref:System.Data.IDbCommand> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d6455-150">Si la ejecución de este comando devuelve filas, estas filas se agregan a la <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="d6455-150">If execution of this command returns rows, these rows are added to the <xref:System.Data.DataSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d6455-151">En el ejemplo siguiente se crea una instancia de heredadas <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="d6455-151">The following example creates an instance of the inherited <xref:System.Data.OleDb.OleDbDataAdapter> class, and sets the <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> and <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> properties.</span></span> <span data-ttu-id="d6455-152">Supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.</span><span class="sxs-lookup"><span data-stu-id="d6455-152">It assumes you have already created an <xref:System.Data.OleDb.OleDbConnection> object.</span></span>  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>