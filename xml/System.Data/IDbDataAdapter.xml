<Type Name="IDbDataAdapter" FullName="System.Data.IDbDataAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d5ad4617b21404fdfc9af0b0272a505fd2fb4f37" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30398319" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDbDataAdapter : System.Data.IDataAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbDataAdapter implements class System.Data.IDataAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbDataAdapter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbDataAdapter&#xA;Implements IDataAdapter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbDataAdapter : System::Data::IDataAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Data.IDataAdapter</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Representa un conjunto de propiedades relacionadas con comandos que se utilizan para rellenar <see cref="T:System.Data.DataSet" /> y actualizar un origen de datos, y la implementan los proveedores de datos de .NET Framework que tienen acceso a bases de datos relacionales.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.IDbDataAdapter> interfaz hereda de la <xref:System.Data.IDataAdapter> interfaz y permite que un objeto crear un objeto DataAdapter diseñado para su uso con una base de datos relacional. El <xref:System.Data.IDbDataAdapter> interfaz y, opcionalmente, la clase de utilidad, <xref:System.Data.Common.DbDataAdapter>, permiten que una clase heredera implemente una clase DataAdapter, que representa el puente entre un origen de datos y un <xref:System.Data.DataSet>. Para obtener más información sobre las clases DataAdapter, vea [llenar un DataSet desde un DataAdapter](~/docs/framework/data/adonet/populating-a-dataset-from-a-dataadapter.md). Para obtener más información acerca de cómo implementar proveedores de datos de .NET Framework, vea [ &#91; \<topic://cpconimplementingnetdataprovider >&#93;](http://msdn.microsoft.com/library/a9fa1926-071b-4c6f-997d-a16bac633852).  
  
 Una aplicación no crea una instancia de la <xref:System.Data.IDbDataAdapter> interfaz directamente, sino que crea una instancia de una clase que herede <xref:System.Data.IDbDataAdapter> y <xref:System.Data.Common.DbDataAdapter>.  
  
 Las clases que heredan <xref:System.Data.IDbDataAdapter> deben implementar los miembros heredados y suelen definir miembros adicionales para agregar la funcionalidad específica del proveedor. Por ejemplo, el <xref:System.Data.IDbDataAdapter> interfaz define el <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propiedad y el <xref:System.Data.Common.DbDataAdapter> interfaz define un <xref:System.Data.IDataAdapter.Fill%2A> método que toma un <xref:System.Data.DataTable> como un parámetro. A su vez, el <xref:System.Data.OleDb.OleDbDataAdapter> clase hereda el <xref:System.Data.IDbDataAdapter.SelectCommand%2A> propiedad y el <xref:System.Data.Common.DbDataAdapter.Fill%2A> método y también define dos sobrecargas adicionales de la <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A> método que toma un objeto ADO Recordset como parámetro.  
  
   
  
## Examples  
 El ejemplo siguiente utiliza las clases derivadas, <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlDataAdapter> y <xref:System.Data.SqlClient.SqlConnection>, para seleccionar los registros de un origen de datos. El relleno <xref:System.Data.DataSet> , a continuación, se devuelve. Para lograr esto, se pasa al método un inicializado <xref:System.Data.DataSet>, una cadena de conexión y una cadena de consulta que es una instrucción SELECT de Transact-SQL.  
  
 [!code-csharp[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlDataAdapter Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlDataAdapter Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Para promover la coherencia entre los proveedores de datos de .NET Framework, asigne el nombre de la clase de herencia en el formulario <paramref name="Prv" /> DataAdapter donde <paramref name="Prv" /> es el prefijo uniforme que se asigna a todas las clases en un espacio de nombres del proveedor de datos de .NET Framework específico. Por ejemplo, <paramref name="Sql" /> es el prefijo de la <see cref="T:System.Data.SqlClient.SqlDataAdapter" /> clase en el <see langword="System.Data.SqlClient" /> espacio de nombres.  
  
 Al heredar de la <see cref="T:System.Data.IDbDataAdapter" /> interfaz, debe implementar los siguientes constructores:  
  
 <list type="table"><listheader><term> Elemento  
  
 </term><description> Descripción  
  
 </description></listheader><item><term> PrvDataAdapter()  
  
 </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter.  
  
 </description></item><item><term> PrvDataAdapter (PrvCommand selectCommand)  
  
 </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter con la instrucción SELECT de SQL especificada.  
  
 </description></item><item><term> PrvDataAdapter (selectCommandText de cadena, cadena selectConnectionString)  
  
 </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter con una instrucción SELECT de SQL y una cadena de conexión.  
  
 </description></item><item><term> PrvDataAdapter (cadena selectCommandText, PrvConnection selectConnection)  
  
 </term><description> Inicializa una nueva instancia de la clase PrvDataAdapter con una instrucción SELECT de SQL y un objeto PrvConnection.  
  
 </description></item></list></para>
    </block>
  </Docs>
  <Members>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ DeleteCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instrucción SQL para eliminar registros del conjunto de datos.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para eliminar registros del origen de datos para filas eliminadas en el conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> puede generar automáticamente si se establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework. A continuación, se generan los comandos adicionales que no establecen CommandBuilder. Esta lógica de generación requiere información de columna de clave debe estar presente en el <xref:System.Data.DataSet>. Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Cuando <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> se asigna a creado anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clonan. El <xref:System.Data.IDbDataAdapter.DeleteCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.IDbCommand> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una instancia de los heredados <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.DeleteCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.DeleteCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.DeleteCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ InsertCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instrucción SQL utilizada para insertar nuevos registros en el origen de datos.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para insertar registros en el origen de datos para nuevas filas en el conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.InsertCommand%2A> puede generar automáticamente si se establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework. A continuación, se generan los comandos adicionales que no establecen CommandBuilder. Esta lógica de generación requiere información de columna de clave debe estar presente en el <xref:System.Data.DataSet>. Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Cuando <xref:System.Data.IDbDataAdapter.InsertCommand%2A> se asigna a creado anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clonan. El <xref:System.Data.IDbDataAdapter.InsertCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.IDbCommand> objeto.  
  
> [!NOTE]
>  Si la ejecución de este comando devuelve filas, estas filas pueden agregarse a la <xref:System.Data.DataSet> según cómo configure la <xref:System.Data.IDbCommand.UpdatedRowSource%2A> propiedad de la <xref:System.Data.IDbCommand> objeto.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una instancia de los heredados <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.InsertCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.InsertCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ SelectCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instrucción SQL utilizada para seleccionar registros en el origen de datos.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> que se utiliza mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para seleccionar registros del origen de datos para su colocación en el conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando <xref:System.Data.IDbDataAdapter.SelectCommand%2A> se asigna a creado anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clonan. El <xref:System.Data.IDbDataAdapter.SelectCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.IDbCommand> objeto.  
  
 Si el <xref:System.Data.IDbDataAdapter.SelectCommand%2A> no devuelve ninguna fila, ninguna de las tablas se agrega a la <xref:System.Data.DataSet>, y no se genera ninguna excepción.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una instancia de los heredados <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.InsertCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DbDataAdapter.SelectCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DbDataAdapter.SelectCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public System.Data.IDbCommand UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbCommand UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbDataAdapter.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As IDbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbCommand ^ UpdateCommand { System::Data::IDbCommand ^ get(); void set(System::Data::IDbCommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una instrucción SQL utilizada para actualizar registros en el origen de datos.</summary>
        <value>
          <see cref="T:System.Data.IDbCommand" /> utilizado mientras opera <see cref="M:System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)" /> para actualizar registros del origen de datos para filas modificadas en el conjunto de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durante la <xref:System.Data.Common.DbDataAdapter.Update%2A>, si no se establece esta propiedad y la información de clave principal está presente en el <xref:System.Data.DataSet>, <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> puede generar automáticamente si se establece la `SelectCommand` propiedad de un proveedor de datos de .NET Framework. A continuación, se generan los comandos adicionales que no establecen CommandBuilder. Esta lógica de generación requiere información de columna de clave debe estar presente en el <xref:System.Data.DataSet>. Para obtener más información, consulte [generar comandos con objetos CommandBuilder](~/docs/framework/data/adonet/generating-commands-with-commandbuilders.md).  
  
 Cuando <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> se asigna a creado anteriormente <xref:System.Data.IDbCommand>, el <xref:System.Data.IDbCommand> no se clonan. El <xref:System.Data.IDbDataAdapter.UpdateCommand%2A> mantiene una referencia a la que se han creado previamente <xref:System.Data.IDbCommand> objeto.  
  
> [!NOTE]
>  Si la ejecución de este comando devuelve filas, estas filas se agregan a la <xref:System.Data.DataSet>.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una instancia de los heredados <xref:System.Data.OleDb.OleDbDataAdapter> clase y se establece la <xref:System.Data.OleDb.OleDbDataAdapter.SelectCommand%2A> y <xref:System.Data.OleDb.OleDbDataAdapter.UpdateCommand%2A> propiedades. Se supone que ya ha creado un <xref:System.Data.OleDb.OleDbConnection> objeto.  
  
 [!code-csharp[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbDataAdapter.UpdateCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbDataAdapter.UpdateCommand Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>