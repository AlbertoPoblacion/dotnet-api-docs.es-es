<Type Name="DataColumn" FullName="System.Data.DataColumn">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c319d3c600dc2e2da64f51a76ba9219295794b79" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataColumn : System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataColumn extends System.ComponentModel.MarshalByValueComponent" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataColumn" />
  <TypeSignature Language="VB.NET" Value="Public Class DataColumn&#xA;Inherits MarshalByValueComponent" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataColumn : System::ComponentModel::MarshalByValueComponent" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.MarshalByValueComponent</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ColumnName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DesignTimeVisible(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.DataColumnEditor, Microsoft.VSDesigner, Version=0.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f48e1-101">Representa el esquema de una columna en una <see cref="T:System.Data.DataTable" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f48e1-101">Represents the schema of a column in a <see cref="T:System.Data.DataTable" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-102">El <xref:System.Data.DataColumn> es el bloque de creación fundamental para crear el esquema de un <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-102">The <xref:System.Data.DataColumn> is the fundamental building block for creating the schema of a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f48e1-103">Cree el esquema mediante la adición de uno o varios <xref:System.Data.DataColumn> objetos a la <xref:System.Data.DataColumnCollection>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-103">You build the schema by adding one or more <xref:System.Data.DataColumn> objects to the <xref:System.Data.DataColumnCollection>.</span></span> <span data-ttu-id="f48e1-104">Para obtener más información, consulte [agregar columnas a un objeto DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span><span class="sxs-lookup"><span data-stu-id="f48e1-104">For more information, see [Adding Columns to a DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-columns-to-a-datatable.md).</span></span>  
  
 <span data-ttu-id="f48e1-105">Cada <xref:System.Data.DataColumn> tiene un <xref:System.Data.DataColumn.DataType%2A> propiedad que determina el tipo de datos de la <xref:System.Data.DataColumn> contiene.</span><span class="sxs-lookup"><span data-stu-id="f48e1-105">Each <xref:System.Data.DataColumn> has a <xref:System.Data.DataColumn.DataType%2A> property that determines the kind of data the <xref:System.Data.DataColumn> contains.</span></span> <span data-ttu-id="f48e1-106">Por ejemplo, puede restringir el tipo de datos a enteros, cadenas o decimales.</span><span class="sxs-lookup"><span data-stu-id="f48e1-106">For example, you can restrict the data type to integers, or strings, or decimals.</span></span> <span data-ttu-id="f48e1-107">Dado que los datos que contiene el <xref:System.Data.DataTable> normalmente se combina en su origen de datos original, debe coincidir con los tipos de datos con los del origen de datos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-107">Because data that is contained by the <xref:System.Data.DataTable> is typically merged back into its original data source, you must match the data types to those in the data source.</span></span> <span data-ttu-id="f48e1-108">Para obtener más información, consulte [asignaciones de tipos de datos en ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span><span class="sxs-lookup"><span data-stu-id="f48e1-108">For more information, see [Data Type Mappings in ADO.NET](~/docs/framework/data/adonet/data-type-mappings-in-ado-net.md).</span></span>  
  
 <span data-ttu-id="f48e1-109">Propiedades como <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, y <xref:System.Data.DataColumn.ReadOnly%2A> colocar restricciones en la entrada y la actualización de datos, lo que contribuye a garantizar la integridad de los datos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-109">Properties such as <xref:System.Data.DataColumn.AllowDBNull%2A>, <xref:System.Data.DataColumn.Unique%2A>, and <xref:System.Data.DataColumn.ReadOnly%2A> put restrictions on the entry and updating of data, thereby helping to guarantee data integrity.</span></span> <span data-ttu-id="f48e1-110">También puede usar el <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, y <xref:System.Data.DataColumn.AutoIncrementStep%2A> propiedades para controlar la generación automática de los datos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-110">You can also use the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties to control automatic data generation.</span></span> <span data-ttu-id="f48e1-111">Para obtener más información acerca de <xref:System.Data.DataColumn.AutoIncrement%2A> columnas, consulte [crear columnas de incremento automático](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span><span class="sxs-lookup"><span data-stu-id="f48e1-111">For more information about <xref:System.Data.DataColumn.AutoIncrement%2A> columns, see [Creating AutoIncrement Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-autoincrement-columns.md).</span></span> <span data-ttu-id="f48e1-112">Para obtener más información, consulte [definir claves principales](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span><span class="sxs-lookup"><span data-stu-id="f48e1-112">For more information, see [Defining Primary Keys](~/docs/framework/data/adonet/dataset-datatable-dataview/defining-primary-keys.md).</span></span>  
  
 <span data-ttu-id="f48e1-113">También puede asegurarse de que los valores de un <xref:System.Data.DataColumn> son únicos mediante la creación de un <xref:System.Data.UniqueConstraint> y agregarla a la <xref:System.Data.ConstraintCollection> de la <xref:System.Data.DataTable> a la que el <xref:System.Data.DataColumn> pertenece.</span><span class="sxs-lookup"><span data-stu-id="f48e1-113">You can also make sure that values in a <xref:System.Data.DataColumn> are unique by creating a <xref:System.Data.UniqueConstraint> and adding it to the <xref:System.Data.ConstraintCollection> of the <xref:System.Data.DataTable> to which the <xref:System.Data.DataColumn> belongs.</span></span> <span data-ttu-id="f48e1-114">Para obtener más información, consulte [restricciones de DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span><span class="sxs-lookup"><span data-stu-id="f48e1-114">For more information, see [DataTable Constraints](~/docs/framework/data/adonet/dataset-datatable-dataview/datatable-constraints.md).</span></span>  
  
 <span data-ttu-id="f48e1-115">Para crear una relación entre <xref:System.Data.DataColumn> objetos, crear un <xref:System.Data.DataRelation> y agregarlo a la <xref:System.Data.DataRelationCollection> de un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-115">To create a relation between <xref:System.Data.DataColumn> objects, create a <xref:System.Data.DataRelation> object and add it to the <xref:System.Data.DataRelationCollection> of a <xref:System.Data.DataSet>.</span></span>  
  
 <span data-ttu-id="f48e1-116">Puede usar el <xref:System.Data.DataColumn.Expression%2A> propiedad de la <xref:System.Data.DataColumn> del objeto para calcular los valores en una columna o crear una columna agregada.</span><span class="sxs-lookup"><span data-stu-id="f48e1-116">You can use the <xref:System.Data.DataColumn.Expression%2A> property of the <xref:System.Data.DataColumn> object to calculate the values in a column, or create an aggregate column.</span></span> <span data-ttu-id="f48e1-117">Para obtener más información, consulte [crear columnas de expresión](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span><span class="sxs-lookup"><span data-stu-id="f48e1-117">For more information, see [Creating Expression Columns](~/docs/framework/data/adonet/dataset-datatable-dataview/creating-expression-columns.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-118">En el ejemplo siguiente se crea un <xref:System.Data.DataTable> con varios <xref:System.Data.DataColumn> objetos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-118">The following example creates a <xref:System.Data.DataTable> with several <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="f48e1-119">Este tipo es seguro para operaciones de lectura multiproceso.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f48e1-119">This type is safe for multithreaded read operations.</span>
      </span>
      <span data-ttu-id="f48e1-120">Debe sincronizar operaciones de escritura.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f48e1-120">You must synchronize any write operations.</span>
      </span>
    </threadsafe>
    <altmember cref="M:System.Data.DataColumnCollection.Add(System.Data.DataColumn)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="P:System.Data.DataTable.Constraints" />
    <altmember cref="T:System.Data.ConstraintCollection" />
    <altmember cref="T:System.Windows.Forms.DataGrid" />
    <altmember cref="T:System.Data.DataRow" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="T:System.Data.DataSet" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
    <altmember cref="T:System.Data.UniqueConstraint" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-121">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-121">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-122">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> como cadena de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-122">Initializes a new instance of a <see cref="T:System.Data.DataColumn" /> class as type string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-123">Cuando se crea, un <xref:System.Data.DataColumn> objeto no tiene ningún valor predeterminado <xref:System.Data.DataColumn.ColumnName%2A> o <xref:System.Data.DataColumn.Caption%2A>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-123">When created, a <xref:System.Data.DataColumn> object has no default <xref:System.Data.DataColumn.ColumnName%2A> or <xref:System.Data.DataColumn.Caption%2A>.</span></span> <span data-ttu-id="f48e1-124">Al agregarlo a un <xref:System.Data.DataColumnCollection>, se generará un nombre predeterminado ("Column1", "Columna2" y así sucesivamente) si no ha asignado un nombre para el <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-124">When you add it to a <xref:System.Data.DataColumnCollection>, a default name ("Column1", "Column2", and so on) will be generated if a name has not been assigned to the <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-125">En el ejemplo siguiente se crea un nuevo <xref:System.Data.DataColumn>, Establece varias propiedades y lo agrega a un <xref:System.Data.DataColumnCollection> para el <xref:System.Data.DataTable> objeto.</span><span class="sxs-lookup"><span data-stu-id="f48e1-125">The following example creates a new <xref:System.Data.DataColumn>, sets various properties, and adds it to a <xref:System.Data.DataColumnCollection> for the <xref:System.Data.DataTable> object.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="f48e1-126">Cadena que representa el nombre de la columna que se va a crear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-126">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="f48e1-127">Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-127">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48e1-128">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" />, como cadena de tipo, utilizando el nombre de columna especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-128">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class, as type string, using the specified column name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-129">De forma predeterminada, el nombre específico para una columna se convierte en la <xref:System.Data.DataColumn.Caption%2A> valor de propiedad.</span><span class="sxs-lookup"><span data-stu-id="f48e1-129">By default, the name specific to a column becomes the <xref:System.Data.DataColumn.Caption%2A> property value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-130">En el ejemplo siguiente se crea un nuevo <xref:System.Data.DataColumn> con un determinado <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-130">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="f48e1-131">Cadena que representa el nombre de la columna que se va a crear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-131">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="f48e1-132">Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-132">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="f48e1-133">
            <see cref="P:System.Data.DataColumn.DataType" /> compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-133">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48e1-134">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre de columna y el tipo de datos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-134">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified column name and data type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-135">En el ejemplo siguiente se crea un nuevo <xref:System.Data.DataColumn> con un determinado <xref:System.Data.DataColumn.ColumnName%2A> y <xref:System.Data.DataColumn.DataType%2A>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-135">The following example creates a new <xref:System.Data.DataColumn> with a specified <xref:System.Data.DataColumn.ColumnName%2A> and <xref:System.Data.DataColumn.DataType%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f48e1-136">No se ha especificado ningún <paramref name="dataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-136">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (columnName As String, dataType As Type, expr As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="f48e1-137">Cadena que representa el nombre de la columna que se va a crear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-137">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="f48e1-138">Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-138">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="f48e1-139">
            <see cref="P:System.Data.DataColumn.DataType" /> compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-139">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="f48e1-140">Expresión utilizada para crear esta columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-140">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="f48e1-141">Para obtener más información, vea la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-141">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48e1-142">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre, el tipo de datos y la expresión especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-142">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, and expression.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-143">En el ejemplo siguiente se crea una columna calculada.</span><span class="sxs-lookup"><span data-stu-id="f48e1-143">The following example creates a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f48e1-144">No se ha especificado ningún <paramref name="dataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-144">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataColumn (string columnName, Type dataType, string expr, System.Data.MappingType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string columnName, class System.Type dataType, string expr, valuetype System.Data.MappingType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.#ctor(System.String,System.Type,System.String,System.Data.MappingType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataColumn(System::String ^ columnName, Type ^ dataType, System::String ^ expr, System::Data::MappingType type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="dataType" Type="System.Type" />
        <Parameter Name="expr" Type="System.String" />
        <Parameter Name="type" Type="System.Data.MappingType" />
      </Parameters>
      <Docs>
        <param name="columnName">
          <span data-ttu-id="f48e1-145">Cadena que representa el nombre de la columna que se va a crear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-145">A string that represents the name of the column to be created.</span>
          </span>
          <span data-ttu-id="f48e1-146">Si se establece en <see langword="null" /> o en una cadena vacía (""), cuando se agregue a la colección de columnas se especificará un nombre predeterminado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-146">If set to <see langword="null" /> or an empty string (""), a default name will be specified when added to the columns collection.</span>
          </span>
        </param>
        <param name="dataType">
          <span data-ttu-id="f48e1-147">
            <see cref="P:System.Data.DataColumn.DataType" /> compatible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-147">A supported <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </param>
        <param name="expr">
          <span data-ttu-id="f48e1-148">Expresión utilizada para crear esta columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-148">The expression used to create this column.</span>
          </span>
          <span data-ttu-id="f48e1-149">Para obtener más información, vea la propiedad <see cref="P:System.Data.DataColumn.Expression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-149">For more information, see the <see cref="P:System.Data.DataColumn.Expression" /> property.</span>
          </span>
        </param>
        <param name="type">
          <span data-ttu-id="f48e1-150">Uno de los valores de <see cref="T:System.Data.MappingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-150">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48e1-151">Inicializa una nueva instancia de la clase <see cref="T:System.Data.DataColumn" /> con el nombre, el tipo de datos, la expresión y un valor que determina si la columna es un atributo; todos ellos especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-151">Initializes a new instance of the <see cref="T:System.Data.DataColumn" /> class using the specified name, data type, expression, and value that determines whether the column is an attribute.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-152">El `type` argumento establece la <xref:System.Data.DataColumn.ColumnMapping%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f48e1-152">The `type` argument sets the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span> <span data-ttu-id="f48e1-153">La propiedad especifica cómo un <xref:System.Data.DataColumn> cuando se ha asignado un <xref:System.Data.DataSet> se transforma en un documento XML.</span><span class="sxs-lookup"><span data-stu-id="f48e1-153">The property specifies how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is transformed into an XML document.</span></span> <span data-ttu-id="f48e1-154">Por ejemplo, si la columna se denomina "fName", y el valor que contiene es "Bob", y `type` se establece en `MappingType.Attribute`, el elemento XML sería como sigue:</span><span class="sxs-lookup"><span data-stu-id="f48e1-154">For example, if the column is named "fName," and the value it contains is "Bob," and `type` is set to `MappingType.Attribute`, the XML element would be as follows:</span></span>  
  
 <span data-ttu-id="f48e1-155">\<Nombre fName = 'Bob' / ></span><span class="sxs-lookup"><span data-stu-id="f48e1-155">\<Name fName = 'Bob'/></span></span>  
  
 <span data-ttu-id="f48e1-156">Para obtener más información sobre cómo se asignan columnas a elementos o atributos, vea la <xref:System.Data.DataColumn.ColumnMapping%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f48e1-156">For more information about how columns are mapped to elements or attributes, see the <xref:System.Data.DataColumn.ColumnMapping%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-157">En el ejemplo siguiente se crea una columna calculada.</span><span class="sxs-lookup"><span data-stu-id="f48e1-157">The following example constructs a computed column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataColumn4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataColumn4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f48e1-158">No se ha especificado ningún <paramref name="dataType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-158">No <paramref name="dataType" /> was specified.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
        <altmember cref="P:System.Data.DataColumn.ColumnMapping" />
        <altmember cref="P:System.Data.DataColumn.Caption" />
        <altmember cref="P:System.Data.DataColumn.DefaultValue" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="P:System.Data.DataColumn.DataType" />
      </Docs>
    </Member>
    <Member MemberName="AllowDBNull">
      <MemberSignature Language="C#" Value="public bool AllowDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AllowDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDBNull { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-159">Obtiene o establece un valor que indica si en esta columna se permiten valores null para las filas que pertenecen a la tabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-159">Gets or sets a value that indicates whether null values are allowed in this column for rows that belong to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-160">
            <see langword="true" /> si se permiten valores nulos; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-160">
              <see langword="true" /> if null values values are allowed; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f48e1-161">El valor predeterminado es <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-161">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-162">En el ejemplo siguiente se crea un nuevo <xref:System.Data.DataColumn> y establece su <xref:System.Data.DataColumn.AllowDBNull%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-162">The following example creates a new <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.AllowDBNull%2A> property to `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AllowDBNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AllowDBNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Unique" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrement">
      <MemberSignature Language="C#" Value="public bool AutoIncrement { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoIncrement" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrement" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoIncrement { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-163">Obtiene o establece un valor que indica si la columna incrementa automáticamente el valor de la columna para las nuevas filas que se agregan a la tabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-163">Gets or sets a value that indicates whether the column automatically increments the value of the column for new rows added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-164">
            <see langword="true" /> si el valor de la columna se incrementa automáticamente; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-164">
              <see langword="true" /> if the value of the column increments automatically; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f48e1-165">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-165">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-166">Si el tipo de esta columna no es Int16, Int32 o Int64 cuando se establece esta propiedad, el <xref:System.Data.DataColumn.DataType%2A> propiedad se convierte a Int32.</span><span class="sxs-lookup"><span data-stu-id="f48e1-166">If the type of this column is not Int16, Int32, or Int64 when this property is set, the <xref:System.Data.DataColumn.DataType%2A> property is coerced to Int32.</span></span> <span data-ttu-id="f48e1-167">Si se trata de una columna calculada, se genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="f48e1-167">An exception is generated if this is a computed column.</span></span> <span data-ttu-id="f48e1-168">El <xref:System.Data.DataColumn.Expression%2A> se establece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="f48e1-168">The <xref:System.Data.DataColumn.Expression%2A> property is set.</span></span> <span data-ttu-id="f48e1-169">El valor incrementado se utiliza sólo si el valor de la fila para esta columna, cuando se agrega a la colección de columnas es igual al valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="f48e1-169">The incremented value is used only if the row's value for this column, when added to the columns collection, is equal to the default value.</span></span>  
  
 <span data-ttu-id="f48e1-170">Puede crear una nueva fila utilizando el <xref:System.Data.DataRow.ItemArray%2A> propiedad de la <xref:System.Data.DataRow> clase y pasar una matriz de valores.</span><span class="sxs-lookup"><span data-stu-id="f48e1-170">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing in an array of values.</span></span> <span data-ttu-id="f48e1-171">Se trata de un posible problema para una columna con su <xref:System.Data.DataColumn.AutoIncrement%2A> establecido en `true`, ya que su valor se genera automáticamente.</span><span class="sxs-lookup"><span data-stu-id="f48e1-171">This is a potential problem for a column with its <xref:System.Data.DataColumn.AutoIncrement%2A> set to `true`, because its value is generated automatically.</span></span> <span data-ttu-id="f48e1-172">Para usar el <xref:System.Data.DataRow.ItemArray%2A> propiedad, contexto `null` en la posición de la columna en la matriz.</span><span class="sxs-lookup"><span data-stu-id="f48e1-172">To use the <xref:System.Data.DataRow.ItemArray%2A> property, place `null` in the column's position in the array.</span></span> <span data-ttu-id="f48e1-173">Para obtener más información, consulte el <xref:System.Data.DataRow.ItemArray%2A> propiedad de la <xref:System.Data.DataRow> clase.</span><span class="sxs-lookup"><span data-stu-id="f48e1-173">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class.</span></span>  
  
 <span data-ttu-id="f48e1-174">Si el tipo de la columna es <xref:System.Data.SqlTypes.SqlInt16> o <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> no funcionará.</span><span class="sxs-lookup"><span data-stu-id="f48e1-174">If the type of the column is <xref:System.Data.SqlTypes.SqlInt16> or <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.DataColumn.AutoIncrement%2A> will not work.</span></span> <span data-ttu-id="f48e1-175">Utilice Int16 o Int32 en su lugar.</span><span class="sxs-lookup"><span data-stu-id="f48e1-175">Use Int16 or Int32 instead.</span></span>  
  
 <span data-ttu-id="f48e1-176">Si el tipo de la columna es <xref:System.Data.SqlTypes.SqlInt64> o <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> funcionará solo parcialmente.</span><span class="sxs-lookup"><span data-stu-id="f48e1-176">If the type of the column is <xref:System.Data.SqlTypes.SqlInt64> or <xref:System.Data.SqlTypes.SqlDecimal>, <xref:System.Data.DataColumn.AutoIncrement%2A> will only partially work.</span></span> <span data-ttu-id="f48e1-177">Utilice Int64 o Decimal en su lugar.</span><span class="sxs-lookup"><span data-stu-id="f48e1-177">Use Int64 or Decimal instead.</span></span>  
  
 <span data-ttu-id="f48e1-178">Cuando el <xref:System.Data.DataColumn.AutoIncrementStep%2A> valor se agrega al valor actual, se suprime la comprobación de desbordamiento.</span><span class="sxs-lookup"><span data-stu-id="f48e1-178">When the <xref:System.Data.DataColumn.AutoIncrementStep%2A> value is added to the current value, the overflow check is suppressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-179">El ejemplo siguiente se establece la <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, y <xref:System.Data.DataColumn.AutoIncrementStep%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="f48e1-179">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-180">La columna es una columna calculada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-180">The column is a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementSeed">
      <MemberSignature Language="C#" Value="public long AutoIncrementSeed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementSeed" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementSeed" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementSeed As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementSeed { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-181">Obtiene o establece el valor inicial de una columna cuya propiedad <see cref="P:System.Data.DataColumn.AutoIncrement" /> está establecida en <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-181">Gets or sets the starting value for a column that has its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
          <span data-ttu-id="f48e1-182">El valor predeterminado es 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-182">The default is 0.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-183">Valor inicial para la característica <see cref="P:System.Data.DataColumn.AutoIncrement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-183">The starting value for the <see cref="P:System.Data.DataColumn.AutoIncrement" /> feature.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-184">El ejemplo siguiente se establece la <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, y <xref:System.Data.DataColumn.AutoIncrementStep%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="f48e1-184">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementStep" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="AutoIncrementStep">
      <MemberSignature Language="C#" Value="public long AutoIncrementStep { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AutoIncrementStep" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.AutoIncrementStep" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoIncrementStep As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long AutoIncrementStep { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-185">Obtiene o establece el incremento utilizado por una columna cuya propiedad <see cref="P:System.Data.DataColumn.AutoIncrement" /> está establecida en <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-185">Gets or sets the increment used by a column with its <see cref="P:System.Data.DataColumn.AutoIncrement" /> property set to <see langword="true" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-186">Número con el que se incrementa automáticamente el valor de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-186">The number by which the value of the column is automatically incremented.</span>
          </span>
          <span data-ttu-id="f48e1-187">El valor predeterminado es 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-187">The default is 1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-188">El ejemplo siguiente se establece la <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, y <xref:System.Data.DataColumn.AutoIncrementStep%2A> propiedades.</span><span class="sxs-lookup"><span data-stu-id="f48e1-188">The following example sets the <xref:System.Data.DataColumn.AutoIncrement%2A>, <xref:System.Data.DataColumn.AutoIncrementSeed%2A>, and <xref:System.Data.DataColumn.AutoIncrementStep%2A> properties.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.AutoIncrementSeed Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.AutoIncrementSeed Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-189">El valor está establecido en cero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-189">The value set is zero.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrementSeed" />
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-190">Obtiene o establece el título de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-190">Gets or sets the caption for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-191">Título de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-191">The caption of the column.</span>
          </span>
          <span data-ttu-id="f48e1-192">Si no está establecido, devuelve el valor <see cref="P:System.Data.DataColumn.ColumnName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-192">If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName" /> value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-193">Puede usar el <xref:System.Data.DataColumn.Caption%2A> propiedad que se va a mostrar un nombre descriptivo para un <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-193">You can use the <xref:System.Data.DataColumn.Caption%2A> property to display a descriptive or friendly name for a <xref:System.Data.DataColumn>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-194">En el ejemplo siguiente se crea un nuevo <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-194">The following example creates a new <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f48e1-195">A continuación, agrega tres <xref:System.Data.DataColumn> objetos a un <xref:System.Data.DataColumnCollection> y establece la <xref:System.Data.DataColumn.Caption%2A> propiedad para cada <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-195">It then adds three <xref:System.Data.DataColumn> objects to a <xref:System.Data.DataColumnCollection> and sets the <xref:System.Data.DataColumn.Caption%2A> property for each <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Caption Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Caption Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="CheckNotAllowNull">
      <MemberSignature Language="C#" Value="protected internal void CheckNotAllowNull ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void CheckNotAllowNull() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckNotAllowNull" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub CheckNotAllowNull ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void CheckNotAllowNull();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-196">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-196">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckUnique">
      <MemberSignature Language="C#" Value="protected void CheckUnique ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void CheckUnique() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.CheckUnique" />
      <MemberSignature Language="VB.NET" Value="Protected Sub CheckUnique ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void CheckUnique();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-197">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-197">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnMapping">
      <MemberSignature Language="C#" Value="public virtual System.Data.MappingType ColumnMapping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.MappingType ColumnMapping" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnMapping" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ColumnMapping As MappingType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Data::MappingType ColumnMapping { System::Data::MappingType get(); void set(System::Data::MappingType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.MappingType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-198">Obtiene o establece el <see cref="T:System.Data.MappingType" /> de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-198">Gets or sets the <see cref="T:System.Data.MappingType" /> of the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-199">Uno de los valores de <see cref="T:System.Data.MappingType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-199">One of the <see cref="T:System.Data.MappingType" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-200">El <xref:System.Data.DataColumn.ColumnMapping%2A> propiedad determina cómo un <xref:System.Data.DataColumn> se asigna cuando un <xref:System.Data.DataSet> se guarda como un documento XML utilizando el <xref:System.Data.DataSet.WriteXml%2A> método.</span><span class="sxs-lookup"><span data-stu-id="f48e1-200">The <xref:System.Data.DataColumn.ColumnMapping%2A> property determines how a <xref:System.Data.DataColumn> is mapped when a <xref:System.Data.DataSet> is saved as an XML document using the <xref:System.Data.DataSet.WriteXml%2A> method.</span></span>  
  
 <span data-ttu-id="f48e1-201">Por ejemplo, si un <xref:System.Data.DataColumn> se denomina "customerID" y su <xref:System.Data.DataColumn.ColumnMapping%2A> propiedad está establecida en `MappingType.Element`, el valor de columna producirá el siguiente código XML:</span><span class="sxs-lookup"><span data-stu-id="f48e1-201">For example, if a <xref:System.Data.DataColumn> is named "customerID," and its <xref:System.Data.DataColumn.ColumnMapping%2A> property is set to `MappingType.Element`, the column value will produce the following XML:</span></span>  
  
```  
<Customers>  
 <customerID>ALFKI</customerID>  
......  
 </Customers>  
 <Orders>  
 <OrderID>12345</OrderID>  
 <customerID>ALFKI</customerID>  
......  
 </Orders>  
```  
  
 <span data-ttu-id="f48e1-202">Sin embargo, si la misma columna se asigna a `MappingType.Attribute`, se genera el siguiente código XML:</span><span class="sxs-lookup"><span data-stu-id="f48e1-202">However, if the same column is mapped to `MappingType.Attribute`, the following XML is produced:</span></span>  
  
```  
<Customers customerID="ALFKI"........more attributes.....>  
 <Order orderID="1234"....more attributes..../>  
 <Order orderID="1234"....more attributes..../>  
...... More orders for this customer  
 </Customers>  
```  
  
 <span data-ttu-id="f48e1-203">Use la <xref:System.Data.DataColumn.%23ctor%2A> constructor que contiene el `type` argumento para especificar cómo el <xref:System.Data.DataColumn> se asigna cuando su <xref:System.Data.DataSet> se transforma en un documento XML.</span><span class="sxs-lookup"><span data-stu-id="f48e1-203">Use the <xref:System.Data.DataColumn.%23ctor%2A> constructor that contains the `type` argument to specificy how the <xref:System.Data.DataColumn> is mapped when its <xref:System.Data.DataSet> is transformed to an XML document.</span></span>  
  
 <span data-ttu-id="f48e1-204">El <xref:System.Data.DataColumn.ColumnMapping%2A> propiedad se corresponde con el argumento del constructor `type`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-204">The <xref:System.Data.DataColumn.ColumnMapping%2A> property corresponds to the constructor argument `type`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-205">El ejemplo siguiente se establece la <xref:System.Data.DataColumn.ColumnMapping%2A> type (propiedad) de nuevo <xref:System.Data.DataColumn>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-205">The following example sets the <xref:System.Data.DataColumn.ColumnMapping%2A> type property of new <xref:System.Data.DataColumn>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnMapping Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnMapping Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnName">
      <MemberSignature Language="C#" Value="public string ColumnName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ColumnName" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ColumnName" />
      <MemberSignature Language="VB.NET" Value="Public Property ColumnName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ColumnName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-206">Obtiene o establece el nombre de la columna en el <see cref="T:System.Data.DataColumnCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-206">Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-207">El nombre de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-207">The name of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-208">Cuando un <xref:System.Data.DataColumn> está creado, éste no tiene ningún <xref:System.Data.DataColumn.ColumnName%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="f48e1-208">When a <xref:System.Data.DataColumn> is created, it has no <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span> <span data-ttu-id="f48e1-209">Sin embargo, cuando la <xref:System.Data.DataColumn> se agrega a un <xref:System.Data.DataColumnCollection> para un <xref:System.Data.DataTable> de objeto, se recibe un nombre predeterminado ("Column1", "Columna2" y así sucesivamente).</span><span class="sxs-lookup"><span data-stu-id="f48e1-209">However, when the <xref:System.Data.DataColumn> is added to a <xref:System.Data.DataColumnCollection> for a <xref:System.Data.DataTable> object, it is given a default name ("Column1", "Column2", and so on).</span></span>  
  
 <span data-ttu-id="f48e1-210">De forma predeterminada, el <xref:System.Data.DataColumn.Caption%2A> valor se establece en el <xref:System.Data.DataColumn.ColumnName%2A> valor.</span><span class="sxs-lookup"><span data-stu-id="f48e1-210">By default, the <xref:System.Data.DataColumn.Caption%2A> value is set to the <xref:System.Data.DataColumn.ColumnName%2A> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-211">El ejemplo siguiente se obtiene la <xref:System.Data.DataColumn.ColumnName%2A> para cada columna de cada tabla en un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-211">The following examples gets the <xref:System.Data.DataColumn.ColumnName%2A> for every column in every table in a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f48e1-212">El ejemplo también muestra cómo crear un <xref:System.Data.DataColumn> con un nuevo <xref:System.Data.DataColumn.ColumnName%2A>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-212">The example also shows how to create a <xref:System.Data.DataColumn> with a new <xref:System.Data.DataColumn.ColumnName%2A>.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ColumnName Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ColumnName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-213">La propiedad se establece en <see langword="null" /> o es una cadena vacía y la columna pertenece a una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-213">The property is set to <see langword="null" /> or an empty string and the column belongs to a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.Data.DuplicateNameException">
          <span data-ttu-id="f48e1-214">Ya existe una columna con el mismo nombre en la colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-214">A column with the same name already exists in the collection.</span>
          </span>
          <span data-ttu-id="f48e1-215">La comparación de nombres no distingue entre mayúsculas y minúsculas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-215">The name comparison is not case sensitive.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Caption" />
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public Type DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DataType" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DataType { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.ColumnTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-216">Obtiene o establece el tipo de datos almacenados en la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-216">Gets or sets the type of data stored in the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-217">Objeto <see cref="T:System.Type" /> que representa el tipo de datos de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-217">A <see cref="T:System.Type" /> object that represents the column data type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-218">Establecer el <xref:System.Data.DataColumn.DataType%2A> valor es muy importante para garantizar la correcta creación y actualización de datos en un origen de datos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-218">Setting the <xref:System.Data.DataColumn.DataType%2A> value is very important to guaranteeing the correct creation and updating of data in a data source.</span></span>  
  
 <span data-ttu-id="f48e1-219">El <xref:System.Data.DataColumn.DataType%2A> propiedad admite los siguientes tipos de datos base de .NET Framework:</span><span class="sxs-lookup"><span data-stu-id="f48e1-219">The <xref:System.Data.DataColumn.DataType%2A> property supports the following base .NET Framework data types:</span></span>  
  
-   <xref:System.Boolean>  
  
-   <xref:System.Byte>  
  
-   <xref:System.Char>  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Double>  
  
-   <xref:System.Guid>  
  
-   <xref:System.Int16>  
  
-   <xref:System.Int32>  
  
-   <xref:System.Int64>  
  
-   <xref:System.SByte>  
  
-   <xref:System.Single>  
  
-   <xref:System.String>  
  
-   <xref:System.TimeSpan>  
  
-   <xref:System.UInt16>  
  
-   <xref:System.UInt32>  
  
-   <xref:System.UInt64>  
  
 <span data-ttu-id="f48e1-220">así como el tipo de matriz siguientes:</span><span class="sxs-lookup"><span data-stu-id="f48e1-220">as well as the following array type:</span></span>  
  
-   `Byte[]`  
  
 <span data-ttu-id="f48e1-221">Al cambiar esta propiedad después de la columna haya empezado a almacenar datos, se genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="f48e1-221">An exception is generated when changing this property after the column has begun storing data.</span></span>  
  
 <span data-ttu-id="f48e1-222">Si <xref:System.Data.DataColumn.AutoIncrement%2A> está establecido en `true` antes de establecer el <xref:System.Data.DataColumn.DataType%2A> propiedad y se intenta establecer el tipo en cualquier valor excepto un tipo entero, se genera una excepción.</span><span class="sxs-lookup"><span data-stu-id="f48e1-222">If <xref:System.Data.DataColumn.AutoIncrement%2A> is set to `true` before setting the <xref:System.Data.DataColumn.DataType%2A> property, and you try to set the type to anything except an integer type, an exception is generated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f48e1-223">Una columna de tipo de datos `Byte[]` requiere un tratamiento especial en ciertos casos, ya que, a diferencia de los tipos base de datos de .NET Framework, es un tipo de datos de referencia.</span><span class="sxs-lookup"><span data-stu-id="f48e1-223">A column of data type `Byte[]` requires special treatment in certain cases since, unlike the base .NET Framework data types, it is a reference data type.</span></span> <span data-ttu-id="f48e1-224">Si una columna de tipo de datos `Byte[]` se utiliza como un <xref:System.Data.DataTable.PrimaryKey%2A>, o como un <xref:System.Data.DataView.Sort%2A> o <xref:System.Data.DataView.RowFilter%2A> clave para un <xref:System.Data.DataView>, cualquier cambio en el valor de columna debe implicar asignar la `Byte[]` valor de la columna a una instancia por separado `Byte[]` objeto.</span><span class="sxs-lookup"><span data-stu-id="f48e1-224">If a column of data type `Byte[]` is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or <xref:System.Data.DataView.RowFilter%2A> key for a <xref:System.Data.DataView>, any change to the column value must involve assigning the `Byte[]` column value to a separately instantiated `Byte[]` object.</span></span> <span data-ttu-id="f48e1-225">Esta asignación es necesaria para desencadenar la actualización de los índices internos utilizados por ordenar, filtrar y operaciones de clave principales.</span><span class="sxs-lookup"><span data-stu-id="f48e1-225">This assignment is required to trigger the update of the internal indexes used by sorting, filtering, and primary key operations.</span></span> <span data-ttu-id="f48e1-226">Esto se muestra en el ejemplo siguiente:</span><span class="sxs-lookup"><span data-stu-id="f48e1-226">This is illustrated by the following example:</span></span>  
  
```  
byte[] columnValue = (byte[])myDataTable.Rows[0][0];  
byte[] newValue = (byte[])columnValue.Clone();  
newValue[1] = 2;  
myDataTable.Rows[0][0] = newValue;  
```  
  
> [!NOTE]
>  <span data-ttu-id="f48e1-227">Aunque es posible definir una columna como tipo de datos distinto de los tipos base de datos de .NET Framework y `Byte[]`, este tipo de columna se tratará como un tipo definido por el usuario, sujeto a las siguientes restricciones de uso.</span><span class="sxs-lookup"><span data-stu-id="f48e1-227">Although it is possible to define a column as data type other than the base .NET Framework data types and `Byte[]`, such a column will be treated as a user-defined type, subject to the following usage restrictions.</span></span> <span data-ttu-id="f48e1-228">(Para obtener más información sobre tipos definidos por el usuario, consulte [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span><span class="sxs-lookup"><span data-stu-id="f48e1-228">(For more information on user-defined types, see [Creating and Using User-Defined Types](http://msdn.microsoft.com/library/ec0266d2-7e5b-47e4-938a-85ac9d04fa40).)</span></span>  
  
-   <span data-ttu-id="f48e1-229">La columna no puede formar parte de un <xref:System.Data.DataView.RowFilter%2A> o <xref:System.Data.DataTable.Select%2A> expresión.</span><span class="sxs-lookup"><span data-stu-id="f48e1-229">The column cannot be part of a <xref:System.Data.DataView.RowFilter%2A> or <xref:System.Data.DataTable.Select%2A> expression.</span></span>  
  
-   <span data-ttu-id="f48e1-230">Si la columna se utiliza como un <xref:System.Data.DataTable.PrimaryKey%2A>, o como un <xref:System.Data.DataView.Sort%2A> o para un <xref:System.Data.DataView>, deben tratarse como un campo inmutable; no se debe cambiar la columna de datos una vez que se ha agregado a la tabla.</span><span class="sxs-lookup"><span data-stu-id="f48e1-230">If the column is used as a <xref:System.Data.DataTable.PrimaryKey%2A>, or as a <xref:System.Data.DataView.Sort%2A> or for a <xref:System.Data.DataView>, it must be treated as an immutable field; the column data must not be changed once it has been added to the table.</span></span>  
  
-   <span data-ttu-id="f48e1-231">Su <xref:System.Data.DataColumn.ColumnMapping%2A> sólo se puede establecer en `MappingType.Element`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-231">Its <xref:System.Data.DataColumn.ColumnMapping%2A> can be only set to `MappingType.Element`.</span></span>  
  
-   <span data-ttu-id="f48e1-232">La clase que implementa debe ser el tipo de datos de la columna se debe marcar con el <xref:System.SerializableAttribute>, y si es necesario implementa el <xref:System.Runtime.Serialization.ISerializable> o <xref:System.Xml.Serialization.IXmlSerializable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="f48e1-232">The class that implements the column’s data type must be must be marked with the <xref:System.SerializableAttribute>, and if necessary implement the <xref:System.Runtime.Serialization.ISerializable> or <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
-   <span data-ttu-id="f48e1-233">Compatibilidad con seguimiento de cambios es limitada.</span><span class="sxs-lookup"><span data-stu-id="f48e1-233">Support for change tracking is limited.</span></span> <span data-ttu-id="f48e1-234">Para utilizar el <xref:System.Data.DataTable> mecanismo de seguimiento de cambios de la clase, la clase que implementa el tipo de datos de la columna debe implementar la <xref:System.ComponentModel.IChangeTracking> interfaz o asumir la responsabilidad de informar a la <xref:System.Data.DataRow> cuando se ha modificado el valor de columna, ya sea mediante una llamada a <xref:System.Data.DataRow.SetModified%2A> en la fila o asignando el objeto de valor de columna a un objeto de valor de columna instancias por separado.</span><span class="sxs-lookup"><span data-stu-id="f48e1-234">To utilize the <xref:System.Data.DataTable> class’s change tracking mechanism, the class that implements the column’s data type must either implement the <xref:System.ComponentModel.IChangeTracking> interface, or take over the responsibility for informing the <xref:System.Data.DataRow> when the column value has been modified, either by calling <xref:System.Data.DataRow.SetModified%2A> on the row or by assigning the column value object to a separately instantiated column value object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-235">En el ejemplo siguiente se agrega columnas de varios tipos de datos a un <xref:System.Data.DataTable>y, a continuación, agrega una fila a la tabla.</span><span class="sxs-lookup"><span data-stu-id="f48e1-235">The following example adds columns of several data types to a <xref:System.Data.DataTable>, and then adds one row to the table.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.DataType Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DataType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-236">La columna ya tiene datos almacenados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-236">The column already has data stored.</span>
          </span>
        </exception>
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Type.GetType" />
      </Docs>
    </Member>
    <Member MemberName="DateTimeMode">
      <MemberSignature Language="C#" Value="public System.Data.DataSetDateTime DateTimeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataSetDateTime DateTimeMode" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DateTimeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DateTimeMode As DataSetDateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataSetDateTime DateTimeMode { System::Data::DataSetDateTime get(); void set(System::Data::DataSetDateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataSetDateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-237">Obtiene o establece la propiedad <see langword="DateTimeMode" /> para la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-237">Gets or sets the <see langword="DateTimeMode" /> for the column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-238">Enumeración <see cref="T:System.Data.DataSetDateTime" /> para la columna especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-238">The <see cref="T:System.Data.DataSetDateTime" /> for the specified column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-239">El <xref:System.Data.DataColumn.DateTimeMode%2A> no se puede modificar después de que se agregan filas a una <xref:System.Data.DataColumn>, salvo para cambiar de <xref:System.Data.DataSetDateTime.Unspecified> y <xref:System.Data.DataSetDateTime.UnspecifiedLocal> o viceversa.</span><span class="sxs-lookup"><span data-stu-id="f48e1-239">The <xref:System.Data.DataColumn.DateTimeMode%2A> cannot be modified after rows are added to a <xref:System.Data.DataColumn>, except for modifying from <xref:System.Data.DataSetDateTime.Unspecified> and <xref:System.Data.DataSetDateTime.UnspecifiedLocal> or vice-versa.</span></span> <span data-ttu-id="f48e1-240">La modificación de `UnspecifiedLocal` a `Unspecified` y viceversa está permitida porque la diferencia entre estas dos opciones sólo durante la serialización y no afectan al almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="f48e1-240">The modification from `UnspecifiedLocal` to `Unspecified` and vice-versa is allowed as the difference between these two options is only during serialization and does not affect the storage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public object DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DefaultValue { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Data.DefaultValueTypeConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-241">Obtiene o establece el valor predeterminado para la columna al crear nuevas filas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-241">Gets or sets the default value for the column when you are creating new rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-242">Valor correspondiente al <see cref="P:System.Data.DataColumn.DataType" /> de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-242">A value appropriate to the column's <see cref="P:System.Data.DataColumn.DataType" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-243">Un valor predeterminado es el valor que se asigna automáticamente a la columna cuando una <xref:System.Data.DataRow> se crea (por ejemplo, la fecha y hora cuando el <xref:System.Data.DataRow> se creó.</span><span class="sxs-lookup"><span data-stu-id="f48e1-243">A default value is the value that is automatically assigned to the column when a <xref:System.Data.DataRow> is created (for example, the date and time when the <xref:System.Data.DataRow> was created.</span></span>  
  
 <span data-ttu-id="f48e1-244">Cuando <xref:System.Data.DataColumn.AutoIncrement%2A> se establece en true, no puede haber ningún valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="f48e1-244">When <xref:System.Data.DataColumn.AutoIncrement%2A> is set to true, there can be no default value.</span></span>  
  
 <span data-ttu-id="f48e1-245">Puede crear una nueva fila utilizando el <xref:System.Data.DataRow.ItemArray%2A> propiedad de la <xref:System.Data.DataRow> clase y pasando al método una matriz de valores.</span><span class="sxs-lookup"><span data-stu-id="f48e1-245">You can create a new row using the <xref:System.Data.DataRow.ItemArray%2A> property of the <xref:System.Data.DataRow> class and passing the method an array of values.</span></span> <span data-ttu-id="f48e1-246">Se trata de un problema potencial para una columna con un valor predeterminado porque su valor se genera automáticamente.</span><span class="sxs-lookup"><span data-stu-id="f48e1-246">This is a potential problem for a column with a default value because its value is generated automatically.</span></span> <span data-ttu-id="f48e1-247">Para usar el <xref:System.Data.DataRow.ItemArray%2A> propiedad con este tipo de columna, colocar `null` en la posición de la columna en la matriz.</span><span class="sxs-lookup"><span data-stu-id="f48e1-247">To use the <xref:System.Data.DataRow.ItemArray%2A> property with such a column, place `null` in the column's position in the array.</span></span> <span data-ttu-id="f48e1-248">Para obtener más información, vea la propiedad <xref:System.Data.DataRow.ItemArray%2A>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-248">For more information, see the <xref:System.Data.DataRow.ItemArray%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-249">En el ejemplo siguiente se crea varias <xref:System.Data.DataColumn> valores para cada columna predeterminados de los objetos que tienen tipos de datos diferentes y establece adecuado.</span><span class="sxs-lookup"><span data-stu-id="f48e1-249">The following example creates several <xref:System.Data.DataColumn> objects that have different data types, and sets appropriate default values to each column.</span></span>  
  
 [!code-vb[Classic WebData DataColumn.DefaultValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.DefaultValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="f48e1-250">Cuando se agrega una fila, el valor predeterminado no es una instancia del tipo de datos de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-250">When you are adding a row, the default value is not an instance of the column's data type.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.DataType" />
        <altmember cref="P:System.Data.DataRow.ItemArray" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.UniqueConstraint" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-251">Obtiene o establece la expresión utilizada para filtrar filas, calcular los valores de una columna o crear una columna agregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-251">Gets or sets the expression used to filter rows, calculate the values in a column, or create an aggregate column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-252">Expresión para calcular el valor de una columna o para crear una columna agregada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-252">An expression to calculate the value of a column, or create an aggregate column.</span>
          </span>
          <span data-ttu-id="f48e1-253">El tipo de valor devuelto de una expresión está determinado por el <see cref="P:System.Data.DataColumn.DataType" /> de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-253">The return type of an expression is determined by the <see cref="P:System.Data.DataColumn.DataType" /> of the column.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-254">Uno de los usos de la <xref:System.Data.DataColumn.Expression%2A> propiedad consiste en crear columnas calculadas.</span><span class="sxs-lookup"><span data-stu-id="f48e1-254">One use of the <xref:System.Data.DataColumn.Expression%2A> property is to create calculated columns.</span></span> <span data-ttu-id="f48e1-255">Por ejemplo, para calcular un valor de impuesto, el precio unitario se multiplica por el tipo impositivo de una región específica.</span><span class="sxs-lookup"><span data-stu-id="f48e1-255">For example, to calculate a tax value, the unit price is multiplied by a tax rate of a specific region.</span></span> <span data-ttu-id="f48e1-256">Dado que los tipos impositivos varían de una región a otra, sería imposible colocar un único tipo impositivo en una columna; en su lugar, el valor se calcula con la <xref:System.Data.DataColumn.Expression%2A> propiedad, como se muestra en el código de Visual Basic en la sección siguiente:</span><span class="sxs-lookup"><span data-stu-id="f48e1-256">Because tax rates vary from region to region, it would be impossible to put a single tax rate in a column; instead, the value is calculated using the <xref:System.Data.DataColumn.Expression%2A> property, as shown in the Visual Basic code in the following section:</span></span>  
  
 <span data-ttu-id="f48e1-257">DataSet1.Tables("Products"). Columns("tax"). Expresión = "UnitPrice \* 0,086"</span><span class="sxs-lookup"><span data-stu-id="f48e1-257">DataSet1.Tables("Products").Columns("tax").Expression = "UnitPrice \* 0.086"</span></span>  
  
 <span data-ttu-id="f48e1-258">Un segundo uso es crear una columna agregada.</span><span class="sxs-lookup"><span data-stu-id="f48e1-258">A second use is to create an aggregate column.</span></span> <span data-ttu-id="f48e1-259">Similar a un valor calculado, un agregado realiza una operación basada en el conjunto completo de filas de la <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-259">Similar to a calculated value, an aggregate performs an operation based on the complete set of rows in the <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f48e1-260">Es un ejemplo sencillo contar el número de filas devueltas en el conjunto.</span><span class="sxs-lookup"><span data-stu-id="f48e1-260">A simple example is to count the number of rows returned in the set.</span></span> <span data-ttu-id="f48e1-261">Este es el método que se utilizaría para contar el número de transacciones realizadas por un vendedor determinado, como se muestra en este código de Visual Basic:</span><span class="sxs-lookup"><span data-stu-id="f48e1-261">This is the method you would use to count the number of transactions completed by a particular salesperson, as shown in this Visual Basic code:</span></span>  
  
```  
DataSet1.Tables("Orders").Columns("OrderCount").Expression = "Count(OrderID)"  
```  
  
## <a name="expression-syntax"></a><span data-ttu-id="f48e1-262">Sintaxis de expresión</span><span class="sxs-lookup"><span data-stu-id="f48e1-262">Expression Syntax</span></span>  
 <span data-ttu-id="f48e1-263">Cuando cree una expresión, use el <xref:System.Data.DataColumn.ColumnName%2A> propiedad para hacer referencia a columnas.</span><span class="sxs-lookup"><span data-stu-id="f48e1-263">When you create an expression, use the <xref:System.Data.DataColumn.ColumnName%2A> property to refer to columns.</span></span> <span data-ttu-id="f48e1-264">Por ejemplo, si la <xref:System.Data.DataColumn.ColumnName%2A> para una columna es "UnitPrice" y otro es "Quantity", la expresión sería como sigue:</span><span class="sxs-lookup"><span data-stu-id="f48e1-264">For example, if the <xref:System.Data.DataColumn.ColumnName%2A> for one column is "UnitPrice", and another "Quantity", the expression would be as follows:</span></span>  
  
 <span data-ttu-id="f48e1-265">"UnitPrice \* Quantity"</span><span class="sxs-lookup"><span data-stu-id="f48e1-265">"UnitPrice \* Quantity"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f48e1-266">Si una columna se utiliza en una expresión, se dice que la expresión tiene una dependencia en esa columna.</span><span class="sxs-lookup"><span data-stu-id="f48e1-266">If a column is used in an expression, then the expression is said to have a dependency on that column.</span></span> <span data-ttu-id="f48e1-267">Si se cambia el nombre o se elimina una columna dependiente, se inicia ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="f48e1-267">If a dependent column is renamed or removed, no exception is thrown.</span></span> <span data-ttu-id="f48e1-268">Se producirá una excepción cuando se tiene acceso a la columna de la expresión ahora interrumpida.</span><span class="sxs-lookup"><span data-stu-id="f48e1-268">An exception will be thrown when the now-broken expression column is accessed.</span></span>  
  
 <span data-ttu-id="f48e1-269">Cuando se crea una expresión para un filtro, incluya cadenas entre comillas simples:</span><span class="sxs-lookup"><span data-stu-id="f48e1-269">When you create an expression for a filter, enclose strings with single quotation marks:</span></span>  
  
 <span data-ttu-id="f48e1-270">"LastName = 'Jones'"</span><span class="sxs-lookup"><span data-stu-id="f48e1-270">"LastName = 'Jones'"</span></span>  
  
 <span data-ttu-id="f48e1-271">Si un nombre de columna contiene algún carácter no alfanumérico o empieza por un dígito o coincide con (distinga mayúsculas y minúsculas) cualquiera de las siguientes palabras reservadas, requiere un tratamiento especial, como se describe en los párrafos siguientes.</span><span class="sxs-lookup"><span data-stu-id="f48e1-271">If a column name contains any non-alphanumeric characters or starts with a digit or matches (case-insensitively) any of the following reserved words, it requires special handling, as described in the following paragraphs.</span></span>  
  
 <span data-ttu-id="f48e1-272">Y</span><span class="sxs-lookup"><span data-stu-id="f48e1-272">And</span></span>  
  
 <span data-ttu-id="f48e1-273">Entre</span><span class="sxs-lookup"><span data-stu-id="f48e1-273">Between</span></span>  
  
 <span data-ttu-id="f48e1-274">Secundario</span><span class="sxs-lookup"><span data-stu-id="f48e1-274">Child</span></span>  
  
 <span data-ttu-id="f48e1-275">False</span><span class="sxs-lookup"><span data-stu-id="f48e1-275">False</span></span>  
  
 <span data-ttu-id="f48e1-276">En</span><span class="sxs-lookup"><span data-stu-id="f48e1-276">In</span></span>  
  
 <span data-ttu-id="f48e1-277">Es</span><span class="sxs-lookup"><span data-stu-id="f48e1-277">Is</span></span>  
  
 <span data-ttu-id="f48e1-278">Like</span><span class="sxs-lookup"><span data-stu-id="f48e1-278">Like</span></span>  
  
 <span data-ttu-id="f48e1-279">Not</span><span class="sxs-lookup"><span data-stu-id="f48e1-279">Not</span></span>  
  
 <span data-ttu-id="f48e1-280">Null</span><span class="sxs-lookup"><span data-stu-id="f48e1-280">Null</span></span>  
  
 <span data-ttu-id="f48e1-281">O bien</span><span class="sxs-lookup"><span data-stu-id="f48e1-281">Or</span></span>  
  
 <span data-ttu-id="f48e1-282">Elemento primario</span><span class="sxs-lookup"><span data-stu-id="f48e1-282">Parent</span></span>  
  
 <span data-ttu-id="f48e1-283">True</span><span class="sxs-lookup"><span data-stu-id="f48e1-283">True</span></span>  
  
 <span data-ttu-id="f48e1-284">Si un nombre de columna cumple una de las condiciones anteriores, se debe escribir entre corchetes o el "'" comillas (acento grave).</span><span class="sxs-lookup"><span data-stu-id="f48e1-284">If a column name satisfies one of the above conditions, it must be wrapped in either square brackets or the "\`" (grave accent) quotes.</span></span> <span data-ttu-id="f48e1-285">Por ejemplo, para utilizar una columna denominada "Column #" en una expresión, se podría escribir cualquier "[Column #]":</span><span class="sxs-lookup"><span data-stu-id="f48e1-285">For example, to use a column named "Column#" in an expression, you would write either "[Column#]":</span></span>  
  
 <span data-ttu-id="f48e1-286">Total \* [Column #]</span><span class="sxs-lookup"><span data-stu-id="f48e1-286">Total \* [Column#]</span></span>  
  
 <span data-ttu-id="f48e1-287">o "\`Column #'":</span><span class="sxs-lookup"><span data-stu-id="f48e1-287">or "\`Column#`":</span></span>  
  
 <span data-ttu-id="f48e1-288">Total \* \`Column #'</span><span class="sxs-lookup"><span data-stu-id="f48e1-288">Total \* \`Column#\`</span></span>  
  
 <span data-ttu-id="f48e1-289">Si el nombre de columna se incluye entre corchetes, a continuación, cualquier ']' y '\\' caracteres (pero no de ningún otro carácter) en debe convertirse anteponiendo con la barra diagonal inversa ("\\") caracteres.</span><span class="sxs-lookup"><span data-stu-id="f48e1-289">If the column name is enclosed in square brackets then any ']' and '\\' characters (but not any other characters) in it must be escaped by prepending them with the backslash ("\\") character.</span></span> <span data-ttu-id="f48e1-290">Si se incluye el nombre de columna en caracteres de acento grave, a continuación, no debe contener ningún carácter de acento grave en ella.</span><span class="sxs-lookup"><span data-stu-id="f48e1-290">If the column name is enclosed in grave accent characters then it must not contain any grave accent characters in it.</span></span> <span data-ttu-id="f48e1-291">Por ejemplo, una columna denominada "Column []\\" se escribiría:</span><span class="sxs-lookup"><span data-stu-id="f48e1-291">For example, a column named "Column[]\\" would be written:</span></span>  
  
 <span data-ttu-id="f48e1-292">Total \* [columna [\\]\\\\]</span><span class="sxs-lookup"><span data-stu-id="f48e1-292">Total \* [Column[\\]\\\\]</span></span>  
  
 <span data-ttu-id="f48e1-293">o</span><span class="sxs-lookup"><span data-stu-id="f48e1-293">or</span></span>  
  
 <span data-ttu-id="f48e1-294">Total \* \`Column]\\`</span><span class="sxs-lookup"><span data-stu-id="f48e1-294">Total \* \`Column[]\\`</span></span>  
  
## <a name="user-defined-values"></a><span data-ttu-id="f48e1-295">Valores definidos por el usuario</span><span class="sxs-lookup"><span data-stu-id="f48e1-295">User-Defined Values</span></span>  
 <span data-ttu-id="f48e1-296">Valores definidos por el usuario pueden utilizarse dentro de las expresiones que se comparará con los valores de columna.</span><span class="sxs-lookup"><span data-stu-id="f48e1-296">User-defined values may be used within expressions to be compared with column values.</span></span> <span data-ttu-id="f48e1-297">Valores de cadena deben incluirse entre comillas simples (y cada carácter de comillas simples en un valor de cadena debe convertirse anteponiendo por otro carácter de comillas simples).</span><span class="sxs-lookup"><span data-stu-id="f48e1-297">String values should be enclosed within single quotation marks (and each single quotation character in a string value has to be escaped by prepending it with another single quotation character).</span></span> <span data-ttu-id="f48e1-298">Valores de fecha deben estar delimitados por signos de número (#) o comillas simples (') que se basa en el proveedor de datos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-298">Date values should be enclosed within pound signs (#) or single quotes (') based on the data provider.</span></span> <span data-ttu-id="f48e1-299">Decimales y notación científica están permitidas para los valores numéricos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-299">Decimals and scientific notation are permissible for numeric values.</span></span> <span data-ttu-id="f48e1-300">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f48e1-300">For example:</span></span>  
  
 <span data-ttu-id="f48e1-301">"FirstName = 'John'"</span><span class="sxs-lookup"><span data-stu-id="f48e1-301">"FirstName = 'John'"</span></span>  
  
 <span data-ttu-id="f48e1-302">"Precio < = 50,00"</span><span class="sxs-lookup"><span data-stu-id="f48e1-302">"Price <= 50.00"</span></span>  
  
 <span data-ttu-id="f48e1-303">"Fecha de nacimiento < #1/31/&#82;"</span><span class="sxs-lookup"><span data-stu-id="f48e1-303">"Birthdate < #1/31/82#"</span></span>  
  
 <span data-ttu-id="f48e1-304">Para las columnas que contienen valores de enumeración, convertir el valor al tipo de datos entero.</span><span class="sxs-lookup"><span data-stu-id="f48e1-304">For columns that contain enumeration values, cast the value to an integer data type.</span></span> <span data-ttu-id="f48e1-305">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f48e1-305">For example:</span></span>  
  
 <span data-ttu-id="f48e1-306">"EnumColumn = 5"</span><span class="sxs-lookup"><span data-stu-id="f48e1-306">"EnumColumn = 5"</span></span>  
  
## <a name="parsing-literal-expressions"></a><span data-ttu-id="f48e1-307">Analizar las expresiones literales</span><span class="sxs-lookup"><span data-stu-id="f48e1-307">Parsing Literal Expressions</span></span>  
 <span data-ttu-id="f48e1-308">Todas las expresiones literales se deben expresar en la configuración regional de la referencia cultural invariable.</span><span class="sxs-lookup"><span data-stu-id="f48e1-308">All literal expressions must be expressed in the invariant culture locale.</span></span> <span data-ttu-id="f48e1-309">Cuando `DataSet` analiza y convierte las expresiones literales, siempre utiliza la referencia cultural invariable, no la referencia cultural actual.</span><span class="sxs-lookup"><span data-stu-id="f48e1-309">When `DataSet` parses and converts literal expressions, it always uses the invariant culture, not the current culture.</span></span>  
  
 <span data-ttu-id="f48e1-310">Cuando hay comillas simples que rodea el valor, se identifican los literales de cadena.</span><span class="sxs-lookup"><span data-stu-id="f48e1-310">String literals are identified when there are single quotes surrounding the value.</span></span> <span data-ttu-id="f48e1-311">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f48e1-311">For example:</span></span>  
  
 <span data-ttu-id="f48e1-312">'John'</span><span class="sxs-lookup"><span data-stu-id="f48e1-312">'John'</span></span>  
  
 <span data-ttu-id="f48e1-313">`Boolean` los literales son true y false; no están entre comillas en expresiones.</span><span class="sxs-lookup"><span data-stu-id="f48e1-313">`Boolean` literals are true and false; they are not quoted in expressions.</span></span>  
  
 <span data-ttu-id="f48e1-314">`Integer` ¿literales [+-]? [0-9] + se tratan como `System.Int32`, `System.Int64` o `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-314">`Integer` literals [+-]?[0-9]+ are treated as `System.Int32`, `System.Int64` or `System.Double`.</span></span> <span data-ttu-id="f48e1-315">`System.Double` puede perder precisión dependiendo de lo grande que sea el número.</span><span class="sxs-lookup"><span data-stu-id="f48e1-315">`System.Double` can lose precision depending on how large the number is.</span></span> <span data-ttu-id="f48e1-316">Por ejemplo, si el número en el literal es 2147483650, `DataSet` primero intentará analizar el número como un `Int32`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-316">For example, if the number in the literal is 2147483650, `DataSet` will first attempt to parse the number as an `Int32`.</span></span> <span data-ttu-id="f48e1-317">Esto no se realizará correctamente porque el número es demasiado grande.</span><span class="sxs-lookup"><span data-stu-id="f48e1-317">This will not succeed because the number is too large.</span></span> <span data-ttu-id="f48e1-318">En este caso `DataSet` analizará el número como un `Int64`, que se realizará correctamente.</span><span class="sxs-lookup"><span data-stu-id="f48e1-318">In this case `DataSet` will parse the number as an `Int64`, which will succeed.</span></span> <span data-ttu-id="f48e1-319">Si el literal es un número mayor que el valor máximo de un valor Int64, `DataSet` analizará el literal mediante `Double`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-319">If the literal was a number larger than the maximum value of an Int64, `DataSet` will parse the literal using `Double`.</span></span>  
  
 <span data-ttu-id="f48e1-320">Literales reales que usan la notación científica, como 4.42372E-30, se analizan mediante `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-320">Real literals using scientific notation, such as 4.42372E-30, are parsed using `System.Double`.</span></span>  
  
 <span data-ttu-id="f48e1-321">Los literales reales sin la notación científica, pero con un separador decimal, se tratan como `System.Decimal`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-321">Real literals without scientific notation, but with a decimal point, are treated as `System.Decimal`.</span></span> <span data-ttu-id="f48e1-322">Si el número supera los valores máximo o mínimos admitidos por `System.Decimal`, a continuación, se analiza como un `System.Double`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-322">If the number exceeds the maximum or minimum values supported by `System.Decimal`, then it is parsed as a `System.Double`.</span></span> <span data-ttu-id="f48e1-323">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f48e1-323">For example:</span></span>  
  
 <span data-ttu-id="f48e1-324">142526.144524 se convertirá en un `Decimal`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-324">142526.144524 will be converted to a `Decimal`.</span></span>  
  
 <span data-ttu-id="f48e1-325">345262.78036719560925667 se tratará como un `Double`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-325">345262.78036719560925667 will be treated as a `Double`.</span></span>  
  
## <a name="operators"></a><span data-ttu-id="f48e1-326">Operadores</span><span class="sxs-lookup"><span data-stu-id="f48e1-326">Operators</span></span>  
 <span data-ttu-id="f48e1-327">Se permite la concatenación mediante booleanos AND, OR, operadores y NOT.</span><span class="sxs-lookup"><span data-stu-id="f48e1-327">Concatenation is allowed using Boolean AND, OR, and NOT operators.</span></span> <span data-ttu-id="f48e1-328">Puede usar paréntesis para agrupar cláusulas y forzar una precedencia.</span><span class="sxs-lookup"><span data-stu-id="f48e1-328">You can use parentheses to group clauses and force precedence.</span></span> <span data-ttu-id="f48e1-329">El operador AND tiene prioridad sobre otros operadores.</span><span class="sxs-lookup"><span data-stu-id="f48e1-329">The AND operator has precedence over other operators.</span></span> <span data-ttu-id="f48e1-330">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f48e1-330">For example:</span></span>  
  
 <span data-ttu-id="f48e1-331">(LastName = 'Smith' OR LastName = 'Jones') Y FirstName = 'John'</span><span class="sxs-lookup"><span data-stu-id="f48e1-331">(LastName = 'Smith' OR LastName = 'Jones') AND FirstName = 'John'</span></span>  
  
 <span data-ttu-id="f48e1-332">Al crear expresiones de comparación, se permiten los siguientes operadores:</span><span class="sxs-lookup"><span data-stu-id="f48e1-332">When you create comparison expressions, the following operators are allowed:</span></span>  
  
 \<  
  
 >  
  
 \<=  
  
 >=  
  
 <>  
  
 =  
  
 <span data-ttu-id="f48e1-333">IN</span><span class="sxs-lookup"><span data-stu-id="f48e1-333">IN</span></span>  
  
 <span data-ttu-id="f48e1-334">LIKE</span><span class="sxs-lookup"><span data-stu-id="f48e1-334">LIKE</span></span>  
  
 <span data-ttu-id="f48e1-335">También se admiten los siguientes operadores aritméticos en expresiones:</span><span class="sxs-lookup"><span data-stu-id="f48e1-335">The following arithmetic operators are also supported in expressions:</span></span>  
  
 <span data-ttu-id="f48e1-336">\+ (suma)</span><span class="sxs-lookup"><span data-stu-id="f48e1-336">\+ (addition)</span></span>  
  
 <span data-ttu-id="f48e1-337">\- (resta)</span><span class="sxs-lookup"><span data-stu-id="f48e1-337">\- (subtraction)</span></span>  
  
 <span data-ttu-id="f48e1-338">\* (multiplicación)</span><span class="sxs-lookup"><span data-stu-id="f48e1-338">\* (multiplication)</span></span>  
  
 <span data-ttu-id="f48e1-339">/ (división)</span><span class="sxs-lookup"><span data-stu-id="f48e1-339">/ (division)</span></span>  
  
 <span data-ttu-id="f48e1-340">% (módulo)</span><span class="sxs-lookup"><span data-stu-id="f48e1-340">% (modulus)</span></span>  
  
## <a name="string-operators"></a><span data-ttu-id="f48e1-341">Operadores de cadena</span><span class="sxs-lookup"><span data-stu-id="f48e1-341">String Operators</span></span>  
 <span data-ttu-id="f48e1-342">Para concatenar una cadena, utilice el carácter +.</span><span class="sxs-lookup"><span data-stu-id="f48e1-342">To concatenate a string, use the + character.</span></span> <span data-ttu-id="f48e1-343">El valor de la <xref:System.Data.DataSet.CaseSensitive%2A> propiedad de la <xref:System.Data.DataSet> clase determina si las comparaciones de cadenas distinguen mayúsculas de minúsculas.</span><span class="sxs-lookup"><span data-stu-id="f48e1-343">The value of the <xref:System.Data.DataSet.CaseSensitive%2A> property of the <xref:System.Data.DataSet> class determines whether string comparisons are case-sensitive.</span></span> <span data-ttu-id="f48e1-344">Sin embargo, puede reemplazar ese valor por el <xref:System.Data.DataTable.CaseSensitive%2A> propiedad de la <xref:System.Data.DataTable> clase.</span><span class="sxs-lookup"><span data-stu-id="f48e1-344">However, you can override that value with the <xref:System.Data.DataTable.CaseSensitive%2A> property of the <xref:System.Data.DataTable> class.</span></span>  
  
## <a name="wildcard-characters"></a><span data-ttu-id="f48e1-345">Caracteres comodín</span><span class="sxs-lookup"><span data-stu-id="f48e1-345">Wildcard Characters</span></span>  
 <span data-ttu-id="f48e1-346">Tanto el \* y % se puede usar indistintamente para los caracteres comodín en una comparación LIKE.</span><span class="sxs-lookup"><span data-stu-id="f48e1-346">Both the \* and % can be used interchangeably for wildcard characters in a LIKE comparison.</span></span> <span data-ttu-id="f48e1-347">Si la cadena en una cláusula LIKE contiene un \* o %, dichos caracteres deben escribirse entre corchetes ([]).</span><span class="sxs-lookup"><span data-stu-id="f48e1-347">If the string in a LIKE clause contains a \* or %, those characters should be enclosed in brackets ([]).</span></span> <span data-ttu-id="f48e1-348">Si es un corchete de cierre en la cláusula, cada carácter de corchete de cierre debe incluirse entre corchetes (por ejemplo, [[] o []]).</span><span class="sxs-lookup"><span data-stu-id="f48e1-348">If a bracket is in the clause, each bracket character should be enclosed in brackets (for example [[] or []]).</span></span> <span data-ttu-id="f48e1-349">Se permite un carácter comodín al principio y al final de un patrón, o al final de un patrón o al principio de un patrón.</span><span class="sxs-lookup"><span data-stu-id="f48e1-349">A wildcard is allowed at the start and end of a pattern, or at the end of a pattern, or at the start of a pattern.</span></span> <span data-ttu-id="f48e1-350">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f48e1-350">For example:</span></span>  
  
 <span data-ttu-id="f48e1-351">"ItemName como ' * producto\*'"</span><span class="sxs-lookup"><span data-stu-id="f48e1-351">"ItemName LIKE '*product\*'"</span></span>  
  
 <span data-ttu-id="f48e1-352">"ItemName como ' \* producto '"</span><span class="sxs-lookup"><span data-stu-id="f48e1-352">"ItemName LIKE '\*product'"</span></span>  
  
 <span data-ttu-id="f48e1-353">"ItemName LIKE 'producto \*'"</span><span class="sxs-lookup"><span data-stu-id="f48e1-353">"ItemName LIKE 'product\*'"</span></span>  
  
 <span data-ttu-id="f48e1-354">No se permiten caracteres comodín en el medio de una cadena.</span><span class="sxs-lookup"><span data-stu-id="f48e1-354">Wildcard characters are not allowed in the middle of a string.</span></span> <span data-ttu-id="f48e1-355">Por ejemplo, ' te \* xt' no está permitido.</span><span class="sxs-lookup"><span data-stu-id="f48e1-355">For example, 'te\*xt' is not allowed.</span></span>  
  
## <a name="parentchild-relation-referencing"></a><span data-ttu-id="f48e1-356">Relación de elementos primarios/secundarios que hacen referencia a</span><span class="sxs-lookup"><span data-stu-id="f48e1-356">Parent/Child Relation Referencing</span></span>  
 <span data-ttu-id="f48e1-357">Puede hacer referencia a una tabla primaria en una expresión anteponiendo al nombre de columna con `Parent`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-357">A parent table may be referenced in an expression by prepending the column name with `Parent`.</span></span> <span data-ttu-id="f48e1-358">Por ejemplo, el `Parent.Price` hace referencia a columnas de la tabla primaria denominada `Price`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-358">For example, the `Parent.Price` references the parent table's column named `Price`.</span></span>  
  
 <span data-ttu-id="f48e1-359">Cuando un elemento secundario tiene más de una fila primaria, use Parent (RelationName). ColumnName.</span><span class="sxs-lookup"><span data-stu-id="f48e1-359">When a child has more than one parent row, use Parent(RelationName).ColumnName.</span></span> <span data-ttu-id="f48e1-360">Por ejemplo, el Parent (RelationName). Precio hace referencia a la columna de la tabla primaria denominada Price a través de la relación.</span><span class="sxs-lookup"><span data-stu-id="f48e1-360">For example, the Parent(RelationName).Price references the parent table’s column named Price via the relation.</span></span>  
  
 <span data-ttu-id="f48e1-361">Puede hacer referencia a una columna en una tabla secundaria en una expresión anteponiendo al nombre de columna con `Child`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-361">A column in a child table may be referenced in an expression by prepending the column name with `Child`.</span></span> <span data-ttu-id="f48e1-362">Sin embargo, dado que las relaciones secundarias pueden devolver varias filas, debe incluir la referencia a la columna secundaria en una función de agregado.</span><span class="sxs-lookup"><span data-stu-id="f48e1-362">However, because child relationships may return multiple rows, you must include the reference to the child column in an aggregate function.</span></span> <span data-ttu-id="f48e1-363">Por ejemplo, `Sum(Child.Price)` devolvería la suma de la columna denominada `Price` en la tabla secundaria.</span><span class="sxs-lookup"><span data-stu-id="f48e1-363">For example, `Sum(Child.Price)` would return the sum of the column named `Price` in the child table.</span></span>  
  
 <span data-ttu-id="f48e1-364">Si una tabla tiene más de un elemento secundario, la sintaxis es: `Child(RelationName)`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-364">If a table has more than one child, the syntax is: `Child(RelationName)`.</span></span> <span data-ttu-id="f48e1-365">Por ejemplo, si una tabla tiene dos tablas secundarias denominadas `Customers` y `Orders`y el <xref:System.Data.DataRelation> se denomina objeto `Customers2Orders`, la referencia sería como sigue:</span><span class="sxs-lookup"><span data-stu-id="f48e1-365">For example, if a table has two child tables named `Customers` and `Orders`, and the <xref:System.Data.DataRelation> object is named `Customers2Orders`, the reference would be as follows:</span></span>  
  
 <span data-ttu-id="f48e1-366">Avg(Child(Customers2Orders).Quantity)</span><span class="sxs-lookup"><span data-stu-id="f48e1-366">Avg(Child(Customers2Orders).Quantity)</span></span>  
  
## <a name="aggregates"></a><span data-ttu-id="f48e1-367">Agregados</span><span class="sxs-lookup"><span data-stu-id="f48e1-367">Aggregates</span></span>  
 <span data-ttu-id="f48e1-368">Se admiten los siguientes tipos agregados:</span><span class="sxs-lookup"><span data-stu-id="f48e1-368">The following aggregate types are supported:</span></span>  
  
 <span data-ttu-id="f48e1-369">SUM (suma)</span><span class="sxs-lookup"><span data-stu-id="f48e1-369">Sum (Sum)</span></span>  
  
 <span data-ttu-id="f48e1-370">Promedio (Media)</span><span class="sxs-lookup"><span data-stu-id="f48e1-370">Avg (Average)</span></span>  
  
 <span data-ttu-id="f48e1-371">Min (mínimo)</span><span class="sxs-lookup"><span data-stu-id="f48e1-371">Min (Minimum)</span></span>  
  
 <span data-ttu-id="f48e1-372">Max (máximo)</span><span class="sxs-lookup"><span data-stu-id="f48e1-372">Max (Maximum)</span></span>  
  
 <span data-ttu-id="f48e1-373">Count (recuento)</span><span class="sxs-lookup"><span data-stu-id="f48e1-373">Count (Count)</span></span>  
  
 <span data-ttu-id="f48e1-374">StDev (desviación estándar estadística)</span><span class="sxs-lookup"><span data-stu-id="f48e1-374">StDev (Statistical standard deviation)</span></span>  
  
 <span data-ttu-id="f48e1-375">Var (varianza estadística).</span><span class="sxs-lookup"><span data-stu-id="f48e1-375">Var (Statistical variance).</span></span>  
  
 <span data-ttu-id="f48e1-376">Agregados se realizan normalmente a lo largo de las relaciones.</span><span class="sxs-lookup"><span data-stu-id="f48e1-376">Aggregates are ordinarily performed along relationships.</span></span> <span data-ttu-id="f48e1-377">Crear una expresión de agregado mediante una de las funciones enumeradas anteriormente y una columna de tabla secundaria como se detalla en el elemento primario/secundario relación hace referencia a que se ha analizado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="f48e1-377">Create an aggregate expression by using one of the functions listed earlier and a child table column as detailed in Parent/Child Relation Referencing that was discussed earlier.</span></span> <span data-ttu-id="f48e1-378">Por ejemplo:</span><span class="sxs-lookup"><span data-stu-id="f48e1-378">For example:</span></span>  
  
 <span data-ttu-id="f48e1-379">Avg(Child.Price)</span><span class="sxs-lookup"><span data-stu-id="f48e1-379">Avg(Child.Price)</span></span>  
  
 <span data-ttu-id="f48e1-380">Avg(Child(Orders2Details).Price)</span><span class="sxs-lookup"><span data-stu-id="f48e1-380">Avg(Child(Orders2Details).Price)</span></span>  
  
 <span data-ttu-id="f48e1-381">Un agregado también puede realizarse en una sola tabla.</span><span class="sxs-lookup"><span data-stu-id="f48e1-381">An aggregate can also be performed on a single table.</span></span> <span data-ttu-id="f48e1-382">Por ejemplo crear un resumen de las cifras de una columna denominada "Price":</span><span class="sxs-lookup"><span data-stu-id="f48e1-382">For example, to create a summary of figures in a column named "Price":</span></span>  
  
 <span data-ttu-id="f48e1-383">Sum(Precio)</span><span class="sxs-lookup"><span data-stu-id="f48e1-383">Sum(Price)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f48e1-384">Si usa una sola tabla para crear una función de agregado, no habría ninguna funcionalidad de agrupación.</span><span class="sxs-lookup"><span data-stu-id="f48e1-384">If you use a single table to create an aggregate, there would be no group-by functionality.</span></span> <span data-ttu-id="f48e1-385">En su lugar, todas las filas muestren el mismo valor en la columna.</span><span class="sxs-lookup"><span data-stu-id="f48e1-385">Instead, all rows would display the same value in the column.</span></span>  
  
 <span data-ttu-id="f48e1-386">Si una tabla no tiene filas, las funciones de agregado devolverá `null`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-386">If a table has no rows, the aggregate functions will return `null`.</span></span>  
  
 <span data-ttu-id="f48e1-387">Tipos de datos siempre se pueden determinar mediante el examen del <xref:System.Data.DataColumn.DataType%2A> propiedad de una columna.</span><span class="sxs-lookup"><span data-stu-id="f48e1-387">Data types can always be determined by examining the <xref:System.Data.DataColumn.DataType%2A> property of a column.</span></span> <span data-ttu-id="f48e1-388">También puede convertir a tipos de datos mediante la función Convert, que se muestra en la siguiente sección.</span><span class="sxs-lookup"><span data-stu-id="f48e1-388">You can also convert data types using the Convert function, shown in the following section.</span></span>  
  
 <span data-ttu-id="f48e1-389">Un agregado solo puede aplicarse a una sola columna y otras expresiones no se pueden usar dentro del agregado.</span><span class="sxs-lookup"><span data-stu-id="f48e1-389">An aggregate can only be applied to a single column and no other expressions can be used inside the aggregate.</span></span>  
  
## <a name="functions"></a><span data-ttu-id="f48e1-390">Funciones</span><span class="sxs-lookup"><span data-stu-id="f48e1-390">Functions</span></span>  
 <span data-ttu-id="f48e1-391">También se admiten las siguientes funciones:</span><span class="sxs-lookup"><span data-stu-id="f48e1-391">The following functions are also supported:</span></span>  
  
 `CONVERT`  
  
|||  
|-|-|  
|<span data-ttu-id="f48e1-392">Descripción</span><span class="sxs-lookup"><span data-stu-id="f48e1-392">Description</span></span>|<span data-ttu-id="f48e1-393">Convierte una expresión concreta a tipos de .NET Framework especificado.</span><span class="sxs-lookup"><span data-stu-id="f48e1-393">Converts particular expression to a specified .NET Framework Type.</span></span>|  
|<span data-ttu-id="f48e1-394">Sintaxis</span><span class="sxs-lookup"><span data-stu-id="f48e1-394">Syntax</span></span>|<span data-ttu-id="f48e1-395">Convertir (`expression`, `type`)</span><span class="sxs-lookup"><span data-stu-id="f48e1-395">Convert(`expression`, `type`)</span></span>|  
|<span data-ttu-id="f48e1-396">Argumentos</span><span class="sxs-lookup"><span data-stu-id="f48e1-396">Arguments</span></span>|<span data-ttu-id="f48e1-397">`expression` --La expresión para convertir.</span><span class="sxs-lookup"><span data-stu-id="f48e1-397">`expression` -- The expression to convert.</span></span><br /><br /> <span data-ttu-id="f48e1-398">`type` --El tipo de .NET Framework a la que se convertirá el valor.</span><span class="sxs-lookup"><span data-stu-id="f48e1-398">`type` -- The .NET Framework type to which the value will be converted.</span></span>|  
  
 <span data-ttu-id="f48e1-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span><span class="sxs-lookup"><span data-stu-id="f48e1-399">Example: myDataColumn.Expression="Convert(total, 'System.Int32')"</span></span>  
  
 <span data-ttu-id="f48e1-400">Todas las conversiones son válidas con las siguientes excepciones: `Boolean` se puede convertir a y desde `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` y sí solo.</span><span class="sxs-lookup"><span data-stu-id="f48e1-400">All conversions are valid with the following exceptions: `Boolean` can be coerced to and from `Byte`, `SByte`, `Int16`, `Int32`, `Int64`, `UInt16`, `UInt32`, `UInt64`, `String` and itself only.</span></span> <span data-ttu-id="f48e1-401">`Char` se puede convertir a y desde `Int32`, `UInt32`, `String`y sí solo.</span><span class="sxs-lookup"><span data-stu-id="f48e1-401">`Char` can be coerced to and from `Int32`, `UInt32`, `String`, and itself only.</span></span> <span data-ttu-id="f48e1-402">`DateTime` se puede convertir a y desde `String` y sí solo.</span><span class="sxs-lookup"><span data-stu-id="f48e1-402">`DateTime` can be coerced to and from `String` and itself only.</span></span> <span data-ttu-id="f48e1-403">`TimeSpan` se puede convertir a y desde `String` y sí solo.</span><span class="sxs-lookup"><span data-stu-id="f48e1-403">`TimeSpan` can be coerced to and from `String` and itself only.</span></span>  
  
 `LEN`  
  
|||  
|-|-|  
|<span data-ttu-id="f48e1-404">Descripción</span><span class="sxs-lookup"><span data-stu-id="f48e1-404">Description</span></span>|<span data-ttu-id="f48e1-405">Obtiene la longitud de una cadena</span><span class="sxs-lookup"><span data-stu-id="f48e1-405">Gets the length of a string</span></span>|  
|<span data-ttu-id="f48e1-406">Sintaxis</span><span class="sxs-lookup"><span data-stu-id="f48e1-406">Syntax</span></span>|<span data-ttu-id="f48e1-407">LEN (`expression`)</span><span class="sxs-lookup"><span data-stu-id="f48e1-407">LEN(`expression`)</span></span>|  
|<span data-ttu-id="f48e1-408">Argumentos</span><span class="sxs-lookup"><span data-stu-id="f48e1-408">Arguments</span></span>|<span data-ttu-id="f48e1-409">`expression` --La cadena que se debe evaluar.</span><span class="sxs-lookup"><span data-stu-id="f48e1-409">`expression` -- The string to be evaluated.</span></span>|  
  
 <span data-ttu-id="f48e1-410">Example: myDataColumn.Expression="Len(ItemName)"</span><span class="sxs-lookup"><span data-stu-id="f48e1-410">Example: myDataColumn.Expression="Len(ItemName)"</span></span>  
  
 `ISNULL`  
  
|||  
|-|-|  
|<span data-ttu-id="f48e1-411">Descripción</span><span class="sxs-lookup"><span data-stu-id="f48e1-411">Description</span></span>|<span data-ttu-id="f48e1-412">Comprueba una expresión y devuelve la expresión comprobada o un valor de reemplazo.</span><span class="sxs-lookup"><span data-stu-id="f48e1-412">Checks an expression and either returns the checked expression or a replacement value.</span></span>|  
|<span data-ttu-id="f48e1-413">Sintaxis</span><span class="sxs-lookup"><span data-stu-id="f48e1-413">Syntax</span></span>|<span data-ttu-id="f48e1-414">ISNULL (`expression`, `replacementvalue`)</span><span class="sxs-lookup"><span data-stu-id="f48e1-414">ISNULL(`expression`, `replacementvalue`)</span></span>|  
|<span data-ttu-id="f48e1-415">Argumentos</span><span class="sxs-lookup"><span data-stu-id="f48e1-415">Arguments</span></span>|<span data-ttu-id="f48e1-416">`expression` --La expresión para comprobar.</span><span class="sxs-lookup"><span data-stu-id="f48e1-416">`expression` -- The expression to check.</span></span><br /><br /> <span data-ttu-id="f48e1-417">`replacementvalue` --Si la expresión es `null`, `replacementvalue` se devuelve.</span><span class="sxs-lookup"><span data-stu-id="f48e1-417">`replacementvalue` -- If expression is `null`, `replacementvalue` is returned.</span></span>|  
  
 <span data-ttu-id="f48e1-418">Ejemplo: myDataColumn (price, -1) "</span><span class="sxs-lookup"><span data-stu-id="f48e1-418">Example: myDataColumn.Expression="IsNull(price, -1)"</span></span>  
  
 `IIF`  
  
|||  
|-|-|  
|<span data-ttu-id="f48e1-419">Descripción</span><span class="sxs-lookup"><span data-stu-id="f48e1-419">Description</span></span>|<span data-ttu-id="f48e1-420">Obtiene uno de dos valores según el resultado de una expresión lógica.</span><span class="sxs-lookup"><span data-stu-id="f48e1-420">Gets one of two values depending on the result of a logical expression.</span></span>|  
|<span data-ttu-id="f48e1-421">Sintaxis</span><span class="sxs-lookup"><span data-stu-id="f48e1-421">Syntax</span></span>|<span data-ttu-id="f48e1-422">IIF(`expr`, `truepart`, `falsepart`)</span><span class="sxs-lookup"><span data-stu-id="f48e1-422">IIF(`expr`, `truepart`, `falsepart`)</span></span>|  
|<span data-ttu-id="f48e1-423">Argumentos</span><span class="sxs-lookup"><span data-stu-id="f48e1-423">Arguments</span></span>|<span data-ttu-id="f48e1-424">`expr` --La expresión para evaluar.</span><span class="sxs-lookup"><span data-stu-id="f48e1-424">`expr` -- The expression to evaluate.</span></span><br /><br /> <span data-ttu-id="f48e1-425">`truepart` : Valor que se devuelve si la expresión es verdadera.</span><span class="sxs-lookup"><span data-stu-id="f48e1-425">`truepart` -- The value to return if the expression is true.</span></span><br /><br /> <span data-ttu-id="f48e1-426">`falsepart` : Valor que se devuelve si la expresión es falsa.</span><span class="sxs-lookup"><span data-stu-id="f48e1-426">`falsepart` -- The value to return if the expression is false.</span></span>|  
  
 <span data-ttu-id="f48e1-427">Ejemplo: myDataColumn.Expression = "IIF (total > 1000, 'expensive', 'estimado')</span><span class="sxs-lookup"><span data-stu-id="f48e1-427">Example: myDataColumn.Expression = "IIF(total>1000, 'expensive', 'dear')</span></span>  
  
 `TRIM`  
  
|||  
|-|-|  
|<span data-ttu-id="f48e1-428">Descripción</span><span class="sxs-lookup"><span data-stu-id="f48e1-428">Description</span></span>|<span data-ttu-id="f48e1-429">Quita todas las iniciales y finales en blanco caracteres como \r, \n, \t, ' '</span><span class="sxs-lookup"><span data-stu-id="f48e1-429">Removes all leading and trailing blank characters like \r, \n, \t, ' '</span></span>|  
|<span data-ttu-id="f48e1-430">Sintaxis</span><span class="sxs-lookup"><span data-stu-id="f48e1-430">Syntax</span></span>|<span data-ttu-id="f48e1-431">TRIM (`expression`)</span><span class="sxs-lookup"><span data-stu-id="f48e1-431">TRIM(`expression`)</span></span>|  
|<span data-ttu-id="f48e1-432">Argumentos</span><span class="sxs-lookup"><span data-stu-id="f48e1-432">Arguments</span></span>|<span data-ttu-id="f48e1-433">`expression` --La expresión para recortar.</span><span class="sxs-lookup"><span data-stu-id="f48e1-433">`expression` -- The expression to trim.</span></span>|  
  
 `SUBSTRING`  
  
|||  
|-|-|  
|<span data-ttu-id="f48e1-434">Descripción</span><span class="sxs-lookup"><span data-stu-id="f48e1-434">Description</span></span>|<span data-ttu-id="f48e1-435">Obtiene una subcadena de una longitud especificada, empezando por un punto especificado en la cadena.</span><span class="sxs-lookup"><span data-stu-id="f48e1-435">Gets a sub-string of a specified length, starting at a specified point in the string.</span></span>|  
|<span data-ttu-id="f48e1-436">Sintaxis</span><span class="sxs-lookup"><span data-stu-id="f48e1-436">Syntax</span></span>|<span data-ttu-id="f48e1-437">SUBSTRING (`expression`, `start`, `length`)</span><span class="sxs-lookup"><span data-stu-id="f48e1-437">SUBSTRING(`expression`, `start`, `length`)</span></span>|  
|<span data-ttu-id="f48e1-438">Argumentos</span><span class="sxs-lookup"><span data-stu-id="f48e1-438">Arguments</span></span>|<span data-ttu-id="f48e1-439">`expression` --La cadena de origen para la subcadena.</span><span class="sxs-lookup"><span data-stu-id="f48e1-439">`expression` -- The source string for the substring.</span></span><br /><br /> <span data-ttu-id="f48e1-440">`start` --Entero que especifica dónde comienza la subcadena.</span><span class="sxs-lookup"><span data-stu-id="f48e1-440">`start` -- Integer that specifies where the substring starts.</span></span><br /><br /> <span data-ttu-id="f48e1-441">`length` --Entero que especifica la longitud de la subcadena.</span><span class="sxs-lookup"><span data-stu-id="f48e1-441">`length` -- Integer that specifies the length of the substring.</span></span>|  
  
 <span data-ttu-id="f48e1-442">Ejemplo: myDataColumn.Expression = "SUBSTRING (phone, 7, 8)"</span><span class="sxs-lookup"><span data-stu-id="f48e1-442">Example: myDataColumn.Expression = "SUBSTRING(phone, 7, 8)"</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f48e1-443">Puede restablecer el <xref:System.Data.DataColumn.Expression%2A> propiedad asignando un valor null o una cadena vacía.</span><span class="sxs-lookup"><span data-stu-id="f48e1-443">You can reset the <xref:System.Data.DataColumn.Expression%2A> property by assigning it a null value or empty string.</span></span> <span data-ttu-id="f48e1-444">Si se establece un valor predeterminado en la columna de expresión, todas las filas rellenadas previamente se asignan el valor predeterminado después de la <xref:System.Data.DataColumn.Expression%2A> se restablece la propiedad.</span><span class="sxs-lookup"><span data-stu-id="f48e1-444">If a default value is set on the expression column, all previously filled rows are assigned the default value after the <xref:System.Data.DataColumn.Expression%2A> property is reset.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-445">En el ejemplo siguiente se crea tres columnas en un <xref:System.Data.DataTable>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-445">The following example creates three columns in a <xref:System.Data.DataTable>.</span></span> <span data-ttu-id="f48e1-446">La segunda y tercera columnas contienen expresiones; la segunda calcula impuestos mediante un tipo impositivo variable y la tercera agrega el resultado del cálculo en el valor de la primera columna.</span><span class="sxs-lookup"><span data-stu-id="f48e1-446">The second and third columns contain expressions; the second calculates tax using a variable tax rate, and the third adds the result of the calculation to the value of the first column.</span></span> <span data-ttu-id="f48e1-447">La tabla resultante se muestra en un <xref:System.Windows.Forms.DataGrid> control.</span><span class="sxs-lookup"><span data-stu-id="f48e1-447">The resulting table is displayed in a <xref:System.Windows.Forms.DataGrid> control.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Expression Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Expression Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-448">Las propiedades <see cref="P:System.Data.DataColumn.AutoIncrement" /> o <see cref="P:System.Data.DataColumn.Unique" /> están establecidas en <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-448">The <see cref="P:System.Data.DataColumn.AutoIncrement" /> or <see cref="P:System.Data.DataColumn.Unique" /> property is set to <see langword="true" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="f48e1-449">Al utilizar la función CONVERT, la expresión se evalúa como cadena, pero la cadena no contiene una representación que se pueda convertir al parámetro de tipo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-449">When you are using the CONVERT function, the expression evaluates to a string, but the string does not contain a representation that can be converted to the type parameter.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="f48e1-450">Al utilizar la función CONVERT, la conversión solicitada no es posible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-450">When you are using the CONVERT function, the requested cast is not possible.</span>
          </span>
          <span data-ttu-id="f48e1-451">Consulte la función de conversión de la siguiente sección para obtener información detallada sobre las posibles conversiones.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-451">See the Conversion function in the following section for detailed information about possible casts.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="f48e1-452">Al utilizar la función SUBSTRING, el argumento de inicio está fuera del intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-452">When you use the SUBSTRING function, the start argument is out of range.</span>
          </span>
          <span data-ttu-id="f48e1-453">O bien</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-453">-Or-</span>
          </span>
          <span data-ttu-id="f48e1-454">Al utilizar la función SUBSTRING, el argumento de longitud está fuera del intervalo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-454">When you use the SUBSTRING function, the length argument is out of range.</span>
          </span>
        </exception>
        <exception cref="T:System.Exception">
          <span data-ttu-id="f48e1-455">Al utilizar la función LEN o TRIM, la expresión no se evalúa como cadena.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-455">When you use the LEN function or the TRIM function, the expression does not evaluate to a string.</span>
          </span>
          <span data-ttu-id="f48e1-456">Esto incluye expresiones que se evalúan como <see cref="T:System.Char" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-456">This includes expressions that evaluate to <see cref="T:System.Char" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExtendedProperties">
      <MemberSignature Language="C#" Value="public System.Data.PropertyCollection ExtendedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.PropertyCollection ExtendedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ExtendedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtendedProperties As PropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::PropertyCollection ^ ExtendedProperties { System::Data::PropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.PropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-457">Obtiene la colección de la información personalizada del usuario asociada a <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-457">Gets the collection of custom user information associated with a <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-458">
            <see cref="T:System.Data.PropertyCollection" /> de información personalizada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-458">A <see cref="T:System.Data.PropertyCollection" /> of custom information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-459">El <xref:System.Data.DataColumn.ExtendedProperties%2A> propiedad le permite almacenar información personalizada con el objeto.</span><span class="sxs-lookup"><span data-stu-id="f48e1-459">The <xref:System.Data.DataColumn.ExtendedProperties%2A> property lets you store custom information with the object.</span></span> <span data-ttu-id="f48e1-460">Por ejemplo, puede almacenar la hora cuando se deben actualizar los datos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-460">For example, you may store a time when the data should be refreshed.</span></span>  
  
 <span data-ttu-id="f48e1-461">Las propiedades extendidas deben ser del tipo <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-461">Extended properties must be of type <xref:System.String>.</span></span> <span data-ttu-id="f48e1-462">Propiedades que no son de tipo <xref:System.String> no se conservan cuando el <xref:System.Data.DataColumn> se escribe como XML.</span><span class="sxs-lookup"><span data-stu-id="f48e1-462">Properties that are not of type <xref:System.String> are not persisted when the <xref:System.Data.DataColumn> is written as XML.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-463">En el ejemplo siguiente se agrega una propiedad personalizada a la <xref:System.Data.PropertyCollection> devuelto por la <xref:System.Data.DataColumn.ExtendedProperties%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f48e1-463">The following example adds a custom property to the <xref:System.Data.PropertyCollection> returned by the <xref:System.Data.DataColumn.ExtendedProperties%2A> property.</span></span> <span data-ttu-id="f48e1-464">El segundo ejemplo recupera la propiedad personalizada.</span><span class="sxs-lookup"><span data-stu-id="f48e1-464">The second example retrieves the custom property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ExtendedProperties Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ExtendedProperties Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.PropertyCollection" />
      </Docs>
    </Member>
    <Member MemberName="MaxLength">
      <MemberSignature Language="C#" Value="public int MaxLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxLength" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.MaxLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-465">Obtiene o establece la longitud máxima de una columna de texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-465">Gets or sets the maximum length of a text column.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-466">Longitud máxima de la columna en caracteres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-466">The maximum length of the column in characters.</span>
          </span>
          <span data-ttu-id="f48e1-467">Si la columna no tiene longitud máxima, el valor es –1 (valor predeterminado).</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-467">If the column has no maximum length, the value is –1 (default).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-468">El <xref:System.Data.DataColumn.MaxLength%2A> propiedad se omite para las columnas no son de texto.</span><span class="sxs-lookup"><span data-stu-id="f48e1-468">The <xref:System.Data.DataColumn.MaxLength%2A> property is ignored for non-text columns.</span></span> <span data-ttu-id="f48e1-469">A <xref:System.ArgumentException> excepción se produce si asigna <xref:System.Data.DataColumn.MaxLength%2A> a una columna no es una cadena.</span><span class="sxs-lookup"><span data-stu-id="f48e1-469">A <xref:System.ArgumentException> exception is raised if you assign <xref:System.Data.DataColumn.MaxLength%2A> to a non-string column.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-470">Obtiene o establece el espacio de nombres del objeto <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-470">Gets or sets the namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-471">Espacio de nombres de <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-471">The namespace of the <see cref="T:System.Data.DataColumn" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-472">El <xref:System.Data.DataColumn.Namespace%2A> propiedad se utiliza al leer y escribir un documento XML en un <xref:System.Data.DataTable> en el <xref:System.Data.DataSet> mediante la <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, o <xref:System.Data.DataSet.WriteXmlSchema%2A> métodos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-472">The <xref:System.Data.DataColumn.Namespace%2A> property is used when reading and writing an XML document into a <xref:System.Data.DataTable> in the <xref:System.Data.DataSet> using the <xref:System.Data.DataSet.ReadXml%2A>, <xref:System.Data.DataSet.WriteXml%2A>, <xref:System.Data.DataSet.ReadXmlSchema%2A>, or <xref:System.Data.DataSet.WriteXmlSchema%2A> methods.</span></span>  
  
 <span data-ttu-id="f48e1-473">El espacio de nombres de un documento XML se usa para especificar atributos XML y los elementos cuando se leen en un <xref:System.Data.DataSet>.</span><span class="sxs-lookup"><span data-stu-id="f48e1-473">The namespace of an XML document is used to scope XML attributes and elements when read into a <xref:System.Data.DataSet>.</span></span> <span data-ttu-id="f48e1-474">Por ejemplo, un <xref:System.Data.DataSet> contiene un esquema leído de un documento que tiene el espacio de nombres "myCompany" y se realiza un intento para leer datos (con el <xref:System.Data.DataSet.ReadXml%2A> método) de un documento que tiene el espacio de nombres "theirCompany".</span><span class="sxs-lookup"><span data-stu-id="f48e1-474">For example, a <xref:System.Data.DataSet> contains a schema read from a document that has the namespace "myCompany," and an attempt is made to read data (with the <xref:System.Data.DataSet.ReadXml%2A> method) from a document that has the namespace "theirCompany."</span></span> <span data-ttu-id="f48e1-475">Se omitirá cualquier dato que no se corresponde con el esquema existente.</span><span class="sxs-lookup"><span data-stu-id="f48e1-475">Any data that does not correspond to the existing schema will be ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-476">El espacio de nombres ya tiene datos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-476">The namespace already has data.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanging (System.ComponentModel.PropertyChangedEventArgs pcevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanging(class System.ComponentModel.PropertyChangedEventArgs pcevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.OnPropertyChanging(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanging (pcevent As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanging(System::ComponentModel::PropertyChangedEventArgs ^ pcevent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcevent" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="pcevent">
          <span data-ttu-id="f48e1-477">Referencia de parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-477">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48e1-478">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-478">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ordinal">
      <MemberSignature Language="C#" Value="public int Ordinal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Ordinal" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Ordinal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Ordinal As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Ordinal { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-479">Obtiene la posición de base cero de la columna en la colección <see cref="T:System.Data.DataColumnCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-479">Gets the (zero-based) position of the column in the <see cref="T:System.Data.DataColumnCollection" /> collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-480">Posición de la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-480">The position of the column.</span>
          </span>
          <span data-ttu-id="f48e1-481">Obtiene –1 si la columna no es un miembro de una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-481">Gets -1 if the column is not a member of a collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-482">En el ejemplo siguiente se devuelve el tipo de datos, nombre y ordinal de columna de una columna.</span><span class="sxs-lookup"><span data-stu-id="f48e1-482">The following example returns the column name, ordinal, and data type of a column.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Ordinal Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Ordinal Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Prefix" />
      <MemberSignature Language="VB.NET" Value="Public Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-483">Obtiene o establece un prefijo XML que crea alias para el espacio de nombres del objeto <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-483">Gets or sets an XML prefix that aliases the namespace of the <see cref="T:System.Data.DataTable" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-484">Prefijo XML para el espacio de nombres de <see cref="T:System.Data.DataTable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-484">The XML prefix for the <see cref="T:System.Data.DataTable" /> namespace.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-485">El <xref:System.Data.DataTable.Prefix%2A> se usa en un documento XML para identificar los elementos que pertenecen al espacio de nombres para un <xref:System.Data.DataSet> objeto (tal como lo establece el <xref:System.Data.DataSet.Namespace%2A> propiedad).</span><span class="sxs-lookup"><span data-stu-id="f48e1-485">The <xref:System.Data.DataTable.Prefix%2A> is used throughout an XML document to identify elements which belong to the namespace for a <xref:System.Data.DataSet> object (as set by the <xref:System.Data.DataSet.Namespace%2A> property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePropertyChanging">
      <MemberSignature Language="C#" Value="protected internal void RaisePropertyChanging (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RaisePropertyChanging(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.RaisePropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RaisePropertyChanging (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RaisePropertyChanging(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="f48e1-486">Referencia de parámetro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-486">Parameter reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48e1-487">Este miembro admite la infraestructura de .NET Framework y no está prevista su utilización directa desde el código.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-487">This member supports the .NET Framework infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-488">Obtiene o establece un valor que indica si la columna permite cambios justo después de que se haya agregado una fila a la tabla.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-488">Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-489">
            <see langword="true" /> si la columna es de sólo lectura; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-489">
              <see langword="true" /> if the column is read only; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f48e1-490">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-490">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-491">En el ejemplo siguiente se crea un <xref:System.Data.DataColumn> y establece su <xref:System.Data.DataColumn.ReadOnly%2A> propiedad `true`.</span><span class="sxs-lookup"><span data-stu-id="f48e1-491">The following example creates a <xref:System.Data.DataColumn> and sets its <xref:System.Data.DataColumn.ReadOnly%2A> property `true`.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ReadOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ReadOnly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-492">La propiedad está establecida en <see langword="false" /> en una columna calculada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-492">The property is set to <see langword="false" /> on a computed column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.Unique" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
      </Docs>
    </Member>
    <Member MemberName="SetOrdinal">
      <MemberSignature Language="C#" Value="public void SetOrdinal (int ordinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrdinal(int32 ordinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.SetOrdinal(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrdinal (ordinal As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrdinal(int ordinal);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ordinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ordinal">
          <span data-ttu-id="f48e1-493">Ordinal especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-493">The specified ordinal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f48e1-494">Cambia el ordinal o la posición del objeto <see cref="T:System.Data.DataColumn" /> al ordinal o posición especificados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-494">Changes the ordinal or position of the <see cref="T:System.Data.DataColumn" /> to the specified ordinal or position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-495">Cambia el ordinal o la posición del objeto <xref:System.Data.DataColumn> al ordinal o posición especificados.</span><span class="sxs-lookup"><span data-stu-id="f48e1-495">Changes the ordinal or position of the <xref:System.Data.DataColumn> to the specified ordinal or position.</span></span> <span data-ttu-id="f48e1-496">Si el ordinal es menor que 0 o mayor que el número de columnas: 1 (mayor que el ordinal de la última columna) existente, a continuación, no es válida <xref:System.ArgumentException> se produce.</span><span class="sxs-lookup"><span data-stu-id="f48e1-496">If ordinal is less than 0 or greater than the existing number of columns – 1 (greater than the ordinal of the last column) then an Invalid <xref:System.ArgumentException> is thrown.</span></span>  
  
 <span data-ttu-id="f48e1-497">Cuando se cambia el ordinal de una columna, la columna se mueve a la nueva posición en la colección de columnas.</span><span class="sxs-lookup"><span data-stu-id="f48e1-497">When you change a column’s ordinal, the column is moved to the new position in the collection of columns.</span></span> <span data-ttu-id="f48e1-498">Las columnas entre el ordinal anterior y nuevo se volverán a numerar, para ajustar el ordinal de la columna nueva.</span><span class="sxs-lookup"><span data-stu-id="f48e1-498">Any columns between the previous and new ordinal will be renumbered, to adjust for a column's new ordinal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-499">Obtiene el <see cref="T:System.Data.DataTable" /> al que pertenece la columna.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-499">Gets the <see cref="T:System.Data.DataTable" /> to which the column belongs to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-500">
            <see cref="T:System.Data.DataTable" /> al que pertenece el <see cref="T:System.Data.DataColumn" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-500">The <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataColumn" /> belongs to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-501">En el ejemplo siguiente se devuelve la tabla primaria de un <xref:System.Data.DataColumn> a través de su <xref:System.Data.DataColumn.Table%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="f48e1-501">The following example returns the parent table of a <xref:System.Data.DataColumn> through its <xref:System.Data.DataColumn.Table%2A> property.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataColumn.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-502">Obtiene el <see cref="P:System.Data.DataColumn.Expression" /> de la columna, si existe alguno.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-502">Gets the <see cref="P:System.Data.DataColumn.Expression" /> of the column, if one exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f48e1-503">Valor <see cref="P:System.Data.DataColumn.Expression" />, si la propiedad está establecida; en caso contrario, la propiedad <see cref="P:System.Data.DataColumn.ColumnName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-503">The <see cref="P:System.Data.DataColumn.Expression" /> value, if the property is set; otherwise, the <see cref="P:System.Data.DataColumn.ColumnName" /> property.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f48e1-504">En el ejemplo siguiente se usa el <xref:System.Data.DataColumn.ToString%2A> propiedad para devolver la cadena predeterminada de cada miembro de una colección de <xref:System.Data.DataColumn> objetos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-504">The following example uses the <xref:System.Data.DataColumn.ToString%2A> property to return the default string of each member of a collection of <xref:System.Data.DataColumn> objects.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.ToString Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.ToString Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.DataColumn.Expression" />
        <altmember cref="P:System.Data.DataColumn.ColumnName" />
      </Docs>
    </Member>
    <Member MemberName="Unique">
      <MemberSignature Language="C#" Value="public bool Unique { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Unique" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataColumn.Unique" />
      <MemberSignature Language="VB.NET" Value="Public Property Unique As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Unique { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f48e1-505">Obtiene o establece un valor que indica si los valores de cada fila de la columna deben ser únicos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-505">Gets or sets a value that indicates whether the values in each row of the column must be unique.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f48e1-506">
            <see langword="true" /> si el valor debe ser único; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-506">
              <see langword="true" /> if the value must be unique; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="f48e1-507">El valor predeterminado es <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-507">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f48e1-508">En cuanto se cambie esta propiedad de false a true, se creará una restricción unique en esta columna para asegurarse de que los valores sean únicos.</span><span class="sxs-lookup"><span data-stu-id="f48e1-508">As soon as this property is changed from false to true, a unique constraint will be created on this column to make sure that values are unique.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f48e1-509">En el ejemplo siguiente se crea un nuevo <xref:System.Data.DataColumn>, establece sus propiedades y se agrega a la colección de columnas de una tabla.</span><span class="sxs-lookup"><span data-stu-id="f48e1-509">The following example creates new <xref:System.Data.DataColumn>, sets its properties, and adds it to a table's columns collection.</span></span>  
  
 [!code-csharp[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataColumn.Unique Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataColumn.Unique Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f48e1-510">La columna es una columna calculada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f48e1-510">The column is a calculated column.</span>
          </span>
        </exception>
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="T:System.Data.UniqueConstraint" />
        <altmember cref="P:System.Data.DataTable.Constraints" />
      </Docs>
    </Member>
  </Members>
</Type>