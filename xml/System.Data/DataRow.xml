<Type Name="DataRow" FullName="System.Data.DataRow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56ee6c5bd736f09ca59f702c99b103fc83530f84" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37671072" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataRow" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataRow extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRow" />
  <TypeSignature Language="VB.NET" Value="Public Class DataRow" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRow" />
  <TypeSignature Language="F#" Value="type DataRow = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Representa una fila de datos en un <see cref="T:System.Data.DataTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataRow> y <xref:System.Data.DataColumn> objetos son los componentes principales de un <xref:System.Data.DataTable>. Use la <xref:System.Data.DataRow> objeto y sus propiedades y métodos para recuperar y evaluar; Insertar, eliminar y actualizar los valores en el <xref:System.Data.DataTable>. El <xref:System.Data.DataRowCollection> representa real <xref:System.Data.DataRow> objetos en el <xref:System.Data.DataTable>y el <xref:System.Data.DataColumnCollection> contiene el <xref:System.Data.DataColumn> objetos que describen el esquema de la <xref:System.Data.DataTable>. Usar sobrecargado <xref:System.Data.DataRow.Item%2A> propiedad para devolver o establecer el valor de un <xref:System.Data.DataColumn>.  
  
 Use la <xref:System.Data.DataRow.HasVersion%2A> y <xref:System.Data.DataRow.IsNull%2A> propiedades para determinar el estado del valor de una fila determinada y el <xref:System.Data.DataRow.RowState*> propiedad para determinar el estado de la fila con respecto a su elemento primario <xref:System.Data.DataTable>.  
  
 Para crear un nuevo <xref:System.Data.DataRow>, utilice el <xref:System.Data.DataTable.NewRow%2A> método de la <xref:System.Data.DataTable> objeto. Después de crear un nuevo <xref:System.Data.DataRow>, utilice el <xref:System.Data.DataRowCollection.Add%2A> método para agregar el nuevo <xref:System.Data.DataRow> a la <xref:System.Data.DataRowCollection>. Por último, llame a la <xref:System.Data.DataRow.AcceptChanges%2A> método de la <xref:System.Data.DataTable> objeto para confirmar la adición. Para obtener más información acerca de cómo agregar datos a un <xref:System.Data.DataTable>, consulte [agregar datos a un objeto DataTable](~/docs/framework/data/adonet/dataset-datatable-dataview/adding-data-to-a-datatable.md).  
  
 Puede eliminar un <xref:System.Data.DataRow> desde el <xref:System.Data.DataRowCollection> mediante una llamada a la <xref:System.Data.DataRowCollection.Remove%2A> método de la <xref:System.Data.DataRowCollection>, o mediante una llamada a la <xref:System.Data.DataRow.Delete%2A> método de la <xref:System.Data.DataRow> objeto. El <xref:System.Data.DataRowCollection.Remove%2A> método quita la fila de la colección. En cambio, <xref:System.Data.DataRow.Delete%2A> marcas el <xref:System.Data.DataRow> para su eliminación. La eliminación real se produce cuando se llama a <xref:System.Data.DataRow.AcceptChanges%2A> método. Mediante una llamada a <xref:System.Data.DataRow.Delete%2A>, se puede comprobar mediante programación qué filas están marcadas para eliminación antes de eliminarlos. Para obtener más información, consulte [eliminación de DataRow](~/docs/framework/data/adonet/dataset-datatable-dataview/datarow-deletion.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un nuevo <xref:System.Data.DataRow> mediante una llamada a la <xref:System.Data.DataTable.NewRow%2A> método de la <xref:System.Data.DataTable> objeto.  
  
 [!code-csharp[Classic WebData DataRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>Este tipo es seguro para las operaciones de lectura multiproceso. Debe sincronizar operaciones de escritura.</threadsafe>
    <altmember cref="M:System.Data.DataRow.AcceptChanges" />
    <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
    <altmember cref="T:System.Data.DataColumnCollection" />
    <altmember cref="T:System.Data.DataColumn" />
    <altmember cref="T:System.Data.DataRowView" />
    <altmember cref="T:System.Data.DataTable" />
    <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
    <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
    <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
    <altmember cref="M:System.Data.DataTable.NewRow" />
    <altmember cref="T:System.Data.DataRowCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal DataRow (System.Data.DataRowBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Data.DataRowBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.#ctor(System.Data.DataRowBuilder)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (builder As DataRowBuilder)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; DataRow(System::Data::DataRowBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Data.DataRow : System.Data.DataRowBuilder -&gt; System.Data.DataRow" Usage="new System.Data.DataRow builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Data.DataRowBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">generador</param>
        <summary>Inicializa una nueva instancia de DataRow. Construye una fila desde el generador. Solo para uso interno...</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptChanges">
      <MemberSignature Language="C#" Value="public void AcceptChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AcceptChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.AcceptChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub AcceptChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AcceptChanges();" />
      <MemberSignature Language="F#" Value="member this.AcceptChanges : unit -&gt; unit" Usage="dataRow.AcceptChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Confirma todos los cambios realizados en esta fila desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al invocar <xref:System.Data.DataRow.AcceptChanges%2A>, el <xref:System.Data.DataRow.EndEdit%2A> se llama implícitamente al método para finalizar cualquier edición. Si el <xref:System.Data.DataRow.RowState*> de la fila se ha agregado o modificado, la <xref:System.Data.DataRow.RowState*> se convierte en Unchanged. Si el <xref:System.Data.DataRow.RowState*> fue eliminado, se quita la fila.  
  
 Vea el método <xref:System.Data.DataRow.BeginEdit%2A> para más información.  
  
 El <xref:System.Data.DataTable> clase también tiene un <xref:System.Data.DataTable.AcceptChanges%2A> método que afecta a los cambios realizados en toda la tabla. Para obtener más información y un ejemplo de código que muestra cómo aceptar o rechazar los cambios en las filas de datos individuales, consulte [Acceptchange y Rejectchange](~/docs/framework/data/adonet/dataset-datatable-dataview/acceptchanges-and-rejectchanges.md).  
  
   
  
## Examples  
 El ejemplo siguiente crea primero un nuevo <xref:System.Data.DataTable> con una columna y, a continuación, crea una sola <xref:System.Data.DataRow>. Como el <xref:System.Data.DataRow> se crea, agrega, modifica y elimina, su <xref:System.Data.DataRow.RowState*> se imprime.  
  
 [!code-csharp[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.AcceptChanges Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.AcceptChanges Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="BeginEdit">
      <MemberSignature Language="C#" Value="public void BeginEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.BeginEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginEdit();" />
      <MemberSignature Language="F#" Value="member this.BeginEdit : unit -&gt; unit" Usage="dataRow.BeginEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Inicia una operación de edición en un objeto <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use la <xref:System.Data.DataRow.BeginEdit%2A> método para colocar un <xref:System.Data.DataRow> en modo de edición. En este modo, los eventos están suspendidos temporalmente, lo que permite al usuario realizar cambios en más de una fila sin desencadenar reglas de validación. Por ejemplo, si debe asegurarse de que el valor de la columna de un importe total es igual a los valores de la columna de débito y crédito columnas de una fila, puede poner cada fila en modo de edición para suspender la validación de los valores de fila hasta que el usuario intenta confirmar los valores.  
  
 El <xref:System.Data.DataRow.BeginEdit%2A> se llama implícitamente al método cuando el usuario cambia el valor de un control enlazado a datos; el <xref:System.Data.DataRow.EndEdit%2A> método se llama implícitamente al invocar el <xref:System.Data.DataTable.AcceptChanges%2A> método para el <xref:System.Data.DataTable> objeto. En este modo de edición, el <xref:System.Data.DataRow> almacena las representaciones de originales y nuevos valores propuestos. Por lo tanto, siempre y cuando la <xref:System.Data.DataRow.EndEdit%2A> no se ha llamado al método, puede recuperar la versión original o propuesta pasando cualquiera `DataRowVersion.Original` o `DataRowVersion.Proposed` para el `version` parámetro de la <xref:System.Data.DataRow.Item%2A> propiedad. También puede cancelar las modificaciones en este momento invocando el <xref:System.Data.DataRow.CancelEdit%2A> método.  
  
 Para ver si la fila contiene un valor original o propuesto, llame a la <xref:System.Data.DataRow.HasVersion%2A> método.  
  
> [!NOTE]
>  El <xref:System.Data.DataRow.BeginEdit%2A> suspende temporalmente el método <xref:System.Data.DataTable.RowChanging> eventos, pero la `delete` operación no es así.  
  
   
  
## Examples  
 El ejemplo crea una sencilla <xref:System.Data.DataTable> con uno <xref:System.Data.DataColumn> y cinco <xref:System.Data.DataRow> objetos y un <xref:System.Data.UniqueConstraint>. Un <xref:System.Data.DataTable.RowChanged> también se agrega el controlador de eventos para supervisar cuándo está cambiando el valor de fila. Después de invocar <xref:System.Data.DataRow.BeginEdit%2A> en las filas existentes, se deshabilitan temporalmente la restricción y el evento y se imprimen los valores originales y propuestos. El <xref:System.Data.DataRow.BeginEdit%2A> se invoca de nuevo para establecer dos filas en el mismo valor. Cuando <xref:System.Data.DataRow.EndEdit%2A> se llama, el <xref:System.Data.UniqueConstraint> se aplica en los valores idénticos.  
  
 [!code-csharp[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.BeginEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.BeginEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha llamado al método en una fila eliminada.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="CancelEdit">
      <MemberSignature Language="C#" Value="public void CancelEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.CancelEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelEdit();" />
      <MemberSignature Language="F#" Value="member this.CancelEdit : unit -&gt; unit" Usage="dataRow.CancelEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancela la edición actual de la fila.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vea el método <xref:System.Data.DataRow.BeginEdit%2A> para más información.  
  
   
  
## Examples  
 El ejemplo siguiente modifica el valor de una columna en la última fila de una <xref:System.Windows.Forms.DataGrid> control. El ejemplo se usa el <xref:System.Data.DataRow.BeginEdit%2A>, <xref:System.Data.DataRow.EndEdit%2A>, métodos para editar el valor de la columna y confirmar el cambio en la fila.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="ClearErrors">
      <MemberSignature Language="C#" Value="public void ClearErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.ClearErrors" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearErrors ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearErrors();" />
      <MemberSignature Language="F#" Value="member this.ClearErrors : unit -&gt; unit" Usage="dataRow.ClearErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Borra los errores respecto de la fila. Incluye la propiedad <see cref="P:System.Data.DataRow.RowError" /> y los errores establecidos con <see cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use <xref:System.Data.DataRow.SetColumnError%2A> y <xref:System.Data.DataRow.GetColumnError%2A> para establecer y devolver errores para columnas individuales.  
  
 Establecer el <xref:System.Data.DataRow.RowError%2A> propiedad para establecer un error que se aplica a toda la fila.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> método. Por lo tanto, puede usar el <xref:System.Data.DataRow.GetColumnsInError%2A> método para recuperar todas las columnas con errores.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.HasErrors%2A> para buscar errores. Si la fila tiene errores, el <xref:System.Data.DataRow.GetColumnsInError%2A> método devuelve una matriz de columnas con errores que, a continuación, se pueden resolver. El <xref:System.Data.DataRow.ClearErrors%2A> , a continuación, se llama el método para borrar todos los errores.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public void Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Delete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; unit" Usage="dataRow.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Elimina <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si el <xref:System.Data.DataRow.RowState*> de la fila se agrega el <xref:System.Data.DataRow.RowState*> se convierte en `Detached` y se quita la fila de la tabla al llamar a <xref:System.Data.DataRow.AcceptChanges%2A>.  
  
 El <xref:System.Data.DataRow.RowState*> se convierte en `Deleted` después de usar el <xref:System.Data.DataRow.Delete%2A> método en una existente <xref:System.Data.DataRow>. Permanece `Deleted` hasta que llame a <xref:System.Data.DataRow.AcceptChanges%2A>. En este momento, el <xref:System.Data.DataRow> se quita de la tabla.  
  
 <xref:System.Data.DataRow.Delete%2A> no debe llamarse en un bucle foreach al recorrer un <xref:System.Data.DataRowCollection> objeto. <xref:System.Data.DataRow.Delete%2A> modifica el estado de la colección.  
  
 Puede anular una fila eliminada invocando <xref:System.Data.DataRow.RejectChanges%2A>.  
  
> [!NOTE]
>  El <xref:System.Data.DataRow.BeginEdit%2A> suspende temporalmente el método <xref:System.Data.DataTable.RowChanging> eventos, pero la operación de eliminación no es así.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una sencilla <xref:System.Data.DataTable> con dos columnas y diez filas. Después de eliminar varios <xref:System.Data.DataRow> elementos con el <xref:System.Data.DataRow.Delete%2A> método, una de las filas se han recuperado mediante la invocación <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">
          <see cref="T:System.Data.DataRow" /> ya se ha eliminado.</exception>
        <altmember cref="T:System.Data.DataRowState" />
        <altmember cref="T:System.Data.DataViewRowState" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="EndEdit">
      <MemberSignature Language="C#" Value="public void EndEdit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndEdit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.EndEdit" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndEdit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndEdit();" />
      <MemberSignature Language="F#" Value="member this.EndEdit : unit -&gt; unit" Usage="dataRow.EndEdit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finaliza la edición que se está produciendo en la fila.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer la propiedad, se genera una excepción si se produce una excepción en el <xref:System.Data.DataTable.RowChanging> eventos.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.EndEdit%2A> método para finalizar la edición de un <xref:System.Data.DataRow> valor si la función de validación devuelve true.  
  
 [!code-csharp[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.CancelEdit Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.CancelEdit Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.InRowChangingEventException">Se ha llamado al método dentro del evento <see cref="E:System.Data.DataTable.RowChanging" />.</exception>
        <exception cref="T:System.Data.ConstraintException">Restricción interrumpida por la edición.</exception>
        <exception cref="T:System.Data.ReadOnlyException">La fila pertenece a la tabla y la edición ha intentado cambiar el valor de una columna de sólo lectura.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">La edición ha intentado colocar un valor nulo en una columna donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> es false.</exception>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AllowDBNull" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene las filas secundarias de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
        <summary>Obtiene las filas secundarias de este <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtiene o establece los datos almacenados en la columna especificada por el índice.  
  
   
  
## Examples  
 Si se trata de una edición, vea <xref:System.Data.DataRow.GetChildRows%2A> para las excepciones que se pueden generar. Se produce cuando se intenta establecer un valor en una fila eliminada.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.ArgumentNullException">La relación es <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
        <summary>Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtiene o establece los datos almacenados en la columna especificada por el índice.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
        <summary>Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtiene o establece los datos almacenados en la columna especificada por el índice.  
  
 El <xref:System.Data.DataRow.HasVersion%2A> no debe confundirse con el <xref:System.Data.DataRowVersion> propiedad.  
  
 El <xref:System.Data.DataRowVersion.Default> argumento describe el estado de los datos que contiene la columna con respecto al valor original de la columna. En el ejemplo siguiente se obtiene el valor actual de una celda seleccionada en el `GetChildRows` control. La columna no pertenece a la tabla.  
  
   
  
## Examples  
 Si se trata de una edición, vea <xref:System.Data.DataRow.GetChildRows%2A> para las excepciones que se pueden generar. El  argumento contiene un valor null.  
  
 [!code-csharp[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetChildRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetChildRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetChildRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetChildRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetChildRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetChildRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetChildRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetChildRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetChildRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> de <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
        <summary>Obtiene las filas secundarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obtiene o establece los datos almacenados en la columna especificada por el índice.  
  
 El <xref:System.Data.DataRow.HasVersion%2A> no debe confundirse con el <xref:System.Data.DataRowVersion> propiedad.  
  
 El <xref:System.Data.DataRowVersion.Default> argumento describe el estado de los datos que contiene la columna con respecto al valor original de la columna. En el ejemplo siguiente se obtiene el valor actual de una celda seleccionada en el `GetChildRows` control. La columna no pertenece a la tabla.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene la descripción de error para una columna.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (column As DataColumn) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : System.Data.DataColumn -&gt; string" Usage="dataRow.GetColumnError column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Obtiene la descripción de error del <see cref="T:System.Data.DataColumn" /> especificado.</summary>
        <returns>Texto de la descripción de error.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la fila es nueva, también se puede pasar <xref:System.Data.DataRow.SetColumnError%2A> para el parámetro recuperar el valor predeterminado de la columna.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> método. Por lo tanto, puede usar el <xref:System.Data.DataRow.GetColumnsInError%2A> método para recuperar todas las columnas con errores. Al pasar <xref:System.Data.DataTable.GetErrors%2A>, la propiedad devuelve el valor actual de valor, cualquiera que sea su versión.  
  
 El <xref:System.Data.DataRow.ClearErrors%2A> método se llama implícitamente al cambiar el valor de un control enlazado a datos o cuando un  objeto se agrega a la ; el  método se llama implícitamente cuando se llama a los métodos siguientes: el  método de la  objeto, el  método de la  objeto, o el  método.  
  
   
  
## Examples  
 Por el contrario, el <xref:System.Data.DataRow> enumeración  devuelve la versión de los datos después de la  ha llamado al método.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : int -&gt; string" Usage="dataRow.GetColumnError columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Índice de base cero de la columna.</param>
        <summary>Obtiene la descripción de error para la columna especificada mediante un índice.</summary>
        <returns>Texto de la descripción de error.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la fila es nueva, también se puede pasar <xref:System.Data.DataRow.SetColumnError%2A> para el parámetro recuperar el valor predeterminado de la columna.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> método. Por lo tanto, puede usar el <xref:System.Data.DataRow.GetColumnsInError%2A> método para recuperar todas las columnas con errores.  
  
 El <xref:System.Data.DataRow.ClearErrors%2A> método se llama implícitamente al cambiar el valor de un control enlazado a datos o cuando un  objeto se agrega a la ; el  método se llama implícitamente cuando se llama a los métodos siguientes: el  método de la  objeto, el  método de la  objeto, o el  método.  
  
   
  
## Examples  
 Por el contrario, el <xref:System.Data.DataRow> enumeración  devuelve la versión de los datos después de la  ha llamado al método.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnError">
      <MemberSignature Language="C#" Value="public string GetColumnError (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetColumnError(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnError (columnName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetColumnError(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.GetColumnError : string -&gt; string" Usage="dataRow.GetColumnError columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">El nombre de la columna.</param>
        <summary>Obtiene la descripción de error para una columna, especificada mediante un nombre.</summary>
        <returns>Texto de la descripción de error.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la fila es nueva, también se puede pasar <xref:System.Data.DataRow.SetColumnError%2A> para el parámetro recuperar el valor predeterminado de la columna.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> método. Por lo tanto, puede usar el <xref:System.Data.DataRow.GetColumnsInError%2A> método para recuperar todas las columnas con errores.  
  
 El <xref:System.Data.DataRow.ClearErrors%2A> método se llama implícitamente al cambiar el valor de un control enlazado a datos o cuando un  objeto se agrega a la ; el  método se llama implícitamente cuando se llama a los métodos siguientes: el  método de la  objeto, el  método de la  objeto, o el  método.  
  
   
  
## Examples  
 Por el contrario, el <xref:System.Data.DataRow> enumeración  devuelve la versión de los datos después de la  ha llamado al método.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetColumnsInError">
      <MemberSignature Language="C#" Value="public System.Data.DataColumn[] GetColumnsInError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataColumn[] GetColumnsInError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetColumnsInError" />
      <MemberSignature Language="VB.NET" Value="Public Function GetColumnsInError () As DataColumn()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataColumn ^&gt; ^ GetColumnsInError();" />
      <MemberSignature Language="F#" Value="member this.GetColumnsInError : unit -&gt; System.Data.DataColumn[]" Usage="dataRow.GetColumnsInError " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataColumn[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtiene una matriz de columnas que tienen errores.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataColumn" /> que contienen errores.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se eliminó la fila. Obtiene o establece todos los valores de esta fila mediante una matriz. Puede utilizar esta propiedad para establecer u obtener los valores de esta fila mediante una matriz.  
  
 Si usa esta propiedad para establecer los valores, la matriz debe tener el mismo tamaño y orden que la colección de columnas. Esto incluye <xref:System.Data.DataRow.RowError%2A>.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.HasErrors%2A> para buscar errores. Si la fila tiene errores, el <xref:System.Data.DataRow.GetColumnsInError%2A> método devuelve una matriz de columnas con errores que, a continuación, se pueden resolver. El <xref:System.Data.DataRow.ClearErrors%2A> , a continuación, se llama el método para borrar todos los errores.  
  
 [!code-csharp[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ClearErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ClearErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataTable.GetErrors" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene la fila primaria de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
        <summary>Obtiene la fila primaria de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
   
  
## Examples  
 Si se trata de una edición, vea <xref:System.Data.DataRow.GetParentRow%2A> para las excepciones que se pueden generar. Se produce cuando se intenta establecer un valor en una fila eliminada.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="relation" /> no pertenece a <see cref="T:System.Data.DataTable" />.  La fila es <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">Esta fila no pertenece a la tabla secundaria del objeto <see cref="T:System.Data.DataRelation" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a una tabla.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Obtiene la fila primaria de <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.GetParentRow%2A> para imprimir un valor de cada fila primaria de cada <xref:System.Data.DataRow> en un <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relation As DataRelation, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener.</param>
        <summary>Obtiene la fila primaria de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
 El <xref:System.Data.DataRow.HasVersion%2A> no debe confundirse con el <xref:System.Data.DataRowVersion> propiedad.  
  
   
  
## Examples  
 Si se trata de una edición, vea <xref:System.Data.DataRow.GetParentRow%2A> para las excepciones que se pueden generar. Se produce cuando se intenta establecer un valor en una fila eliminada.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La fila es <see langword="null" />.  <paramref name="relation" /> no pertenece a las relaciones primarias de esta tabla.</exception>
        <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a una tabla.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="T:System.Data.DataRowVersion" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRow">
      <MemberSignature Language="C#" Value="public System.Data.DataRow GetParentRow (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow GetParentRow(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRow(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRow (relationName As String, version As DataRowVersion) As DataRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DataRow ^ GetParentRow(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRow : string * System.Data.DataRowVersion -&gt; System.Data.DataRow" Usage="dataRow.GetParentRow (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" />.</param>
        <summary>Obtiene la fila primaria de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>
          <see cref="T:System.Data.DataRow" /> primario de la fila actual.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
 El <xref:System.Data.DataRow.HasVersion%2A> no debe confundirse con el <xref:System.Data.DataRowVersion> propiedad.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.GetParentRow%2A> para imprimir un valor de cada fila primaria de cada <xref:System.Data.DataRow> en un <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.GetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Data.DataException">Una fila secundaria tiene varios elementos primarios.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetParentRows">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene las filas primarias de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
        <summary>Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
   
  
## Examples  
 Si se trata de una edición, vea <xref:System.Data.DataRow.GetParentRows%2A> para las excepciones que se pueden generar. Se produce cuando se intenta establecer un valor en una fila eliminada.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" /> no pertenece al <see cref="T:System.Data.DataSet" /> de esta fila.</exception>
        <exception cref="T:System.ArgumentNullException">La fila es <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows relationName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
        <summary>Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" />.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (System.Data.DataRelation relation, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(class System.Data.DataRelation relation, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.Data.DataRelation,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relation As DataRelation, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::Data::DataRelation ^ relation, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : System.Data.DataRelation * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relation, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relation" Type="System.Data.DataRelation" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relation">Objeto <see cref="T:System.Data.DataRelation" /> que se va a usar.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener.</param>
        <summary>Obtiene las filas primarias de <see cref="T:System.Data.DataRow" /> mediante el <see cref="T:System.Data.DataRelation" /> especificado y <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
 El <xref:System.Data.DataRow.HasVersion%2A> no debe confundirse con el <xref:System.Data.DataRowVersion> propiedad.  
  
   
  
## Examples  
 Si se trata de una edición, vea <xref:System.Data.DataRow.GetParentRows%2A> para las excepciones que se pueden generar. Se produce cuando se intenta establecer un valor en una fila eliminada.  
  
 [!code-vb[Classic WebData DataRow.GetParentRows3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.GetParentRows3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Data.DataRelation" /> no pertenece al <see cref="T:System.Data.DataSet" /> de esta fila.</exception>
        <exception cref="T:System.ArgumentNullException">La fila es <see langword="null" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">La tabla secundaria de la relación no es la tabla a la que pertenece la fila.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
        <altmember cref="P:System.Data.DataTable.ChildRelations" />
        <altmember cref="T:System.Data.DataRelation" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRow(System.String)" />
        <altmember cref="P:System.Data.DataSet.Relations" />
      </Docs>
    </Member>
    <Member MemberName="GetParentRows">
      <MemberSignature Language="C#" Value="public System.Data.DataRow[] GetParentRows (string relationName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.DataRow[] GetParentRows(string relationName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.GetParentRows(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParentRows (relationName As String, version As DataRowVersion) As DataRow()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Data::DataRow ^&gt; ^ GetParentRows(System::String ^ relationName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.GetParentRows : string * System.Data.DataRowVersion -&gt; System.Data.DataRow[]" Usage="dataRow.GetParentRows (relationName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRow[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="relationName">
          <see cref="P:System.Data.DataRelation.RelationName" /> de un <see cref="T:System.Data.DataRelation" />.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de los datos que se va a obtener. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
        <summary>Obtiene las filas primarias de un <see cref="T:System.Data.DataRow" /> mediante el <see cref="P:System.Data.DataRelation.RelationName" /> especificado de un <see cref="T:System.Data.DataRelation" /> y <see cref="T:System.Data.DataRowVersion" />.</summary>
        <returns>Matriz de objetos <see cref="T:System.Data.DataRow" /> o una matriz de longitud cero.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un valor de la matriz no coincide con su <xref:System.Data.DataSet> en sus respectivos <xref:System.Data.DataRelation>.  
  
 Restricción interrumpida por una edición.  
  
 El <xref:System.Data.DataRow.HasVersion%2A> no debe confundirse con el <xref:System.Data.DataRowVersion> propiedad.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La relación y la fila no pertenecen a la misma tabla.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="relation" /> es <see langword="null" />.</exception>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene el <see cref="T:System.Data.DataRowVersion" /> solicitado.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasErrors">
      <MemberSignature Language="C#" Value="public bool HasErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasErrors" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.HasErrors" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasErrors : bool" Usage="System.Data.DataRow.HasErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si hay errores en una fila.</summary>
        <value>Es <see langword="true" /> si la fila contiene un error; en caso contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `HasErrors` Devuelve `true` si cualquier <xref:System.Data.DataColumn> objeto de la fila contiene un error, o si el <xref:System.Data.DataRow.RowError%2A> propiedad de la <xref:System.Data.DataRow> no es una cadena vacía.  
  
 Cuando la validación de datos, puede establecer un error en cualquier columna de una fila. Este tipo de columna, cuando se muestra en el <xref:System.Windows.Forms.DataGrid?displayProperty=nameWithType> de control, se marca con un signo de exclamación rojo para indicar al usuario que la columna muestra un error.  
  
 Use <xref:System.Data.DataRow.SetColumnError%2A> para establecer un error en cualquier columna.  
  
 Use la <xref:System.Data.DataRow.GetColumnError%2A> y `GetColumnsInError` métodos para devolver las columnas con errores.  
  
 El <xref:System.Data.DataRow.ClearErrors%2A> método borra todos los errores de la fila.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.HasErrors%2A> para buscar errores. Si la fila tiene errores, el <xref:System.Data.DataRow.GetColumnsInError%2A> método devuelve una matriz de columnas con errores que, a continuación, se pueden resolver. El <xref:System.Data.DataRow.ClearErrors%2A> , a continuación, se llama el método para borrar todos los errores.  
  
 [!code-csharp[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.HasErrors Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasErrors Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataRow.GetColumnError(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasVersion">
      <MemberSignature Language="C#" Value="public bool HasVersion (System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasVersion(valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.HasVersion(System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasVersion (version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasVersion(System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.HasVersion : System.Data.DataRowVersion -&gt; bool" Usage="dataRow.HasVersion version" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila.</param>
        <summary>Obtiene un valor que indica si existe una versión especificada.</summary>
        <returns>
          <see langword="true" /> si la versión existe; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vea el método <xref:System.Data.DataRow.BeginEdit%2A> para más información.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.HasVersion%2A> método para determinar si el valor actual de una columna y el valor propuesto son iguales. Si es así, se cancela la edición. En caso contrario, el <xref:System.Data.DataRow.AcceptChanges%2A> método se llama para finalizar la edición.  
  
 [!code-vb[Classic WebData DataRow.HasVersion Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.HasVersion Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataTable.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="P:System.Data.DataRow.Item(System.Int32)" />
        <altmember cref="M:System.Data.DataRow.GetChildRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.GetParentRows(System.String)" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNull">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene un valor que indica si la columna especificada contiene un valor null.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn -&gt; bool" Usage="dataRow.IsNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataColumn" /> especificado contiene un valor null.</summary>
        <returns>
          <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se imprime cada columna de cada fila de cada tabla de un <xref:System.Data.DataSet>. Si la fila se establece en un valor null, no se imprime el valor.  
  
 [!code-vb[Classic WebData DataRow.IsNull2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnIndex As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(int columnIndex);" />
      <MemberSignature Language="F#" Value="member this.IsNull : int -&gt; bool" Usage="dataRow.IsNull columnIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Índice de base cero de la columna.</param>
        <summary>Obtiene un valor que indica si la columna en el índice especificado contiene un valor null.</summary>
        <returns>
          <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se cambia el valor de una columna con un valor null y, a continuación, usa el <xref:System.Data.DataRow.IsNull%2A> método para determinar si el valor es null.  
  
 [!code-vb[Classic WebData DataRow.IsNull Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (columnName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="member this.IsNull : string -&gt; bool" Usage="dataRow.IsNull columnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">El nombre de la columna.</param>
        <summary>Obtiene un valor que indica si la columna con nombre contiene un valor null.</summary>
        <returns>
          <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se cambia el valor de una columna con un valor null y, a continuación, usa el <xref:System.Data.DataRow.IsNull%2A> método para determinar si el valor es null.  
  
 [!code-vb[Classic WebData DataRow.IsNull1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.IsNull1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNull">
      <MemberSignature Language="C#" Value="public bool IsNull (System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNull(class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.IsNull(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNull (column As DataColumn, version As DataRowVersion) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNull(System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="member this.IsNull : System.Data.DataColumn * System.Data.DataRowVersion -&gt; bool" Usage="dataRow.IsNull (column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
        <summary>Obtiene un valor que indica si el objeto <see cref="T:System.Data.DataColumn" /> y la enumeración <see cref="T:System.Data.DataRowVersion" /> especificados contiene un valor null.</summary>
        <returns>
          <see langword="true" /> si la columna contiene un valor nulo; en caso contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtiene o establece datos almacenados en una columna especificada.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(column As DataColumn) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^] { System::Object ^ get(System::Data::DataColumn ^ column); void set(System::Data::DataColumn ^ column, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Un valor de tipo <see cref="T:System.Data.DataColumn" /> que contiene los datos.</param>
        <summary>Obtiene o establece los datos almacenados en el <see cref="T:System.Data.DataColumn" /> especificado.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer la propiedad, se genera una excepción si se produce una excepción en el <xref:System.Data.DataTable.ColumnChanging> eventos.  
  
 Si se trata de una edición inmediata, vea <xref:System.Data.DataRow.EndEdit%2A> para las excepciones que se pueden generar.  
  
   
  
## Examples  
 Los ejemplos siguientes muestran el uso de la <xref:System.Data.DataRow.Item%2A> propiedad para obtener y establecer el valor de un índice de columna específica. El primer ejemplo obtiene el valor de la primera columna de cualquier fila que un usuario hace clic en un <xref:System.Windows.Forms.DataGrid> control. El segundo establece un valor que se pasa como argumento al método.  
  
 [!code-vb[Classic WebData DataRow.this2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La columna no pertenece a esta tabla.</exception>
        <exception cref="T:System.ArgumentNullException">El valor de <paramref name="column" /> es null.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se intentó establecer un valor en una fila eliminada.</exception>
        <exception cref="T:System.InvalidCastException">No coinciden los tipos de datos del valor y de la columna.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnIndex As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int] { System::Object ^ get(int columnIndex); void set(int columnIndex, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Índice de base cero de la columna.</param>
        <summary>Obtiene o establece los datos almacenados en la columna especificada mediante un índice.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer la propiedad, se genera una excepción si se produce una excepción en el <xref:System.Data.DataTable.ColumnChanging> eventos.  
  
 Si se trata de una edición, vea <xref:System.Data.DataRow.EndEdit%2A> para las excepciones que se pueden generar.  
  
   
  
## Examples  
 Los ejemplos siguientes muestran el uso de la <xref:System.Data.DataRow.Item%2A> propiedad para obtener y establecer el valor de un índice de columna específica. El primer ejemplo obtiene el valor de la primera columna de cualquier fila que un usuario hace clic en un <xref:System.Windows.Forms.DataGrid> control.  
  
 [!code-csharp[Classic WebData DataRow.this Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produce cuando se intenta establecer un valor en una fila eliminada.</exception>
        <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
        <exception cref="T:System.InvalidCastException">Se produce cuando se establece el valor y el objeto <see cref="T:System.Type" /> del valor nuevo no coincide con <see cref="P:System.Data.DataColumn.DataType" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(columnName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ columnName); void set(System::String ^ columnName, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">El nombre de la columna.</param>
        <summary>Obtiene o establece los datos almacenados en la columna especificada mediante un nombre.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Al establecer la propiedad, se genera una excepción si se produce una excepción en el <xref:System.Data.DataTable.ColumnChanging> eventos.  
  
 Si se trata de una edición inmediata, vea <xref:System.Data.DataRow.EndEdit%2A> para las excepciones que se pueden generar.  
  
   
  
## Examples  
 Los ejemplos siguientes muestran el uso de la <xref:System.Data.DataRow.Item%2A> propiedad para obtener y establecer el valor de un índice de columna específica. El primer ejemplo obtiene el valor de la primera columna de cualquier fila que un usuario hace clic en un <xref:System.Windows.Forms.DataGrid> control. El segundo establece un valor que se pasa como argumento al método.  
  
 [!code-csharp[Classic WebData DataRow.this1 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se produce cuando se intenta establecer un valor en una fila eliminada.</exception>
        <exception cref="T:System.InvalidCastException">Se produce cuando se establece un valor y su objeto <see cref="T:System.Type" /> no coincide con <see cref="P:System.Data.DataColumn.DataType" />.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Se produce cuando se intenta insertar un valor null en una columna donde <see cref="P:System.Data.DataColumn.AllowDBNull" /> se establece en <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[System.Data.DataColumn column, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(class System.Data.DataColumn, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(column As DataColumn, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::Data::DataColumn ^, System::Data::DataRowVersion] { System::Object ^ get(System::Data::DataColumn ^ column, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(System.Data.DataColumn * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="column">Objeto <see cref="T:System.Data.DataColumn" /> que contiene información sobre la columna.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
        <summary>Obtiene la versión específica de datos almacenados en el <see cref="T:System.Data.DataColumn" /> determinado.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El `version` no debe confundirse con el <xref:System.Data.DataRow.RowState*> propiedad. El `version` argumento describe el estado de los datos que contiene la columna con respecto al valor original de la columna.  
  
 Al establecer la propiedad, se genera una excepción si se produce una excepción en el <xref:System.Data.DataTable.ColumnChanging> eventos.  
  
 Si se trata de una edición inmediata, vea <xref:System.Data.DataRow.EndEdit%2A> para las excepciones que se pueden generar.  
  
   
  
## Examples  
 En el ejemplo siguiente se obtiene el valor actual de una celda seleccionada en el <xref:System.Windows.Forms.DataGrid> control.  
  
 [!code-csharp[Classic WebData DataRow.this5 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this5 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this5 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La columna no pertenece a la tabla.</exception>
        <exception cref="T:System.ArgumentNullException">El argumento <paramref name="column" /> contiene un valor nulo.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[int columnIndex, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnIndex As Integer, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[int, System::Data::DataRowVersion] { System::Object ^ get(int columnIndex, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(int * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Índice de base cero de la columna.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
        <summary>Obtiene los datos almacenados en la columna, especificada mediante índice y versión de los datos que se van a recuperar.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Solo puede crear o actualizar una fila después de llamar a la <xref:System.Data.DataRow.BeginEdit%2A> método; de forma similar, la <xref:System.Data.DataRow.EndEdit%2A> método debe llamarse para confirmar la edición. Después de llamar a la <xref:System.Data.DataRow.EndEdit%2A> método, y antes de llamar a la <xref:System.Data.DataRow.AcceptChanges%2A> propuesta de representaciones internas del original y nuevo método, se almacenan los valores. Por lo tanto, hasta que llame a la <xref:System.Data.DataRow.AcceptChanges%2A>, puede usar el `version` argumento para especificar qué versión de un valor de columna necesita, ya sea el `DataRowVersion.Original` o `DataRowVersion.Proposed`. Sin embargo, tan pronto como llamaría a la <xref:System.Data.DataRow.AcceptChanges%2A> método, la versión de la columna se vuelve a `DataRowVersion.Original`. Si la fila es nueva, también se puede pasar `DataRowVersion.Default` para el parámetro recuperar el valor predeterminado de la columna. Al pasar `DataRowVersion.Current`, la propiedad devuelve el valor actual de valor, cualquiera que sea su versión.  
  
> [!NOTE]
>  El <xref:System.Data.DataRow.BeginEdit%2A> método se llama implícitamente al cambiar el valor de un control enlazado a datos o cuando un <xref:System.Data.DataRow> objeto se agrega a la <xref:System.Data.DataRowCollection>; el <xref:System.Data.DataRow.EndEdit%2A> método se llama implícitamente cuando se llama a los métodos siguientes: el <xref:System.Data.DataRow.AcceptChanges%2A> método de la <xref:System.Data.DataRow> objeto, el <xref:System.Data.DataTable.AcceptChanges%2A> método de la <xref:System.Data.DataTable> objeto, o el <xref:System.Data.DataRow.CancelEdit%2A> método.  
  
 Por el contrario, el <xref:System.Data.DataRowVersion> enumeración `Current` devuelve la versión de los datos después de la <xref:System.Data.DataRow.EndEdit%2A> ha llamado al método.  
  
 El `version` argumento no debe confundirse con el <xref:System.Data.DataRow.RowState*> propiedad. El `version` argumento describe el estado de los datos que contiene la columna con respecto al valor original de la columna. El <xref:System.Data.DataRow.RowState*> propiedad describe el estado de la fila completa en relación con su elemento primario <xref:System.Data.DataTable>.  
  
 Al establecer la propiedad, se genera una excepción si se produce una excepción en el <xref:System.Data.DataTable.ColumnChanging> eventos.  
  
 Si se trata de una edición inmediata, vea <xref:System.Data.DataRow.EndEdit%2A> para las excepciones que se pueden generar.  
  
   
  
## Examples  
 En el ejemplo siguiente se obtiene el valor actual de una columna mediante el <xref:System.Data.DataRow.Item%2A> propiedad de la <xref:System.Data.DataRow> objeto.  
  
 [!code-vb[Classic WebData DataRow.this3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
        <exception cref="T:System.InvalidCastException">No coinciden los tipos de datos del valor y de la columna.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se intentó establecer un valor en una fila eliminada.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string columnName, System.Data.DataRowVersion version] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string, valuetype System.Data.DataRowVersion)" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Item(System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(columnName As String, version As DataRowVersion) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^, System::Data::DataRowVersion] { System::Object ^ get(System::String ^ columnName, System::Data::DataRowVersion version); };" />
      <MemberSignature Language="F#" Value="member this.Item(string * System.Data.DataRowVersion) : obj" Usage="System.Data.DataRow.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <param name="columnName">El nombre de la columna.</param>
        <param name="version">Uno de los valores de <see cref="T:System.Data.DataRowVersion" /> que especifica la versión de la fila que desea. Los valores posibles son <see langword="Default" />, <see langword="Original" />, <see langword="Current" /> y <see langword="Proposed" />.</param>
        <summary>Obtiene la versión específica de datos almacenados en la columna con nombre.</summary>
        <value>
          <see cref="T:System.Object" /> que contiene los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La versión no debe confundirse con el <xref:System.Data.DataRow.RowState*> propiedad. El `version` argumento describe el estado de los datos que contiene la columna con respecto al valor original de la columna. El <xref:System.Data.DataRow.RowState*> propiedad describe el estado de la fila completa en relación con su elemento primario <xref:System.Data.DataTable>.  
  
 Al establecer la propiedad, se genera una excepción si se produce una excepción en el <xref:System.Data.DataTable.ColumnChanging> eventos.  
  
 Si se trata de una edición inmediata, vea <xref:System.Data.DataRow.EndEdit%2A> para las excepciones que se pueden generar.  
  
   
  
## Examples  
 En el ejemplo siguiente se obtiene la versión actual de datos en una celda seleccionada de un <xref:System.Windows.Forms.DataGrid> control.  
  
 [!code-csharp[Classic WebData DataRow.this4 Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.this4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.this4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">No se puede encontrar la columna especificada mediante <paramref name="columnName" />.</exception>
        <exception cref="T:System.InvalidCastException">No coinciden los tipos de datos del valor y de la columna.</exception>
        <exception cref="T:System.Data.VersionNotFoundException">La fila no tiene esta versión de datos.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Se ha eliminado la fila.</exception>
        <altmember cref="T:System.Data.DataRowVersion" />
      </Docs>
    </Member>
    <Member MemberName="ItemArray">
      <MemberSignature Language="C#" Value="public object[] ItemArray { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object[] ItemArray" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.ItemArray" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemArray As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Object ^&gt; ^ ItemArray { cli::array &lt;System::Object ^&gt; ^ get(); void set(cli::array &lt;System::Object ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemArray : obj[] with get, set" Usage="System.Data.DataRow.ItemArray" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece todos los valores de esta fila mediante una matriz.</summary>
        <value>Matriz de tipo <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Puede utilizar esta propiedad para establecer u obtener los valores de esta fila mediante una matriz. Si usa esta propiedad para establecer los valores, la matriz debe tener el mismo tamaño y orden que la colección de columnas. Pasar `null` en el <xref:System.Data.DataRow.ItemArray%2A> indica que se ha especificado ningún valor.  
  
 Los usuarios pueden generar excepciones en el <xref:System.Data.DataTable.ColumnChanging> eventos o <xref:System.Data.DataTable.RowChanging> eventos.  
  
   
  
## Examples  
 Los ejemplos siguientes muestran cómo obtener y establecer valores utilizando la <xref:System.Data.DataRow.ItemArray%2A> propiedad.  
  
 [!code-csharp[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.ItemArray Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.ItemArray Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La matriz es mayor que el número de columnas de la tabla.</exception>
        <exception cref="T:System.InvalidCastException">La propiedad <see cref="P:System.Data.DataColumn.DataType" /> de un valor de la matriz no coincide con su respectivo objeto <see cref="T:System.Data.DataColumn" />.</exception>
        <exception cref="T:System.Data.ConstraintException">Restricción interrumpida por una edición.</exception>
        <exception cref="T:System.Data.ReadOnlyException">Una edición ha intentado cambiar el valor de una columna de sólo lectura.</exception>
        <exception cref="T:System.Data.NoNullAllowedException">Una operación de edición ha intentado colocar un valor null en una columna en la que la propiedad <see cref="P:System.Data.DataColumn.AllowDBNull" /> del objeto <see cref="T:System.Data.DataColumn" /> es <see langword="false" />.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">La fila se ha eliminado.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="P:System.Data.DataColumn.AutoIncrement" />
        <altmember cref="T:System.Data.DataColumn" />
      </Docs>
    </Member>
    <Member MemberName="RejectChanges">
      <MemberSignature Language="C#" Value="public void RejectChanges ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RejectChanges() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.RejectChanges" />
      <MemberSignature Language="VB.NET" Value="Public Sub RejectChanges ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RejectChanges();" />
      <MemberSignature Language="F#" Value="member this.RejectChanges : unit -&gt; unit" Usage="dataRow.RejectChanges " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rechaza todos los cambios realizados en esta fila desde la última vez que se llamó a <see cref="M:System.Data.DataRow.AcceptChanges" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se llama a la <xref:System.Data.DataRow.RejectChanges%2A> método, el <xref:System.Data.DataRow.CancelEdit%2A> se llama implícitamente al método para cancelar las modificaciones. Si <xref:System.Data.DataRow.RowState*> se elimina o modifica, la fila vuelve a sus valores anteriores y <xref:System.Data.DataRow.RowState*> permanece sin cambios. Si el <xref:System.Data.DataRow.RowState*> se agrega, se quita la fila.  
  
   
  
## Examples  
 En el ejemplo siguiente se crea una sencilla <xref:System.Data.DataTable> con 2 columnas y 10 filas. Después de varios <xref:System.Data.DataRow> se eliminan los elementos con el <xref:System.Data.DataRow.Delete%2A> método, una de las filas se han recuperado mediante la invocación <xref:System.Data.DataRow.RejectChanges%2A>.  
  
 [!code-csharp[Classic WebData DataRow.Delete Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Delete Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Delete Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">La fila no pertenece a la tabla.</exception>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.IsNull(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RowError">
      <MemberSignature Language="C#" Value="public string RowError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RowError" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowError" />
      <MemberSignature Language="VB.NET" Value="Public Property RowError As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RowError { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RowError : string with get, set" Usage="System.Data.DataRow.RowError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece la descripción de error personalizada para una fila.</summary>
        <value>Texto que describe un error.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Usa el <xref:System.Data.DataRow.HasErrors%2A> propiedad determinar primero si un <xref:System.Data.DataRow> contiene errores.  
  
   
  
## Examples  
 El ejemplo siguiente establece el texto de error para diez filas de una tabla que se muestra en un <xref:System.Windows.Forms.DataGrid> control.  
  
 [!code-csharp[Classic WebData DataRow.RowError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
        <altmember cref="P:System.Data.DataSet.HasErrors" />
      </Docs>
    </Member>
    <Member MemberName="RowState">
      <MemberSignature Language="C#" Value="public System.Data.DataRowState RowState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DataRowState RowState" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.RowState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowState As DataRowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataRowState RowState { System::Data::DataRowState get(); };" />
      <MemberSignature Language="F#" Value="member this.RowState : System.Data.DataRowState" Usage="System.Data.DataRow.RowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataRowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado actual de la fila con respecto a su relación con la colección <see cref="T:System.Data.DataRowCollection" />.</summary>
        <value>Uno de los valores de <see cref="T:System.Data.DataRowState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la <xref:System.Data.DataRow.RowState*> depende de dos factores: el tipo de operación se ha realizado en la fila y si <xref:System.Data.DataRow.AcceptChanges%2A> se ha llamado en el <xref:System.Data.DataRow>.  
  
   
  
## Examples  
 El ejemplo siguiente crea primero un nuevo <xref:System.Data.DataTable> con una columna y, a continuación, crea una sola <xref:System.Data.DataRow>. Como el <xref:System.Data.DataRow> se crea, agrega, modifica y elimina, su <xref:System.Data.DataRow.RowState*> se imprime.  
  
 [!code-csharp[Classic WebData DataRow.RowState Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.RowState Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.RowState Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.AcceptChanges" />
        <altmember cref="M:System.Data.DataRow.BeginEdit" />
        <altmember cref="M:System.Data.DataRowCollection.Add(System.Data.DataRow)" />
        <altmember cref="M:System.Data.DataRow.CancelEdit" />
        <altmember cref="T:System.Data.DataTable" />
        <altmember cref="T:System.Data.DataRowView" />
        <altmember cref="M:System.Data.DataRow.Delete" />
        <altmember cref="M:System.Data.DataRow.EndEdit" />
        <altmember cref="M:System.Data.DataTable.NewRow" />
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="M:System.Data.DataRow.SetModified" />
      </Docs>
    </Member>
    <Member MemberName="SetAdded">
      <MemberSignature Language="C#" Value="public void SetAdded ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAdded() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetAdded" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAdded ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAdded();" />
      <MemberSignature Language="F#" Value="member this.SetAdded : unit -&gt; unit" Usage="dataRow.SetAdded " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cambia la propiedad <see cref="P:System.Data.DataRow.RowState" /> de un objeto <see cref="T:System.Data.DataRow" /> a <see langword="Added" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cambia la propiedad <xref:System.Data.DataRow.RowState*> de un objeto <xref:System.Data.DataRow> a `Added`. Si la fila actual no está en cualquiera un `Unchanged` o un `Added` de estado, produce un <xref:System.InvalidOperationException> con el mensaje que `SetAdded` sólo se puede invocar en un `DataRow` instancia donde el `RowState` es `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetModified" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetColumnError">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece la descripción de error para una columna.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (System.Data.DataColumn column, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(class System.Data.DataColumn column, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Data.DataColumn,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (column As DataColumn, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::Data::DataColumn ^ column, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : System.Data.DataColumn * string -&gt; unit" Usage="dataRow.SetColumnError (column, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="column">
          <see cref="T:System.Data.DataColumn" /> para el que se va a establecer la descripción de error.</param>
        <param name="error">Descripción de error.</param>
        <summary>Establece la descripción de error para una columna especificada como <see cref="T:System.Data.DataColumn" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Para examinar las descripciones de error, utilice el <xref:System.Data.DataRow.GetColumnError%2A> método.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> propiedad. Por lo tanto, puede usar el <xref:System.Data.DataRow.GetColumnsInError%2A> método para recuperar todas las columnas con errores.  
  
 Si `null` o una cadena vacía se pasa como el `error` parámetro, el <xref:System.Data.DataRow> se comporta como si se ha establecido ningún error y el <xref:System.Data.DataRow.HasErrors%2A> propiedad devolverá false.  
  
 Para establecer una descripción de error personalizado en la fila completa, utilice el <xref:System.Data.DataRow.RowError%2A> propiedad.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> método.  
  
 El <xref:System.Data.DataRow.ClearErrors%2A> método se llama implícitamente al cambiar el valor de un control enlazado a datos o cuando un  objeto se agrega a la ; el  método se llama implícitamente cuando se llama a los métodos siguientes: el  método de la  objeto, el  método de la  objeto, o el  método.  
  
   
  
## Examples  
 Por el contrario, el <xref:System.Data.DataRow> enumeración  devuelve la versión de los datos después de la  ha llamado al método.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (int columnIndex, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(int32 columnIndex, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnIndex As Integer, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(int columnIndex, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : int * string -&gt; unit" Usage="dataRow.SetColumnError (columnIndex, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnIndex">Índice de base cero de la columna.</param>
        <param name="error">Descripción de error.</param>
        <summary>Establece la descripción de error para una columna especificada mediante un índice.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método se usa para establecer las descripciones de error personalizado en las columnas especificadas. Puede usar el <xref:System.Windows.Forms.ErrorProvider> control para mostrar el texto del error.  
  
 Para examinar las descripciones de error, utilice el <xref:System.Data.DataRow.GetColumnError%2A> método.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> propiedad. Por lo tanto, puede usar el <xref:System.Data.DataRow.GetColumnsInError%2A> método para recuperar todas las columnas con errores.  
  
 Si `null` o una cadena vacía se pasa como el `error` parámetro, el <xref:System.Data.DataRow> se comporta como si se ha establecido ningún error y el <xref:System.Data.DataRow.HasErrors%2A> propiedad devolverá false.  
  
 Para establecer una descripción de error personalizado en la fila completa, utilice el <xref:System.Data.DataRow.RowError%2A> propiedad.  
  
 El <xref:System.Data.DataRow.ClearErrors%2A> método se llama implícitamente al cambiar el valor de un control enlazado a datos o cuando un  objeto se agrega a la ; el  método se llama implícitamente cuando se llama a los métodos siguientes: el  método de la  objeto, el  método de la  objeto, o el  método.  
  
 Para establecer el texto de error que se aplica a una fila completa, establezca el <xref:System.Data.DataRow.RowError%2A> propiedad.  
  
   
  
## Examples  
 Por el contrario, el <xref:System.Data.DataRow> enumeración  devuelve la versión de los datos después de la  ha llamado al método.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">El argumento <paramref name="columnIndex" /> está fuera de intervalo.</exception>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetColumnError">
      <MemberSignature Language="C#" Value="public void SetColumnError (string columnName, string error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetColumnError(string columnName, string error) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetColumnError(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetColumnError (columnName As String, error As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetColumnError(System::String ^ columnName, System::String ^ error);" />
      <MemberSignature Language="F#" Value="member this.SetColumnError : string * string -&gt; unit" Usage="dataRow.SetColumnError (columnName, error)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="error" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="columnName">El nombre de la columna.</param>
        <param name="error">Descripción de error.</param>
        <summary>Establece la descripción de error para una columna especificada mediante un nombre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El nombre de una columna se establece con el <xref:System.Data.DataColumn.ColumnName%2A> propiedad de la <xref:System.Data.DataColumn> clase.  
  
 Para examinar las descripciones de error, utilice el <xref:System.Data.DataRow.GetColumnError%2A> método.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> propiedad. Por lo tanto, puede usar el <xref:System.Data.DataRow.GetColumnsInError%2A> método para recuperar todas las columnas con errores.  
  
 Si `null` o una cadena vacía se pasa como el `error` parámetro, el <xref:System.Data.DataRow> se comporta como si se ha establecido ningún error y el <xref:System.Data.DataRow.HasErrors%2A> propiedad devolverá false.  
  
 Para establecer una descripción de error personalizado en la fila completa, utilice el <xref:System.Data.DataRow.RowError%2A> propiedad.  
  
 Para determinar si existen errores de la colección de columnas, utilice el <xref:System.Data.DataRow.HasErrors%2A> método.  
  
 El <xref:System.Data.DataRow.ClearErrors%2A> método se llama implícitamente al cambiar el valor de un control enlazado a datos o cuando un  objeto se agrega a la ; el  método se llama implícitamente cuando se llama a los métodos siguientes: el  método de la  objeto, el  método de la  objeto, o el  método.  
  
   
  
## Examples  
 Por el contrario, el <xref:System.Data.DataRow> enumeración  devuelve la versión de los datos después de la  ha llamado al método.  
  
 [!code-csharp[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.SetColumnError Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetColumnError Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.ClearErrors" />
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="M:System.Data.DataColumnCollection.Contains(System.String)" />
        <altmember cref="T:System.Data.DataColumn" />
        <altmember cref="M:System.Data.DataRow.GetColumnsInError" />
        <altmember cref="P:System.Data.DataRow.HasErrors" />
        <altmember cref="P:System.Data.DataRow.RowError" />
      </Docs>
    </Member>
    <Member MemberName="SetModified">
      <MemberSignature Language="C#" Value="public void SetModified ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetModified() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetModified" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetModified ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetModified();" />
      <MemberSignature Language="F#" Value="member this.SetModified : unit -&gt; unit" Usage="dataRow.SetModified " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cambia la propiedad <see cref="P:System.Data.DataRow.RowState" /> de un objeto <see cref="T:System.Data.DataRow" /> a <see langword="Modified" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cambia la propiedad <xref:System.Data.DataRow.RowState*> de un objeto <xref:System.Data.DataRow> a `Modified`. Si la fila actual no está en cualquiera un `Unchanged` o un `Added` de estado, produce un <xref:System.InvalidOperationException> con el mensaje que `SetModified` sólo se puede invocar en un `DataRow` instancia donde el `RowState` es `Unchanged`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Data.DataRow.SetAdded" />
        <altmember cref="P:System.Data.DataRow.RowState" />
      </Docs>
    </Member>
    <Member MemberName="SetNull">
      <MemberSignature Language="C#" Value="protected void SetNull (System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNull(class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetNull(System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNull (column As DataColumn)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNull(System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="member this.SetNull : System.Data.DataColumn -&gt; unit" Usage="dataRow.SetNull column" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <param name="column">Objeto <see cref="T:System.Data.DataColumn" />.</param>
        <summary>Establece el valor del objeto <see cref="T:System.Data.DataColumn" /> especificado en un valor null.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use el <xref:System.Data.DataRow.IsNull%2A> método para determinar si una columna contiene un valor null.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetParentRow">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Establece la fila primaria de <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow -&gt; unit" Usage="dataRow.SetParentRow parentRow" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nuevo <see cref="T:System.Data.DataRow" /> primario.</param>
        <summary>Establece la fila primaria de un <see cref="T:System.Data.DataRow" /> con un nuevo <see cref="T:System.Data.DataRow" /> primario especificado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParentRow">
      <MemberSignature Language="C#" Value="public void SetParentRow (System.Data.DataRow parentRow, System.Data.DataRelation relation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParentRow(class System.Data.DataRow parentRow, class System.Data.DataRelation relation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRow.SetParentRow(System.Data.DataRow,System.Data.DataRelation)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetParentRow (parentRow As DataRow, relation As DataRelation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetParentRow(System::Data::DataRow ^ parentRow, System::Data::DataRelation ^ relation);" />
      <MemberSignature Language="F#" Value="member this.SetParentRow : System.Data.DataRow * System.Data.DataRelation -&gt; unit" Usage="dataRow.SetParentRow (parentRow, relation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentRow" Type="System.Data.DataRow" />
        <Parameter Name="relation" Type="System.Data.DataRelation" />
      </Parameters>
      <Docs>
        <param name="parentRow">Nuevo <see cref="T:System.Data.DataRow" /> primario.</param>
        <param name="relation">Relación <see cref="T:System.Data.DataRelation" /> que se va a utilizar.</param>
        <summary>Establece la fila primaria de un <see cref="T:System.Data.DataRow" /> con un nuevo <see cref="T:System.Data.DataRow" /> primario especificado y <see cref="T:System.Data.DataRelation" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente establece la fila primaria de una fila secundaria específica.  
  
 [!code-vb[Classic WebData DataRow.SetParentRow1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.SetParentRow1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.RowNotInTableException">Una de las filas no pertenece a una tabla.</exception>
        <exception cref="T:System.ArgumentNullException">Una de las filas es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La relación no pertenece a la colección <see cref="T:System.Data.DataRelationCollection" /> del objeto <see cref="T:System.Data.DataSet" />.</exception>
        <exception cref="T:System.Data.InvalidConstraintException">El objeto <see cref="T:System.Data.DataTable" /> secundario de la relación no es la tabla a la que pertenece esta fila.</exception>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public System.Data.DataTable Table { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.DataTable Table" />
      <MemberSignature Language="DocId" Value="P:System.Data.DataRow.Table" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Table As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DataTable ^ Table { System::Data::DataTable ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Table : System.Data.DataTable" Usage="System.Data.DataRow.Table" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el <see cref="T:System.Data.DataTable" /> para el que esta fila tiene un esquema.</summary>
        <value>
          <see cref="T:System.Data.DataTable" /> al que pertenece esta fila.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un <xref:System.Data.DataRow> necesariamente no pertenece a la colección de la tabla de filas. Este comportamiento se produce cuando el <xref:System.Data.DataRow> se ha creado pero no se agrega a la <xref:System.Data.DataRowCollection>. Si el <xref:System.Data.DataRow.RowState*> propiedad devuelve `DataRowState.Detached`, la fila no está en ninguna colección.  
  
   
  
## Examples  
 En el ejemplo siguiente se usa el <xref:System.Data.DataRow.Table%2A> propiedad para devolver una referencia a la colección de columnas de la <xref:System.Data.DataTable>.  
  
 [!code-csharp[Classic WebData DataRow.Table Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/CS/source.cs#1)]
 [!code-vb[Classic WebData DataRow.Table Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData DataRow.Table Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.DataColumnCollection" />
        <altmember cref="T:System.Data.DataTable" />
      </Docs>
    </Member>
  </Members>
</Type>