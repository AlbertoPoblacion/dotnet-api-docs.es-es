<Type Name="DataRowExtensions" FullName="System.Data.DataRowExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="757e3e01bb0a6c805ad1b1cd5f7992bc5ab4e09a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37670289" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataRowExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataRowExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataRowExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataRowExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataRowExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataRowExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines the extension methods to the <see cref="T:System.Data.DataRow" /> class. This is a static class.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataSet> API se ha ampliado con dos nuevos métodos de la <xref:System.Data.DataRow> (clase), <xref:System.Data.DataRowExtensions.Field%2A> y <xref:System.Data.DataRowExtensions.SetField%2A>. Puede usarlas para formar [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresiones y consultas de método en <xref:System.Data.DataTable> objetos. Son los métodos recomendados para usar para tener acceso a los valores de columna dentro de [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresiones y consultas de método. Para obtener más información, consulte [métodos genéricos Field y SetField](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="Field&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Provides strongly-typed access to each of the column values in the <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor devuelto de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="column">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</param>
        <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)" /> method also supports nullable types.</summary>
        <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataSet> representa la clase **null** valores con el <xref:System.DBNull.Value> instancia de la <xref:System.DBNull> clase.  Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresión que tiene acceso a una columna con un **null** valor generaría un <xref:System.InvalidCastException> en tiempo de ejecución. Además, <xref:System.Data.DataSet> no admite tipos que aceptan valores NULL. El <xref:System.Data.DataRowExtensions.Field%2A> método proporciona compatibilidad para tener acceso a las columnas como tipos que aceptan valores NULL.  Si el valor subyacente de los de la <xref:System.Data.DataSet> es <xref:System.DBNull.Value>, el tipo que acepta valores NULL devuelto tendrá un valor de **null**.  
  
 Si el valor del elemento especificado <xref:System.Data.DataColumn> es <xref:System.DBNull.Value> y `T` es un tipo de referencia o tipo que acepta valores NULL, el tipo de valor devuelto será **null**. El <xref:System.Data.DataRowExtensions.Field%2A> método no devolverá <xref:System.DBNull.Value>.  
  
 El <xref:System.Data.DataRowExtensions.Field%2A> método no realiza conversiones de tipos. Si se requiere la conversión de tipos, primero debe obtener el valor de columna mediante el uso de la <xref:System.Data.DataRowExtensions.Field%2A> método. El valor de columna, a continuación, debe convertirse a otro tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="column" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
        <exception cref="T:System.NullReferenceException">A **null** value was assigned to a non-nullable type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor devuelto de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="columnIndex">The column index.</param>
        <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)" /> method also supports nullable types.</summary>
        <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataSet> representa la clase **null** valores con el <xref:System.DBNull.Value> instancia de la <xref:System.DBNull> clase.  Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresión que tiene acceso a una columna con un **null** valor generaría un <xref:System.InvalidCastException> en tiempo de ejecución. Además, <xref:System.Data.DataSet> no admite tipos que aceptan valores NULL. El <xref:System.Data.DataRowExtensions.Field%2A> método proporciona compatibilidad para tener acceso a las columnas como tipos que aceptan valores NULL.  Si el valor subyacente de los de la <xref:System.Data.DataSet> es <xref:System.DBNull.Value>, el tipo que acepta valores NULL devuelto tendrá un valor de **null**.  
  
 Si el valor del elemento especificado <xref:System.Data.DataColumn> es **null** y `T` es un tipo de referencia o tipo que acepta valores NULL, el tipo de valor devuelto será **null**.  El <xref:System.Data.DataRowExtensions.Field%2A> método no devolverá <xref:System.DBNull.Value>.  
  
 El <xref:System.Data.DataRowExtensions.Field%2A> método no realiza conversiones de tipos. Si se requiere la conversión de tipos, primero debe obtener el valor de columna mediante el uso de la <xref:System.Data.DataRowExtensions.Field%2A> método. El valor de columna, a continuación, debe convertirse a otro tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
        <exception cref="T:System.NullReferenceException">A **null** value was assigned to a non-nullable type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor devuelto de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="columnName">The name of the column to return the value of.</param>
        <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)" /> method also supports nullable types.</summary>
        <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataSet> representa la clase **null** valores con el <xref:System.DBNull.Value> instancia de la <xref:System.DBNull> clase. Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresión que tiene acceso a una columna con un **null** valor generaría un <xref:System.InvalidCastException> en tiempo de ejecución. Además, <xref:System.Data.DataSet> no admite tipos que aceptan valores NULL. El <xref:System.Data.DataRowExtensions.Field%2A> método proporciona compatibilidad para tener acceso a las columnas como tipos que aceptan valores NULL. Si el valor subyacente de los de la <xref:System.Data.DataSet> es <xref:System.DBNull.Value>, el tipo que acepta valores NULL devuelto tendrá un valor de **null**.  
  
 Si el valor del elemento especificado <xref:System.Data.DataColumn> es **null** y `T` es un tipo de referencia o tipo que acepta valores NULL, el tipo de valor devuelto será **null**. El <xref:System.Data.DataRowExtensions.Field%2A> método no devolverá <xref:System.DBNull.Value>.  
  
 El <xref:System.Data.DataRowExtensions.Field%2A> método no realiza conversiones de tipos. Si se requiere la conversión de tipos, primero debe obtener el valor de columna mediante el uso de la <xref:System.Data.DataRowExtensions.Field%2A> método. El valor de columna, a continuación, debe convertirse a otro tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="columnName" /> does not occur in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
        <exception cref="T:System.NullReferenceException">A <see langword="null" /> value was assigned to a non-nullable type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, column As DataColumn, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * System.Data.DataColumn * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, column, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor devuelto de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="column">The input <see cref="T:System.Data.DataColumn" /> object that specifies the column to return the value of.</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</param>
        <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)" /> method also supports nullable types.</summary>
        <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="column" /> and <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataSet> representa la clase **null** valores con el <xref:System.DBNull.Value> instancia de la <xref:System.DBNull> clase.  Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresión que tiene acceso a una columna con un **null** valor generaría un <xref:System.InvalidCastException> en tiempo de ejecución. Además, <xref:System.Data.DataSet> no admite tipos que aceptan valores NULL. El <xref:System.Data.DataRowExtensions.Field%2A> método proporciona compatibilidad para tener acceso a las columnas como tipos que aceptan valores NULL.  Si el valor subyacente de los de la <xref:System.Data.DataSet> es <xref:System.DBNull.Value>, el tipo que acepta valores NULL devuelto tendrá un valor de **null**.  
  
 Si el valor del elemento especificado <xref:System.Data.DataColumn> es null y `T` es un tipo de referencia o tipo que acepta valores NULL, el tipo de valor devuelto será **null**. El <xref:System.Data.DataRowExtensions.Field%2A> método no devolverá <xref:System.DBNull.Value>.  
  
 El <xref:System.Data.DataRowExtensions.Field%2A> método no realiza conversiones de tipos. Si se requiere la conversión de tipos, primero debe obtener el valor de columna mediante el uso de la <xref:System.Data.DataRowExtensions.Field%2A> método. El valor de columna, a continuación, debe convertirse a otro tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="column" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
        <exception cref="T:System.NullReferenceException">A **null** value was assigned to a non-nullable type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnIndex As Integer, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, int columnIndex, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * int * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnIndex, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor devuelto de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="columnIndex">The zero-based ordinal of the column to return the value of.</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</param>
        <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)" /> method also supports nullable types.</summary>
        <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="ordinal" /> and <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataSet> representa la clase **null** valores con el <xref:System.DBNull.Value> instancia de la <xref:System.DBNull> clase.  Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresión que tiene acceso a una columna con un **null** valor generaría un <xref:System.InvalidCastException> en tiempo de ejecución. Además, <xref:System.Data.DataSet> no admite tipos que aceptan valores NULL. El <xref:System.Data.DataRowExtensions.Field%2A> método proporciona compatibilidad para tener acceso a las columnas como tipos que aceptan valores NULL.  Si el valor subyacente de los de la <xref:System.Data.DataSet> es <xref:System.DBNull.Value>, el tipo que acepta valores NULL devuelto tendrá un valor de **null**.  
  
 Si el valor del elemento especificado <xref:System.Data.DataColumn> es null y `T` es un tipo de referencia o tipo que acepta valores NULL, el tipo de valor devuelto será **null**. El <xref:System.Data.DataRowExtensions.Field%2A> método no devolverá <xref:System.DBNull.Value>.  
  
 El <xref:System.Data.DataRowExtensions.Field%2A> método no realiza conversiones de tipos. Si se requiere la conversión de tipos, primero debe obtener el valor de columna mediante el uso de la <xref:System.Data.DataRowExtensions.Field%2A> método. El valor de columna, a continuación, debe convertirse a otro tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="ordinal" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
        <exception cref="T:System.NullReferenceException">A **null** value was assigned to a non-nullable type.</exception>
      </Docs>
    </Member>
    <Member MemberName="Field&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Field&lt;T&gt; (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Field&lt;T&gt;(class System.Data.DataRow row, string columnName, valuetype System.Data.DataRowVersion version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function Field(Of T) (row As DataRow, columnName As String, version As DataRowVersion) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static T Field(System::Data::DataRow ^ row, System::String ^ columnName, System::Data::DataRowVersion version);" />
      <MemberSignature Language="F#" Value="static member Field : System.Data.DataRow * string * System.Data.DataRowVersion -&gt; 'T" Usage="System.Data.DataRowExtensions.Field (row, columnName, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="version" Type="System.Data.DataRowVersion" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor devuelto de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="columnName">The name of the column to return the value of.</param>
        <param name="version">A <see cref="T:System.Data.DataRowVersion" /> enumeration that specifies the version of the column value to return, such as <see langword="Current" /> or <see langword="Original" /> version.</param>
        <summary>Provides strongly-typed access to each of the column values in the specified row. The <see cref="M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)" /> method also supports nullable types.</summary>
        <returns>The value, of type <paramref name="T" />, of the <see cref="T:System.Data.DataColumn" /> specified by <paramref name="columnName" /> and <paramref name="version" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Data.DataSet> representa la clase **null** valores con el <xref:System.DBNull.Value> instancia de la <xref:System.DBNull> clase.  Un [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expresión que tiene acceso a una columna con un **null** valor generaría un <xref:System.InvalidCastException> en tiempo de ejecución. Además, <xref:System.Data.DataSet> no admite tipos que aceptan valores NULL. El <xref:System.Data.DataRowExtensions.Field%2A> método proporciona compatibilidad para tener acceso a las columnas como tipos que aceptan valores NULL.  Si el valor subyacente de los de la <xref:System.Data.DataSet> es <xref:System.DBNull.Value>, el tipo que acepta valores NULL devuelto tendrá un valor de **null**.  
  
 Si el valor del elemento especificado <xref:System.Data.DataColumn> es null y `T` es un tipo de referencia o tipo que acepta valores NULL, el tipo de valor devuelto será **null**. El <xref:System.Data.DataRowExtensions.Field%2A> método no devolverá <xref:System.DBNull.Value>.  
  
 El <xref:System.Data.DataRowExtensions.Field%2A> método no realiza conversiones de tipos. Si se requiere la conversión de tipos, primero debe obtener el valor de columna mediante el uso de la <xref:System.Data.DataRowExtensions.Field%2A> método. El valor de columna, a continuación, debe convertirse a otro tipo.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
        <exception cref="T:System.IndexOutOfRangeException">The column specified by <paramref name="columnName" /> does not exist in the <see cref="T:System.Data.DataTable" /> that the <see cref="T:System.Data.DataRow" /> is a part of.</exception>
        <exception cref="T:System.NullReferenceException">A **null** value was assigned to a non-nullable type.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetField&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, System.Data.DataColumn column, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, class System.Data.DataColumn column, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, column As DataColumn, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::Data::DataColumn ^ column, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * System.Data.DataColumn * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, column, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="column" Type="System.Data.DataColumn" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="column">The input <see cref="T:System.Data.DataColumn" /> specifies which row value to retrieve.</param>
        <param name="value">The new row value for the specified column, of type <c>T</c>.</param>
        <summary>Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />. The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)" /> method also supports nullable types.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` es **null**, el <xref:System.Data.DataRowExtensions.SetField%2A> método convierte el **null** valor <xref:System.DBNull.Value> en subyacente <xref:System.Data.DataColumn>.  
  
 El <xref:System.Data.DataRowExtensions.SetField%2A> método no realiza ninguna conversión de tipos. Sin embargo, esto no significa que no se realizará una conversión de tipos. El <xref:System.Data.DataRowExtensions.SetField%2A> método expone el [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportamiento de la <xref:System.Data.DataRow> clase. Se pudo realizar una conversión de tipos por los <xref:System.Data.DataRow> objeto y el valor convertido se guardará en la fila.  
  
 Las excepciones se pueden pasar a través de la <xref:System.Data.DataRowExtensions.SetField%2A> método subyacente <xref:System.Data.DataRow> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The column specified by <paramref name="column" /> cannot be found.</exception>
        <exception cref="T:System.ArgumentNullException">The <paramref name="column" /> is **null**.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, int columnIndex, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, int32 columnIndex, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnIndex As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, int columnIndex, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * int * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnIndex" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="columnIndex">The zero-based ordinal of the column to set the value of.</param>
        <param name="value">The new row value for the specified column, of type <c>T</c>.</param>
        <summary>Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" /> the method is called on. The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)" /> method also supports nullable types.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` es **null**, el <xref:System.Data.DataRowExtensions.SetField%2A> método convierte el **null** valor <xref:System.DBNull.Value> en subyacente <xref:System.Data.DataColumn>.  
  
 El <xref:System.Data.DataRowExtensions.SetField%2A> método no realiza ninguna conversión de tipos. Sin embargo, esto no significa que no se realizará una conversión de tipos. El <xref:System.Data.DataRowExtensions.SetField%2A> método expone el [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportamiento de la <xref:System.Data.DataRow> clase. Se pudo realizar una conversión de tipos por los <xref:System.Data.DataRow> objeto y el valor convertido se guardará en la fila.  
  
 Las excepciones se pueden pasar a través de la <xref:System.Data.DataRowExtensions.SetField%2A> método subyacente <xref:System.Data.DataRow> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
        <exception cref="T:System.IndexOutOfRangeException">The <paramref name="ordinal" /> argument is out of range.</exception>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could be not cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetField&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void SetField&lt;T&gt; (this System.Data.DataRow row, string columnName, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetField&lt;T&gt;(class System.Data.DataRow row, string columnName, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub SetField(Of T) (row As DataRow, columnName As String, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static void SetField(System::Data::DataRow ^ row, System::String ^ columnName, T value);" />
      <MemberSignature Language="F#" Value="static member SetField : System.Data.DataRow * string * 'T -&gt; unit" Usage="System.Data.DataRowExtensions.SetField (row, columnName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="row" Type="System.Data.DataRow" RefType="this" />
        <Parameter Name="columnName" Type="System.String" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">Un parámetro genérico que especifica el tipo de valor de la columna.</typeparam>
        <param name="row">The input <see cref="T:System.Data.DataRow" />, which acts as the <see langword="this" /> instance for the extension method.</param>
        <param name="columnName">The name of the column to set the value of.</param>
        <param name="value">The new row value for the specified column, of type <c>T</c>.</param>
        <summary>Sets a new value for the specified column in the <see cref="T:System.Data.DataRow" />. The <see cref="M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)" /> method also supports nullable types.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `value` es **null**, el <xref:System.Data.DataRowExtensions.SetField%2A> método convierte el **null** valor <xref:System.DBNull.Value> en subyacente <xref:System.Data.DataColumn>.  
  
 El <xref:System.Data.DataRowExtensions.SetField%2A> método no realiza ninguna conversión de tipos. Sin embargo, esto no significa que no se realizará una conversión de tipos. El <xref:System.Data.DataRowExtensions.SetField%2A> método expone el [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] comportamiento de la <xref:System.Data.DataRow> clase. Se pudo realizar una conversión de tipos por los <xref:System.Data.DataRow> objeto y el valor convertido se guardará en la fila.  
  
 Las excepciones se pueden pasar a través de la <xref:System.Data.DataRowExtensions.SetField%2A> método subyacente <xref:System.Data.DataRow> objeto.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The column specified by <paramref name="columnName" /> cannot be found.</exception>
        <exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when attempting to set a value on a deleted row.</exception>
        <exception cref="T:System.InvalidCastException">The value type of the underlying column could not be cast to the type specified by the generic parameter, <paramref name="T" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>