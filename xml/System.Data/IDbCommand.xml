<Type Name="IDbCommand" FullName="System.Data.IDbCommand">
  <TypeSignature Language="C#" Value="public interface IDbCommand : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDbCommand implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Data.IDbCommand" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDbCommand&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDbCommand : IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Common</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="3ae50-101">Representa una instrucción SQL que se ejecuta mientras hay conexión con un origen de datos y se implementa mediante proveedores de datos .NET Framework que acceden a bases de datos relacionales.</span><span class="sxs-lookup"><span data-stu-id="3ae50-101">Represents an SQL statement that is executed while connected to a data source, and is implemented by .NET Framework data providers that access relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-102">El <xref:System.Data.IDbCommand> interfaz permite que una clase heredera implemente una clase de comando, que representa una instrucción SQL que se ejecuta en un origen de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-102">The <xref:System.Data.IDbCommand> interface enables an inheriting class to implement a Command class, which represents an SQL statement that is executed at a data source.</span></span> <span data-ttu-id="3ae50-103">Para obtener más información sobre las clases Command, vea [ejecutar un comando](~/docs/framework/data/adonet/executing-a-command.md).</span><span class="sxs-lookup"><span data-stu-id="3ae50-103">For more information about Command classes, see [Executing a Command](~/docs/framework/data/adonet/executing-a-command.md).</span></span>  
  
 <span data-ttu-id="3ae50-104">Una aplicación no crea una instancia de la <xref:System.Data.IDbCommand> interfaz directamente, sino que crea una instancia de una clase que herede <xref:System.Data.IDbCommand>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-104">An application does not create an instance of the <xref:System.Data.IDbCommand> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbCommand>.</span></span>  
  
 <span data-ttu-id="3ae50-105">Las clases que heredan <xref:System.Data.IDbCommand> deben implementar todos los miembros heredados y suelen definir miembros adicionales para agregar la funcionalidad específica del proveedor.</span><span class="sxs-lookup"><span data-stu-id="3ae50-105">Classes that inherit <xref:System.Data.IDbCommand> must implement all inherited members, and typically define additional members to add provider-specific functionality.</span></span> <span data-ttu-id="3ae50-106">Por ejemplo, el <xref:System.Data.IDbCommand> interfaz define el <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3ae50-106">For example, the <xref:System.Data.IDbCommand> interface defines the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> method.</span></span> <span data-ttu-id="3ae50-107">A su vez, el <xref:System.Data.SqlClient.SqlCommand> clase hereda este método y también define la <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> método.</span><span class="sxs-lookup"><span data-stu-id="3ae50-107">In turn, the <xref:System.Data.SqlClient.SqlCommand> class inherits this method, and also defines the <xref:System.Data.SqlClient.SqlCommand.ExecuteXmlReader%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ae50-108">En el ejemplo siguiente se crea instancias de las clases derivadas, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, y <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-108">The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection>, <xref:System.Data.SqlClient.SqlCommand>, and <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="3ae50-109">En el ejemplo se lee los datos, escribiendo en la consola.</span><span class="sxs-lookup"><span data-stu-id="3ae50-109">The example reads through the data, writing it to the console.</span></span> <span data-ttu-id="3ae50-110">Por último, el ejemplo se cierra el <xref:System.Data.SqlClient.SqlDataReader>, la <xref:System.Data.SqlClient.SqlConnection>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-110">Finally, the example closes the <xref:System.Data.SqlClient.SqlDataReader>, then the <xref:System.Data.SqlClient.SqlConnection>.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/CS/source.cs#1)]
 [!code-vb[Classic WebData SqlCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="3ae50-111">Para promover la coherencia entre los proveedores de datos de .NET Framework, asigne el nombre de la clase de herencia en el formulario <paramref name="PrvClassname" /> donde <paramref name="Prv" /> es el prefijo uniforme que se asigna a todas las clases en un espacio de nombres del proveedor de datos de .NET Framework específico.</span><span class="sxs-lookup"><span data-stu-id="3ae50-111">To promote consistency among .NET Framework data providers, name the inheriting class in the form <paramref name="PrvClassname" /> where <paramref name="Prv" /> is the uniform prefix given to all classes in a specific .NET Framework data provider namespace.</span></span> <span data-ttu-id="3ae50-112">Por ejemplo, <paramref name="Sql" /> es el prefijo de la <see cref="T:System.Data.SqlClient.SqlCommand" /> clase en el <see langword="System.Data.SqlClient" /> espacio de nombres.</span><span class="sxs-lookup"><span data-stu-id="3ae50-112">For example, <paramref name="Sql" /> is the prefix of the <see cref="T:System.Data.SqlClient.SqlCommand" /> class in the <see langword="System.Data.SqlClient" /> namespace.</span></span>  
  
 <span data-ttu-id="3ae50-113">Al heredar de la <see cref="T:System.Data.IDbCommand" /> interfaz, debe implementar los siguientes constructores:</span><span class="sxs-lookup"><span data-stu-id="3ae50-113">When you inherit from the <see cref="T:System.Data.IDbCommand" /> interface, you should implement the following constructors:</span></span>  
  
 <span data-ttu-id="3ae50-114"><list type="table"><listheader><term> Elemento</span><span class="sxs-lookup"><span data-stu-id="3ae50-114"><list type="table"><listheader><term> Item</span></span>  
  
 <span data-ttu-id="3ae50-115"></term><description> Descripción</span><span class="sxs-lookup"><span data-stu-id="3ae50-115"></term><description> Description</span></span>  
  
 <span data-ttu-id="3ae50-116"></description></listheader><item><term> PrvCommand()</span><span class="sxs-lookup"><span data-stu-id="3ae50-116"></description></listheader><item><term> PrvCommand()</span></span>  
  
 <span data-ttu-id="3ae50-117"></term><description> Inicializa una nueva instancia de la clase PrvCommand.</span><span class="sxs-lookup"><span data-stu-id="3ae50-117"></term><description> Initializes a new instance of the PrvCommand class.</span></span>  
  
 <span data-ttu-id="3ae50-118"></description></item><item><term> PrvCommand (cadena cmdText)</span><span class="sxs-lookup"><span data-stu-id="3ae50-118"></description></item><item><term> PrvCommand(string cmdText)</span></span>  
  
 <span data-ttu-id="3ae50-119"></term><description> Inicializa una nueva instancia de la clase PrvCommand con el texto de la consulta.</span><span class="sxs-lookup"><span data-stu-id="3ae50-119"></term><description> Initializes a new instance of the PrvCommand class with the text of the query.</span></span>  
  
 <span data-ttu-id="3ae50-120"></description></item><item><term> PrvCommand (cadena cmdText, PrvConnection conexión)</span><span class="sxs-lookup"><span data-stu-id="3ae50-120"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection)</span></span>  
  
 <span data-ttu-id="3ae50-121"></term><description> Inicializa una nueva instancia de la clase PrvCommand con el texto de la consulta y una PrvConnection.</span><span class="sxs-lookup"><span data-stu-id="3ae50-121"></term><description> Initializes a new instance of the PrvCommand class with the text of the query and a PrvConnection.</span></span>  
  
 <span data-ttu-id="3ae50-122"></description></item><item><term> PrvCommand (cadena cmdText, PrvConnection conexión, transacción PrvTransaction)</span><span class="sxs-lookup"><span data-stu-id="3ae50-122"></description></item><item><term> PrvCommand(string cmdText, PrvConnection connection, PrvTransaction transaction)</span></span>  
  
 <span data-ttu-id="3ae50-123"></term><description> Inicializa una nueva instancia de la clase PrvCommand con el texto de la consulta, una PrvConnection y PrvTransaction.</span><span class="sxs-lookup"><span data-stu-id="3ae50-123"></term><description> Initializes a new instance of the PrvCommand class with the text of the query, a PrvConnection, and the PrvTransaction.</span></span>  
  
 </description></item></list></para>
    </block>
    <altmember cref="T:System.Data.Common.DbDataAdapter" />
    <altmember cref="T:System.Data.IDbConnection" />
    <altmember cref="T:System.Data.OleDb.OleDbCommand" />
    <altmember cref="T:System.Data.SqlClient.SqlCommand" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ae50-124">Intenta cancelar la ejecución de <see cref="T:System.Data.IDbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-124">Attempts to cancels the execution of an <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-125">Si no hay que cancelar nada, no ocurre nada.</span><span class="sxs-lookup"><span data-stu-id="3ae50-125">If there is nothing to cancel, nothing happens.</span></span> <span data-ttu-id="3ae50-126">Sin embargo, si hay un comando en ejecución y el intento de cancelarlo no tiene éxito, no se genera ninguna excepción.</span><span class="sxs-lookup"><span data-stu-id="3ae50-126">However, if there is a command in process, and the attempt to cancel fails, no exception is generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ae50-127">Obtiene o establece el comando de texto para ejecutar con el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-127">Gets or sets the text command to run against the data source.</span></span></summary>
        <value><span data-ttu-id="3ae50-128">Comando de texto para ejecutar.</span><span class="sxs-lookup"><span data-stu-id="3ae50-128">The text command to execute.</span></span> <span data-ttu-id="3ae50-129">El valor predeterminado es una cadena vacía ("").</span><span class="sxs-lookup"><span data-stu-id="3ae50-129">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-130">Cuando el <xref:System.Data.IDbCommand.CommandType%2A> propiedad está establecida en `StoredProcedure`, establezca el <xref:System.Data.IDbCommand.CommandText%2A> propiedad en el nombre del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="3ae50-130">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="3ae50-131">El usuario puede ser necesario usar la sintaxis de carácter de escape si el nombre del procedimiento almacenado contiene caracteres especiales.</span><span class="sxs-lookup"><span data-stu-id="3ae50-131">The user may be required to use escape character syntax if the stored procedure name contains any special characters.</span></span> <span data-ttu-id="3ae50-132">El comando llamará a este procedimiento almacenado cuando se llama a uno de los métodos Execute.</span><span class="sxs-lookup"><span data-stu-id="3ae50-132">The command will call this stored procedure when you call one of the Execute methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ae50-133">En el ejemplo siguiente se crea una instancia de una clase derivada, <xref:System.Data.OleDb.OleDbCommand> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="3ae50-133">The following example creates an instance of a derived class, <xref:System.Data.OleDb.OleDbCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandText Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandText Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
        <altmember cref="P:System.Data.IDbCommand.UpdatedRowSource" />
      </Docs>
    </Member>
    <Member MemberName="CommandTimeout">
      <MemberSignature Language="C#" Value="public int CommandTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CommandTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CommandTimeout { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ae50-134">Obtiene o establece el tiempo de espera antes de terminar el intento de ejecutar un comando y generar un error.</span><span class="sxs-lookup"><span data-stu-id="3ae50-134">Gets or sets the wait time before terminating the attempt to execute a command and generating an error.</span></span></summary>
        <value><span data-ttu-id="3ae50-135">Tiempo (en segundos) que se debe esperar para que se ejecute el comando.</span><span class="sxs-lookup"><span data-stu-id="3ae50-135">The time (in seconds) to wait for the command to execute.</span></span> <span data-ttu-id="3ae50-136">El valor predeterminado es 30 segundos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-136">The default value is 30 seconds.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ae50-137">En el ejemplo siguiente se crea una instancia de una clase derivada, <xref:System.Data.SqlClient.SqlCommand> y establece algunas de sus propiedades.</span><span class="sxs-lookup"><span data-stu-id="3ae50-137">The following example creates an instance of a derived class, <xref:System.Data.SqlClient.SqlCommand> and sets some of its properties.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.CommandTimeout Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.CommandTimeout Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ae50-138">El valor de propiedad asignado es menor que 0.</span><span class="sxs-lookup"><span data-stu-id="3ae50-138">The property value assigned is less than 0.</span></span></exception>
        <altmember cref="P:System.Data.IDbCommand.CommandText" />
        <altmember cref="P:System.Data.IDbCommand.Connection" />
        <altmember cref="P:System.Data.IDbCommand.CommandType" />
      </Docs>
    </Member>
    <Member MemberName="CommandType">
      <MemberSignature Language="C#" Value="public System.Data.CommandType CommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.CommandType CommandType" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.CommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandType As CommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::CommandType CommandType { System::Data::CommandType get(); void set(System::Data::CommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.CommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ae50-139">Indica o especifica cómo se interpreta la propiedad <see cref="P:System.Data.IDbCommand.CommandText" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-139">Indicates or specifies how the <see cref="P:System.Data.IDbCommand.CommandText" /> property is interpreted.</span></span></summary>
        <value><span data-ttu-id="3ae50-140">Uno de los valores de <see cref="T:System.Data.CommandType" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-140">One of the <see cref="T:System.Data.CommandType" /> values.</span></span> <span data-ttu-id="3ae50-141">El valor predeterminado es <see langword="Text" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-141">The default is <see langword="Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-142">Al establecer el <xref:System.Data.IDbCommand.CommandType%2A> propiedad `StoredProcedure`, debe establecer el <xref:System.Data.IDbCommand.CommandText%2A> propiedad en el nombre del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="3ae50-142">When you set the <xref:System.Data.IDbCommand.CommandType%2A> property to `StoredProcedure`, you should set the <xref:System.Data.IDbCommand.CommandText%2A> property to the name of the stored procedure.</span></span> <span data-ttu-id="3ae50-143">El comando ejecuta este procedimiento almacenado cuando se llama a uno de los métodos Execute.</span><span class="sxs-lookup"><span data-stu-id="3ae50-143">The command executes this stored procedure when you call one of the Execute methods.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connection">
      <MemberSignature Language="C#" Value="public System.Data.IDbConnection Connection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbConnection Connection" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Connection" />
      <MemberSignature Language="VB.NET" Value="Public Property Connection As IDbConnection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbConnection ^ Connection { System::Data::IDbConnection ^ get(); void set(System::Data::IDbConnection ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbConnection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ae50-144">Obtiene o establece la interfaz <see cref="T:System.Data.IDbConnection" /> que usa esta instancia de <see cref="T:System.Data.IDbCommand" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-144">Gets or sets the <see cref="T:System.Data.IDbConnection" /> used by this instance of the <see cref="T:System.Data.IDbCommand" />.</span></span></summary>
        <value><span data-ttu-id="3ae50-145">Conexión con el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-145">The connection to the data source.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateParameter">
      <MemberSignature Language="C#" Value="public System.Data.IDbDataParameter CreateParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDbDataParameter CreateParameter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.CreateParameter" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateParameter () As IDbDataParameter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDbDataParameter ^ CreateParameter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbDataParameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ae50-146">Crea una nueva instancia de un objeto <see cref="T:System.Data.IDbDataParameter" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-146">Creates a new instance of an <see cref="T:System.Data.IDbDataParameter" /> object.</span></span></summary>
        <returns><span data-ttu-id="3ae50-147">Un objeto <see langword="IDbDataParameter" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-147">An <see langword="IDbDataParameter" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-148">Al heredar de <xref:System.Data.IDbCommand>, un proveedor de datos de .NET Framework implementa una versión fuertemente tipada de <xref:System.Data.IDbCommand.CreateParameter%2A>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-148">When inheriting from <xref:System.Data.IDbCommand>, a .NET Framework data provider implements a strongly-typed version of <xref:System.Data.IDbCommand.CreateParameter%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteNonQuery">
      <MemberSignature Language="C#" Value="public int ExecuteNonQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 ExecuteNonQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteNonQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteNonQuery () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteNonQuery();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ae50-149">Ejecuta una instrucción SQL contra el objeto <see langword="Connection" /> de un proveedor de datos .NET Framework y devuelve el número de filas afectadas.</span><span class="sxs-lookup"><span data-stu-id="3ae50-149">Executes an SQL statement against the <see langword="Connection" /> object of a .NET Framework data provider, and returns the number of rows affected.</span></span></summary>
        <returns><span data-ttu-id="3ae50-150">El número de filas afectadas.</span><span class="sxs-lookup"><span data-stu-id="3ae50-150">The number of rows affected.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-151">Puede usar el <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> para realizar operaciones de catálogo (por ejemplo, consultar la estructura de una base de datos o crear objetos de base de datos como tablas) o para cambiar los datos en una base de datos sin usar un <xref:System.Data.DataSet> mediante la ejecución de instrucciones UPDATE, INSERT o DELETE.</span><span class="sxs-lookup"><span data-stu-id="3ae50-151">You can use the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> to perform catalog operations (for example, querying the structure of a database or creating database objects such as tables), or to change the data in a database without using a <xref:System.Data.DataSet> by executing UPDATE, INSERT, or DELETE statements.</span></span>  
  
 <span data-ttu-id="3ae50-152">Aunque el <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> no devolver ninguna fila, los parámetros de salida o valores devueltos asignados a los parámetros se rellenan con datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-152">Although the <xref:System.Data.IDbCommand.ExecuteNonQuery%2A> does not return any rows, any output parameters or return values mapped to parameters are populated with data.</span></span>  
  
 <span data-ttu-id="3ae50-153">Para las instrucciones UPDATE, INSERT y DELETE, el valor devuelto corresponde al número de filas afectadas por el comando.</span><span class="sxs-lookup"><span data-stu-id="3ae50-153">For UPDATE, INSERT, and DELETE statements, the return value is the number of rows affected by the command.</span></span> <span data-ttu-id="3ae50-154">Para los demás tipos de instrucciones, el valor devuelto es -1.</span><span class="sxs-lookup"><span data-stu-id="3ae50-154">For all other types of statements, the return value is -1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ae50-155">En el ejemplo siguiente se crea una instancia de la clase derivada, <xref:System.Data.OleDb.OleDbCommand>y, a continuación, lo ejecuta.</span><span class="sxs-lookup"><span data-stu-id="3ae50-155">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and then executes it.</span></span> <span data-ttu-id="3ae50-156">Para lograr esto, se pasa al método una cadena que es una instrucción SELECT de SQL y una cadena que se utiliza para conectarse al origen de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-156">To accomplish this, the method is passed a string that is a SQL SELECT statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.ExecuteNonQuery Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.ExecuteNonQuery Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ae50-157">La conexión no existe.</span><span class="sxs-lookup"><span data-stu-id="3ae50-157">The connection does not exist.</span></span>  
  
 <span data-ttu-id="3ae50-158">O bien</span><span class="sxs-lookup"><span data-stu-id="3ae50-158">-or-</span></span>  
  
 <span data-ttu-id="3ae50-159">La conexión no está abierta.</span><span class="sxs-lookup"><span data-stu-id="3ae50-159">The connection is not open.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteReader">
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3ae50-160">Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-160">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader () As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ae50-161">Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-161">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" /> and builds an <see cref="T:System.Data.IDataReader" />.</span></span></summary>
        <returns><span data-ttu-id="3ae50-162">Un objeto <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-162">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteReader">
      <MemberSignature Language="C#" Value="public System.Data.IDataReader ExecuteReader (System.Data.CommandBehavior behavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Data.IDataReader ExecuteReader(valuetype System.Data.CommandBehavior behavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteReader(System.Data.CommandBehavior)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteReader (behavior As CommandBehavior) As IDataReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::IDataReader ^ ExecuteReader(System::Data::CommandBehavior behavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="behavior" Type="System.Data.CommandBehavior" />
      </Parameters>
      <Docs>
        <param name="behavior"><span data-ttu-id="3ae50-163">Uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-163">One of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></param>
        <summary><span data-ttu-id="3ae50-164">Ejecuta <see cref="P:System.Data.IDbCommand.CommandText" /> contra <see cref="P:System.Data.IDbCommand.Connection" /> y genera <see cref="T:System.Data.IDataReader" /> mediante uno de los valores de <see cref="T:System.Data.CommandBehavior" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-164">Executes the <see cref="P:System.Data.IDbCommand.CommandText" /> against the <see cref="P:System.Data.IDbCommand.Connection" />, and builds an <see cref="T:System.Data.IDataReader" /> using one of the <see cref="T:System.Data.CommandBehavior" /> values.</span></span></summary>
        <returns><span data-ttu-id="3ae50-165">Un objeto <see cref="T:System.Data.IDataReader" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-165">An <see cref="T:System.Data.IDataReader" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-166">El llamador debe llamar a la <xref:System.Data.IDbConnection.Open%2A> método de la <xref:System.Data.IDbCommand.Connection%2A> propiedad.</span><span class="sxs-lookup"><span data-stu-id="3ae50-166">The caller must call the <xref:System.Data.IDbConnection.Open%2A> method of the <xref:System.Data.IDbCommand.Connection%2A> property.</span></span>  
  
 <span data-ttu-id="3ae50-167">Cuando el <xref:System.Data.IDbCommand.CommandType%2A> propiedad está establecida en `StoredProcedure`, el <xref:System.Data.IDbCommand.CommandText%2A> propiedad debe establecerse en el nombre del procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="3ae50-167">When the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `StoredProcedure`, the <xref:System.Data.IDbCommand.CommandText%2A> property should be set to the name of the stored procedure.</span></span> <span data-ttu-id="3ae50-168">El comando ejecuta este procedimiento almacenado cuando se llama a <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-168">The command executes this stored procedure when you call <xref:System.Data.IDbCommand.ExecuteReader%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="3ae50-169">Use <xref:System.Data.CommandBehavior.SequentialAccess> para recuperar valores grandes y datos binarios.</span><span class="sxs-lookup"><span data-stu-id="3ae50-169">Use <xref:System.Data.CommandBehavior.SequentialAccess> to retrieve large values and binary data.</span></span> <span data-ttu-id="3ae50-170">En caso contrario, un <xref:System.OutOfMemoryException> se pueden producir y se cerrará la conexión.</span><span class="sxs-lookup"><span data-stu-id="3ae50-170">Otherwise, an <xref:System.OutOfMemoryException> might occur and the connection will be closed.</span></span>  
  
 <span data-ttu-id="3ae50-171">Mientras el <xref:System.Data.IDataReader> está en uso, el asociado <xref:System.Data.IDbConnection> están ocupados atendiendo la <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-171">While the <xref:System.Data.IDataReader> is in use, the associated <xref:System.Data.IDbConnection> is busy serving the <xref:System.Data.IDataReader>.</span></span> <span data-ttu-id="3ae50-172">En este estado, no se puede realizar ninguna otra operación en el <xref:System.Data.IDbConnection> distinto de cerrarla.</span><span class="sxs-lookup"><span data-stu-id="3ae50-172">While in this state, no other operations can be performed on the <xref:System.Data.IDbConnection> other than closing it.</span></span> <span data-ttu-id="3ae50-173">Esto es así hasta que el <xref:System.Data.IDataReader.Close%2A> se denomina método de DataReader.</span><span class="sxs-lookup"><span data-stu-id="3ae50-173">This is the case until the <xref:System.Data.IDataReader.Close%2A> method of the DataReader is called.</span></span> <span data-ttu-id="3ae50-174">Si se crea el DataReader con <xref:System.Data.CommandBehavior> establecido en `CloseConnection`, cerrar DataReader, cierra la conexión automáticamente.</span><span class="sxs-lookup"><span data-stu-id="3ae50-174">If the DataReader is created with <xref:System.Data.CommandBehavior> set to `CloseConnection`, closing the DataReader closes the connection automatically.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteScalar">
      <MemberSignature Language="C#" Value="public object ExecuteScalar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ExecuteScalar() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.ExecuteScalar" />
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteScalar () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ExecuteScalar();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ae50-175">Ejecuta la consulta y devuelve la primera columna de la primera fila del conjunto de resultados devuelto por la consulta.</span><span class="sxs-lookup"><span data-stu-id="3ae50-175">Executes the query, and returns the first column of the first row in the resultset returned by the query.</span></span> <span data-ttu-id="3ae50-176">Las columnas o filas adicionales no se tienen en cuenta.</span><span class="sxs-lookup"><span data-stu-id="3ae50-176">Extra columns or rows are ignored.</span></span></summary>
        <returns><span data-ttu-id="3ae50-177">Primera columna de la primera fila del conjunto de resultados.</span><span class="sxs-lookup"><span data-stu-id="3ae50-177">The first column of the first row in the resultset.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-178">Use la <xref:System.Data.IDbCommand.ExecuteScalar%2A> método para recuperar un único valor (por ejemplo, un valor agregado) de una base de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-178">Use the <xref:System.Data.IDbCommand.ExecuteScalar%2A> method to retrieve a single value (for example, an aggregate value) from a database.</span></span> <span data-ttu-id="3ae50-179">Esto requiere menos código que el uso de la <xref:System.Data.IDbCommand.ExecuteReader%2A> método y, a continuación, realizar las operaciones necesarias para generar un único valor mediante los datos devueltos por una <xref:System.Data.IDataReader>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-179">This requires less code than using the <xref:System.Data.IDbCommand.ExecuteReader%2A> method, and then performing the operations necessary to generate the single value using the data returned by an <xref:System.Data.IDataReader>.</span></span>  
  
 <span data-ttu-id="3ae50-180">Una típica <xref:System.Data.IDbCommand.ExecuteScalar%2A> se puede aplicar el formato de consulta como en el siguiente ejemplo de C#:</span><span class="sxs-lookup"><span data-stu-id="3ae50-180">A typical <xref:System.Data.IDbCommand.ExecuteScalar%2A> query can be formatted as in the following C# example:</span></span>  
  
```  
CommandText = "select count(*) as NumberOfRegions from region";  
Int32 count = (int) ExecuteScalar();  
```  
  
 <span data-ttu-id="3ae50-181">Si la primera columna de la primera fila del conjunto de resultados no se encuentra, una referencia nula (`Nothing` en Visual Basic) se devuelve.</span><span class="sxs-lookup"><span data-stu-id="3ae50-181">If the first column of the first row in the result set is not found, a null reference (`Nothing` in Visual Basic) is returned.</span></span> <span data-ttu-id="3ae50-182">Si el valor de la base de datos es `null`, la consulta devuelve `DBNull.Value`.</span><span class="sxs-lookup"><span data-stu-id="3ae50-182">If the value in the database is `null`, the query returns `DBNull.Value`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ae50-183">En el ejemplo siguiente se crea una instancia de la clase derivada, <xref:System.Data.SqlClient.SqlCommand>y, a continuación, se ejecuta mediante <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span><span class="sxs-lookup"><span data-stu-id="3ae50-183">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and then executes it using <xref:System.Data.SqlClient.SqlCommand.ExecuteScalar%2A>.</span></span> <span data-ttu-id="3ae50-184">En el ejemplo se pasa una cadena que es una instrucción de Transact-SQL que devuelve un resultado agregado y una cadena que se utiliza para conectarse al origen de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-184">The example is passed a string that is a Transact-SQL statement that returns an aggregate result, and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/CS/mysample.cs#1)]
 [!code-vb[Classic WebData SqlCommand.ExecuteScalar#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlCommand.ExecuteScalar/VB/mysample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public System.Data.IDataParameterCollection Parameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDataParameterCollection Parameters" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameters As IDataParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDataParameterCollection ^ Parameters { System::Data::IDataParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDataParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ae50-185">Obtiene la estructura <see cref="T:System.Data.IDataParameterCollection" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-185">Gets the <see cref="T:System.Data.IDataParameterCollection" />.</span></span></summary>
        <value><span data-ttu-id="3ae50-186">Parámetros de la instrucción SQL o procedimiento almacenado.</span><span class="sxs-lookup"><span data-stu-id="3ae50-186">The parameters of the SQL statement or stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3ae50-187">En el ejemplo siguiente se crea una instancia de la clase derivada, <xref:System.Data.SqlClient.SqlCommand>y se muestran sus parámetros.</span><span class="sxs-lookup"><span data-stu-id="3ae50-187">The following example creates an instance of the derived class, <xref:System.Data.SqlClient.SqlCommand>, and displays its parameters.</span></span> <span data-ttu-id="3ae50-188">En el ejemplo, la aplicación pasa un <xref:System.Data.SqlClient.SqlConnection>, una cadena de consulta que es una instrucción SELECT de Transact-SQL y una matriz de <xref:System.Data.SqlClient.SqlParameter> objetos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-188">In the example, the application passes a <xref:System.Data.SqlClient.SqlConnection>, a query string that is a Transact-SQL SELECT statement, and an array of <xref:System.Data.SqlClient.SqlParameter> objects.</span></span>  
  
 [!code-csharp[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/CS/source.cs#1)]
 [!code-vb[Classic WebData IDbCommand.Parameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData IDbCommand.Parameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.IDataParameter" />
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.IDbCommand.Prepare" />
      <MemberSignature Language="VB.NET" Value="Public Sub Prepare ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Prepare();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3ae50-189">Crea una versión preparada (o compilada) del comando en el origen de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-189">Creates a prepared (or compiled) version of the command on the data source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3ae50-190">Si el <xref:System.Data.IDbCommand.CommandType%2A> propiedad está establecida en `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> no hace nada.</span><span class="sxs-lookup"><span data-stu-id="3ae50-190">If the <xref:System.Data.IDbCommand.CommandType%2A> property is set to `TableDirect`, <xref:System.Data.IDbCommand.Prepare%2A> does nothing.</span></span> <span data-ttu-id="3ae50-191">Si <xref:System.Data.IDbCommand.CommandType%2A> está establecido en `StoredProcedure`, la llamada a <xref:System.Data.IDbCommand.Prepare%2A> debería realizarse correctamente, aunque el resultado puede ser una operación inefectiva.</span><span class="sxs-lookup"><span data-stu-id="3ae50-191">If <xref:System.Data.IDbCommand.CommandType%2A> is set to `StoredProcedure`, the call to <xref:System.Data.IDbCommand.Prepare%2A> should succeed, although it may result in a no-op.</span></span> <span data-ttu-id="3ae50-192">El servidor almacena automáticamente en caché los planes para su reutilización según sea necesario; por lo tanto, no es necesario llamar a este método directamente en la aplicación cliente.</span><span class="sxs-lookup"><span data-stu-id="3ae50-192">The server automatically caches plans for reuse as necessary; therefore, there is no need to call this method directly in your client application.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3ae50-193">En el ejemplo siguiente se crea una instancia de la clase derivada, <xref:System.Data.OleDb.OleDbCommand>y abre la conexión.</span><span class="sxs-lookup"><span data-stu-id="3ae50-193">The following example creates an instance of the derived class, <xref:System.Data.OleDb.OleDbCommand>, and opens the connection.</span></span> <span data-ttu-id="3ae50-194">A continuación, en el ejemplo se prepara un procedimiento almacenado en el origen de datos pasando una cadena que es una instrucción Select de SQL y una cadena que se utiliza para conectarse al origen de datos.</span><span class="sxs-lookup"><span data-stu-id="3ae50-194">The example then prepares a stored procedure on the data source by passing a string that is a SQL Select statement and a string to use to connect to the data source.</span></span>  
  
 [!code-csharp[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/CS/source.cs#1)]
 [!code-vb[Classic WebData OleDbCommand.Prepare Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData OleDbCommand.Prepare Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="3ae50-195"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> no está establecido.</span><span class="sxs-lookup"><span data-stu-id="3ae50-195">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not set.</span></span>  
  
 <span data-ttu-id="3ae50-196">O bien</span><span class="sxs-lookup"><span data-stu-id="3ae50-196">-or-</span></span>  
  
 <span data-ttu-id="3ae50-197"><see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> no es <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-197">The <see cref="P:System.Data.OleDb.OleDbCommand.Connection" /> is not <see cref="M:System.Data.OleDb.OleDbConnection.Open" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Transaction">
      <MemberSignature Language="C#" Value="public System.Data.IDbTransaction Transaction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.IDbTransaction Transaction" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.Transaction" />
      <MemberSignature Language="VB.NET" Value="Public Property Transaction As IDbTransaction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::IDbTransaction ^ Transaction { System::Data::IDbTransaction ^ get(); void set(System::Data::IDbTransaction ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.IDbTransaction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ae50-198">Obtiene o establece la transacción dentro de la cual se ejecuta el objeto <see langword="Command" /> de un proveedor de datos .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="3ae50-198">Gets or sets the transaction within which the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span></summary>
        <value><span data-ttu-id="3ae50-199">objeto <see langword="Command" /> que un proveedor de datos de .NET Framework ejecuta.</span><span class="sxs-lookup"><span data-stu-id="3ae50-199">the <see langword="Command" /> object of a .NET Framework data provider executes.</span></span> <span data-ttu-id="3ae50-200">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-200">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdatedRowSource">
      <MemberSignature Language="C#" Value="public System.Data.UpdateRowSource UpdatedRowSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.UpdateRowSource UpdatedRowSource" />
      <MemberSignature Language="DocId" Value="P:System.Data.IDbCommand.UpdatedRowSource" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdatedRowSource As UpdateRowSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::UpdateRowSource UpdatedRowSource { System::Data::UpdateRowSource get(); void set(System::Data::UpdateRowSource value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Common</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.UpdateRowSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3ae50-201">Obtiene o establece la manera en que se aplican los resultados a <see cref="T:System.Data.DataRow" /> cuando lo utiliza el método <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> de <see cref="T:System.Data.Common.DbDataAdapter" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-201">Gets or sets how command results are applied to the <see cref="T:System.Data.DataRow" /> when used by the <see cref="M:System.Data.IDataAdapter.Update(System.Data.DataSet)" /> method of a <see cref="T:System.Data.Common.DbDataAdapter" />.</span></span></summary>
        <value><span data-ttu-id="3ae50-202">Uno de los valores de <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-202">One of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span> <span data-ttu-id="3ae50-203">El valor predeterminado es <see langword="Both" /> a menos que el comando se genere automáticamente.</span><span class="sxs-lookup"><span data-stu-id="3ae50-203">The default is <see langword="Both" /> unless the command is automatically generated.</span></span> <span data-ttu-id="3ae50-204">Entonces el valor predeterminado es <see langword="None" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-204">Then the default is <see langword="None" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="3ae50-205">El valor insertado no era ninguno de los valores de <see cref="T:System.Data.UpdateRowSource" />.</span><span class="sxs-lookup"><span data-stu-id="3ae50-205">The value entered was not one of the <see cref="T:System.Data.UpdateRowSource" /> values.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>