<Type Name="DataTableExtensions" FullName="System.Data.DataTableExtensions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8f08958ecd6928721c61e8f8c6e0b2acfd700a86" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36678246" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DataTableExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DataTableExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.DataTableExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module DataTableExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTableExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type DataTableExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Defines the extension methods to the <see cref="T:System.Data.DataTable" /> class. <see cref="T:System.Data.DataTableExtensions" /> is a static class.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AsDataView">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView (this System.Data.DataTable table);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView(class System.Data.DataTable table) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView (table As DataTable) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::DataTable ^ table);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.DataTable -&gt; System.Data.DataView" Usage="System.Data.DataTableExtensions.AsDataView table" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="table" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="table">The source <see cref="T:System.Data.DataTable" /> from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</param>
        <summary>Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object.</summary>
        <returns>A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> permite escenarios de enlace de datos para [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] y se pueden crear desde una con o sin tipo <xref:System.Data.DataTable>, proporcionando una vista predeterminada de esa tabla. El filtro y la ordenación pueden establecerse en <xref:System.Data.DataView> después de que se haya creado a partir de <xref:System.Data.DataTable>. El <xref:System.Data.DataView> , a continuación, se enlaza a un control de interfaz de usuario, como un <xref:System.Windows.Forms.DataGrid> o <xref:System.Windows.Forms.DataGridView>, proporcionando un modelo de enlace de datos simple.  
  
 Para obtener más información y ejemplos, vea [crear un objeto DataView](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.DataView> de SalesOrderDetail de la tabla y lo establece como el origen de datos de un <xref:System.Windows.Forms.BindingSource> objeto, que actúa como un proxy para un <xref:System.Windows.Forms.DataGridView> control:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromtable)]
 [!code-vb[DP DataView Samples#CreateLDVFromTable](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromtable)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsDataView&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataView AsDataView&lt;T&gt; (this System.Data.EnumerableRowCollection&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataView AsDataView&lt;(class System.Data.DataRow) T&gt;(class System.Data.EnumerableRowCollection`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsDataView``1(System.Data.EnumerableRowCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsDataView(Of T As DataRow) (source As EnumerableRowCollection(Of T)) As DataView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataView ^ AsDataView(System::Data::EnumerableRowCollection&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member AsDataView : System.Data.EnumerableRowCollection&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataView (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.AsDataView source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataView</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Data.EnumerableRowCollection&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query from which the LINQ-enabled <see cref="T:System.Data.DataView" /> is created.</param>
        <summary>Creates and returns a LINQ-enabled <see cref="T:System.Data.DataView" /> object representing the [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] query.</summary>
        <returns>A LINQ-enabled <see cref="T:System.Data.DataView" /> object.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.DataView> permite escenarios de enlace de datos para [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] y se pueden crear desde un [!INCLUDE[linq_dataset](~/includes/linq-dataset-md.md)] consulta. El <xref:System.Data.DataView> representa la propia consulta y no es una vista encima de la consulta. Recién creado <xref:System.Data.DataView> deduce el filtrado y la información de la consulta se crea a partir de ordenación. El <xref:System.Data.DataView> , a continuación, se enlaza a un control de interfaz de usuario, como un <xref:System.Windows.Forms.DataGrid> o <xref:System.Windows.Forms.DataGridView>, proporcionando un modelo de enlace de datos simple.  
  
 El parámetro `T` del parámetro de entrada `source` sólo pueden ser de tipo <xref:System.Data.DataRow> o un tipo derivado de <xref:System.Data.DataRow>.  
  
 Solo se admiten los siguientes operadores de consulta, en una consulta utilizada para crear <xref:System.Data.DataView>:  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Cast%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.OrderByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Select%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenBy%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.ThenByDescending%2A>  
  
-   <xref:System.Data.EnumerableRowCollectionExtensions.Where%2A>  
  
 Para obtener más información y ejemplos, vea [crear un objeto DataView](~/docs/framework/data/adonet/creating-a-dataview-object-linq-to-dataset.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se crea un <xref:System.Data.DataView> de pedidos en línea ordenados por el importe total a pagar:  
  
 [!code-csharp[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP DataView Samples/CS/Form1.cs#createldvfromquery1)]
 [!code-vb[DP DataView Samples#CreateLDVFromQuery1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP DataView Samples/VB/Form1.vb#createldvfromquery1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsEnumerable">
      <MemberSignature Language="C#" Value="public static System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt; AsEnumerable (this System.Data.DataTable source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.EnumerableRowCollection`1&lt;class System.Data.DataRow&gt; AsEnumerable(class System.Data.DataTable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.AsEnumerable(System.Data.DataTable)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function AsEnumerable (source As DataTable) As EnumerableRowCollection(Of DataRow)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::EnumerableRowCollection&lt;System::Data::DataRow ^&gt; ^ AsEnumerable(System::Data::DataTable ^ source);" />
      <MemberSignature Language="F#" Value="static member AsEnumerable : System.Data.DataTable -&gt; System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;" Usage="System.Data.DataTableExtensions.AsEnumerable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.EnumerableRowCollection&lt;System.Data.DataRow&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Data.DataTable" RefType="this" />
      </Parameters>
      <Docs>
        <param name="source">The source <see cref="T:System.Data.DataTable" /> to make enumerable.</param>
        <summary>Returns an <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />. This object can be used in a [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] expression or method query.</summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerable`1" /> object, where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] las consultas funcionan en los orígenes de datos que implementan la <xref:System.Collections.Generic.IEnumerable%601> interfaz o <xref:System.Linq.IQueryable> interfaz.  El <xref:System.Data.DataTable> clase no implementa ninguna de estas interfaces, por lo que debe llamar a la <xref:System.Data.DataTableExtensions.AsEnumerable%2A> método que se utilizará el <xref:System.Data.DataTable> como origen en el `From` cláusula de una [!INCLUDE[vbteclinq](~/includes/vbteclinq-md.md)] consulta. También puede obtener operadores personalizados, específico de dominio, como <xref:System.Data.DataTableExtensions.CopyToDataTable%2A>, devolviendo un <xref:System.Collections.Generic.IEnumerable%601> objeto.  
  
 El objeto enumerable devuelto por la <xref:System.Data.DataTableExtensions.AsEnumerable%2A> método permanentemente se enlaza a la <xref:System.Data.DataTable> que lo generó. Varias llamadas a la <xref:System.Data.DataTableExtensions.AsEnumerable%2A> will método devolverán varios objetos consultables independientes que están enlazados al origen de <xref:System.Data.DataTable>.  
  
   
  
## Examples  
 En el ejemplo siguiente, la `DisplayProducts` método recibe un objeto DataTable que contiene un objeto DataColumn denominado `ProductName`, extrae la `ProductName` valores y, a continuación, imprime los valores.  
  
 [!code-csharp[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/cs/source.cs#1)]
 [!code-vb[system.data.DataTableExtensions.AsEnumerable#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.data.datatableextensions.asenumerable/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToDataTable&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Data.DataTable CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.DataTable CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T)) As DataTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static System::Data::DataTable ^ CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; -&gt; System.Data.DataTable (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DataTable</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
        <summary>Returns a <see cref="T:System.Data.DataTable" /> that contains copies of the <see cref="T:System.Data.DataRow" /> objects, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
        <returns>A <see cref="T:System.Data.DataTable" /> that contains the input sequence as the type of <see cref="T:System.Data.DataRow" /> objects.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro `T` del parámetro de entrada `source` sólo pueden ser de tipo <xref:System.Data.DataRow> o un tipo derivado de <xref:System.Data.DataRow>.  
  
 La secuencia de entrada puede ser cualquier <xref:System.Collections.Generic.IEnumerable%601> de origen, no sólo una consulta o una consulta sobre un <xref:System.Data.DataTable>. Tenga en cuenta que si la secuencia de origen es una consulta, una llamada a este operador, se forzará la ejecución inmediata. Enumeración de la secuencia de origen, también puede hacer que se produzcan excepciones.  
  
 El esquema de la tabla de destino se basa en el esquema de la primera <xref:System.Data.DataRow> fila en la secuencia de origen. Los metadatos de las tablas se extraen de la <xref:System.Data.DataRow> metadatos y la tabla de valores de los valores de columna de la <xref:System.Data.DataRow>. Para un tipo <xref:System.Data.DataTable>, tipos no se conservan. Se transfieren los datos y el esquema, pero las filas resultantes de la tabla de resultados no serán de tipo <xref:System.Data.DataRow> tipo. El <xref:System.Data.DataRow.RowState%2A> y <xref:System.Data.DataRow.RowError%2A> propiedades no se conservan durante la copia desde el origen de <xref:System.Data.DataRow> para el valor devuelto <xref:System.Data.DataTable>.  
  
 Cuando un **null** referencia o tipo que acepta valores NULL con un valor de **null** se encuentra en un origen de <xref:System.Data.DataRow>, este método reemplaza el valor en el destino <xref:System.Data.DataTable> con un valor de <xref:System.DBNull.Value>.  
  
 La tabla generada devuelta por el método tiene el nombre de tabla predeterminado. Si desea asignar nombre a la <xref:System.Data.DataTable>, adjuntarla a una <xref:System.Data.DataSet>, o realizar cualquier otro <xref:System.Data.DataTable> operación específica, debe hacerlo después de la tabla se crea y se devuelve.  
  
 Para obtener más información, consulte [crear una tabla de datos de consulta](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
   
  
## Examples  
 En el ejemplo siguiente se consultan la tabla SalesOrderHeader los pedidos posteriores al 8 de agosto de 2001 y utiliza el <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> método para crear un <xref:System.Data.DataTable> desde una consulta. A continuación, se enlaza <xref:System.Data.DataTable> a un <xref:System.Windows.Forms.BindingSource>, que actúa como proxy para un objeto <xref:System.Windows.Forms.DataGridView>.  
  
 [!code-csharp[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/CS/Program.cs#copytodatatable1)]
 [!code-vb[DP LINQ to DataSet Examples#CopyToDataTable1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DP LINQ to DataSet Examples/VB/Module1.vb#copytodatatable1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> and a new table cannot be created.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.  The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.  A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
        <param name="table">The destination <see cref="T:System.Data.DataTable" />.</param>
        <param name="options">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</param>
        <summary>Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro `T` del parámetro de entrada `source` sólo pueden ser de tipo <xref:System.Data.DataRow>, o un tipo derivado de <xref:System.Data.DataRow>.  
  
 La secuencia de entrada puede ser cualquier <xref:System.Collections.Generic.IEnumerable%601> de origen, no sólo una consulta sobre un <xref:System.Data.DataTable>. Tenga en cuenta que si la secuencia de origen es una consulta, una llamada a este operador, se forzará la ejecución inmediata. Enumeración de la secuencia de origen, también puede hacer que se produzcan excepciones.  
  
 El esquema de la tabla de destino se basa en el esquema de la primera <xref:System.Data.DataRow> fila en la secuencia de origen. Los metadatos de las tablas se extraen de la <xref:System.Data.DataRow> metadatos y la tabla de valores de los valores de columna de la <xref:System.Data.DataRow>. Para un tipo <xref:System.Data.DataTable>, tipos no se conservan. Se transfieren los datos y el esquema, pero las filas resultantes de la tabla de resultados no serán de tipo <xref:System.Data.DataRow> tipo. El <xref:System.Data.DataRow.RowState%2A> y <xref:System.Data.DataRow.RowError%2A> propiedades no se conservan durante la copia desde el origen de <xref:System.Data.DataRow> para el valor devuelto <xref:System.Data.DataTable>.  
  
 Cuando un **null** referencia o tipo que acepta valores NULL con un valor de **null** se encuentra en un origen de <xref:System.Data.DataRow>, este método reemplaza el valor en el destino <xref:System.Data.DataTable> con un valor de <xref:System.DBNull.Value>.  
  
 La tabla generada devuelta por el método tiene el nombre de tabla predeterminado. Si desea asignar nombre a la <xref:System.Data.DataTable>, adjuntarla a una <xref:System.Data.DataSet>, o realizar cualquier otro <xref:System.Data.DataTable> operación específica, debe hacerlo después de la tabla se crea y se devuelve.  
  
 Para obtener más información, consulte [crear una tabla de datos de consulta](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.  The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.  A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyToDataTable&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void CopyToDataTable&lt;T&gt; (this System.Collections.Generic.IEnumerable&lt;T&gt; source, System.Data.DataTable table, System.Data.LoadOption options, System.Data.FillErrorEventHandler errorHandler) where T : System.Data.DataRow;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void CopyToDataTable&lt;(class System.Data.DataRow) T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; source, class System.Data.DataTable table, valuetype System.Data.LoadOption options, class System.Data.FillErrorEventHandler errorHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.DataTableExtensions.CopyToDataTable``1(System.Collections.Generic.IEnumerable{``0},System.Data.DataTable,System.Data.LoadOption,System.Data.FillErrorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Sub CopyToDataTable(Of T As DataRow) (source As IEnumerable(Of T), table As DataTable, options As LoadOption, errorHandler As FillErrorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : System::Data::DataRow[System::Runtime::CompilerServices::Extension]&#xA; static void CopyToDataTable(System::Collections::Generic::IEnumerable&lt;T&gt; ^ source, System::Data::DataTable ^ table, System::Data::LoadOption options, System::Data::FillErrorEventHandler ^ errorHandler);" />
      <MemberSignature Language="F#" Value="static member CopyToDataTable : seq&lt;'T (requires 'T :&gt; System.Data.DataRow)&gt; * System.Data.DataTable * System.Data.LoadOption * System.Data.FillErrorEventHandler -&gt; unit (requires 'T :&gt; System.Data.DataRow)" Usage="System.Data.DataTableExtensions.CopyToDataTable (source, table, options, errorHandler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.DataSetExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Data.DataRow</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="source" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" RefType="this" />
        <Parameter Name="table" Type="System.Data.DataTable" />
        <Parameter Name="options" Type="System.Data.LoadOption" />
        <Parameter Name="errorHandler" Type="System.Data.FillErrorEventHandler" />
      </Parameters>
      <Docs>
        <typeparam name="T">Tipo de objetos de la secuencia de origen, normalmente <see cref="T:System.Data.DataRow" />.</typeparam>
        <param name="source">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence.</param>
        <param name="table">The destination <see cref="T:System.Data.DataTable" />.</param>
        <param name="options">A <see cref="T:System.Data.LoadOption" /> enumeration that specifies the <see cref="T:System.Data.DataTable" /> load options.</param>
        <param name="errorHandler">A <see cref="T:System.Data.FillErrorEventHandler" /> delegate that represents the method that will handle an error.</param>
        <summary>Copies <see cref="T:System.Data.DataRow" /> objects to the specified <see cref="T:System.Data.DataTable" />, given an input <see cref="T:System.Collections.Generic.IEnumerable`1" /> object where the generic parameter <paramref name="T" /> is <see cref="T:System.Data.DataRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El parámetro `T` del parámetro de entrada `source` sólo pueden ser de tipo <xref:System.Data.DataRow>, o un tipo derivado de <xref:System.Data.DataRow>.  
  
 La secuencia de entrada puede ser cualquier <xref:System.Collections.Generic.IEnumerable%601> de origen, no sólo una consulta sobre un <xref:System.Data.DataTable>. Tenga en cuenta que si la secuencia de origen es una consulta, una llamada a este operador, se forzará la ejecución inmediata. Enumeración de la secuencia de origen, también puede hacer que se produzcan excepciones.  
  
 El esquema de la tabla de destino se basa en el esquema de la primera <xref:System.Data.DataRow> fila en la secuencia de origen. Los metadatos de las tablas se extraen de la <xref:System.Data.DataRow> metadatos y la tabla de valores de los valores de columna de la <xref:System.Data.DataRow>. Para un tipo <xref:System.Data.DataTable>, tipos no se conservan. Se transfieren los datos y el esquema, pero las filas resultantes de la tabla de resultados no serán de tipo <xref:System.Data.DataRow> tipo. El <xref:System.Data.DataRow.RowState%2A> y <xref:System.Data.DataRow.RowError%2A> propiedades no se conservan durante la copia desde el origen de <xref:System.Data.DataRow> para el valor devuelto <xref:System.Data.DataTable>.  
  
 Cuando un **null** referencia o tipo que acepta valores NULL con un valor de **null** se encuentra en un origen de <xref:System.Data.DataRow>, este método reemplaza el valor en el destino <xref:System.Data.DataTable> con un valor de <xref:System.DBNull.Value>.  
  
 La tabla generada devuelta por el método tiene el nombre de tabla predeterminado. Si desea asignar nombre a la <xref:System.Data.DataTable>, adjuntarla a una <xref:System.Data.DataSet>, o realizar cualquier otro <xref:System.Data.DataTable> operación específica, debe hacerlo después de la tabla se crea y se devuelve.  
  
 Si se produce una excepción durante la copia de una fila de datos en la tabla de destino, como una excepción de restricción, la `errorHandler` delegado se llama. A <xref:System.Data.FillErrorEventArgs> se pasa a la `errorHandler` delegar con los valores siguientes:  
  
-   El <xref:System.Data.FillErrorEventArgs.Values%2A> propiedad está establecida en una copia de los datos de origen.  
  
-   El <xref:System.Data.FillErrorEventArgs.DataTable%2A> propiedad se establece en el destino <xref:System.Data.DataTable>.  
  
-   El <xref:System.Data.FillErrorEventArgs.Errors%2A> propiedad se establece en la excepción detectada.  
  
 El <xref:System.Data.FillErrorEventArgs.Continue%2A> propiedad es de lectura después de que vuelva la llamada a delegado. Si el <xref:System.Data.FillErrorEventArgs.Continue%2A> propiedad es `true`, sigue la secuencia de origen enumerado y cargarlas en la tabla de datos. Si el <xref:System.Data.FillErrorEventArgs.Continue%2A> propiedad es `false`, se produce la excepción original de la <xref:System.Data.DataTableExtensions.CopyToDataTable%2A> método.  
  
 Para obtener más información, consulte [crear una tabla de datos de consulta](~/docs/framework/data/adonet/creating-a-datatable-from-a-query-linq-to-dataset.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The copied <see cref="T:System.Data.DataRow" /> objects do not fit the schema of the destination <see cref="T:System.Data.DataTable" />.</exception>
        <exception cref="T:System.ArgumentNullException">The source <see cref="T:System.Collections.Generic.IEnumerable`1" /> sequence is <see langword="null" /> or the destination <see cref="T:System.Data.DataTable" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">A <see cref="T:System.Data.DataRow" /> in the source sequence has a state of <see cref="F:System.Data.DataRowState.Deleted" />.  -or-  The source sequence does not contain any <see cref="T:System.Data.DataRow" /> objects.  -or-  A <see cref="T:System.Data.DataRow" /> in the source sequence is <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>