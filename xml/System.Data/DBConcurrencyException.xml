<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DBConcurrencyException.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-567ae5a" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7c5b04be-ac4f-4958-bcde-0afae05845523f46815dfffc12b40be7f8658173e67a63098570.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3f46815dfffc12b40be7f8658173e67a63098570</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">3507e865a3613c00760f25ad1045aaa11bae4dd8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/23/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>The exception that is thrown by the <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> during an insert, update, or delete operation if the number of rows affected equals zero.</source>
          <target state="translated">Excepción que inicia <ph id="ph1">&lt;see cref="T:System.Data.Common.DataAdapter" /&gt;</ph> durante una operación de inserción, actualización o eliminación si el número de filas afectadas es igual a cero.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>The <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examines the number of rows affected by the execution of each insert, update, or delete operation, and throws this exception if the number equals zero.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> examina el número de filas afectadas por la ejecución de cada operación de inserción, actualización o eliminación y produce esta excepción si el número es igual a cero.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.DBConcurrencyException">
          <source>This exception is generally caused by a concurrency violation.</source>
          <target state="translated">Esta excepción normalmente se debe a una infracción de simultaneidad.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor">
          <source>The default constructor initializes any fields to their default values.</source>
          <target state="translated">El constructor predeterminado inicializa los campos con sus valores predeterminados.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">Cadena de texto que describe los detalles de la excepción.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The text string describing the details of the exception.</source>
          <target state="translated">Cadena de texto que describe los detalles de la excepción.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>A reference to an inner exception.</source>
          <target state="translated">Referencia a una excepción interna.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>You can create a new exception that catches an earlier exception.</source>
          <target state="translated">Puede crear una nueva excepción que detecta una excepción anterior.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)">
          <source>The code that handles the second exception can use the additional information from the earlier exception, also called an inner exception, to examine the cause of the initial error.</source>
          <target state="translated">El código que controla la segunda excepción puede utilizar la información adicional de la excepción anterior, también denominada excepción interna, para examinar la causa del error inicial.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The error message that explains the reason for this exception.</source>
          <target state="translated">Mensaje de error que explica la razón de esta excepción.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>The exception that is the cause of the current exception, or a null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) if no inner exception is specified.</source>
          <target state="translated">La excepción que es la causa de la excepción actual o una referencia nula (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic) si no se especifica ninguna excepción interna.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>An array containing the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception.</source>
          <target state="translated">Matriz que contiene los objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> respecto de los que un error en la actualización ha generado esta excepción.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.Data.DBConcurrencyException">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception to the specified array.</source>
          <target state="translated">Copia en la matriz especificada los objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> respecto de los que un error en la actualización ha generado esta excepción.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated">Matriz unidimensional de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> en la que se van a copiar los objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects.</source>
          <target state="translated">Copia  en la matriz especificada de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> los objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> respecto de los que un error en la actualización ha generado esta excepción.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">Al realizar actualizaciones por lotes con el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> establecido en <ph id="ph3">`true`</ph>, se produce esta excepción si todos los errores de las actualizaciones de la fila.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">En este caso, esto <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contiene <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objetos para todas las filas cuya actualización generó un error, en lugar de simplemente uno <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objeto en <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>y el afectadas <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objetos se pueden recuperar mediante una llamada a <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The one-dimensional array of <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects to copy the <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects into.</source>
          <target state="translated">Matriz unidimensional de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> en la que se van a copiar los objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>The destination array index to start copying into.</source>
          <target state="translated">Índice de la matriz de destino en el que se empieza a copiar.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>Copies the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects whose update failure generated this exception, to the specified array of <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> objects, starting at the specified destination array index.</source>
          <target state="translated">Copia en la matriz de objetos <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> especificada, comenzando en el índice especificado de la matriz de destino, los objetos <ph id="ph2">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> respecto de los que un error en la actualización ha generado esta excepción.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">Al realizar actualizaciones por lotes con el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> establecido en <ph id="ph3">`true`</ph>, se produce esta excepción si todos los errores de las actualizaciones de la fila.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">En este caso, esto <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contiene <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objetos para todas las filas cuya actualización generó un error, en lugar de simplemente uno <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objeto en <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>y el afectadas <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objetos se pueden recuperar mediante una llamada a <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> that holds the serialized data associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> que contiene los datos serializados asociados a la excepción <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> that contains the source and destination of the serialized stream associated with the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph> que contiene el origen y el destino de la secuencia serializada asociada a la <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates the aprcified serialization information object with the data needed to serialize the <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">Rellena un objeto de información de serialización especificado con los datos necesarios para serializar la excepción <ph id="ph1">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;paramref name="info" /&gt;</ph> parameter is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">El parámetro <ph id="ph1">&lt;paramref name="info" /&gt;</ph> es una referencia null (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Gets or sets the value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> that generated the <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el valor del objeto <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph> que ha generado la excepción <ph id="ph2">&lt;see cref="T:System.Data.DBConcurrencyException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>The value of the <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</source>
          <target state="translated">Valor de <ph id="ph1">&lt;see cref="T:System.Data.DataRow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Use <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> to retrieve the value of the <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> row that generated the <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>.</source>
          <target state="translated">Use <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> para recuperar el valor de la <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> de fila que generó el <ph id="ph3">&lt;xref:System.Data.DBConcurrencyException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Setting the value of the <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> has no effect.</source>
          <target state="translated">Establecer el valor de la <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> no tiene ningún efecto.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>When performing batch updates with the <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> set to <ph id="ph3">`true`</ph>, this exception is thrown if all row updates fail.</source>
          <target state="translated">Al realizar actualizaciones por lotes con el <ph id="ph1">&lt;xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A&gt;</ph> propiedad de la <ph id="ph2">&lt;xref:System.Data.Common.DataAdapter&gt;</ph> establecido en <ph id="ph3">`true`</ph>, se produce esta excepción si todos los errores de las actualizaciones de la fila.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>In this case, this <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contains <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objects for all rows whose update failed, rather than just the one <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> object in <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>, and the affected <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objects can be retrieved by calling <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</source>
          <target state="translated">En este caso, esto <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> contiene <ph id="ph2">&lt;xref:System.Data.DataRow&gt;</ph> objetos para todas las filas cuya actualización generó un error, en lugar de simplemente uno <ph id="ph3">&lt;xref:System.Data.DataRow&gt;</ph> objeto en <ph id="ph4">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph>y el afectadas <ph id="ph5">&lt;xref:System.Data.DataRow&gt;</ph> objetos se pueden recuperar mediante una llamada a <ph id="ph6">&lt;xref:System.Data.DBConcurrencyException.CopyToRows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Serialization support does not exist for <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objects.</source>
          <target state="translated">No existe compatibilidad con la serialización para <ph id="ph1">&lt;xref:System.Data.DataRow&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.Row">
          <source>Therefore, if you serialize a <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> object, the value of the <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> property in the serialized version of the object is set to a null value.</source>
          <target state="translated">Por lo tanto, si se serializa un <ph id="ph1">&lt;xref:System.Data.DBConcurrencyException&gt;</ph> (objeto), el valor de la <ph id="ph2">&lt;xref:System.Data.DBConcurrencyException.Row%2A&gt;</ph> propiedad en la versión serializada del objeto se establece en un valor null.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>Gets the number of rows whose update failed, generating this exception.</source>
          <target state="translated">Obtiene el número de filas respecto de las que se ha producido un error al actualizar, generando esta excepción.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.DBConcurrencyException.RowCount">
          <source>An integer containing a count of the number of rows whose update failed.</source>
          <target state="translated">Entero que contiene un recuento del número de filas respecto de las que se ha producido un error al actualizar.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>