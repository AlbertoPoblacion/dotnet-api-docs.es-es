<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EntityKey.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a6911c2007bc269d038d952c3f18397a65154c85.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a6911c2007bc269d038d952c3f18397a65154c85</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.EntityKey">
          <source>Provides a durable reference to an object that is an instance of an entity type.</source>
          <target state="translated">Proporciona una referencia duradera a un objeto que es una instancia de un tipo de entidad.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityKey">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> objects are immutable; that is, after they are constructed they cannot be modified.</source>
          <target state="translated">Los objetos <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> son inmutables; es decir, una vez construidos, no se pueden modificar.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityKey">
          <source>For more information, see <bpt id="p1">[</bpt>Working with Entity Keys<ept id="p1">](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>trabajar con claves de entidad<ept id="p1">](http://msdn.microsoft.com/library/fe3f4206-d277-43a1-a72f-4e86fdf12b9f)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityKey">
          <source>These examples are based on the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</source>
          <target state="translated">Estos ejemplos están basados en la <bpt id="p1">[</bpt>modelo AdventureWorks Sales<ept id="p1">](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.EntityKey">
          <source>The examples show you how to create and use an <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph>.</source>
          <target state="translated">Los ejemplos muestran cómo crear y usar un <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Data.EntityKey">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is the entity set name qualified by the entity container name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que es el nombre del conjunto de entidades calificado por el nombre del contenedor de entidades.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>A generic <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair" /&gt;</ph> collection.</source>
          <target state="translated">Colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.KeyValuePair" /&gt;</ph> genérica.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>Each key/value pair has a property name as the key and the value of that property as the value.</source>
          <target state="translated">Cada par clave-valor tiene un nombre de propiedad que corresponde a la clave, y el valor de esa propiedad que corresponde al valor.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>There should be one pair for each property that is part of the <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</source>
          <target state="translated">Debe haber un par para cada propiedad que forma parte de la <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>The order of the key/value pairs is not important, but each key property should be included.</source>
          <target state="translated">El orden de los pares clave-valor no es importante, pero deben incluirse todas las propiedades de clave.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>The property names are simple names that are not qualified with an entity type name or the schema name.</source>
          <target state="translated">Los nombres de propiedad son nombres sencillos que no están calificados con un nombre de tipo de entidad ni con el nombre de esquema.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> class with an entity set name and a generic <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair" /&gt;</ph> collection.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> con un nombre de conjunto de entidades y una colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.KeyValuePair" /&gt;</ph> genérica.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>This example is based on the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</source>
          <target state="translated">En este ejemplo se basa en el <bpt id="p1">[</bpt>modelo AdventureWorks Sales<ept id="p1">](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Object}})">
          <source>The example shows you how to create and use an <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph>.</source>
          <target state="translated">En el ejemplo se muestra cómo crear y usar un <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is the entity set name qualified by the entity container name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que es el nombre del conjunto de entidades calificado por el nombre del contenedor de entidades.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of <ph id="ph2">&lt;see cref="T:System.Data.EntityKeyMember" /&gt;</ph> objects with which to initialize the key.</source>
          <target state="translated">Colección <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de objetos <ph id="ph2">&lt;see cref="T:System.Data.EntityKeyMember" /&gt;</ph> con la que se va a inicializar la clave.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.Collections.Generic.IEnumerable{System.Data.EntityKeyMember})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> class with an entity set name and an <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> collection of <ph id="ph3">&lt;see cref="T:System.Data.EntityKeyMember" /&gt;</ph> objects.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> con un nombre de conjunto de entidades y una colección <ph id="ph2">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de objetos <ph id="ph3">&lt;see cref="T:System.Data.EntityKeyMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is the entity set name qualified by the entity container name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que es el nombre del conjunto de entidades calificado por el nombre del contenedor de entidades.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that is the name of the key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que representa el nombre de la clave.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that is the key value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que representa el valor de la clave.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> class with an entity set name and specific entity key pair.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> con un nombre de conjunto de entidades y un par de nombre/valor de clave de entidad específico.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
          <source>This example is based on the <bpt id="p1">[</bpt>AdventureWorks Sales Model<ept id="p1">](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</source>
          <target state="translated">En este ejemplo se basa en el <bpt id="p1">[</bpt>modelo AdventureWorks Sales<ept id="p1">](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)</ept>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.#ctor(System.String,System.String,System.Object)">
          <source>The example shows you how to create and use an <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph>.</source>
          <target state="translated">En el ejemplo se muestra cómo crear y usar un <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Data.EntityKey.EntityContainerName">
          <source>Gets or sets the name of the entity container.</source>
          <target state="translated">Obtiene o establece el nombre del contenedor de entidades.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.EntityContainerName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that is the name of the entity container for the entity to which the <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> belongs.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que es el nombre del contenedor de entidades para la entidad a la que pertenece la <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Data.EntityKey.EntityKeyValues">
          <source>Gets or sets the key values associated with this <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece los valores de clave asociados al objeto <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> en cuestión.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.EntityKeyValues">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> of key values for this <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> de valores de clave para esta <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.EntityKeyValues">
          <source>The <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> class contains a copy of the values that make up the logical key that is specified for this type of entity.</source>
          <target state="translated">La clase <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> contiene una copia de los valores que conforman la clave lógica especificada para este tipo de entidad.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.EntityKeyValues">
          <source>The members of the <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> each have a property name and a value in a <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, where the key is the property name and the value is the actual value of that property on the object.</source>
          <target state="translated">Cada uno de los miembros de la <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> tiene un nombre de propiedad y un valor en un <ph id="ph2">&lt;xref:System.Collections.Generic.KeyValuePair%602&gt;</ph>, donde la clave es el nombre de la propiedad y el valor es el valor real de esa propiedad en el objeto.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Data.EntityKey.EntityNotValidKey">
          <source>A simple <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> identifying an entity that resulted from a failed <bpt id="p1">[</bpt>TREAT<ept id="p1">](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)</ept> operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> simple que identifica una entidad que es el resultado de una operación <bpt id="p1">[</bpt>TREAT<ept id="p1">](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)</ept> errónea.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.EntityNotValidKey">
          <source>There are various ways to get an invalid entity.</source>
          <target state="translated">Hay varias maneras de obtener una entidad no válida.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.EntityNotValidKey">
          <source>The most common scenario is when an <ph id="ph1">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> query uses the <bpt id="p1">[</bpt>TREAT<ept id="p1">](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)</ept> operator to interpret an instance of a polymorphic type as a particular type, and the instance in question does not match.</source>
          <target state="translated">El escenario más común es cuando un <ph id="ph1">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> consulta utiliza la <bpt id="p1">[</bpt>tratar<ept id="p1">](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)</ept> no coincide con el operador para interpretar una instancia de un tipo polimórfico como un tipo determinado y la instancia en cuestión.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.EntityNotValidKey">
          <source>(<bpt id="p1">[</bpt>TREAT<ept id="p1">](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)</ept> is similar to the C# <ph id="ph1">`as`</ph> operator).</source>
          <target state="translated">(<bpt id="p1">[</bpt>Tratar<ept id="p1">](~/docs/framework/data/adonet/ef/language-reference/treat-entity-sql.md)</ept> es similar a la de C# <ph id="ph1">`as`</ph> operador).</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.EntityNotValidKey">
          <source>In this case, the query returns an entity that is not valid, and the entity key of the resulting entity is set to <ph id="ph1">&lt;xref:System.Data.EntityKey.EntityNotValidKey&gt;</ph>.</source>
          <target state="translated">En este caso, la consulta devuelve una entidad que no es válida, y la clave de entidad de la entidad resultante se establece en <ph id="ph1">&lt;xref:System.Data.EntityKey.EntityNotValidKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.Data.EntityKey.EntitySetName">
          <source>Gets or sets the name of the entity set.</source>
          <target state="translated">Obtiene o establece el nombre del conjunto de entidades.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.EntitySetName">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> value that is the name of the entity set for the entity to which the <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> belongs.</source>
          <target state="translated">Valor <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> que es el nombre del conjunto de entidades para la entidad a la que pertenece la <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Data.EntityKey">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> object to compare with this instance.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> que se va a comparar con esta instancia.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>Returns a value that indicates whether this instance is equal to a specified <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</source>
          <target state="translated">Devuelve un valor que indica si esta instancia es igual que una <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance and <ph id="ph2">&lt;paramref name="other" /&gt;</ph> have equal values; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si esta instancia y <ph id="ph2">&lt;paramref name="other" /&gt;</ph> tienen los mismos valores; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>Temporary keys have different comparison semantics than permanent keys:</source>
          <target state="translated">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>Temporary keys use reference equality.</source>
          <target state="translated">Las claves temporales usan la igualdad de las referencias.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>That is, two references to the exact same temporary <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instance are equal but no other <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> instances are equal.</source>
          <target state="translated">Es decir, dos referencias a la misma instancia temporal de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> son iguales, pero ninguna otra instancia de <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> lo es.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>Permanent keys determine equality based on the values of the contained key properties and the <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</source>
          <target state="translated">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>That is, you can have two separate <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">Es decir, puede tener dos instancias de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Data.EntityKey)">
          <source>In addition, temporary keys have no <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> or key values, but permanent keys do.</source>
          <target state="translated">Además, las claves temporales no tienen ningún <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> ni valores de clave, pero las claves permanentes sí.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with this instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> que se va a comparar con esta instancia.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>Returns a value that indicates whether this instance is equal to a specified object.</source>
          <target state="translated">Devuelve un valor que indica si esta instancia es igual que un objeto especificado.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance and <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> have equal values; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si esta instancia y <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> tienen los mismos valores; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>Temporary keys have different comparison semantics than permanent keys:</source>
          <target state="translated">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>Temporary keys use reference equality.</source>
          <target state="translated">Las claves temporales usan la igualdad de las referencias.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>That is, two references to the exact same temporary <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instance are equal but no other <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> instances are equal.</source>
          <target state="translated">Es decir, dos referencias a la misma instancia temporal de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> son iguales, pero ninguna otra instancia de <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> lo es.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>Permanent keys determine equality based on the values of the contained key properties and the <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</source>
          <target state="translated">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>That is, you can have two separate <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instances that are equal if their <ph id="ph2">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> objects are the same and their key values are equal.</source>
          <target state="translated">Es decir, puede tener dos instancias de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> independientes que serán iguales si sus objetos <ph id="ph2">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> son los mismos y también lo son sus valores de clave.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.Equals(System.Object)">
          <source>In addition, temporary keys have no <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> or key values, but permanent keys do.</source>
          <target state="translated">Además, las claves temporales no tienen ningún <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> ni valores de clave, pero las claves permanentes sí.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
          <source>The metadata workspace that contains the entity.</source>
          <target state="translated">Área de trabajo de metadatos que contiene la entidad.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
          <source>Gets the entity set for this entity key from the given metadata workspace.</source>
          <target state="translated">Obtiene el conjunto de entidades para esta clave de entidad a partir del área de trabajo de metadatos especificada.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.EntitySet" /&gt;</ph> for the entity key.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Metadata.Edm.EntitySet" /&gt;</ph> para la clave de entidad.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
          <source>The entity set is accessed based on the entity container name and entity set name of the key.</source>
          <target state="translated">La obtención de acceso al conjunto de entidades depende del nombre del contenedor de entidades y del nombre del conjunto de entidades de la clave.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.GetEntitySet(System.Data.Metadata.Edm.MetadataWorkspace)">
          <source>The entity set could not be located in the specified metadata workspace.</source>
          <target state="translated">No se ha podido encontrar el conjunto de entidades en el área de trabajo de metadatos especificada.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.GetHashCode">
          <source>Serves as a hash function for the current <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> object.</source>
          <target state="translated">Sirve como función hash para el objeto <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.GetHashCode">
          <source><ph id="ph1">&lt;see cref="M:System.Data.EntityKey.GetHashCode" /&gt;</ph> is suitable for hashing algorithms and data structures such as a hash table.</source>
          <target state="translated">El método <ph id="ph1">&lt;see cref="M:System.Data.EntityKey.GetHashCode" /&gt;</ph> se puede utilizar en algoritmos hash y estructuras de datos, como una tabla hash.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</source>
          <target state="translated">Código hash para el objeto <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> actual.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Data.EntityKey.IsTemporary">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> is temporary.</source>
          <target state="translated">Obtiene un valor que indica si la <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> es de solo lectura.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> is temporary; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> es temporal; en caso contrario, es <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>When a new entity is created, the <ph id="ph1">[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]</ph> defines temporary key and sets the <ph id="ph2">&lt;xref:System.Data.EntityKey.IsTemporary%2A&gt;</ph> property to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Cuando se crea una nueva entidad, <ph id="ph1">[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]</ph> define la clave temporal y establece la propiedad <ph id="ph2">&lt;xref:System.Data.EntityKey.IsTemporary%2A&gt;</ph> en <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>When you call the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</ph> method, the <ph id="ph2">[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]</ph> assigns a permanent key and sets the <ph id="ph3">&lt;xref:System.Data.EntityKey.IsTemporary%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cuando se llama a la <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</ph> método, el <ph id="ph2">[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]</ph> asigna una clave permanente y establece el <ph id="ph3">&lt;xref:System.Data.EntityKey.IsTemporary%2A&gt;</ph> propiedad <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>Temporary keys are constructed automatically by the framework; they cannot be constructed directly by a user.</source>
          <target state="translated">El marco de trabajo es el que construye las claves temporales de manera automática; los usuarios no pueden construirlas directamente.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>Temporary keys have different comparison semantics than permanent keys:</source>
          <target state="translated">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>Temporary keys use reference equality.</source>
          <target state="translated">Las claves temporales usan la igualdad de las referencias.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>That is, two references to the exact same temporary <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instance are equal but no other <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> instances are equal.</source>
          <target state="translated">Es decir, dos referencias a la misma instancia temporal de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> son iguales, pero ninguna otra instancia de <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> lo es.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>Permanent keys determine equality based on the values of the contained key properties and the <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</source>
          <target state="translated">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>That is, you can have two separate <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">Es decir, puede tener dos instancias de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>In addition, temporary keys have no <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> or key values, but permanent keys do.</source>
          <target state="translated">Además, las claves temporales no tienen ningún <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> ni valores de clave, pero las claves permanentes sí.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.EntityKey.IsTemporary">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt;</ph> method is called on an entity's <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateEntry&gt;</ph> and the entity transitions from the <ph id="ph3">&lt;xref:System.Data.EntityState.Added&gt;</ph> state to <ph id="ph4">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> state, the <ph id="ph5">[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]</ph> automatically computes a new permanent key for the entity and synchronizes all temporary key references.</source>
          <target state="translated">Cuando se llama al método <ph id="ph1">&lt;xref:System.Data.Objects.ObjectStateEntry.AcceptChanges%2A&gt;</ph> en una <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateEntry&gt;</ph> de una entidad y la entidad pasa del estado <ph id="ph3">&lt;xref:System.Data.EntityState.Added&gt;</ph> al estado <ph id="ph4">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph>, <ph id="ph5">[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]</ph> calcula automáticamente una nueva clave permanente para la entidad y sincroniza todas las referencias de claves temporales.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="F:System.Data.EntityKey.NoEntitySetKey">
          <source>A singleton <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> by which a read-only entity is identified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> singleton por la que se identifica una entidad de solo lectura.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.NoEntitySetKey">
          <source>A read-only entity identifies an entity that is valid in every way, except that it is not associated with an actual entity set.</source>
          <target state="translated">Una entidad de solo lectura identifica una entidad que es válida en todos los sentidos, a excepción de que no está asociada a un conjunto de entidades real.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.NoEntitySetKey">
          <source>This can occur as part of the result of an <ph id="ph1">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> query that constructs and returns an entity instance specified within the text of the query (as opposed to an entity that was retrieved from a database table).</source>
          <target state="translated">Esto se puede producir como parte del resultado de una consulta de <ph id="ph1">[!INCLUDE[esql](~/includes/esql-md.md)]</ph> que construye y devuelve una instancia de una entidad especificada en el texto de la consulta (en contraposición a una entidad que se ha recuperado de una tabla de base de datos).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.NoEntitySetKey">
          <source>An entity that does not have an entity set cannot be persisted to the database until it is associated with some entity set.</source>
          <target state="translated">Una entidad que no tiene un conjunto de entidades no puede permanecer en la base de datos; es necesario que esté asociada a un conjunto de entidades.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.NoEntitySetKey">
          <source>Therefore, the object materializer will treat this kind of entity as if the <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> merge option was specified, regardless of the actual merge option that was specified.</source>
          <target state="translated">Por consiguiente, el materializador de objetos tratará este tipo de entidad como si se hubiera especificado la opción de combinación <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>, sin tener en cuenta la opción de combinación real especificada.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Data.EntityKey.NoEntitySetKey">
          <source>An entity object will be created, but its identity will not be resolved and it will not be added to the state manager as part of the materialization process.</source>
          <target state="translated">Se creará un objeto entidad, pero no se resolverá su identidad ni se agregará al administrador de estados como parte del proceso de materialización.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source>Describes the source and destination of a given serialized stream and provides an additional caller-defined context.</source>
          <target state="translated">Describe el origen y el destino de una secuencia serializada determinada y proporciona un contexto adicional definido por el llamador.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source>Helper method that is used to deserialize an <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</source>
          <target state="translated">Método auxiliar que se usa para deserializar una <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.Data.EntityKey.OnDeserialized%2A&gt;</ph> is used by Object Services when deserializing an <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph>.</source>
          <target state="translated">Servicios de objeto usa <ph id="ph1">&lt;xref:System.Data.EntityKey.OnDeserialized%2A&gt;</ph> cuando deserializa una <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.OnDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>Serializing Objects<ept id="p1">](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>serializar objetos<ept id="p1">](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
          <source>Describes the source and destination of a given serialized stream, and provides an additional caller-defined context.</source>
          <target state="translated">Describe el origen y el destino de una secuencia serializada determinada y proporciona un contexto adicional definido por el llamador.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
          <source>Helper method that is used to deserialize an <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</source>
          <target state="translated">Método auxiliar que se usa para deserializar una <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.Data.EntityKey.OnDeserializing%2A&gt;</ph> is used by Object Services when deserializing an <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph>.</source>
          <target state="translated">Servicios de objeto usa <ph id="ph1">&lt;xref:System.Data.EntityKey.OnDeserializing%2A&gt;</ph> cuando deserializa una <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.OnDeserializing(System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>Serializing Objects<ept id="p1">](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>serializar objetos<ept id="p1">](http://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> que se va comparar.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> que se va comparar.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> objects.</source>
          <target state="translated">Compara dos objetos <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="key1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="key2" /&gt;</ph> values are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si los valores de <ph id="ph2">&lt;paramref name="key1" /&gt;</ph> y <ph id="ph3">&lt;paramref name="key2" /&gt;</ph> son iguales; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Temporary keys have different comparison semantics than permanent keys:</source>
          <target state="translated">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Temporary keys use reference equality.</source>
          <target state="translated">Las claves temporales usan la igualdad de las referencias.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>That is, two references to the exact same temporary <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instance are equal but no other <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> instances are equal.</source>
          <target state="translated">Es decir, dos referencias a la misma instancia temporal de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> son iguales, pero ninguna otra instancia de <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> lo es.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Permanent keys determine equality based on the values of the contained key properties and the <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</source>
          <target state="translated">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>That is, you can have two separate <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">Es decir, puede tener dos instancias de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>In addition, temporary keys have no <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> or key values, but permanent keys do.</source>
          <target state="translated">Además, las claves temporales no tienen ningún <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> ni valores de clave, pero las claves permanentes sí.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType&gt;</ph><ph id="ph2">&lt;/format&gt;</ph> <ph id="ph3">&lt;/remarks&gt;</ph> <ph id="ph4">&lt;/Docs&gt;</ph><ph id="ph5">
</ph><ph id="ph6">&lt;/Member&gt;</ph><ph id="ph7">
</ph><ph id="ph8">&lt;Member MemberName="op_Inequality"&gt;</ph> <ph id="ph9">&lt;MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /&gt;</ph> <ph id="ph10">&lt;MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /&gt;</ph> <ph id="ph11">&lt;MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /&gt;</ph> <bpt id="p1">&lt;MemberType&gt;</bpt>Method<ept id="p1">&lt;/MemberType&gt;</ept> <bpt id="p2">&lt;AssemblyInfo&gt;</bpt> <bpt id="p3">&lt;AssemblyName&gt;</bpt>System.Data.Entity<ept id="p3">&lt;/AssemblyName&gt;</ept> <bpt id="p4">&lt;AssemblyVersion&gt;</bpt>4.0.0.0<ept id="p4">&lt;/AssemblyVersion&gt;</ept> <ept id="p2">&lt;/AssemblyInfo&gt;</ept> <bpt id="p5">&lt;ReturnValue&gt;</bpt> <bpt id="p6">&lt;ReturnType&gt;</bpt>System.Boolean<ept id="p6">&lt;/ReturnType&gt;</ept> <ept id="p5">&lt;/ReturnValue&gt;</ept> <bpt id="p7">&lt;Parameters&gt;</bpt> <ph id="ph12">&lt;Parameter Name="key1" Type="System.Data.EntityKey" /&gt;</ph> <ph id="ph13">&lt;Parameter Name="key2" Type="System.Data.EntityKey" /&gt;</ph> <ept id="p7">&lt;/Parameters&gt;</ept> <ph id="ph14">&lt;Docs&gt;</ph> <bpt id="p8">&lt;param name="key1"&gt;</bpt>A <ph id="ph15">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> to compare.<ept id="p8">&lt;/param&gt;</ept></source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType&gt;</ph> <ph id="ph2">&lt;/format&gt;</ph> <ph id="ph3">&lt;/remarks&gt;</ph> <ph id="ph4">&lt;/Docs&gt;</ph> <ph id="ph5">
</ph> <ph id="ph6">&lt;/Member&gt;</ph> <ph id="ph7">
</ph> <ph id="ph8">&lt;Member MemberName="op_Inequality"&gt;</ph> <ph id="ph9">&lt;MemberSignature Language="C#" Value="public static bool op_Inequality (System.Data.EntityKey key1, System.Data.EntityKey key2);" /&gt;</ph> <ph id="ph10">&lt;MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Data.EntityKey key1, class System.Data.EntityKey key2) cil managed" /&gt;</ph> <ph id="ph11">&lt;MemberSignature Language="DocId" Value="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)" /&gt;</ph> <bpt id="p1">&lt;MemberType&gt;</bpt> Método<ept id="p1">&lt;/MemberType&gt;</ept> <bpt id="p2">&lt;AssemblyInfo&gt;</bpt> <bpt id="p3">&lt;AssemblyName&gt;</bpt>System.Data.Entity<ept id="p3">&lt;/AssemblyName&gt;</ept> <bpt id="p4">&lt;AssemblyVersion&gt;</bpt>4.0.0.0<ept id="p4">&lt;/AssemblyVersion&gt;</ept> <ept id="p2">&lt;/AssemblyInfo&gt;</ept> <bpt id="p5">&lt;ReturnValue&gt;</bpt> <bpt id="p6">&lt;ReturnType&gt;</bpt>System.Boolean<ept id="p6">&lt;/ReturnType&gt;</ept> <ept id="p5">&lt;/ReturnValue&gt;</ept> <bpt id="p7">&lt;Parameters&gt;</bpt> <ph id="ph12">&lt;Parameter Name="key1" Type="System.Data.EntityKey" /&gt;</ph> <ph id="ph13">&lt;Parameter Name="key2" Type="System.Data.EntityKey" /&gt;</ph> <ept id="p7">&lt;/Parameters&gt;</ept> <ph id="ph14">&lt;Docs&gt;</ph> <bpt id="p8">&lt;param name="key1"&gt;</bpt>A <ph id="ph15">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> para comparar.<ept id="p8">&lt;/param&gt;</ept></target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source><bpt id="p1">&lt;param name="key2"&gt;</bpt>A <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> to compare.<ept id="p1">&lt;/param&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;param name="key2"&gt;</bpt>Un <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> para comparar.<ept id="p1">&lt;/param&gt;</ept></target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source><bpt id="p1">&lt;summary&gt;</bpt>Compares two <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> objects.<ept id="p1">&lt;/summary&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;summary&gt;</bpt>Compara dos <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> objetos.<ept id="p1">&lt;/summary&gt;</ept></target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source><bpt id="p1">&lt;returns&gt;</bpt> <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="key1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="key2" /&gt;</ph> values are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.<ept id="p1">&lt;/returns&gt;</ept></source>
          <target state="translated"><bpt id="p1">&lt;returns&gt;</bpt> <ph id="ph1">&lt;see langword="true" /&gt;</ph> Si el <ph id="ph2">&lt;paramref name="key1" /&gt;</ph> y <ph id="ph3">&lt;paramref name="key2" /&gt;</ph> valores no son iguales; en caso contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.<ept id="p1">&lt;/returns&gt;</ept></target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source><ph id="ph1">&lt;remarks&gt;</ph> <ph id="ph2">&lt;format type="text/markdown"&gt;</ph>&lt;![CDATA[</source>
          <target state="translated"><ph id="ph1">&lt;remarks&gt;</ph> <ph id="ph2">&lt;format type="text/markdown"&gt;</ph>&amp;LT;! [CDATA [</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Temporary keys have different comparison semantics than permanent keys:</source>
          <target state="translated">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Temporary keys use reference equality.</source>
          <target state="translated">Las claves temporales usan la igualdad de las referencias.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>That is, two references to the exact same temporary <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instance are equal but no other <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> instances are equal.</source>
          <target state="translated">Es decir, dos referencias a la misma instancia temporal de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> son iguales, pero ninguna otra instancia de <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> lo es.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Permanent keys determine equality based on the values of the contained key properties and the <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</source>
          <target state="translated">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>That is, you can have two separate <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">Es decir, puede tener dos instancias de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>In addition, temporary keys have no <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> or key values, but regular keys do.</source>
          <target state="translated">Además, las claves temporales no tienen ningún <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> ni valores de clave, pero las claves regulares sí.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Equality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>The equivalent method for this operator is <ph id="ph1">&lt;xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">El método equivalente para este operador es <ph id="ph1">&lt;xref:System.Data.EntityKey.Equals%28System.Data.EntityKey%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> que se va comparar.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> to compare.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> que se va comparar.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Compares two <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph> objects.</source>
          <target state="translated">Compara dos objetos <ph id="ph1">&lt;see cref="T:System.Data.EntityKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="key1" /&gt;</ph> and <ph id="ph3">&lt;paramref name="key2" /&gt;</ph> values are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> si los valores de <ph id="ph2">&lt;paramref name="key1" /&gt;</ph> y <ph id="ph3">&lt;paramref name="key2" /&gt;</ph> no son iguales; en caso contrario, es <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Temporary keys have different comparison semantics than permanent keys:</source>
          <target state="translated">Las claves temporales tienen una semántica de comparación distinta de la de las claves permanentes:</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Temporary keys use reference equality.</source>
          <target state="translated">Las claves temporales usan la igualdad de las referencias.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>That is, two references to the exact same temporary <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instance are equal but no other <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> instances are equal.</source>
          <target state="translated">Es decir, dos referencias a la misma instancia temporal de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> son iguales, pero ninguna otra instancia de <ph id="ph2">&lt;xref:System.Data.EntityKey&gt;</ph> lo es.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>Permanent keys determine equality based on the values of the contained key properties and the <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</source>
          <target state="translated">Las claves permanentes determinan la igualdad en función de los valores de las propiedades de clave contenidas y del <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>That is, you can have two separate <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> instances that are equal if their entity sets are the same and their key values are equal.</source>
          <target state="translated">Es decir, puede tener dos instancias de <ph id="ph1">&lt;xref:System.Data.EntityKey&gt;</ph> independientes que serán iguales si sus conjuntos de entidades son los mismos y también lo son sus valores de clave.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.EntityKey.op_Inequality(System.Data.EntityKey,System.Data.EntityKey)">
          <source>In addition, temporary keys have no <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> or key values, but regular keys do.</source>
          <target state="translated">Además, las claves temporales no tienen ningún <ph id="ph1">&lt;xref:System.Data.Metadata.Edm.EntitySet&gt;</ph> ni valores de clave, pero las claves regulares sí.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>