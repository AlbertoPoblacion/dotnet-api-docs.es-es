<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="243bd847b5407c0b553d0c054eac1c272bf164ea" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39994775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <TypeSignature Language="F#" Value="type XamlMemberInvoker = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Proporciona un punto de extensión que puede tener acceso a las características de miembro de un miembro XAML a través de técnicas distintas de la reflexión.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El propósito de <xref:System.Xaml.Schema.XamlMemberInvoker> consiste en habilitar un sistema de tipos XAML extensible, esquema y un Runtime activo que no se basen completamente en características CLR como atributos de CLR, información de reflexión a través de <xref:System.Type> y <xref:System.Reflection.MemberInfo>, y así sucesivamente. Las subclases de <xref:System.Xaml.Schema.XamlMemberInvoker> se usan como parámetros de entrada para los constructores de clases de esquema XAML alternativos, como <xref:System.Xaml.XamlMember>. Subclase <xref:System.Xaml.XamlMember> y pasar el <xref:System.Xaml.Schema.XamlMemberInvoker> a través del constructor base. Junto con la definición de un <xref:System.Xaml.Schema.XamlMemberInvoker> para el constructor, también debe proporcionar valores de reemplazo de al menos algunos de los `Lookup` métodos de <xref:System.Xaml.XamlMember>.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> tiene una implementación predeterminada. La implementación predeterminada sigue un modelo similar a la implementación predeterminada de tipos de esquema XAML <xref:System.Xaml.XamlType> y <xref:System.Xaml.XamlMember>: el sistema de tipos CLR se usa para la creación de instancias, valores y las búsquedas, incluido el uso de atributos de CLR, <xref:System.Type> y <xref:System.Reflection.MemberInfo>, y así sucesivamente.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> Proporciona métodos para básico operaciones get y set (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>). También proporciona las propiedades <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> y <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, pero estos no son virtuales.  
  
> [!NOTE]
>  Es posible obtener un <xref:System.Xaml.Schema.XamlMemberInvoker> valor que representa una directiva XAML, que se implementa como una clase privada en la implementación de System.Xaml. Si intenta llamar a <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> o <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> en este invocador, se produce una excepción.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada está vacía.  
  
 Este constructor se invoca internamente para proporcionar un valor para <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>. Para un <xref:System.Xaml.Schema.XamlMemberInvoker> subclase, se espera que usa el <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> firma para la construcción o proporcione una invalidación que llama a <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> como base. Proporcionar la <xref:System.Xaml.XamlMember> implementa una predeterminada patrón where <xref:System.Xaml.Schema.XamlMemberInvoker> es inmutable.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberSignature Language="F#" Value="new System.Xaml.Schema.XamlMemberInvoker : System.Xaml.XamlMember -&gt; System.Xaml.Schema.XamlMemberInvoker" Usage="new System.Xaml.Schema.XamlMemberInvoker member" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">Valor de <see cref="T:System.Xaml.XamlMember" /> para el miembro XAML concreto relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> basándose en la clase <see cref="T:System.Xaml.XamlMember" /> proporcionada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor se llama internamente en función de la <xref:System.Xaml.XamlMember> donde el <xref:System.Xaml.Schema.XamlMemberInvoker> se usa para la construcción.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="member" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj&#xA;override this.GetValue : obj -&gt; obj" Usage="xamlMemberInvoker.GetValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Instancia del tipo de propietario para el miembro.</param>
        <summary>Obtiene un valor de la propiedad relevante de una instancia.</summary>
        <returns>El valor de propiedad solicitado.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.  
  
 **-o bien-**  
  
Se invoca este método en un miembro de solo escritura.  
  
 **-o bien-**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> es <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>. Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlMember" />, que incluye casos donde el <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> es <see langword="null" />.  Se produce si la implementación base <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> es <see langword="null" />.  Para las propiedades estáticas (<see cref="P:System.Reflection.MethodBase.IsStatic" /> es <see langword="true" /> por <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) la implementación predeterminada llama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> en <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> pasando <see langword="null" /> como primer parámetro y empaquetadas <paramref name="instance" /> en el segundo. Para las propiedades no estáticas, llama a <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> y reenvía el <paramref name="instance" /> como el primer parámetro y un paquete vacío como segundo parámetro.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="xamlMemberInvoker.SetValue (instance, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Instancia del tipo de propietario para el miembro.</param>
        <param name="value">Valor de la propiedad que se establecerá.</param>
        <summary>Establece un valor de la propiedad relevante en una instancia.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="instance" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlMember" /> desconocida.  
  
 **-o bien-**  
  
Se invoca este método en un miembro de solo lectura.  
  
 **-o bien-**  
  
 <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> es <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>. Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlMember" />, que incluye casos donde el <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> de la <see cref="T:System.Xaml.XamlMember" /> es <see langword="null" />.  Se produce si la implementación base <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> es <see langword="null" />.  Para las propiedades estáticas (<see cref="P:System.Reflection.MethodBase.IsStatic" /> es <see langword="true" /> por <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) la implementación predeterminada llama <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> en <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> pasando <see langword="null" /> como primer parámetro y empaquetado <paramref name="instance" /> y <paramref name="value" /> como la segundo parámetro. Para las propiedades no estáticas, llama a <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> y reenvía <paramref name="instance" /> como primer parámetro y <paramref name="value" /> como segundo parámetro.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult&#xA;override this.ShouldSerializeValue : obj -&gt; System.Xaml.Schema.ShouldSerializeResult" Usage="xamlMemberInvoker.ShouldSerializeValue instance" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Instancia con la propiedad cuya persistencia se va a examinar.</param>
        <summary>Indica si se debe conservar el valor mediante procesos de serialización.</summary>
        <returns>Valor de la enumeración.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La implementación predeterminada devuelve <xref:System.Xaml.Schema.ShouldSerializeResult.Default> si es el propio miembro XAML <xref:System.Xaml.XamlMember.IsUnknown%2A>, o si ningún pertinentes en reflexión de CLR `ShouldSerialize` método se encuentra en el miembro subyacente a través de reflexión de forma predeterminada.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingGetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>El objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que obtiene los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se basa en una llamada <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> en la construcción de <xref:System.Xaml.XamlMember>. Para un estado desconocido <xref:System.Xaml.XamlMember>, o para los casos donde <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> devuelve `null`, esta propiedad devuelve `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnderlyingSetter : System.Reflection.MethodInfo" Usage="System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>Objeto <see cref="T:System.Reflection.MethodInfo" /> para el método CLR que establece los valores de la propiedad que es relevante para este objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, o <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad se basa en una llamada <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> en la construcción de <xref:System.Xaml.XamlMember>. Para un estado desconocido <xref:System.Xaml.XamlMember>, o para los casos donde <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> devuelve `null`, esta propiedad devuelve `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UnknownInvoker : System.Xaml.Schema.XamlMemberInvoker" Usage="System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Proporciona un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</summary>
        <value>Un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> desconocido y no implementado totalmente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Proporciona este valor para un <xref:System.Xaml.Schema.XamlMemberInvoker> API definido por el parámetro de System.Xaml normalmente hará que el código llamado producir excepciones.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>