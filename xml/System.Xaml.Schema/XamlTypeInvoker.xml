<Type Name="XamlTypeInvoker" FullName="System.Xaml.Schema.XamlTypeInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="504f5574033cb4de7a3c6a42e6208306d4dd86e5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlTypeInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlTypeInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlTypeInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlTypeInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlTypeInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8ef6d-101">Proporciona un punto de la extensión que puede construir instancias de un tipo XAML a través de técnicas distintas de la reflexión y los constructores.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8ef6d-101">Provides an extension point that can construct instances of a XAML type through techniques other than reflection and constructors.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-102">El propósito de <xref:System.Xaml.Schema.XamlTypeInvoker> es permitir que un sistema de tipos XAML extensible, esquema y un Runtime activo que no se basen completamente en características CLR como los atributos CLR, información de reflexión a través de <xref:System.Type> y <xref:System.Reflection.MemberInfo>, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-102">The purpose of <xref:System.Xaml.Schema.XamlTypeInvoker> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span> <span data-ttu-id="8ef6d-103">Las subclases de <xref:System.Xaml.Schema.XamlTypeInvoker> se usan como parámetros de entrada para los constructores alternativos de clases de esquema XAML como <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-103">Subclasses of <xref:System.Xaml.Schema.XamlTypeInvoker> are used as input parameters for the alternate constructors of XAML schema classes such as <xref:System.Xaml.XamlType>.</span></span> <span data-ttu-id="8ef6d-104">Deriva una subclase de <xref:System.Xaml.XamlType> y pase el <xref:System.Xaml.Schema.XamlTypeInvoker> a través del constructor base.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-104">You subclass <xref:System.Xaml.XamlType> and pass the <xref:System.Xaml.Schema.XamlTypeInvoker> through to the base constructor.</span></span> <span data-ttu-id="8ef6d-105">Además de definir un <xref:System.Xaml.Schema.XamlTypeInvoker> para el constructor, también debe proporcionar valores de reemplazo de al menos algunas de las `Lookup` métodos de <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-105">Along with defining a <xref:System.Xaml.Schema.XamlTypeInvoker> for the constructor, you must also provide overrides for at least some of the `Lookup` methods of <xref:System.Xaml.XamlType>.</span></span>  
  
 <span data-ttu-id="8ef6d-106"><xref:System.Xaml.Schema.XamlTypeInvoker> tiene una implementación predeterminada.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-106"><xref:System.Xaml.Schema.XamlTypeInvoker> has a default implementation.</span></span> <span data-ttu-id="8ef6d-107">La implementación predeterminada sigue un modelo similar a la implementación predeterminada de tipos de esquema XAML <xref:System.Xaml.XamlType> y <xref:System.Xaml.XamlMember>: el sistema de tipos CLR se usa para la creación de instancias, valores y búsquedas, incluido el uso de atributos CLR, <xref:System.Type> y <xref:System.Reflection.MemberInfo>, y así sucesivamente.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-107">The default implementation follows a similar model to the default implementation of XAML schema types <xref:System.Xaml.XamlType> and <xref:System.Xaml.XamlMember>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <xref:System.Type> and <xref:System.Reflection.MemberInfo>, and so on.</span></span>  
  
 <span data-ttu-id="8ef6d-108"><xref:System.Xaml.Schema.XamlTypeInvoker> Proporciona métodos para la creación de instancias básica (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) y los métodos que son relevantes para los tipos donde la <xref:System.Xaml.XamlType> representa una colección, diccionario o matriz (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span><span class="sxs-lookup"><span data-stu-id="8ef6d-108"><xref:System.Xaml.Schema.XamlTypeInvoker> provides methods for basic instantiation (<xref:System.Xaml.Schema.XamlTypeInvoker.CreateInstance%2A>) and methods that are relevant for types where the <xref:System.Xaml.XamlType> represents a collection, dictionary or array (<xref:System.Xaml.Schema.XamlTypeInvoker.AddToCollection%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod%2A>; <xref:System.Xaml.Schema.XamlTypeInvoker.GetItems%2A>).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8ef6d-109">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-109">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlTypeInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlTypeInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ef6d-110">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-110">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-111">La implementación predeterminada está vacía.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-111">The default implementation is empty.</span></span>  
  
 <span data-ttu-id="8ef6d-112">Se invoca este constructor internamente para proporcionar un valor para <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-112">This constructor is invoked internally to provide a value for <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A>.</span></span> <span data-ttu-id="8ef6d-113">Para una <xref:System.Xaml.Schema.XamlTypeInvoker> subclase, se espera que se usar la <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> firma para la construcción o proporcione una invalidación que llama <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> como base.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-113">For a <xref:System.Xaml.Schema.XamlTypeInvoker> subclass, it is expected that you either use the <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> signature for construction or provide an override that calls <xref:System.Xaml.Schema.XamlTypeInvoker.%23ctor%28System.Xaml.XamlType%29> as base.</span></span> <span data-ttu-id="8ef6d-114">Proporcionar la <xref:System.Xaml.XamlType> implementa un valor predeterminado de patrón where <xref:System.Xaml.Schema.XamlTypeInvoker> es inmutable.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-114">Providing the <xref:System.Xaml.XamlType> implements a default pattern where <xref:System.Xaml.Schema.XamlTypeInvoker> is immutable.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlTypeInvoker (System.Xaml.XamlType type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.#ctor(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (type As XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlTypeInvoker(System::Xaml::XamlType ^ type);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8ef6d-115">El valor de <see cref="T:System.Xaml.XamlType" /> para el tipo XAML concreto relevante para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-115">The <see cref="T:System.Xaml.XamlType" /> value for the specific XAML type relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef6d-116">Inicializa una nueva instancia de la clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> basándose en la clase <see cref="T:System.Xaml.XamlType" /> proporcionada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-116">Initializes a new instance of the <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> class, based on a provided <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-117">Este constructor se llama internamente en función de la <xref:System.Xaml.XamlType> donde el <xref:System.Xaml.Schema.XamlTypeInvoker> se utiliza para la construcción.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-117">This constructor is called internally based on the <xref:System.Xaml.XamlType> where the <xref:System.Xaml.Schema.XamlTypeInvoker> is used for construction.</span></span> <span data-ttu-id="8ef6d-118">El `type` proporcionado aquí es relevante para todos los otra llamada al método para <xref:System.Xaml.Schema.XamlTypeInvoker>.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-118">The `type` provided here is relevant to all other method calls for <xref:System.Xaml.Schema.XamlTypeInvoker>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ef6d-119">
            <paramref name="type" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-119">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddToCollection">
      <MemberSignature Language="C#" Value="public virtual void AddToCollection (object instance, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToCollection(object instance, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToCollection(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToCollection (instance As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToCollection(System::Object ^ instance, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8ef6d-120">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-120">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="8ef6d-121">Elemento que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-121">The item to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef6d-122">Agrega el elemento proporcionado a una instancia del tipo pertinente a esta <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-122">Adds the provided item to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-123">Sólo debe llamar a este método en un <xref:System.Xaml.XamlType> que representa una colección.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-123">You should only call this method on a <xref:System.Xaml.XamlType> that represents a collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8ef6d-124">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-124">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="8ef6d-125">**-o bien-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-125">**-or-**</span>
          </span>
          <span data-ttu-id="8ef6d-126">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es una colección.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-126">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ef6d-127">
            <paramref name="instance" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-127">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="8ef6d-128">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-128">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8ef6d-129">La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-129">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="8ef6d-130">Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlType" />, que incluye casos donde la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-130">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-131">Internamente, la implementación base llama <see cref="P:System.Xaml.XamlType.IsCollection" />y se produce si el resultado es <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-131">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsCollection" />, and throws if the result is <see langword="false" />.</span>
            </span>
            <span data-ttu-id="8ef6d-132">La implementación base no necesariamente utiliza su propio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementación.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-132">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span>
            </span>
            <span data-ttu-id="8ef6d-133">Primero, una conversión de <paramref name="instance" /> a <see cref="T:System.Collections.IList" /> se ha intentado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-133">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IList" /> is attempted.</span>
            </span>
            <span data-ttu-id="8ef6d-134">Si esto se realiza correctamente, una llamada a <see cref="M:System.Collections.IList.Add(System.Object)" /> se realiza y el método devuelve.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-134">If this succeeds, a call to <see cref="M:System.Collections.IList.Add(System.Object)" /> is made and the method returns.</span>
            </span>
            <span data-ttu-id="8ef6d-135">En caso contrario, la implementación base usa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> para invocar subyacente <see langword="Add" /> método, que se obtienen de una llamada a <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-135">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
            <span data-ttu-id="8ef6d-136">En la implementación base ninguna excepción se produce en este nivel si <paramref name="item" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-136">In the base implementation no exception is raised at this level if <paramref name="item" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-137">Es posible que subyacente <see langword="Add" /> método producirá una excepción al invocarlo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-137">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span>
            </span>
            <span data-ttu-id="8ef6d-138">Otras excepciones en tiempo de ejecución son posibles si <see cref="P:System.Xaml.XamlType.ItemType" /> no devuelve un resultado válido.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-138">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AddToDictionary">
      <MemberSignature Language="C#" Value="public virtual void AddToDictionary (object instance, object key, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddToDictionary(object instance, object key, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.AddToDictionary(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddToDictionary (instance As Object, key As Object, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddToDictionary(System::Object ^ instance, System::Object ^ key, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="key" Type="System.Object" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8ef6d-139">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-139">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="8ef6d-140">Clave de diccionario para el elemento que se agrega.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-140">Dictionary key for the item to add.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="8ef6d-141">Valor del elemento que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-141">The item value to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef6d-142">Agrega el valor de la clave y del elemento proporcionados a una instancia del tipo que es relevante para esta <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-142">Adds the provided key and item value to an instance of the type that is relevant to this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-143">Sólo debe llamar a este método en un <xref:System.Xaml.XamlType> que representa un diccionario.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-143">You should only call this method on a <xref:System.Xaml.XamlType> that represents a dictionary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8ef6d-144">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-144">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="8ef6d-145">**-o bien-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-145">**-or-**</span>
          </span>
          <span data-ttu-id="8ef6d-146">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es un diccionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-146">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ef6d-147">
            <paramref name="instance" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-147">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xaml.XamlSchemaException">
          <span data-ttu-id="8ef6d-148">
            <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> devuelve <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-148">
              <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> returns <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8ef6d-149">La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-149">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="8ef6d-150">Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlType" />, que incluye casos donde la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-150">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-151">Internamente, la implementación base llama <see cref="P:System.Xaml.XamlType.IsDictionary" />y se produce si el resultado es <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-151">Internally, the base implementation calls <see cref="P:System.Xaml.XamlType.IsDictionary" />, and throws if the result is <see langword="false" />.</span>
            </span>
            <span data-ttu-id="8ef6d-152">La implementación base no necesariamente utiliza su propio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementación.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-152">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> implementation.</span>
            </span>
            <span data-ttu-id="8ef6d-153">Primero, una conversión de <paramref name="instance" /> a <see cref="T:System.Collections.IDictionary" /> se ha intentado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-153">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IDictionary" /> is attempted.</span>
            </span>
            <span data-ttu-id="8ef6d-154">Si esto se realiza correctamente, una llamada a <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> se realiza y el método devuelve.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-154">If this succeeds, a call to <see cref="M:System.Collections.IDictionary.Add(System.Object,System.Object)" /> is made and the method returns.</span>
            </span>
            <span data-ttu-id="8ef6d-155">En caso contrario, la implementación base usa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> para invocar subyacente <see langword="Add" /> método, que se obtienen de una llamada a <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> para este <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-155">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="Add" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
            <span data-ttu-id="8ef6d-156">En la implementación base ninguna excepción se produce en este nivel si <paramref name="item" /> o <paramref name="key" /> son <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-156">In the base implementation no exception is raised at this level if <paramref name="item" /> or <paramref name="key" /> are <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-157">Es posible que subyacente <see langword="Add" /> método producirá una excepción al invocarlo.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-157">It is still possible that the underlying <see langword="Add" /> method will raise an exception when invoked.</span>
            </span>
            <span data-ttu-id="8ef6d-158">Otras excepciones en tiempo de ejecución son posibles si <see cref="P:System.Xaml.XamlType.ItemType" /> no devuelve un resultado válido.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-158">Other run time exceptions are possible if <see cref="P:System.Xaml.XamlType.ItemType" /> does not return a valid result.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (object[] arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(object[] arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.CreateInstance(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateInstance (arguments As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(cli::array &lt;System::Object ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="8ef6d-159">Una matriz de objetos que proporciona <see langword="x:ConstructorArgs" /> para la instancia.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-159">An array of objects that supply the <see langword="x:ConstructorArgs" /> for the instance.</span>
          </span>
          <span data-ttu-id="8ef6d-160">Puede ser <see langword="null" /> para los tipos que no requieren o utilizan <see langword="x:ConstructorArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-160">May be <see langword="null" /> for types that do not require or use <see langword="x:ConstructorArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef6d-161">Crea una instancia del objeto basada en el <see cref="T:System.Xaml.XamlType" /> iniciado por la construcción para este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-161">Creates an object instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef6d-162">Instancia creada basada en el <see cref="T:System.Xaml.XamlType" /> iniciado por la construcción para <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-162">The created instance based on the construction-initiated <see cref="T:System.Xaml.XamlType" /> for this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MissingMethodException">
          <span data-ttu-id="8ef6d-163">No pudo resolver un constructor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-163">Could not resolve a constructor.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8ef6d-164">La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-164">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="8ef6d-165">Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlType" />, que incluye casos donde la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-165">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetAddMethod (System.Xaml.XamlType contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetAddMethod(class System.Xaml.XamlType contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetAddMethod(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAddMethod (contentType As XamlType) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetAddMethod(System::Xaml::XamlType ^ contentType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="8ef6d-166">
            <see cref="T:System.Xaml.XamlType" /> para el tipo de elemento que usa el método <see langword="Add" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-166">
              <see cref="T:System.Xaml.XamlType" /> for the item type that is used by the <see langword="Add" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef6d-167">Devuelve el método <see langword="Add" /> pertinente para un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que es pertinente para una colección o diccionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-167">Returns the relevant <see langword="Add" /> method for a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is relevant to a collection or dictionary.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef6d-168">Información <see cref="T:System.Reflection.MethodInfo" /> de CLR para el método <see langword="Add" />, o null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-168">CLR <see cref="T:System.Reflection.MethodInfo" /> information for the <see langword="Add" /> method, or null.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-169">Este método debe devolver `null` para los casos donde la <xref:System.Xaml.XamlType> para este <xref:System.Xaml.Schema.XamlTypeInvoker> no es una colección de escritura o el diccionario.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-169">This method should return `null` for cases where the <xref:System.Xaml.XamlType> for this <xref:System.Xaml.Schema.XamlTypeInvoker> is not a writeable collection or dictionary.</span></span> <span data-ttu-id="8ef6d-170">En concreto, debe devolver `null` para los casos donde <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> devuelve `None`.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-170">Specifically, should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ef6d-171">Si no se tiene acceso a un sistema de tipos XAML plena confianza, este método tiene el potencial en false de informe <xref:System.Reflection.MethodInfo> información a los llamadores.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-171">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ef6d-172">
            <paramref name="contentType" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-172">
              <paramref name="contentType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8ef6d-173">Devuelve la implementación base <see langword="null" /> para los casos donde un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlType" />, que incluye casos donde la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-173">The base implementation returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-174">También devuelve <see langword="null" /> si <see cref="P:System.Xaml.XamlType.ItemType" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-174">It also returns <see langword="null" /> if <see cref="P:System.Xaml.XamlType.ItemType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-175">Colecciones de XAML potencialmente tienen más de una <see langword="Add" /> método, porque una colección XAML puede admitir potencialmente más de un tipo de contenido (vea <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, o consulte <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> para obtener información acerca de una implementación de este concepto en WPF).</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-175">XAML collections potentially have more than one <see langword="Add" /> method, because a XAML collection can potentially support more than one content type (see <see cref="P:System.Xaml.XamlType.AllowedContentTypes" />, or see <see cref="T:System.Windows.Markup.ContentWrapperAttribute" /> for information about one implementation of this concept in WPF).</span>
            </span>
            <span data-ttu-id="8ef6d-176">La implementación predeterminada usa la lógica interna para devolver la mejor coincidencia basándose en las firmas y el tipo de proporcionado <paramref name="contentType" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-176">The default implementation uses internal logic to return the best match based on the signatures and the type of the supplied <paramref name="contentType" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetEnumeratorMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetEnumeratorMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetEnumeratorMethod() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEnumeratorMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetEnumeratorMethod();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8ef6d-177">Devuelve un objeto que representa un método que puede enumerar los elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-177">Returns an object representing a method that can enumerate over items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef6d-178">
            <see cref="T:System.Reflection.MethodInfo" /> para un método enumerador o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-178">
              <see cref="T:System.Reflection.MethodInfo" /> for an enumerator method, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-179">Debe devolver `null` para los casos donde <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> devuelve `None`.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-179">Should return `null` for cases where <xref:System.Xaml.XamlType.LookupCollectionKind%2A?displayProperty=nameWithType> returns `None`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ef6d-180">Si no se tiene acceso a un sistema de tipos XAML plena confianza, este método tiene el potencial en false de informe <xref:System.Reflection.MethodInfo> información a los llamadores.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-180">If you are not accessing a fully trusted XAML type system, this method has the potential to report false <xref:System.Reflection.MethodInfo> information to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8ef6d-181">La implementación base llama a un método auxiliar interno.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-181">The base implementation calls an internal helper method.</span>
            </span>
            <span data-ttu-id="8ef6d-182">Esa aplicación auxiliar devuelve <see langword="null" /> para los casos donde un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlType" />, que incluye casos donde la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-182">That helper returns <see langword="null" /> for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-183">También devuelve <see langword="null" /> para los casos donde <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> devuelve <see langword="None" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-183">It also returns <see langword="null" /> for cases where <see cref="M:System.Xaml.XamlType.LookupCollectionKind" /> returns <see langword="None" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IEnumerator GetItems (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetItems(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlTypeInvoker.GetItems(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetItems (instance As Object) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetItems(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">
          <span data-ttu-id="8ef6d-184">Una instancia del tipo especificado por <see cref="T:System.Xaml.XamlType" /> que se utiliza para construir este <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-184">An instance of the type specified by the <see cref="T:System.Xaml.XamlType" /> used for constructing this <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8ef6d-185">Devuelve un objeto <see cref="T:System.Collections.IEnumerator" /> que representa el conjunto de elementos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-185">Returns an <see cref="T:System.Collections.IEnumerator" /> object representing the set of items.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8ef6d-186">Un objeto <see cref="T:System.Collections.IEnumerator" /> o <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-186">An <see cref="T:System.Collections.IEnumerator" /> object, or <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8ef6d-187">Se invoca este método en una clase <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> que se basa en una clase <see cref="T:System.Xaml.XamlType" /> desconocida.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-187">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> that is based on an unknown <see cref="T:System.Xaml.XamlType" />.</span>
          </span>
          <span data-ttu-id="8ef6d-188">**-o bien-**</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-188">**-or-**</span>
          </span>
          <span data-ttu-id="8ef6d-189">Se invoca a este método en un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> donde el tipo pertinente no es una colección ni un diccionario.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-189">Invoked this method on a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> where the relevant type is not a collection or dictionary.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8ef6d-190">
            <paramref name="instance" /> es <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-190">
              <paramref name="instance" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="8ef6d-191">La implementación base incluye una llamada a la aplicación auxiliar interna <c>ThrowIfUnknown</c>.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-191">The base implementation includes a call to the internal helper <c>ThrowIfUnknown</c>.</span>
            </span>
            <span data-ttu-id="8ef6d-192">Esta aplicación auxiliar siempre produce una excepción para los casos donde un <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> se basa en un estado desconocido <see cref="T:System.Xaml.XamlType" />, que incluye casos donde la <see cref="P:System.Xaml.XamlType.UnderlyingType" /> de la <see cref="T:System.Xaml.XamlType" /> es <see langword="null" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-192">This helper always throws for cases where a <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> is based on an unknown <see cref="T:System.Xaml.XamlType" />, which includes cases where the <see cref="P:System.Xaml.XamlType.UnderlyingType" /> of the <see cref="T:System.Xaml.XamlType" /> is <see langword="null" />.</span>
            </span>
            <span data-ttu-id="8ef6d-193">La implementación base no necesariamente utiliza su propio <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementación.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-193">The base implementation does not necessarily use its own <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> implementation.</span>
            </span>
            <span data-ttu-id="8ef6d-194">Primero, una conversión de <paramref name="instance" /> a <see cref="T:System.Collections.IEnumerable" /> se ha intentado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-194">First, a cast of <paramref name="instance" /> to <see cref="T:System.Collections.IEnumerable" /> is attempted.</span>
            </span>
            <span data-ttu-id="8ef6d-195">Si esto se realiza correctamente, una llamada a <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> se realiza y el método devuelve que devuelven el valor.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-195">If this succeeds, a call to <see cref="M:System.Collections.IEnumerable.GetEnumerator" /> is made and the method returns that return value.</span>
            </span>
            <span data-ttu-id="8ef6d-196">En caso contrario, la implementación base usa CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> para invocar subyacente <see langword="GetEnumerator" /> método, que se obtienen de una llamada a <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> para este <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="8ef6d-196">Otherwise, the base implementation uses CLR <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> to invoke the underlying <see langword="GetEnumerator" /> method, as obtained from a call to <see cref="M:System.Xaml.Schema.XamlTypeInvoker.GetEnumeratorMethod" /> for this <paramref name="" /><see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; SetMarkupExtensionHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetMarkupExtensionHandler As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ SetMarkupExtensionHandler { EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef6d-197">Obtiene el controlador que se va a usar cuando un <see cref="T:System.Xaml.XamlObjectWriter" /> llama a una <see cref="T:System.Windows.Markup.MarkupExtension" /> implementada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-197">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into an implemented <see cref="T:System.Windows.Markup.MarkupExtension" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef6d-198">Implementación de controlador que controla este caso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-198">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-199">El controlador de eventos se basa en <xref:System.EventHandler%601> restringida <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> datos del evento.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-199">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="8ef6d-200">El valor devuelto, se invoca el <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> comportamiento de la <xref:System.Xaml.XamlType> que la <xref:System.Xaml.Schema.XamlTypeInvoker> se basa en.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-200">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetMarkupExtensionHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="8ef6d-201">El valor devuelto es `null` para un <xref:System.Xaml.Schema.XamlTypeInvoker> que se basa en un estado desconocido <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-201">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTypeConverterHandler">
      <MemberSignature Language="C#" Value="public EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; SetTypeConverterHandler" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.SetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SetTypeConverterHandler As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ SetTypeConverterHandler { EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef6d-202">Consigue que el controlador se utilice cuando un <see cref="T:System.Xaml.XamlObjectWriter" /> llama a un <see cref="T:System.ComponentModel.TypeConverter" /> implementado por CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-202">Gets the handler to use when a <see cref="T:System.Xaml.XamlObjectWriter" /> calls into a CLR-implemented <see cref="T:System.ComponentModel.TypeConverter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef6d-203">Implementación de controlador que controla este caso.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-203">A handler implementation that handles this case.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-204">El controlador de eventos se basa en <xref:System.EventHandler%601> restringida <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> datos del evento.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-204">The event handler is based on <xref:System.EventHandler%601> constrained with <xref:System.Windows.Markup.XamlSetMarkupExtensionEventArgs> event data.</span></span>  
  
 <span data-ttu-id="8ef6d-205">El valor devuelto, se invoca el <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> comportamiento de la <xref:System.Xaml.XamlType> que la <xref:System.Xaml.Schema.XamlTypeInvoker> se basa en.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-205">The value returned invokes the <xref:System.Xaml.XamlType.LookupSetTypeConverterHandler%2A> behavior of the <xref:System.Xaml.XamlType> that the <xref:System.Xaml.Schema.XamlTypeInvoker> is based on.</span></span>  
  
 <span data-ttu-id="8ef6d-206">El valor devuelto es `null` para un <xref:System.Xaml.Schema.XamlTypeInvoker> que se basa en un estado desconocido <xref:System.Xaml.XamlType>.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-206">The return value is `null` for a <xref:System.Xaml.Schema.XamlTypeInvoker> that is based on an unknown <xref:System.Xaml.XamlType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlTypeInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlTypeInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlTypeInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8ef6d-207">Proporciona un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconocido y no implementado totalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-207">Provides a static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8ef6d-208">Un valor estático que representa un objeto <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> desconocido y no implementado totalmente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8ef6d-208">A static value that represents an unknown, not fully implemented <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ef6d-209">Proporcionar este valor para un <xref:System.Xaml.Schema.XamlTypeInvoker> API definido por el parámetro de System.Xaml normalmente se hará que el código llamado que se produzcan excepciones.</span><span class="sxs-lookup"><span data-stu-id="8ef6d-209">Supplying this value for a <xref:System.Xaml.Schema.XamlTypeInvoker> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>