<Type Name="ColorBlend" FullName="System.Drawing.Drawing2D.ColorBlend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e6c6d358803bccd3a9e65cf00a02696d59eedde" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36339287" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ColorBlend" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ColorBlend extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.ColorBlend" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ColorBlend" />
  <TypeSignature Language="C++ CLI" Value="public ref class ColorBlend sealed" />
  <TypeSignature Language="F#" Value="type ColorBlend = class" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Define matrices de colores y posiciones utilizadas para intercalar mezclas de color en un degradado de color. Esta clase no puede heredarse.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.ColorBlend" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorBlend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.ColorBlend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorBlend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.ColorBlend" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo siguiente está diseñado para utilizarse en un entorno de Windows Forms. Muestra cómo utilizar el <xref:System.Drawing.Drawing2D.ColorBlend> clase junto con la <xref:System.Drawing.Drawing2D.LinearGradientBrush> clase para dibujar una elipse de la pantalla que tiene los colores mezclados. La elipse es verde a la izquierda, combina a amarillo, y después a azul y finalmente a rojo a la derecha. Esto se logra a través de la configuración de la `myColors` y `myPositions` las matrices usadas en el <xref:System.Drawing.Drawing2D.ColorBlend.Colors%2A> y <xref:System.Drawing.Drawing2D.ColorBlend.Positions%2A> propiedades. Tenga en cuenta que la <xref:System.Drawing.Drawing2D.LinearGradientBrush.InterpolationColors%2A> propiedad de la <xref:System.Drawing.Drawing2D.LinearGradientBrush> objeto denominado `lgBrush2` deben realizarse igual que el <xref:System.Drawing.Drawing2D.ColorBlend> objeto `myBlend`.  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicMisc#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicMisc#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicMisc#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicMisc/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ColorBlend (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.ColorBlend.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ColorBlend(int count);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.ColorBlend : int -&gt; System.Drawing.Drawing2D.ColorBlend" Usage="new System.Drawing.Drawing2D.ColorBlend count" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">Número de colores y posiciones de <see cref="T:System.Drawing.Drawing2D.ColorBlend" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.ColorBlend" /> con el número de colores y posiciones especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Para obtener una ejemplo, vea <xref:System.Drawing.Drawing2D.ColorBlend.%23ctor%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Colors">
      <MemberSignature Language="C#" Value="public System.Drawing.Color[] Colors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color[] Colors" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.ColorBlend.Colors" />
      <MemberSignature Language="VB.NET" Value="Public Property Colors As Color()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::Color&gt; ^ Colors { cli::array &lt;System::Drawing::Color&gt; ^ get(); void set(cli::array &lt;System::Drawing::Color&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Colors : System.Drawing.Color[] with get, set" Usage="System.Drawing.Drawing2D.ColorBlend.Colors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una matriz de colores que representa los colores que se van a utilizar en las posiciones correspondientes de un degradado.</summary>
        <value>Una matriz de estructuras <see cref="T:System.Drawing.Color" /> que representa los colores que se deben usar en las posiciones correspondientes de un degradado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad es una matriz de <xref:System.Drawing.Color> estructuras que representa los colores que desea usar en las posiciones correspondientes a lo largo de un degradado. Junto con la <xref:System.Drawing.Drawing2D.ColorBlend.Positions%2A> , esta propiedad define un degradado de varios colores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Positions">
      <MemberSignature Language="C#" Value="public float[] Positions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32[] Positions" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.ColorBlend.Positions" />
      <MemberSignature Language="VB.NET" Value="Public Property Positions As Single()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;float&gt; ^ Positions { cli::array &lt;float&gt; ^ get(); void set(cli::array &lt;float&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Positions : single[] with get, set" Usage="System.Drawing.Drawing2D.ColorBlend.Positions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece las posiciones a lo largo de la línea de un degradado.</summary>
        <value>Una matriz de valores que especifica porcentajes de distancia a lo largo de la línea de degradado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los elementos de esta matriz especifican porcentajes de distancia a lo largo de la línea de degradado. Por ejemplo, un valor de elemento de 0, 2f especifica que este punto es 20 por ciento de la distancia total desde el punto de partida. Los elementos de esta matriz se representan mediante valores de punto flotante entre 0,0 f y 1.0f y el primer elemento de la matriz debe ser 0, 0F y el último elemento debe ser 1.0f.  
  
 Junto con la <xref:System.Drawing.Drawing2D.ColorBlend.Colors%2A> , esta propiedad define un degradado de varios colores.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>