<Type Name="GraphicsPath" FullName="System.Drawing.Drawing2D.GraphicsPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5024225fdd7fefb748a47cb1578e2d1091336b29" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36741342" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class GraphicsPath : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit GraphicsPath extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.GraphicsPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class GraphicsPath&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class GraphicsPath sealed : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="F#" Value="type GraphicsPath = class&#xA;    inherit MarshalByRefObject&#xA;    interface ICloneable&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="c61b6-101">Representa una serie de líneas y curvas conectadas.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c61b6-101">Represents a series of connected lines and curves.</span>
      </span>
      <span data-ttu-id="c61b6-102">Esta clase no puede heredarse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c61b6-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-103">Aplicaciones usan las rutas de acceso para dibujar los contornos de formas, rellenar los interiores de formas y crear áreas de recorte.</span><span class="sxs-lookup"><span data-stu-id="c61b6-103">Applications use paths to draw outlines of shapes, fill the interiors of shapes, and create clipping regions.</span></span> <span data-ttu-id="c61b6-104">El motor de gráficos mantiene las coordenadas de formas geométricas en una ruta de acceso en el espacio de coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-104">The graphics engine maintains the coordinates of geometric shapes in a path in world coordinate space.</span></span>  
  
 <span data-ttu-id="c61b6-105">Una ruta de acceso puede estar formada por cualquier número de figuras (subtrazados).</span><span class="sxs-lookup"><span data-stu-id="c61b6-105">A path may be composed of any number of figures (subpaths).</span></span> <span data-ttu-id="c61b6-106">Cada figura está formada por una secuencia de varias líneas y curvas o una forma geométrica primitiva.</span><span class="sxs-lookup"><span data-stu-id="c61b6-106">Each figure is either composed of a sequence of connected lines and curves or a geometric shape primitive.</span></span> <span data-ttu-id="c61b6-107">El punto inicial de una figura es el primer punto en la secuencia de líneas y curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="c61b6-107">The starting point of a figure is the first point in the sequence of connected lines and curves.</span></span> <span data-ttu-id="c61b6-108">El punto final es el último punto en la secuencia.</span><span class="sxs-lookup"><span data-stu-id="c61b6-108">The ending point is the last point in the sequence.</span></span> <span data-ttu-id="c61b6-109">Los puntos inicial y finales de una forma geométrica primitiva se definen mediante la especificación primitiva.</span><span class="sxs-lookup"><span data-stu-id="c61b6-109">The starting and ending points of a geometric shape primitive are defined by the primitive specification.</span></span>  
  
 <span data-ttu-id="c61b6-110">Una figura que consta de una secuencia de varias líneas y curvas conectadas (cuyos puntos inicial y final pueden ser coincidentes) es una figura abierta, a menos que se cierre explícitamente.</span><span class="sxs-lookup"><span data-stu-id="c61b6-110">A figure that consists of a sequence of connected lines and curves (whose starting and ending points may be coincident) is an open figure, unless it is closed explicitly.</span></span> <span data-ttu-id="c61b6-111">Una figura se puede cerrar explícitamente, mediante el uso de la <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> método, que cierra la figura actual mediante la conexión de una línea desde el punto final en el punto de partida.</span><span class="sxs-lookup"><span data-stu-id="c61b6-111">A figure can be closed explicitly, by using the <xref:System.Drawing.Drawing2D.GraphicsPath.CloseFigure%2A> method, which closes the current figure by connecting a line from the ending point to the starting point.</span></span> <span data-ttu-id="c61b6-112">Una figura que consta de una forma geométrica primitiva es una figura cerrada.</span><span class="sxs-lookup"><span data-stu-id="c61b6-112">A figure that consists of a geometric shape primitive is a closed figure.</span></span>  
  
 <span data-ttu-id="c61b6-113">Para los fines de relleno y el recorte (por ejemplo, si una ruta de acceso se representa mediante <xref:System.Drawing.Graphics.FillPath%2A>), abra todas las cifras se cierran agregando una línea desde el primer punto en el último punto.</span><span class="sxs-lookup"><span data-stu-id="c61b6-113">For purposes of filling and clipping (for example, if a path is rendered using <xref:System.Drawing.Graphics.FillPath%2A>), all open figures are closed by adding a line from the figure's first point to its last point.</span></span>  
  
 <span data-ttu-id="c61b6-114">Una nueva figura se inicia implícitamente cuando se crea una ruta de acceso o cuando se cierra una figura.</span><span class="sxs-lookup"><span data-stu-id="c61b6-114">A new figure is implicitly started when a path is created or when a figure is closed.</span></span> <span data-ttu-id="c61b6-115">Una nueva figura explícitamente cuando se crea el <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> se llama al método.</span><span class="sxs-lookup"><span data-stu-id="c61b6-115">A new figure is explicitly created when the <xref:System.Drawing.Drawing2D.GraphicsPath.StartFigure%2A> method is called.</span></span>  
  
 <span data-ttu-id="c61b6-116">Cuando una forma geométrica primitiva se agrega a una ruta de acceso, agrega una figura que contiene la forma geométrica y también implícitamente inicia una nueva figura.</span><span class="sxs-lookup"><span data-stu-id="c61b6-116">When a geometric shape primitive is added to a path, it adds a figure containing the geometric shape, and also implicitly starts a new figure.</span></span> <span data-ttu-id="c61b6-117">Por lo tanto, siempre hay una figura actual en una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-117">Consequently, there is always a current figure in a path.</span></span> <span data-ttu-id="c61b6-118">Cuando se agregan líneas y curvas conectadas a una ruta de acceso, se agrega una línea implícita, según sea necesario para conectar el punto final de la figura actual en el punto de partida de las nuevas líneas y curvas para formar una secuencia de varias líneas y curvas.</span><span class="sxs-lookup"><span data-stu-id="c61b6-118">When lines and curves are added to a path, an implicit line is added as needed to connect the ending point of the current figure to the starting point of the new lines and curves to form a sequence of connected lines and curves.</span></span>  
  
 <span data-ttu-id="c61b6-119">Una figura tiene una dirección que describe cómo se realiza el seguimiento de los segmentos de línea y curva entre el punto inicial y el punto final.</span><span class="sxs-lookup"><span data-stu-id="c61b6-119">A figure has a direction that describes how line and curve segments are traced between the starting point and the ending point.</span></span> <span data-ttu-id="c61b6-120">La dirección se define en el orden en que las líneas y curvas conectadas se agregan a una figura o se define mediante la forma geométrica primitiva.</span><span class="sxs-lookup"><span data-stu-id="c61b6-120">The direction is defined in the order that lines and curves are added to a figure, or is defined by the geometric shape primitive.</span></span> <span data-ttu-id="c61b6-121">La dirección se utiliza para determinar los interiores de ruta de acceso para el recorte y relleno.</span><span class="sxs-lookup"><span data-stu-id="c61b6-121">The direction is used in determining the path interiors for clipping and fill.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-122">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con una enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> de <see langword="Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-122">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration of <see langword="Alternate" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-123">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> como valor de la propiedad <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with a <see cref="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" /> value of <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath fillMode" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="fillMode">
          <span data-ttu-id="c61b6-124">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina cómo se rellena el interior de <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-124">The <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interior of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> is filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-125">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con la enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-125">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As Point(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="c61b6-126">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-126">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="c61b6-127">Matriz de elementos de la enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada punto correspondiente de la matriz <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-127">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-128">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices<see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.Point" /> que se hayan especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-128">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pts As PointF(), types As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="c61b6-129">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-129">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="c61b6-130">Matriz de elementos de la enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada punto correspondiente de la matriz <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-130">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-131">Inicializa una nueva instancia de la matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices <see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.PointF" /> especificadas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-131">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.Point[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Point[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.Point[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::Point&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.Point[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.Point[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="c61b6-132">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-132">An array of <see cref="T:System.Drawing.Point" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="c61b6-133">Matriz de elementos de la enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada punto correspondiente de la matriz <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-133">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="c61b6-134">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica cómo se rellena el interior de las formas en este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-134">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-135">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices <see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.Point" /> especificadas y con el elemento de enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-135">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> class with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.Point" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GraphicsPath (System.Drawing.PointF[] pts, byte[] types, System.Drawing.Drawing2D.FillMode fillMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.PointF[] pts, unsigned int8[] types, valuetype System.Drawing.Drawing2D.FillMode fillMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.#ctor(System.Drawing.PointF[],System.Byte[],System.Drawing.Drawing2D.FillMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GraphicsPath(cli::array &lt;System::Drawing::PointF&gt; ^ pts, cli::array &lt;System::Byte&gt; ^ types, System::Drawing::Drawing2D::FillMode fillMode);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Drawing2D.GraphicsPath : System.Drawing.PointF[] * byte[] * System.Drawing.Drawing2D.FillMode -&gt; System.Drawing.Drawing2D.GraphicsPath" Usage="new System.Drawing.Drawing2D.GraphicsPath (pts, types, fillMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pts" Type="System.Drawing.PointF[]" />
        <Parameter Name="types" Type="System.Byte[]" />
        <Parameter Name="fillMode" Type="System.Drawing.Drawing2D.FillMode" />
      </Parameters>
      <Docs>
        <param name="pts">
          <span data-ttu-id="c61b6-136">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define las coordenadas de los puntos que componen este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-136">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the coordinates of the points that make up this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <param name="types">
          <span data-ttu-id="c61b6-137">Matriz de elementos de la enumeración <see cref="T:System.Drawing.Drawing2D.PathPointType" /> que especifica el tipo de cada punto correspondiente de la matriz <c>pts</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-137">An array of <see cref="T:System.Drawing.Drawing2D.PathPointType" /> enumeration elements that specifies the type of each corresponding point in the <c>pts</c> array.</span>
          </span>
        </param>
        <param name="fillMode">
          <span data-ttu-id="c61b6-138">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica cómo se rellena el interior de las formas en este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-138">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-139">Inicializa una nueva instancia de la matriz <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con las matrices <see cref="T:System.Drawing.Drawing2D.PathPointType" /> y <see cref="T:System.Drawing.PointF" /> especificadas y con el elemento de enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-139">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> array with the specified <see cref="T:System.Drawing.Drawing2D.PathPointType" /> and <see cref="T:System.Drawing.PointF" /> arrays and with the specified <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddArc">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-140">Agrega un arco elíptico a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-140">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="c61b6-141">
            <see cref="T:System.Drawing.Rectangle" /> que representa los límites rectangulares de la elipse cuyo arco se toma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-141">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="c61b6-142">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-142">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="c61b6-143">Ángulo existente entre <c>startAngle</c> y el final del arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-143">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-144">Agrega un arco elíptico a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-144">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-145">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="c61b6-145">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="c61b6-146">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-146">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="c61b6-147">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo 0 grados) en el número de grados en el ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="c61b6-147">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="c61b6-148">De igual forma se encuentra el punto de conexión mediante la medición hacia la derecha desde el punto inicial en el número de grados en el ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="c61b6-148">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="c61b6-149">Si el ángulo de barrido es mayor que 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c61b6-149">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-150">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-150">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-151">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-151">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-152">Crea un rectángulo, desde el que se define el arco.</span><span class="sxs-lookup"><span data-stu-id="c61b6-152">Creates a rectangle, from which the arc is defined.</span></span>  
  
-   <span data-ttu-id="c61b6-153">Crea una ruta de acceso, `myPath`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-153">Creates a path, `myPath`.</span></span>  
  
-   <span data-ttu-id="c61b6-154">Define un arco elíptico de 180 grados que oscila desde 0 a 180 grados y se anexa a una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-154">Defines a 180-degree elliptical arc that sweeps from 0 degrees to 180 degrees and appends it to a path.</span></span>  
  
-   <span data-ttu-id="c61b6-155">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-155">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (System.Drawing.RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(valuetype System.Drawing.RectangleF rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Drawing.RectangleF,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (rect As RectangleF, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(System::Drawing::RectangleF rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : System.Drawing.RectangleF * single * single -&gt; unit" Usage="graphicsPath.AddArc (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="c61b6-156">
            <see cref="T:System.Drawing.RectangleF" /> que representa los límites rectangulares de la elipse cuyo arco se toma.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-156">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangular bounds of the ellipse from which the arc is taken.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="c61b6-157">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-157">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="c61b6-158">Ángulo existente entre <c>startAngle</c> y el final del arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-158">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-159">Agrega un arco elíptico a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-159">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-160">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="c61b6-160">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="c61b6-161">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-161">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="c61b6-162">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo 0 grados) en el número de grados en el ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="c61b6-162">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="c61b6-163">De igual forma se encuentra el punto de conexión mediante la medición hacia la derecha desde el punto inicial en el número de grados en el ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="c61b6-163">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="c61b6-164">Si el ángulo de barrido es mayor que 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c61b6-164">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-165">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-165">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-166">Coordenada x del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-166">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-167">Coordenada y del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-167">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="c61b6-168">Ancho del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-168">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c61b6-169">Alto del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-169">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="c61b6-170">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-170">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="c61b6-171">Ángulo existente entre <c>startAngle</c> y el final del arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-171">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-172">Agrega un arco elíptico a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-172">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-173">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="c61b6-173">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="c61b6-174">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-174">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="c61b6-175">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo 0 grados) en el número de grados en el ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="c61b6-175">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="c61b6-176">De igual forma se encuentra el punto de conexión mediante la medición hacia la derecha desde el punto inicial en el número de grados en el ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="c61b6-176">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="c61b6-177">Si el ángulo de barrido es mayor que 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c61b6-177">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-178">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-178">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddArc">
      <MemberSignature Language="C#" Value="public void AddArc (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArc(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddArc(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArc (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArc(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddArc : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddArc (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-179">Coordenada x del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-179">The x-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-180">Coordenada y del ángulo superior izquierdo del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-180">The y-coordinate of the upper-left corner of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="c61b6-181">Ancho del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-181">The width of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c61b6-182">Alto del área rectangular que define la elipse desde la que se dibuja el arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-182">The height of the rectangular region that defines the ellipse from which the arc is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="c61b6-183">Ángulo inicial del arco, medido en grados en el sentido de las agujas del reloj desde el eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-183">The starting angle of the arc, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="c61b6-184">Ángulo existente entre <c>startAngle</c> y el final del arco.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-184">The angle between <c>startAngle</c> and the end of the arc.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-185">Agrega un arco elíptico a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-185">Appends an elliptical arc to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-186">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior al principio del arco.</span><span class="sxs-lookup"><span data-stu-id="c61b6-186">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the beginning of the arc.</span></span>  
  
 <span data-ttu-id="c61b6-187">El arco se realiza un seguimiento a lo largo del perímetro de la elipse limitada por el rectángulo especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-187">The arc is traced along the perimeter of the ellipse bounded by the specified rectangle.</span></span> <span data-ttu-id="c61b6-188">El punto inicial del arco se determina mediante la medición hacia la derecha desde el eje x de la elipse (en el ángulo 0 grados) en el número de grados en el ángulo inicial.</span><span class="sxs-lookup"><span data-stu-id="c61b6-188">The starting point of the arc is determined by measuring clockwise from the x-axis of the ellipse (at the 0-degree angle) by the number of degrees in the start angle.</span></span> <span data-ttu-id="c61b6-189">De igual forma se encuentra el punto de conexión mediante la medición hacia la derecha desde el punto inicial en el número de grados en el ángulo de barrido.</span><span class="sxs-lookup"><span data-stu-id="c61b6-189">The endpoint is similarly located by measuring clockwise from the starting point by the number of degrees in the sweep angle.</span></span> <span data-ttu-id="c61b6-190">Si el ángulo de barrido es mayor que 360 grados o menor que-360 grados, el arco se trazará exactamente 360 o -360 grados, respectivamente.</span><span class="sxs-lookup"><span data-stu-id="c61b6-190">If the sweep angle is greater than 360 degrees or less than -360 degrees, the arc is swept by exactly 360 degrees or -360 degrees, respectively.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-191">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-191">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddArc%28System.Drawing.Rectangle%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBezier">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-192">Agrega una curva Bézier cúbica a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-192">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.Point pt1, System.Drawing.Point pt2, System.Drawing.Point pt3, System.Drawing.Point pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2, valuetype System.Drawing.Point pt3, valuetype System.Drawing.Point pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As Point, pt2 As Point, pt3 As Point, pt4 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::Point pt1, System::Drawing::Point pt2, System::Drawing::Point pt3, System::Drawing::Point pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.Point * System.Drawing.Point * System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
        <Parameter Name="pt3" Type="System.Drawing.Point" />
        <Parameter Name="pt4" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="c61b6-193">
            <see cref="T:System.Drawing.Point" /> que representa el punto inicial de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-193">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="c61b6-194">
            <see cref="T:System.Drawing.Point" /> que representa el primer punto de control de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-194">A <see cref="T:System.Drawing.Point" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="c61b6-195">
            <see cref="T:System.Drawing.Point" /> que representa el segundo punto de control de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-195">A <see cref="T:System.Drawing.Point" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="c61b6-196">
            <see cref="T:System.Drawing.Point" /> que representa el extremo de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-196">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-197">Agrega una curva Bézier cúbica a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-197">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-198">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="c61b6-198">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="c61b6-199">Si hay una línea anterior o un segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="c61b6-199">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-200">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-200">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (System.Drawing.PointF pt1, System.Drawing.PointF pt2, System.Drawing.PointF pt3, System.Drawing.PointF pt4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2, valuetype System.Drawing.PointF pt3, valuetype System.Drawing.PointF pt4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (pt1 As PointF, pt2 As PointF, pt3 As PointF, pt4 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(System::Drawing::PointF pt1, System::Drawing::PointF pt2, System::Drawing::PointF pt3, System::Drawing::PointF pt4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddBezier (pt1, pt2, pt3, pt4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
        <Parameter Name="pt3" Type="System.Drawing.PointF" />
        <Parameter Name="pt4" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="c61b6-201">
            <see cref="T:System.Drawing.PointF" /> que representa el punto inicial de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-201">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the curve.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="c61b6-202">
            <see cref="T:System.Drawing.PointF" /> que representa el primer punto de control de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-202">A <see cref="T:System.Drawing.PointF" /> that represents the first control point for the curve.</span>
          </span>
        </param>
        <param name="pt3">
          <span data-ttu-id="c61b6-203">
            <see cref="T:System.Drawing.PointF" /> que representa el segundo punto de control de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-203">A <see cref="T:System.Drawing.PointF" /> that represents the second control point for the curve.</span>
          </span>
        </param>
        <param name="pt4">
          <span data-ttu-id="c61b6-204">
            <see cref="T:System.Drawing.PointF" /> que representa el extremo de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-204">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-205">Agrega una curva Bézier cúbica a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-205">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-206">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="c61b6-206">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="c61b6-207">Si hay una línea anterior o un segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="c61b6-207">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-208">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-208">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(int32 x1, int32 y1, int32 x2, int32 y2, int32 x3, int32 y3, int32 x4, int32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer, x3 As Integer, y3 As Integer, x4 As Integer, y4 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(int x1, int y1, int x2, int y2, int x3, int y3, int x4, int y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : int * int * int * int * int * int * int * int -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
        <Parameter Name="x3" Type="System.Int32" />
        <Parameter Name="y3" Type="System.Int32" />
        <Parameter Name="x4" Type="System.Int32" />
        <Parameter Name="y4" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="c61b6-209">Coordenada x del punto inicial de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-209">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="c61b6-210">Coordenada y del punto inicial de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-210">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="c61b6-211">Coordenada x del primer punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-211">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="c61b6-212">Coordenada y del primer punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-212">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="c61b6-213">Coordenada x del segundo punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-213">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="c61b6-214">Coordenada y del segundo punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-214">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="c61b6-215">Coordenada x del extremo de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-215">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="c61b6-216">Coordenada y del extremo de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-216">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-217">Agrega una curva Bézier cúbica a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-217">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-218">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="c61b6-218">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="c61b6-219">Si hay una línea anterior o un segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="c61b6-219">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-220">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-220">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-221">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-221">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-222">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-222">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-223">Agrega una curva Bézier cúbica definida por los puntos (50, 50), (70, 0), (100, 120) y (150, 50) para la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-223">Adds a cubic Bézier curve defined by the points (50, 50), (70, 0), (100, 120), and (150, 50) to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-224">Cierra la curva.</span><span class="sxs-lookup"><span data-stu-id="c61b6-224">Closes the curve.</span></span>  
  
-   <span data-ttu-id="c61b6-225">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-225">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBezier">
      <MemberSignature Language="C#" Value="public void AddBezier (float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBezier(float32 x1, float32 y1, float32 x2, float32 y2, float32 x3, float32 y3, float32 x4, float32 y4) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBezier (x1 As Single, y1 As Single, x2 As Single, y2 As Single, x3 As Single, y3 As Single, x4 As Single, y4 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBezier(float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4);" />
      <MemberSignature Language="F#" Value="member this.AddBezier : single * single * single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddBezier (x1, y1, x2, y2, x3, y3, x4, y4)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
        <Parameter Name="x3" Type="System.Single" />
        <Parameter Name="y3" Type="System.Single" />
        <Parameter Name="x4" Type="System.Single" />
        <Parameter Name="y4" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="c61b6-226">Coordenada x del punto inicial de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-226">The x-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="c61b6-227">Coordenada y del punto inicial de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-227">The y-coordinate of the starting point of the curve.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="c61b6-228">Coordenada x del primer punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-228">The x-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="c61b6-229">Coordenada y del primer punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-229">The y-coordinate of the first control point for the curve.</span>
          </span>
        </param>
        <param name="x3">
          <span data-ttu-id="c61b6-230">Coordenada x del segundo punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-230">The x-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="y3">
          <span data-ttu-id="c61b6-231">Coordenada y del segundo punto de control para la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-231">The y-coordinate of the second control point for the curve.</span>
          </span>
        </param>
        <param name="x4">
          <span data-ttu-id="c61b6-232">Coordenada x del extremo de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-232">The x-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <param name="y4">
          <span data-ttu-id="c61b6-233">Coordenada y del extremo de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-233">The y-coordinate of the endpoint of the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-234">Agrega una curva Bézier cúbica a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-234">Adds a cubic Bézier curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-235">La curva cúbica se construye desde el primer punto hasta el cuarto punto mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="c61b6-235">The cubic curve is constructed from the first point to the fourth point by using the second and third points as control points.</span></span>  
  
 <span data-ttu-id="c61b6-236">Si hay una línea anterior o un segmento de curva en la ilustración, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la curva cúbica.</span><span class="sxs-lookup"><span data-stu-id="c61b6-236">If there is a previous line or curve segment in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the cubic curve.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-237">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-237">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddBezier%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddBeziers">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-238">Agrega una secuencia de curvas Bézier cúbicas conectadas a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-238">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (params System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (ParamArray points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(... cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-239">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-239">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-240">Agrega una secuencia de curvas Bézier cúbicas conectadas a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-240">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-241">El `points` parámetro especifica una matriz de puntos de conexión y puntos de control de las curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="c61b6-241">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="c61b6-242">La primera curva se construye desde el primer punto hasta el cuarto punto en el `points` matriz mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="c61b6-242">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="c61b6-243">Además del extremo de la curva anterior, cada curva sucesiva en la secuencia necesita exactamente tres puntos más: los dos puntos siguientes de la secuencia son puntos de control y el tercero es el extremo de la curva agregada.</span><span class="sxs-lookup"><span data-stu-id="c61b6-243">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="c61b6-244">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la primera curva cúbica de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="c61b6-244">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-245">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-245">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-246">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-246">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-247">Crea una matriz de siete puntos (que representan dos curvas de Bézier conectadas).</span><span class="sxs-lookup"><span data-stu-id="c61b6-247">Creates an array of seven points (representing two connected Bézier curves).</span></span>  
  
-   <span data-ttu-id="c61b6-248">Crea una ruta de acceso y agrega la serie de puntos de curva de Bézier a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-248">Creates a path and adds the series of Bézier curve points to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-249">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-249">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddBeziers">
      <MemberSignature Language="C#" Value="public void AddBeziers (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBeziers(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddBeziers(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBeziers (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBeziers(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddBeziers : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddBeziers points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-250">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-250">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-251">Agrega una secuencia de curvas Bézier cúbicas conectadas a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-251">Adds a sequence of connected cubic Bézier curves to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-252">El `points` parámetro especifica una matriz de puntos de conexión y puntos de control de las curvas conectadas.</span><span class="sxs-lookup"><span data-stu-id="c61b6-252">The `points` parameter specifies an array of endpoints and control points of the connected curves.</span></span> <span data-ttu-id="c61b6-253">La primera curva se construye desde el primer punto hasta el cuarto punto en el `points` matriz mediante el segundo y tercer puntos como puntos de control.</span><span class="sxs-lookup"><span data-stu-id="c61b6-253">The first curve is constructed from the first point to the fourth point in the `points` array by using the second and third points as control points.</span></span> <span data-ttu-id="c61b6-254">Además del extremo de la curva anterior, cada curva sucesiva en la secuencia necesita exactamente tres puntos más: los dos puntos siguientes de la secuencia son puntos de control y el tercero es el extremo de la curva agregada.</span><span class="sxs-lookup"><span data-stu-id="c61b6-254">In addition to the endpoint of the previous curve, each subsequent curve in the sequence needs exactly three more points: the next two points in the sequence are control points, and the third is the endpoint for the added curve.</span></span>  
  
 <span data-ttu-id="c61b6-255">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la primera curva cúbica de la secuencia.</span><span class="sxs-lookup"><span data-stu-id="c61b6-255">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment to the starting point of the first cubic curve in the sequence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-256">Para una ejemplo, vea:</span><span class="sxs-lookup"><span data-stu-id="c61b6-256">For an example see:</span></span>  
  
 <xref:System.Drawing.Drawing2D.GraphicsPath.AddBeziers%28System.Drawing.Point%5B%5D%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddClosedCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-257">Agrega una curva cerrada a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-257">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="c61b6-258">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-258">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-259">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-259">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-260">Agrega una curva cerrada a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-260">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="c61b6-261">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-261">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-262">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-262">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-263">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-263">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="c61b6-264">Si los puntos primero y el último punto en el `points` matriz no son el mismo punto, la curva se cierra conectando dichos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-264">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="c61b6-265">Este método, no se puede establecer el valor de tensión y el valor predeterminado es un valor equivalente a 0,5.</span><span class="sxs-lookup"><span data-stu-id="c61b6-265">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-266">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-266">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddClosedCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-267">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-267">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-268">Agrega una curva cerrada a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-268">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="c61b6-269">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-269">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-270">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-270">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-271">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-271">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="c61b6-272">Si los puntos primero y el último punto en el `points` matriz no son el mismo punto, la curva se cierra conectando dichos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-272">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span> <span data-ttu-id="c61b6-273">Este método, no se puede establecer el valor de tensión y el valor predeterminado es un valor equivalente a 0,5.</span><span class="sxs-lookup"><span data-stu-id="c61b6-273">The tension value cannot be set for this method, and defaults to a value equivalent to 0.5.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-274">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-274">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-275">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-275">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="c61b6-276">Valor de 0 a 1 que especifica la inclinación de la curva entre puntos, donde 0 es la curva más cerrada (esquina más apuntada) y 1 es la curva más abierta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-276">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-277">Agrega una curva cerrada a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-277">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="c61b6-278">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-278">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-279">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-279">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-280">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-280">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="c61b6-281">Si los puntos primero y el último punto en el `points` matriz no son el mismo punto, la curva se cierra conectando dichos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-281">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-282">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-282">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-283">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-283">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-284">Crea una matriz de seis puntos (que representan una curva spline cardinal).</span><span class="sxs-lookup"><span data-stu-id="c61b6-284">Creates an array of six points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="c61b6-285">Crea una ruta de acceso y agrega las curvas spline cardinal cerrada en la ruta de acceso (cerrado desde el punto de conexión en el punto de partida).</span><span class="sxs-lookup"><span data-stu-id="c61b6-285">Creates a path and adds the closed cardinal spline curves to the path (closed from the endpoint to the starting point).</span></span>  
  
-   <span data-ttu-id="c61b6-286">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-286">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="c61b6-287">Tenga en cuenta que se usa una tensión de 0,5.</span><span class="sxs-lookup"><span data-stu-id="c61b6-287">Notice that a tension of 0.5 is used.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddClosedCurve">
      <MemberSignature Language="C#" Value="public void AddClosedCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddClosedCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddClosedCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddClosedCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddClosedCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddClosedCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-288">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-288">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="c61b6-289">Valor de 0 a 1 que especifica la inclinación de la curva entre puntos, donde 0 es la curva más cerrada (esquina más apuntada) y 1 es la curva más abierta.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-289">A value between from 0 through 1 that specifies the amount that the curve bends between points, with 0 being the smallest curve (sharpest corner) and 1 being the smoothest curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-290">Agrega una curva cerrada a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-290">Adds a closed curve to this path.</span>
          </span>
          <span data-ttu-id="c61b6-291">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-291">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-292">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-292">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-293">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-293">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span> <span data-ttu-id="c61b6-294">Si los puntos primero y el último punto en el `points` matriz no son el mismo punto, la curva se cierra conectando dichos dos puntos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-294">If the first point and the last point in the `points` array are not the same point, the curve is closed by connecting these two points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-295">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-295">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddCurve">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-296">Agrega una curva spline a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-296">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="c61b6-297">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-297">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-298">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-298">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-299">Agrega una curva spline a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-299">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="c61b6-300">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-300">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-301">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-301">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-302">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-302">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-303">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-303">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddCurve points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-304">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-304">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-305">Agrega una curva spline a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-305">Adds a spline curve to the current figure.</span>
          </span>
          <span data-ttu-id="c61b6-306">Se utiliza una curva spline cardinal porque la curva recorre todos los puntos de la matriz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-306">A cardinal spline curve is used because the curve travels through each of the points in the array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-307">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-307">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-308">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-308">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-309">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-309">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-310">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-310">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="c61b6-311">Valor que especifica la inclinación de la curva entre puntos de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-311">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="c61b6-312">Los valores mayores que 1 producen resultados impredecibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-312">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-313">Agrega una curva spline a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-313">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-314">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-314">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-315">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-315">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-316">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-316">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddClosedCurve%28System.Drawing.Point%5B%5D%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * single -&gt; unit" Usage="graphicsPath.AddCurve (points, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-317">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-317">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="c61b6-318">Valor que especifica la inclinación de la curva entre puntos de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-318">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="c61b6-319">Los valores mayores que 1 producen resultados impredecibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-319">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-320">Agrega una curva spline a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-320">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-321">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-321">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-322">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-322">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-323">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-323">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.Point[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.Point[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.Point[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As Point(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::Point&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.Point[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-324">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-324">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c61b6-325">Índice del elemento de la matriz <c>points</c> que se usa como primer punto de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-325">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="c61b6-326">Valor que especifica la inclinación de la curva entre puntos de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-326">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="c61b6-327">Los valores mayores que 1 producen resultados impredecibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-327">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="c61b6-328">Valor que especifica la inclinación de la curva entre puntos de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-328">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="c61b6-329">Los valores mayores que 1 producen resultados impredecibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-329">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-330">Agrega una curva spline a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-330">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-331">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-331">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-332">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-332">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="c61b6-333">La curva comienza en el punto de la matriz especificada por el `offset` parámetro e incluye el número de puntos (segmentos) especificados por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-333">The curve begins at the point in the array specified by the `offset` parameter and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-334">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-334">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-335">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-335">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-336">Crea una matriz de cuatro puntos (que representan una curva spline cardinal).</span><span class="sxs-lookup"><span data-stu-id="c61b6-336">Creates an array of four points (representing a cardinal spline).</span></span>  
  
-   <span data-ttu-id="c61b6-337">Crea una ruta de acceso y con la matriz de puntos, agrega la curva a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-337">Creates a path and using the array of points, adds the curve to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-338">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-338">Draws the path to the screen.</span></span>  
  
 <span data-ttu-id="c61b6-339">Tenga en cuenta que aunque la matriz tiene cuatro puntos, hay sólo tres segmentos, que es el número especificado en el tercer argumento de la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-339">Notice that while the array holds four points, there are only three segments, which is the number specified in the third argument of the call to <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%2A>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCurve">
      <MemberSignature Language="C#" Value="public void AddCurve (System.Drawing.PointF[] points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddCurve(valuetype System.Drawing.PointF[] points, int32 offset, int32 numberOfSegments, float32 tension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddCurve(System.Drawing.PointF[],System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddCurve (points As PointF(), offset As Integer, numberOfSegments As Integer, tension As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddCurve(cli::array &lt;System::Drawing::PointF&gt; ^ points, int offset, int numberOfSegments, float tension);" />
      <MemberSignature Language="F#" Value="member this.AddCurve : System.Drawing.PointF[] * int * int * single -&gt; unit" Usage="graphicsPath.AddCurve (points, offset, numberOfSegments, tension)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="numberOfSegments" Type="System.Int32" />
        <Parameter Name="tension" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-340">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-340">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the curve.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="c61b6-341">Índice del elemento de la matriz <c>points</c> que se usa como primer punto de la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-341">The index of the element in the <c>points</c> array that is used as the first point in the curve.</span>
          </span>
        </param>
        <param name="numberOfSegments">
          <span data-ttu-id="c61b6-342">Número de segmentos usados para dibujar la curva.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-342">The number of segments used to draw the curve.</span>
          </span>
          <span data-ttu-id="c61b6-343">Un segmento es, en realidad, una línea que conecta dos puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-343">A segment can be thought of as a line connecting two points.</span>
          </span>
        </param>
        <param name="tension">
          <span data-ttu-id="c61b6-344">Valor que especifica la inclinación de la curva entre puntos de control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-344">A value that specifies the amount that the curve bends between control points.</span>
          </span>
          <span data-ttu-id="c61b6-345">Los valores mayores que 1 producen resultados impredecibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-345">Values greater than 1 produce unpredictable results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-346">Agrega una curva spline a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-346">Adds a spline curve to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-347">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-347">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-348">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-348">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="c61b6-349">La curva comienza en el punto de la matriz especificada por `offset`e incluye el número de puntos (segmentos) especificados por `numberOfSegments`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-349">The curve begins at the point in the array specified by `offset`, and includes the number of points (segments) specified by `numberOfSegments`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-350">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-350">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddCurve%28System.Drawing.Point%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddEllipse">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-351">Agrega una elipse al trazado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-351">Adds an ellipse to the current path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="c61b6-352">
            <see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-352">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-353">Agrega una elipse al trazado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-353">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-354">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-354">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-355">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-355">The code performs the following actions:</span></span>  
  
 <span data-ttu-id="c61b6-356">Crea un rectángulo delimitador que define la elipse.</span><span class="sxs-lookup"><span data-stu-id="c61b6-356">Creates a bounding rectangle that defines an ellipse.</span></span>  
  
 <span data-ttu-id="c61b6-357">Crea una ruta de acceso y agrega los puntos suspensivos a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-357">Creates a path and adds the ellipse to the path.</span></span>  
  
 <span data-ttu-id="c61b6-358">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-358">Draws the path to screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddEllipse rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="c61b6-359">
            <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-359">A <see cref="T:System.Drawing.RectangleF" /> that represents the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-360">Agrega una elipse al trazado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-360">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-361">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-361">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Integer, y As Integer, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : int * int * int * int -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-362">Coordenada X de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-362">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-363">Coordenada Y de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-363">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="c61b6-364">Ancho del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-364">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c61b6-365">Alto del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-365">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-366">Agrega una elipse al trazado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-366">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-367">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-367">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEllipse">
      <MemberSignature Language="C#" Value="public void AddEllipse (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddEllipse(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddEllipse(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddEllipse (x As Single, y As Single, width As Single, height As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddEllipse(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.AddEllipse : single * single * single * single -&gt; unit" Usage="graphicsPath.AddEllipse (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-368">Coordenada X de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-368">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-369">Coordenada y de la esquina superior izquierda del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-369">The y-coordinate of the upper left corner of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="c61b6-370">Ancho del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-370">The width of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c61b6-371">Alto del rectángulo delimitador que define la elipse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-371">The height of the bounding rectangle that defines the ellipse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-372">Agrega una elipse al trazado actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-372">Adds an ellipse to the current path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-373">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-373">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddEllipse%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLine">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-374">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-374">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.Point pt1, System.Drawing.Point pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.Point pt1, valuetype System.Drawing.Point pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.Point,System.Drawing.Point)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As Point, pt2 As Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::Point pt1, System::Drawing::Point pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.Point * System.Drawing.Point -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.Point" />
        <Parameter Name="pt2" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="c61b6-375">
            <see cref="T:System.Drawing.Point" /> que representa el punto inicial de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-375">A <see cref="T:System.Drawing.Point" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="c61b6-376">
            <see cref="T:System.Drawing.Point" /> que representa el extremo de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-376">A <see cref="T:System.Drawing.Point" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-377">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-377">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-378">Este método agrega el segmento de línea definido por los puntos especificados al final de este <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-378">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="c61b6-379">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibujará un segmento de línea para conectar el último punto en la ruta de acceso hasta el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-379">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-380">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-380">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (System.Drawing.PointF pt1, System.Drawing.PointF pt2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(valuetype System.Drawing.PointF pt1, valuetype System.Drawing.PointF pt2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Drawing.PointF,System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (pt1 As PointF, pt2 As PointF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(System::Drawing::PointF pt1, System::Drawing::PointF pt2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : System.Drawing.PointF * System.Drawing.PointF -&gt; unit" Usage="graphicsPath.AddLine (pt1, pt2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt1" Type="System.Drawing.PointF" />
        <Parameter Name="pt2" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="pt1">
          <span data-ttu-id="c61b6-381">
            <see cref="T:System.Drawing.PointF" /> que representa el punto inicial de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-381">A <see cref="T:System.Drawing.PointF" /> that represents the starting point of the line.</span>
          </span>
        </param>
        <param name="pt2">
          <span data-ttu-id="c61b6-382">
            <see cref="T:System.Drawing.PointF" /> que representa el extremo de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-382">A <see cref="T:System.Drawing.PointF" /> that represents the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-383">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-383">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-384">Este método agrega el segmento de línea definido por los puntos especificados al final de este <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-384">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="c61b6-385">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibujará un segmento de línea para conectar el último punto en la ruta de acceso hasta el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-385">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-386">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-386">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(int32 x1, int32 y1, int32 x2, int32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Integer, y1 As Integer, x2 As Integer, y2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(int x1, int y1, int x2, int y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : int * int * int * int -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Int32" />
        <Parameter Name="y1" Type="System.Int32" />
        <Parameter Name="x2" Type="System.Int32" />
        <Parameter Name="y2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="c61b6-387">Coordenada x del punto inicial de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-387">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="c61b6-388">Coordenada y del punto inicial de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-388">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="c61b6-389">Coordenada x del extremo de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-389">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="c61b6-390">Coordenada y del extremo de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-390">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-391">Agrega un segmento de línea a la figura actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-391">Appends a line segment to the current figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-392">Este método agrega el segmento de línea definido por los puntos especificados al final de la figura actual.</span><span class="sxs-lookup"><span data-stu-id="c61b6-392">This method adds the line segment defined by the specified points to the end of the current figure.</span></span> <span data-ttu-id="c61b6-393">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibujará un segmento de línea para conectar el último punto en la ruta de acceso hasta el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-393">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-394">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-394">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-395">El código crea un trazado, agrega tres líneas que forman un triángulo y, a continuación, dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-395">The code creates a path, adds three lines that form a triangle, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLine">
      <MemberSignature Language="C#" Value="public void AddLine (float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLine(float32 x1, float32 y1, float32 x2, float32 y2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLine(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLine (x1 As Single, y1 As Single, x2 As Single, y2 As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLine(float x1, float y1, float x2, float y2);" />
      <MemberSignature Language="F#" Value="member this.AddLine : single * single * single * single -&gt; unit" Usage="graphicsPath.AddLine (x1, y1, x2, y2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x1" Type="System.Single" />
        <Parameter Name="y1" Type="System.Single" />
        <Parameter Name="x2" Type="System.Single" />
        <Parameter Name="y2" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x1">
          <span data-ttu-id="c61b6-396">Coordenada x del punto inicial de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-396">The x-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="y1">
          <span data-ttu-id="c61b6-397">Coordenada y del punto inicial de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-397">The y-coordinate of the starting point of the line.</span>
          </span>
        </param>
        <param name="x2">
          <span data-ttu-id="c61b6-398">Coordenada x del extremo de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-398">The x-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <param name="y2">
          <span data-ttu-id="c61b6-399">Coordenada y del extremo de la línea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-399">The y-coordinate of the endpoint of the line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-400">Anexa un segmento de línea a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-400">Appends a line segment to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-401">Este método agrega el segmento de línea definido por los puntos especificados al final de este <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-401">This method adds the line segment defined by the specified points to the end of this <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="c61b6-402">Si no hay líneas o curvas en anteriores el <xref:System.Drawing.Drawing2D.GraphicsPath>, se dibujará un segmento de línea para conectar el último punto en la ruta de acceso hasta el primer punto en el nuevo segmento de línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-402">If there are previous lines or curves in the <xref:System.Drawing.Drawing2D.GraphicsPath>, a line segment is drawn to connect the last point in the path to the first point in the new line segment.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-403">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-403">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLine%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddLines">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-404">Anexa una serie de segmentos de línea conectados al final de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-404">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-405">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que representa los puntos que definen los segmentos de línea que se van a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-405">An array of <see cref="T:System.Drawing.Point" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-406">Anexa una serie de segmentos de línea conectados al final de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-406">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-407">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-407">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="c61b6-408">El `points` parámetro especifica una matriz de puntos de conexión.</span><span class="sxs-lookup"><span data-stu-id="c61b6-408">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="c61b6-409">Los dos primeros especifican la primera línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-409">The first two specify the first line.</span></span> <span data-ttu-id="c61b6-410">Cada punto adicional especifica el extremo de un segmento de línea cuyo punto inicial es el punto de conexión de la línea anterior.</span><span class="sxs-lookup"><span data-stu-id="c61b6-410">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-411">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-411">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-412">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-412">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-413">Crea una matriz de cuatro puntos que describe un triángulo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-413">Creates an array of four points that describe a triangle.</span></span>  
  
-   <span data-ttu-id="c61b6-414">Crea una ruta de acceso y agrega la matriz de líneas.</span><span class="sxs-lookup"><span data-stu-id="c61b6-414">Creates a path and adds the array of lines.</span></span>  
  
-   <span data-ttu-id="c61b6-415">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-415">Draws the path to screen.</span></span>  
  
 <span data-ttu-id="c61b6-416">Observe que cada línea después del primer punto utiliza el punto anterior como punto inicial y el nuevo punto como punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="c61b6-416">Notice that each line after the first point uses the previous point as the starting point and the new point as the endpoint.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLines">
      <MemberSignature Language="C#" Value="public void AddLines (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddLines(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddLines(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddLines (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddLines(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddLines : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddLines points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-417">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que representa los puntos que definen los segmentos de línea que se van a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-417">An array of <see cref="T:System.Drawing.PointF" /> structures that represents the points that define the line segments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-418">Anexa una serie de segmentos de línea conectados al final de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-418">Appends a series of connected line segments to the end of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-419">Si no hay líneas o curvas en la ilustración anteriores, se agrega una línea para conectar el extremo del segmento anterior con el punto inicial de la línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-419">If there are previous lines or curves in the figure, a line is added to connect the endpoint of the previous segment the starting point of the line.</span></span> <span data-ttu-id="c61b6-420">El `points` parámetro especifica una matriz de puntos de conexión.</span><span class="sxs-lookup"><span data-stu-id="c61b6-420">The `points` parameter specifies an array of endpoints.</span></span> <span data-ttu-id="c61b6-421">Los dos primeros especifican la primera línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-421">The first two specify the first line.</span></span> <span data-ttu-id="c61b6-422">Cada punto adicional especifica el extremo de un segmento de línea cuyo punto inicial es el punto de conexión de la línea anterior.</span><span class="sxs-lookup"><span data-stu-id="c61b6-422">Each additional point specifies the endpoint of a line segment whose starting point is the endpoint of the previous line.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-423">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-423">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddLines%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPath">
      <MemberSignature Language="C#" Value="public void AddPath (System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPath(class System.Drawing.Drawing2D.GraphicsPath addingPath, bool connect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPath(System.Drawing.Drawing2D.GraphicsPath,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPath (addingPath As GraphicsPath, connect As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPath(System::Drawing::Drawing2D::GraphicsPath ^ addingPath, bool connect);" />
      <MemberSignature Language="F#" Value="member this.AddPath : System.Drawing.Drawing2D.GraphicsPath * bool -&gt; unit" Usage="graphicsPath.AddPath (addingPath, connect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addingPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="connect" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="addingPath">
          <span data-ttu-id="c61b6-424">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-424">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to add.</span>
          </span>
        </param>
        <param name="connect">
          <span data-ttu-id="c61b6-425">Valor booleano que especifica si la primera figura del trazado agregado forma parte de la última figura de este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-425">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="c61b6-426">El valor <see langword="true" /> especifica que, si es posible, la primera figura del trazado agregado forma parte de la última figura de este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-426">A value of <see langword="true" /> specifies that (if possible) the first figure in the added path is part of the last figure in this path.</span>
          </span>
          <span data-ttu-id="c61b6-427">El valor <see langword="false" /> especifica que la primera figura del trazado agregado no forma parte de la última figura de este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-427">A value of <see langword="false" /> specifies that the first figure in the added path is separate from the last figure in this path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-428">Anexa el trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> especificado a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-428">Appends the specified <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-429">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-429">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-430">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-430">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-431">Crea dos trazados, un triángulo derecha en posición vertical y el otro un triángulo flechas de lado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-431">Creates two paths one a right-side-up triangle and the other an up-side-down triangle.</span></span>  
  
-   <span data-ttu-id="c61b6-432">Agrega la segunda ruta de acceso a la primera.</span><span class="sxs-lookup"><span data-stu-id="c61b6-432">Adds the second path to the first.</span></span>  
  
-   <span data-ttu-id="c61b6-433">Dibuja la ruta de acceso resultante en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-433">Draws the resultant path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPie">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-434">Agrega el contorno de una forma circular a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-434">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (System.Drawing.Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(valuetype System.Drawing.Rectangle rect, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Drawing.Rectangle,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (rect As Rectangle, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(System::Drawing::Rectangle rect, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : System.Drawing.Rectangle * single * single -&gt; unit" Usage="graphicsPath.AddPie (rect, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="c61b6-435">
            <see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo delimitador que define la elipse cuya forma circular se dibuja.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-435">A <see cref="T:System.Drawing.Rectangle" /> that represents the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="c61b6-436">Ángulo de inicio de la sección circular, medido en grados en el sentido de las agujas del reloj desde el eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-436">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="c61b6-437">Ángulo existente entre <c>startAngle</c> y el final de la sección circular, medido en grados en el sentido de las agujas del reloj desde <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-437">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-438">Agrega el contorno de una forma circular a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-438">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-439">La forma de gráfico circular se define por un contorno parcial de una elipse y dos líneas radiales que forman una intersección los extremos del contorno parcial.</span><span class="sxs-lookup"><span data-stu-id="c61b6-439">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="c61b6-440">El contorno parcial comienza en `startAngle` (medido hacia la derecha desde el eje x) y termina en `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-440">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-441">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-441">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(int32 x, int32 y, int32 width, int32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Integer, y As Integer, width As Integer, height As Integer, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(int x, int y, int width, int height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : int * int * int * int * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-442">Coordenada x del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-442">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-443">Coordenada y del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-443">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="c61b6-444">Ancho del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-444">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c61b6-445">Alto del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-445">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="c61b6-446">Ángulo de inicio de la sección circular, medido en grados en el sentido de las agujas del reloj desde el eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-446">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="c61b6-447">Ángulo existente entre <c>startAngle</c> y el final de la sección circular, medido en grados en el sentido de las agujas del reloj desde <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-447">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-448">Agrega el contorno de una forma circular a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-448">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-449">La forma de gráfico circular se define por un contorno parcial de una elipse y dos líneas radiales que forman una intersección los extremos del contorno parcial.</span><span class="sxs-lookup"><span data-stu-id="c61b6-449">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="c61b6-450">El contorno parcial comienza en `startAngle` (medido hacia la derecha desde el eje x) y termina en `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-450">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-451">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-451">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-452">El código crea un trazado gráfico, agrega la forma circular y, a continuación, dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-452">The code creates a graphics path, adds the pie shape, and then draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPie">
      <MemberSignature Language="C#" Value="public void AddPie (float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPie(float32 x, float32 y, float32 width, float32 height, float32 startAngle, float32 sweepAngle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPie(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPie (x As Single, y As Single, width As Single, height As Single, startAngle As Single, sweepAngle As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPie(float x, float y, float width, float height, float startAngle, float sweepAngle);" />
      <MemberSignature Language="F#" Value="member this.AddPie : single * single * single * single * single * single -&gt; unit" Usage="graphicsPath.AddPie (x, y, width, height, startAngle, sweepAngle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="startAngle" Type="System.Single" />
        <Parameter Name="sweepAngle" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-453">Coordenada x del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-453">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-454">Coordenada y del ángulo superior izquierdo del rectángulo delimitador que define la elipse desde la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-454">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="width">
          <span data-ttu-id="c61b6-455">Ancho del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-455">The width of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="height">
          <span data-ttu-id="c61b6-456">Alto del rectángulo limitador que define la elipse de la que se dibuja la forma circular.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-456">The height of the bounding rectangle that defines the ellipse from which the pie is drawn.</span>
          </span>
        </param>
        <param name="startAngle">
          <span data-ttu-id="c61b6-457">Ángulo de inicio de la sección circular, medido en grados en el sentido de las agujas del reloj desde el eje X.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-457">The starting angle for the pie section, measured in degrees clockwise from the x-axis.</span>
          </span>
        </param>
        <param name="sweepAngle">
          <span data-ttu-id="c61b6-458">Ángulo existente entre <c>startAngle</c> y el final de la sección circular, medido en grados en el sentido de las agujas del reloj desde <c>startAngle</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-458">The angle between <c>startAngle</c> and the end of the pie section, measured in degrees clockwise from <c>startAngle</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-459">Agrega el contorno de una forma circular a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-459">Adds the outline of a pie shape to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-460">La forma de gráfico circular se define por un contorno parcial de una elipse y dos líneas radiales que forman una intersección los extremos del contorno parcial.</span><span class="sxs-lookup"><span data-stu-id="c61b6-460">The pie shape is defined by a partial outline of an ellipse and the two radial lines that intersect the endpoints of the partial outline.</span></span> <span data-ttu-id="c61b6-461">El contorno parcial comienza en `startAngle` (medido hacia la derecha desde el eje x) y termina en `startAngle`  +  `sweepAngle`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-461">The partial outline begins at `startAngle` (measured clockwise from the x-axis) and ends at `startAngle` + `sweepAngle`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-462">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-462">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPie%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Single%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddPolygon">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-463">Agrega un polígono a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-463">Adds a polygon to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As Point())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.Point[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.Point[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-464">Matriz de estructuras <see cref="T:System.Drawing.Point" /> que define el polígono que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-464">An array of <see cref="T:System.Drawing.Point" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-465">Agrega un polígono a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-465">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-466">Los puntos en el `points` matriz especificar los vértices de un polígono.</span><span class="sxs-lookup"><span data-stu-id="c61b6-466">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="c61b6-467">Si el primer punto de la matriz no es el mismo que el último punto, los dos puntos se conectan para cerrar el polígono.</span><span class="sxs-lookup"><span data-stu-id="c61b6-467">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-468">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-468">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-469">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-469">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-470">Crea una matriz de puntos que define un polígono.</span><span class="sxs-lookup"><span data-stu-id="c61b6-470">Creates an array of points that defines a polygon.</span></span>  
  
-   <span data-ttu-id="c61b6-471">Crea una ruta de acceso y el polígono se agrega a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-471">Creates a path and adds the polygon to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-472">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-472">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPolygon">
      <MemberSignature Language="C#" Value="public void AddPolygon (System.Drawing.PointF[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPolygon(valuetype System.Drawing.PointF[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddPolygon(System.Drawing.PointF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPolygon (points As PointF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPolygon(cli::array &lt;System::Drawing::PointF&gt; ^ points);" />
      <MemberSignature Language="F#" Value="member this.AddPolygon : System.Drawing.PointF[] -&gt; unit" Usage="graphicsPath.AddPolygon points" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Drawing.PointF[]" />
      </Parameters>
      <Docs>
        <param name="points">
          <span data-ttu-id="c61b6-473">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define el polígono que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-473">An array of <see cref="T:System.Drawing.PointF" /> structures that defines the polygon to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-474">Agrega un polígono a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-474">Adds a polygon to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-475">Los puntos en el `points` matriz especificar los vértices de un polígono.</span><span class="sxs-lookup"><span data-stu-id="c61b6-475">The points in the `points` array specify the vertices of a polygon.</span></span> <span data-ttu-id="c61b6-476">Si el primer punto de la matriz no es el mismo que el último punto, los dos puntos se conectan para cerrar el polígono.</span><span class="sxs-lookup"><span data-stu-id="c61b6-476">If the first point in the array is not the same as the last point, those two points are connected to close the polygon.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-477">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-477">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddPolygon%28System.Drawing.Point%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangle">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-478">Agrega un rectángulo a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-478">Adds a rectangle to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.Rectangle -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="c61b6-479">
            <see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-479">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-480">Agrega un rectángulo a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-480">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-481">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-481">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-482">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-482">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-483">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-483">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-484">Crea un rectángulo y agrega el rectángulo a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-484">Creates a rectangle and adds the rectangle to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-485">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-485">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangle">
      <MemberSignature Language="C#" Value="public void AddRectangle (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangle(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangle(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangle (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangle(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.AddRectangle : System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.AddRectangle rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">
          <span data-ttu-id="c61b6-486">
            <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-486">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-487">Agrega un rectángulo a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-487">Adds a rectangle to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-488">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-488">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangle%28System.Drawing.Rectangle%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRectangles">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-489">Agrega una serie de rectángulos a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-489">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.Rectangle[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.Rectangle[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.Rectangle[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As Rectangle())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::Rectangle&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.Rectangle[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.Rectangle[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="c61b6-490">Matriz de estructuras <see cref="T:System.Drawing.Rectangle" /> que representa los rectángulos que se van a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-490">An array of <see cref="T:System.Drawing.Rectangle" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-491">Agrega una serie de rectángulos a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-491">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-492">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-492">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-493">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-493">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-494">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-494">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-495">Crea una matriz de rectángulos y los rectángulos se agrega a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-495">Creates an array of rectangles and adds the rectangles to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-496">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-496">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddRectangles">
      <MemberSignature Language="C#" Value="public void AddRectangles (System.Drawing.RectangleF[] rects);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRectangles(valuetype System.Drawing.RectangleF[] rects) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddRectangles(System.Drawing.RectangleF[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRectangles (rects As RectangleF())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRectangles(cli::array &lt;System::Drawing::RectangleF&gt; ^ rects);" />
      <MemberSignature Language="F#" Value="member this.AddRectangles : System.Drawing.RectangleF[] -&gt; unit" Usage="graphicsPath.AddRectangles rects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rects" Type="System.Drawing.RectangleF[]" />
      </Parameters>
      <Docs>
        <param name="rects">
          <span data-ttu-id="c61b6-497">Matriz de estructuras <see cref="T:System.Drawing.RectangleF" /> que representa los rectángulos que se van a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-497">An array of <see cref="T:System.Drawing.RectangleF" /> structures that represents the rectangles to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-498">Agrega una serie de rectángulos a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-498">Adds a series of rectangles to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-499">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-499">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddRectangles%28System.Drawing.Rectangle%5B%5D%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddString">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-500">Agrega una cadena de texto a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-500">Adds a text string to this path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Point origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Point origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Point,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As Point, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Point origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Point * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.Point" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c61b6-501">
            <see cref="T:System.String" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-501">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="c61b6-502">
            <see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-502">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="c61b6-503">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-503">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="c61b6-504">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-504">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="c61b6-505">Alto del cuadrado Em que delimita el carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-505">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="c61b6-506">
            <see cref="T:System.Drawing.Point" /> que representa el punto donde comienza el texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-506">A <see cref="T:System.Drawing.Point" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="c61b6-507">
            <see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-507">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-508">Agrega una cadena de texto a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-508">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-509">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-509">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-510">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-510">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-511">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-511">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-512">Configura los argumentos de cadena y fuente.</span><span class="sxs-lookup"><span data-stu-id="c61b6-512">Sets up string and font arguments.</span></span>  
  
-   <span data-ttu-id="c61b6-513">Agrega la cadena a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-513">Adds the string to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-514">Dibuja la cadena en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-514">Draws the string to the screen.</span></span>  
  
 <span data-ttu-id="c61b6-515">Hay dos aspectos importantes a señalar. En primer lugar, tenga en cuenta que el `fontStyle` argumento se convierte como un entero.</span><span class="sxs-lookup"><span data-stu-id="c61b6-515">There are two important things to be pointed out. First, notice that the `fontStyle` argument is cast as an integer.</span></span> <span data-ttu-id="c61b6-516">El <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> método lo requiere, por lo que ese dos o más <xref:System.Drawing.FontStyle> miembros se pueden combinar para crear el estilo de fuente deseado (en este caso, <xref:System.Drawing.FontStyle.Italic> y <xref:System.Drawing.FontStyle.Underline>).</span><span class="sxs-lookup"><span data-stu-id="c61b6-516">The <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%2A> method requires this so that two or more <xref:System.Drawing.FontStyle> members can be combined to create the desired font style (in this case, <xref:System.Drawing.FontStyle.Italic> and <xref:System.Drawing.FontStyle.Underline>).</span></span> <span data-ttu-id="c61b6-517">En segundo lugar, tenga en cuenta que la <xref:System.Drawing.Graphics.FillPath%2A> método se utiliza en lugar del <xref:System.Drawing.Graphics.DrawPath%2A> método.</span><span class="sxs-lookup"><span data-stu-id="c61b6-517">Secondly, notice that the <xref:System.Drawing.Graphics.FillPath%2A> method is used rather than the <xref:System.Drawing.Graphics.DrawPath%2A> method.</span></span> <span data-ttu-id="c61b6-518">Si <xref:System.Drawing.Graphics.FillPath%2A> se utiliza, se representa texto sólido, mientras que si <xref:System.Drawing.Graphics.DrawPath%2A> es usa, el texto será un estilo de esquema.</span><span class="sxs-lookup"><span data-stu-id="c61b6-518">If <xref:System.Drawing.Graphics.FillPath%2A> is used, solid text is rendered, whereas if <xref:System.Drawing.Graphics.DrawPath%2A> is used, the text will be an outline style.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#14)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#14)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#14](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.PointF origin, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.PointF origin, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.PointF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, origin As PointF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::PointF origin, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.PointF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, origin, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="origin" Type="System.Drawing.PointF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c61b6-519">
            <see cref="T:System.String" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-519">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="c61b6-520">
            <see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-520">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="c61b6-521">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-521">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="c61b6-522">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-522">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="c61b6-523">Alto del cuadrado Em que delimita el carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-523">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="c61b6-524">
            <see cref="T:System.Drawing.PointF" /> que representa el punto donde comienza el texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-524">A <see cref="T:System.Drawing.PointF" /> that represents the point where the text starts.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="c61b6-525">
            <see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-525">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-526">Agrega una cadena de texto a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-526">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-527">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-527">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.Rectangle layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.Rectangle layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.Rectangle,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As Rectangle, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::Rectangle layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.Rectangle * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c61b6-528">
            <see cref="T:System.String" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-528">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="c61b6-529">
            <see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-529">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="c61b6-530">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-530">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="c61b6-531">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-531">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="c61b6-532">Alto del cuadrado Em que delimita el carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-532">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="c61b6-533">
            <see cref="T:System.Drawing.Rectangle" /> que representa el rectángulo que delimita el texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-533">A <see cref="T:System.Drawing.Rectangle" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="c61b6-534">
            <see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-534">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-535">Agrega una cadena de texto a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-535">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-536">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-536">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddString">
      <MemberSignature Language="C#" Value="public void AddString (string s, System.Drawing.FontFamily family, int style, float emSize, System.Drawing.RectangleF layoutRect, System.Drawing.StringFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddString(string s, class System.Drawing.FontFamily family, int32 style, float32 emSize, valuetype System.Drawing.RectangleF layoutRect, class System.Drawing.StringFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.AddString(System.String,System.Drawing.FontFamily,System.Int32,System.Single,System.Drawing.RectangleF,System.Drawing.StringFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddString (s As String, family As FontFamily, style As Integer, emSize As Single, layoutRect As RectangleF, format As StringFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddString(System::String ^ s, System::Drawing::FontFamily ^ family, int style, float emSize, System::Drawing::RectangleF layoutRect, System::Drawing::StringFormat ^ format);" />
      <MemberSignature Language="F#" Value="member this.AddString : string * System.Drawing.FontFamily * int * single * System.Drawing.RectangleF * System.Drawing.StringFormat -&gt; unit" Usage="graphicsPath.AddString (s, family, style, emSize, layoutRect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="family" Type="System.Drawing.FontFamily" />
        <Parameter Name="style" Type="System.Int32" />
        <Parameter Name="emSize" Type="System.Single" />
        <Parameter Name="layoutRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.StringFormat" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c61b6-537">
            <see cref="T:System.String" /> que se va a agregar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-537">The <see cref="T:System.String" /> to add.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="c61b6-538">
            <see cref="T:System.Drawing.FontFamily" /> que representa el nombre de la fuente con la que se dibuja la prueba.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-538">A <see cref="T:System.Drawing.FontFamily" /> that represents the name of the font with which the test is drawn.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="c61b6-539">Enumeración <see cref="T:System.Drawing.FontStyle" /> que representa la información de estilo sobre el texto (negrita, cursiva, etc.).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-539">A <see cref="T:System.Drawing.FontStyle" /> enumeration that represents style information about the text (bold, italic, and so on).</span>
          </span>
          <span data-ttu-id="c61b6-540">Se debe convertir en un entero (vea el ejemplo de código más adelante en esta sección).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-540">This must be cast as an integer (see the example code later in this section).</span>
          </span>
        </param>
        <param name="emSize">
          <span data-ttu-id="c61b6-541">Alto del cuadrado Em que delimita el carácter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-541">The height of the em square box that bounds the character.</span>
          </span>
        </param>
        <param name="layoutRect">
          <span data-ttu-id="c61b6-542">
            <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que delimita el texto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-542">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that bounds the text.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="c61b6-543">
            <see cref="T:System.Drawing.StringFormat" /> que especifica información sobre el formato de texto, como el interlineado y la alineación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-543">A <see cref="T:System.Drawing.StringFormat" /> that specifies text formatting information, such as line spacing and alignment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-544">Agrega una cadena de texto a este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-544">Adds a text string to this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-545">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-545">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.AddString%28System.String%2CSystem.Drawing.FontFamily%2CSystem.Int32%2CSystem.Single%2CSystem.Drawing.Point%2CSystem.Drawing.StringFormat%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearMarkers">
      <MemberSignature Language="C#" Value="public void ClearMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.ClearMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearMarkers();" />
      <MemberSignature Language="F#" Value="member this.ClearMarkers : unit -&gt; unit" Usage="graphicsPath.ClearMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-546">Borra todos los marcadores de este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-546">Clears all markers from this path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-547">Use la <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> método para crear un marcador en la ubicación actual en un <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-547">Use the <xref:System.Drawing.Drawing2D.GraphicsPath.SetMarkers%2A> method to create a marker at the current location in a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span> <span data-ttu-id="c61b6-548">Use la <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> método para recorrer en iteración los marcadores existentes en una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-548">Use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> method to iterate through the existing markers in a path.</span></span>  
  
 <span data-ttu-id="c61b6-549">Los marcadores se utilizan para separar grupos de subtrazados.</span><span class="sxs-lookup"><span data-stu-id="c61b6-549">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="c61b6-550">Entre dos marcadores puede haber uno o varios subtrazados.</span><span class="sxs-lookup"><span data-stu-id="c61b6-550">One or more subpaths can be contained between two markers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-551">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-551">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-552">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-552">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-553">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-553">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-554">Agrega varios objetos a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-554">Adds several objects to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-555">Agrega marcadores a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-555">Adds markers to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-556">Borra todos los marcadores de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-556">Clears all markers from the path.</span></span>  
  
-   <span data-ttu-id="c61b6-557">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-557">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#15)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#15)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#15](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="graphicsPath.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-558">Crea una copia exacta de este trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-558">Creates an exact copy of this path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-559">
            <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que crea este método, convertido en objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-559">The <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> this method creates, cast as an object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-560">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-560">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-561">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-561">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-562">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-562">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-563">Agrega varias figuras a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-563">Adds several figures to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-564">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-564">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-565">Clona una copia de dicha ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-565">Clones a copy of that path.</span></span>  
  
-   <span data-ttu-id="c61b6-566">Dibuja la nueva ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-566">Draws the new path to the screen.</span></span>  
  
 <span data-ttu-id="c61b6-567">Tenga en cuenta que la llamada la <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> método debe convertirse en un <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-567">Notice that the call the <xref:System.Drawing.Drawing2D.GraphicsPath.Clone%2A> method must be cast as a <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#16)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#16)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#16](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseAllFigures">
      <MemberSignature Language="C#" Value="public void CloseAllFigures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseAllFigures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseAllFigures" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseAllFigures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseAllFigures();" />
      <MemberSignature Language="F#" Value="member this.CloseAllFigures : unit -&gt; unit" Usage="graphicsPath.CloseAllFigures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-568">Cierra todas las figuras abiertas de este trazado e inicia una nueva figura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-568">Closes all open figures in this path and starts a new figure.</span>
          </span>
          <span data-ttu-id="c61b6-569">Cierra cada figura abierta conectando una línea desde su extremo hasta su punto inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-569">It closes each open figure by connecting a line from its endpoint to its starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-570">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-570">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-571">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-571">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-572">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-572">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-573">Agrega varias figuras abiertas a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-573">Adds several open figures to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-574">Cierra todas las figuras en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-574">Closes all figures in the path.</span></span>  
  
-   <span data-ttu-id="c61b6-575">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-575">Draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#17)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#17)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#17](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseFigure">
      <MemberSignature Language="C#" Value="public void CloseFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.CloseFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseFigure();" />
      <MemberSignature Language="F#" Value="member this.CloseFigure : unit -&gt; unit" Usage="graphicsPath.CloseFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-576">Cierra la figura actual e inicia una nueva figura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-576">Closes the current figure and starts a new figure.</span>
          </span>
          <span data-ttu-id="c61b6-577">Si la figura actual contiene una secuencia de líneas y curvas interconectadas, este método cierra el bucle conectando una línea desde el extremo hasta el punto inicial.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-577">If the current figure contains a sequence of connected lines and curves, the method closes the loop by connecting a line from the endpoint to the starting point.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-578">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-578">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-579">El código crea un triángulo al crear una nueva ruta de acceso, a partir de una figura, agregar dos líneas de intersección en la figura y, a continuación, cerrando la figura para formar un triángulo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-579">The code creates a triangle by creating a new path, starting a figure, adding two intersecting lines to the figure, and then closing the figure to form a triangle.</span></span> <span data-ttu-id="c61b6-580">A continuación, se dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-580">The path is then drawn to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#18)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#18)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#18](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="graphicsPath.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-581">Libera todos los recursos utilizados por este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-581">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-582">Al llamar a <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> permite que los recursos utilizados por este <xref:System.Drawing.Drawing2D.GraphicsPath> se reasignen para otros fines.</span><span class="sxs-lookup"><span data-stu-id="c61b6-582">Calling <xref:System.Drawing.Drawing2D.GraphicsPath.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.GraphicsPath> to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillMode">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.FillMode FillMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.FillMode FillMode" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberSignature Language="VB.NET" Value="Public Property FillMode As FillMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::FillMode FillMode { System::Drawing::Drawing2D::FillMode get(); void set(System::Drawing::Drawing2D::FillMode value); };" />
      <MemberSignature Language="F#" Value="member this.FillMode : System.Drawing.Drawing2D.FillMode with get, set" Usage="System.Drawing.Drawing2D.GraphicsPath.FillMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.FillMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-583">Obtiene o establece una enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que determina cómo se rellena el interior de las formas en este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-583">Gets or sets a <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c61b6-584">Enumeración <see cref="T:System.Drawing.Drawing2D.FillMode" /> que especifica cómo se rellena el interior de las formas en este <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-584">A <see cref="T:System.Drawing.Drawing2D.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> are filled.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~GraphicsPath ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!GraphicsPath ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="graphicsPath.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-585">Permite que un objeto intente liberar recursos y realizar otras operaciones de limpieza antes de que sea reclamado por la recolección de elementos no utilizados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-585">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Flatten">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-586">Convierte cada una de las curvas de este trazado en una secuencia de segmentos conectados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-586">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />
      <MemberSignature Language="VB.NET" Value="Public Sub Flatten ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten();" />
      <MemberSignature Language="F#" Value="member this.Flatten : unit -&gt; unit" Usage="graphicsPath.Flatten " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-587">Convierte cada una de las curvas de este trazado en una secuencia de segmentos conectados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-587">Converts each curve in this path into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-588">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-588">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Flatten matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="c61b6-589">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> mediante la cual se va a transformar este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de aplanarlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-589">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-590">Aplica la transformación especificada y, a continuación, convierte cada curva de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en una secuencia de segmentos de línea conectados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-590">Applies the specified transform and then converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-591">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-591">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Flatten%28System.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flatten">
      <MemberSignature Language="C#" Value="public void Flatten (System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flatten(class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Flatten(System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Flatten(System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Flatten : System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Flatten (matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="c61b6-592">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> mediante la cual se va a transformar este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> antes de aplanarlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-592">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> by which to transform this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> before flattening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="c61b6-593">Especifica el error máximo permitido entre la curva y su aproximación aplanada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-593">Specifies the maximum permitted error between the curve and its flattened approximation.</span>
          </span>
          <span data-ttu-id="c61b6-594">El valor predeterminado es 0,25.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-594">A value of 0.25 is the default.</span>
          </span>
          <span data-ttu-id="c61b6-595">Si se reduce el valor del aplanamiento aumentará el número de segmentos de línea en la aproximación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-595">Reducing the flatness value will increase the number of line segments in the approximation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-596">Convierte cada curva de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en una secuencia de segmentos de línea conectados.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-596">Converts each curve in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> into a sequence of connected line segments.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-597">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-597">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-598">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-598">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-599">Crea un trazado gráfico y una matriz de traslación.</span><span class="sxs-lookup"><span data-stu-id="c61b6-599">Creates a graphics path and a translation matrix.</span></span>  
  
-   <span data-ttu-id="c61b6-600">Agrega una curva a la ruta de acceso con cuatro puntos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-600">Adds a curve to the path using four points.</span></span>  
  
-   <span data-ttu-id="c61b6-601">Dibuja la ruta de acceso (curva) en la pantalla, con un lápiz de color negro.</span><span class="sxs-lookup"><span data-stu-id="c61b6-601">Draws the path (curve) to the screen, using a black pen.</span></span>  
  
-   <span data-ttu-id="c61b6-602">Se desplaza a la curva hacia abajo 10 píxeles y se reduce.</span><span class="sxs-lookup"><span data-stu-id="c61b6-602">Shifts the curve down 10 pixels and flattens it.</span></span>  
  
-   <span data-ttu-id="c61b6-603">Dibuja la curva en la pantalla con un lápiz rojo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-603">Draws the curve to the screen using, a red pen.</span></span>  
  
 <span data-ttu-id="c61b6-604">Tenga en cuenta que la curva de color rojo se reducen las líneas que conectan los puntos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-604">Notice that the red curve has flattened lines connecting the points.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#19)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#19)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#19](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBounds">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-605">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-605">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds();" />
      <MemberSignature Language="F#" Value="member this.GetBounds : unit -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-606">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-606">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-607">
            <see cref="T:System.Drawing.RectangleF" /> que representa un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-607">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-608">El tamaño del rectángulo delimitador devuelto se ve afectado por el tipo de límite en ángulo lápiz, extremos y ancho del lápiz y, por tanto, crea un "ajuste flexible" a la ruta de acceso enlazado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-608">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="c61b6-609">La fórmula aproximada es: el rectángulo delimitador inicial se aumenta en el ancho del lápiz y este resultado se multiplica por el límite del ángulo, además de un margen adicional para los extremos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-609">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-610">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-610">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-611">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-611">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-612">Crea una ruta de acceso de gráficos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-612">Creates a graphics path.</span></span>  
  
-   <span data-ttu-id="c61b6-613">Agrega una elipse (círculo) a él y lo muestra en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-613">Adds an ellipse (circle) to it and draws it to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-614">Recupera el rectángulo delimitador para el círculo con una llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> y dibuja el rectángulo en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-614">Retrieves the bounding rectangle for the circle with a call to <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds%2A> and draws the rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-615">Crea una segunda ruta de acceso de gráficos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-615">Creates a second graphics path.</span></span>  
  
-   <span data-ttu-id="c61b6-616">Agrega un círculo y ensancha la ruta de acceso a un ancho de 10.</span><span class="sxs-lookup"><span data-stu-id="c61b6-616">Adds a circle and widens the path to a width of 10.</span></span>  
  
-   <span data-ttu-id="c61b6-617">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-617">Draws the path to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-618">Recupera el rectángulo delimitador para el segundo círculo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-618">Retrieves the bounding rectangle for the second circle.</span></span>  
  
-   <span data-ttu-id="c61b6-619">Dibuja el rectángulo delimitador en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-619">Draws the bounding rectangle to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-620">Muestra el tamaño del rectángulo en un cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-620">Displays the rectangle size in a dialog box.</span></span>  
  
 <span data-ttu-id="c61b6-621">Tenga en cuenta que el rectángulo delimitador de la derecha es más grande (a la cuenta para el ancho de la línea adicional).</span><span class="sxs-lookup"><span data-stu-id="c61b6-621">Notice that the bounding rectangle on the right is larger (to account for the extra width of the line).</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#20)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#20)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#20](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="c61b6-622">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar a este trazado antes de que se calcule el rectángulo delimitador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-622">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="c61b6-623">Este trazado no se transforma de manera permanente, se usa sólo durante el proceso de cálculo del rectángulo delimitador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-623">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-624">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se transforma por la matriz <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-624">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when this path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-625">
            <see cref="T:System.Drawing.RectangleF" /> que representa un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-625">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-626">El tamaño del rectángulo delimitador devuelto se ve afectado por el tipo de límite en ángulo lápiz, extremos y ancho del lápiz y, por tanto, crea un "ajuste flexible" a la ruta de acceso enlazado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-626">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="c61b6-627">La fórmula aproximada es: el rectángulo delimitador inicial se aumenta en el ancho del lápiz y este resultado se multiplica por el límite del ángulo, además de un margen adicional para los extremos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-627">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-628">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-628">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Drawing2D.Matrix matrix, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetBounds(System.Drawing.Drawing2D.Matrix,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Drawing2D.Matrix * System.Drawing.Pen -&gt; System.Drawing.RectangleF" Usage="graphicsPath.GetBounds (matrix, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="c61b6-629">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar a este trazado antes de que se calcule el rectángulo delimitador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-629">The <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transformation to be applied to this path before the bounding rectangle is calculated.</span>
          </span>
          <span data-ttu-id="c61b6-630">Este trazado no se transforma de manera permanente, se usa sólo durante el proceso de cálculo del rectángulo delimitador.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-630">This path is not permanently transformed; the transformation is used only during the process of calculating the bounding rectangle.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-631">
            <see cref="T:System.Drawing.Pen" /> con el que se va a dibujar el trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-631">The <see cref="T:System.Drawing.Pen" /> with which to draw the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-632">Devuelve un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando el actual trazado se transforma por la matriz <see cref="T:System.Drawing.Drawing2D.Matrix" /> especificada y se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-632">Returns a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when the current path is transformed by the specified <see cref="T:System.Drawing.Drawing2D.Matrix" /> and drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-633">
            <see cref="T:System.Drawing.RectangleF" /> que representa un rectángulo que delimita este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-633">A <see cref="T:System.Drawing.RectangleF" /> that represents a rectangle that bounds this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-634">El tamaño del rectángulo delimitador devuelto se ve afectado por el tipo de límite en ángulo lápiz, extremos y ancho del lápiz y, por tanto, crea un "ajuste flexible" a la ruta de acceso enlazado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-634">The size of the returned bounding rectangle is influenced by the type of end caps, pen width, and pen miter limit, and therefore produces a "loose fit" to the bounded path.</span></span> <span data-ttu-id="c61b6-635">La fórmula aproximada es: el rectángulo delimitador inicial se aumenta en el ancho del lápiz y este resultado se multiplica por el límite del ángulo, además de un margen adicional para los extremos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-635">The approximate formula is: the initial bounding rectangle is inflated by pen width, and this result is multiplied by the miter limit, plus some additional margin to allow for end caps.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-636">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-636">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.GetBounds>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastPoint">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF GetLastPoint ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.PointF GetLastPoint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.GetLastPoint" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastPoint () As PointF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::PointF GetLastPoint();" />
      <MemberSignature Language="F#" Value="member this.GetLastPoint : unit -&gt; System.Drawing.PointF" Usage="graphicsPath.GetLastPoint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-637">Obtiene el último punto de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-637">Gets the last point in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-638">Un <see cref="T:System.Drawing.PointF" /> que representa el último punto de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-638">A <see cref="T:System.Drawing.PointF" /> that represents the last point in this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-639">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-639">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-640">El código crea una ruta de acceso, agrega una línea a la ruta de acceso y, a continuación, obtiene el último punto en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-640">The code creates a path, adds a line to the path, and then gets the last point in the path.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#21)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#21)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#21](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOutlineVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-641">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-641">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="c61b6-642">
            <see cref="T:System.Drawing.Point" /> que especifica la ubicación que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-642">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-643">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-643">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-644">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-644">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-645">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-645">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-646">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-646">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-647">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-647">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF point, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF point, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF point, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (point, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="c61b6-648">
            <see cref="T:System.Drawing.PointF" /> que especifica la ubicación que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-648">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-649">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-649">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-650">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-650">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-651">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-651">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-652">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-652">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-653">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-653">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.Point pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.Point pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.Point,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::Point pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.Point * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="c61b6-654">
            <see cref="T:System.Drawing.Point" /> que especifica la ubicación que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-654">A <see cref="T:System.Drawing.Point" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-655">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-655">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-656">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-656">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-657">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-657">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-658">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-658">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-659">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-659">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="c61b6-660">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-660">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-661">La matriz de transformación de `graphics` se aplica temporalmente antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-661">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-662">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-662">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (System.Drawing.PointF pt, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Drawing.PointF,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(System::Drawing::PointF pt, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : System.Drawing.PointF * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (pt, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="c61b6-663">
            <see cref="T:System.Drawing.PointF" /> que especifica la ubicación que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-663">A <see cref="T:System.Drawing.PointF" /> that specifies the location to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-664">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-664">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-665">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-665">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-666">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-666">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-667">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-667">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-668">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-668">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="c61b6-669">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-669">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-670">La matriz de transformación de `graphics` se aplica temporalmente antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-670">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-671">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-671">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-672">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-672">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-673">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-673">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-674">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-674">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-675">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-675">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-676">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-676">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-677">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-677">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-678">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-678">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-679">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-679">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-680">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-680">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-681">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-681">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-682">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-682">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-683">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-683">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-684">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-684">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-685">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-685">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (int x, int y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(int32 x, int32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(int x, int y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : int * int * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-686">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-686">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-687">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-687">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-688">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-688">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-689">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-689">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-690">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-690">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-691">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-691">This method returns <see langword="true" /> if the specified point is contained within the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-692">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-692">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="c61b6-693">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-693">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-694">La matriz de transformación de `graphics` se aplica temporalmente antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-694">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-695">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> eventos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-695">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event.</span></span> <span data-ttu-id="c61b6-696">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-696">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-697">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-697">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-698">Agrega un rectángulo a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-698">Adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-699">Crea un lápiz ancho y se amplía la ruta de acceso con ese lápiz (para convertirlo en el ejemplo más claro),</span><span class="sxs-lookup"><span data-stu-id="c61b6-699">Creates a wide pen and widens the path with that pen (to make the example clearer),</span></span>  
  
-   <span data-ttu-id="c61b6-700">Prueba en un punto (100, 50) para ver si se encuentra dentro (bajo) de uno de los bordes del rectángulo mediante una llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-700">Tests a point (100, 50) to see if it lies within (under) one of the edges of the rectangle by calling <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%2A>.</span></span>  
  
 <span data-ttu-id="c61b6-701">El resultado se muestra en el cuadro de mensaje (en este caso, true).</span><span class="sxs-lookup"><span data-stu-id="c61b6-701">The result is shown in the message box (in this case, true).</span></span> <span data-ttu-id="c61b6-702">En otras palabras, el borde se representa en ese punto.</span><span class="sxs-lookup"><span data-stu-id="c61b6-702">In other words the edge is rendered over that point.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#22)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#22)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#22](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#22)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOutlineVisible">
      <MemberSignature Language="C#" Value="public bool IsOutlineVisible (float x, float y, System.Drawing.Pen pen, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOutlineVisible(float32 x, float32 y, class System.Drawing.Pen pen, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible(System.Single,System.Single,System.Drawing.Pen,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOutlineVisible(float x, float y, System::Drawing::Pen ^ pen, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsOutlineVisible : single * single * System.Drawing.Pen * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsOutlineVisible (x, y, pen, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-703">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-703">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-704">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-704">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="pen">
          <span data-ttu-id="c61b6-705">
            <see cref="T:System.Drawing.Pen" /> que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-705">The <see cref="T:System.Drawing.Pen" /> to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-706">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-706">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-707">Indica si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> especificado y el <see cref="T:System.Drawing.Graphics" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-707">Indicates whether the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> when drawn with the specified <see cref="T:System.Drawing.Pen" /> and using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-708">Este método devuelve <see langword="true" /> si el punto especificado está dentro del contorno de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> cuando se dibuja con el <see cref="T:System.Drawing.Pen" /> indicado; en caso contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-708">This method returns <see langword="true" /> if the specified point is contained within (under) the outline of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> as drawn with the specified <see cref="T:System.Drawing.Pen" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-709">Este método comprueba si el esquema de una ruta de acceso dada se representa visible en el punto especificado.</span><span class="sxs-lookup"><span data-stu-id="c61b6-709">This method tests to see if the outline of a given path is rendered visible at the specified point.</span></span> <span data-ttu-id="c61b6-710">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-710">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-711">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-711">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-712">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-712">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsOutlineVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Pen%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-713">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-713">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="c61b6-714">
            <see cref="T:System.Drawing.Point" /> que representa el punto que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-714">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-715">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-715">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-716">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-716">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-717">Para obtener un ejemplo, consulta `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-717">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="graphicsPath.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="c61b6-718">
            <see cref="T:System.Drawing.PointF" /> que representa el punto que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-718">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-719">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-719">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-720">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-720">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-721">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-721">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="c61b6-722">
            <see cref="T:System.Drawing.Point" /> que representa el punto que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-722">A <see cref="T:System.Drawing.Point" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-723">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-723">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-724">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-724">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-725">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-725">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-726">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-726">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-727">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-727">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-728">Para obtener un ejemplo, consulta `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span><span class="sxs-lookup"><span data-stu-id="c61b6-728">For an example, see `GraphicsPath.IsVisible Method (Int32, Int32, Graphics)`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF pt, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF pt, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF pt, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (pt, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pt" Type="System.Drawing.PointF" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="pt">
          <span data-ttu-id="c61b6-729">
            <see cref="T:System.Drawing.PointF" /> que representa el punto que se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-729">A <see cref="T:System.Drawing.PointF" /> that represents the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-730">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-730">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-731">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-731">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-732">Este método devuelve <see langword="true" /> si el punto especificado está contenido dentro de este objeto; en caso contrario, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-732">This method returns <see langword="true" /> if the specified point is contained within this; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-733">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-733">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-734">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-734">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-735">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-735">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-736">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-736">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-737">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-737">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-738">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-738">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-739">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-739">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-740">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-740">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="graphicsPath.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-741">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-741">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-742">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-742">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-743">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-743">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-744">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-744">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-745">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-745">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-746">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-746">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-747">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-747">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-748">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-748">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-749">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, utilizando el <see cref="T:System.Drawing.Graphics" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-749">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />, using the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-750">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-750">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-751">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-751">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-752">La matriz de transformación de `graphics` se aplica temporalmente antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-752">The transform matrix of `graphics` is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-753">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-753">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-754">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-754">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-755">Crea una ruta de acceso y agrega una elipse a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-755">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-756">Comprueba si el punto especificado está dentro de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-756">Tests whether the specified point is contained within the path.</span></span>  
  
-   <span data-ttu-id="c61b6-757">Muestra el resultado en un cuadro de diálogo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-757">Displays the result in a dialog box.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#23)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#23)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#23](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#23)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ graphics);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="graphicsPath.IsVisible (x, y, graphics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="c61b6-758">Coordenada X del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-758">The x-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="c61b6-759">Coordenada Y del punto que se va a probar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-759">The y-coordinate of the point to test.</span>
          </span>
        </param>
        <param name="graphics">
          <span data-ttu-id="c61b6-760">
            <see cref="T:System.Drawing.Graphics" /> cuya visibilidad se va a comprobar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-760">The <see cref="T:System.Drawing.Graphics" /> for which to test visibility.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-761">Indica si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en la región de recorte visible del <see cref="T:System.Drawing.Graphics" /> indicado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-761">Indicates whether the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> in the visible clip region of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c61b6-762">Este método devuelve <see langword="true" /> si el punto especificado está dentro de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; de lo contrario, devuelve <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-762">This method returns <see langword="true" /> if the specified point is contained within this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-763">Las coordenadas del punto de va a probar se proporcionan en coordenadas universales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-763">The coordinates of the point to be tested are given in world coordinates.</span></span> <span data-ttu-id="c61b6-764">La matriz de transformación de la `graphics` parámetro temporalmente se aplica antes de las pruebas para la visibilidad.</span><span class="sxs-lookup"><span data-stu-id="c61b6-764">The transform matrix of the `graphics` parameter is temporarily applied before testing for visibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-765">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-765">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.IsVisible%28System.Int32%2CSystem.Int32%2CSystem.Drawing.Graphics%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.PathData PathData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Drawing2D.PathData PathData" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathData As PathData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::PathData ^ PathData { System::Drawing::Drawing2D::PathData ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathData : System.Drawing.Drawing2D.PathData" Usage="System.Drawing.Drawing2D.GraphicsPath.PathData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.PathData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-766">Obtiene los datos <see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsulan matrices de puntos (<paramref name="points" />) y tipos (<paramref name="types" />) para este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-766">Gets a <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays of points (<paramref name="points" />) and types (<paramref name="types" />) for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c61b6-767">
            <see cref="T:System.Drawing.Drawing2D.PathData" /> que encapsulan matrices de puntos y tipos para este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-767">A <see cref="T:System.Drawing.Drawing2D.PathData" /> that encapsulates arrays for both the points and types for this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathPoints">
      <MemberSignature Language="C#" Value="public System.Drawing.PointF[] PathPoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.PointF[] PathPoints" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathPoints As PointF()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Drawing::PointF&gt; ^ PathPoints { cli::array &lt;System::Drawing::PointF&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathPoints : System.Drawing.PointF[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathPoints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.PointF[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-768">Obtiene los puntos del trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-768">Gets the points in the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c61b6-769">Una matriz de objetos <see cref="T:System.Drawing.PointF" /> que representan el trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-769">An array of <see cref="T:System.Drawing.PointF" /> objects that represent the path.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PathTypes">
      <MemberSignature Language="C#" Value="public byte[] PathTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] PathTypes" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathTypes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ PathTypes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathTypes : byte[]" Usage="System.Drawing.Drawing2D.GraphicsPath.PathTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-770">Obtiene los tipos de los puntos correspondientes de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-770">Gets the types of the corresponding points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c61b6-771">Matriz de bytes que especifica los tipos de los puntos correspondientes del trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-771">An array of bytes that specifies the types of the corresponding points in the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-772">La matriz de bytes devuelto por la <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> propiedad especifica los tipos de punto y los marcadores de los puntos de datos en una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-772">The array of bytes returned by the <xref:System.Drawing.Drawing2D.GraphicsPath.PathTypes%2A> property specifies point types and flags for the data points in a path.</span></span> <span data-ttu-id="c61b6-773">Para cada punto, bits del 0 al 2 indican el tipo de un punto y bits 3 al 7 contienen un conjunto de marcas que especifican los atributos de un punto.</span><span class="sxs-lookup"><span data-stu-id="c61b6-773">For each point, bits 0 through 2 indicate the type of a point, and bits 3 through 7 hold a set of flags that specify the attributes of a point.</span></span> <span data-ttu-id="c61b6-774">La siguiente tabla muestra los valores posibles y sus significados.</span><span class="sxs-lookup"><span data-stu-id="c61b6-774">The following table shows possible values and their meanings.</span></span>  
  
|<span data-ttu-id="c61b6-775">Valor</span><span class="sxs-lookup"><span data-stu-id="c61b6-775">Value</span></span>|<span data-ttu-id="c61b6-776">Significado</span><span class="sxs-lookup"><span data-stu-id="c61b6-776">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="c61b6-777">0</span><span class="sxs-lookup"><span data-stu-id="c61b6-777">0</span></span>|<span data-ttu-id="c61b6-778">Indica que el punto es el inicio de una figura.</span><span class="sxs-lookup"><span data-stu-id="c61b6-778">Indicates that the point is the start of a figure.</span></span>|  
|<span data-ttu-id="c61b6-779">1</span><span class="sxs-lookup"><span data-stu-id="c61b6-779">1</span></span>|<span data-ttu-id="c61b6-780">Indica que el punto es uno de los dos extremos de una línea.</span><span class="sxs-lookup"><span data-stu-id="c61b6-780">Indicates that the point is one of the two endpoints of a line.</span></span>|  
|<span data-ttu-id="c61b6-781">3</span><span class="sxs-lookup"><span data-stu-id="c61b6-781">3</span></span>|<span data-ttu-id="c61b6-782">Indica que el punto es un punto de control o extremo de una curva spline de Bézier cúbica.</span><span class="sxs-lookup"><span data-stu-id="c61b6-782">Indicates that the point is an endpoint or control point of a cubic Bézier spline.</span></span>|  
|<span data-ttu-id="c61b6-783">0x7</span><span class="sxs-lookup"><span data-stu-id="c61b6-783">0x7</span></span>|<span data-ttu-id="c61b6-784">Enmascara todos los bits excepto los tres bits de orden inferior, que indican el tipo de punto.</span><span class="sxs-lookup"><span data-stu-id="c61b6-784">Masks all bits except for the three low-order bits, which indicate the point type.</span></span>|  
|<span data-ttu-id="c61b6-785">0 x 20</span><span class="sxs-lookup"><span data-stu-id="c61b6-785">0x20</span></span>|<span data-ttu-id="c61b6-786">Especifica que el punto es un marcador.</span><span class="sxs-lookup"><span data-stu-id="c61b6-786">Specifies that the point is a marker.</span></span>|  
|<span data-ttu-id="c61b6-787">0x80</span><span class="sxs-lookup"><span data-stu-id="c61b6-787">0x80</span></span>|<span data-ttu-id="c61b6-788">Especifica que el punto es el último punto en una subruta cerrado (figura).</span><span class="sxs-lookup"><span data-stu-id="c61b6-788">Specifies that the point is the last point in a closed subpath (figure).</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PointCount">
      <MemberSignature Language="C#" Value="public int PointCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PointCount" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PointCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PointCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PointCount : int" Usage="System.Drawing.Drawing2D.GraphicsPath.PointCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-789">Obtiene el número de elementos de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> o de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-789">Gets the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c61b6-790">Un entero que especifica el número de elementos de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" />o de la matriz <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-790">An integer that specifies the number of elements in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> or the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> array.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset();" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="graphicsPath.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-791">Vacía las matrices <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> y <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> y establece <see cref="T:System.Drawing.Drawing2D.FillMode" /> en <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-791">Empties the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> and <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathTypes" /> arrays and sets the <see cref="T:System.Drawing.Drawing2D.FillMode" /> to <see cref="F:System.Drawing.Drawing2D.FillMode.Alternate" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-792">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-792">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-793">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-793">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-794">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-794">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-795">Se le agrega a varios elementos primitivos.</span><span class="sxs-lookup"><span data-stu-id="c61b6-795">Adds several primitives to it.</span></span>  
  
-   <span data-ttu-id="c61b6-796">Dibuja la matriz de puntos de la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-796">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-797">Restablece la ruta de acceso a un estado vacío.</span><span class="sxs-lookup"><span data-stu-id="c61b6-797">Resets the path to an empty state.</span></span>  
  
-   <span data-ttu-id="c61b6-798">Vuelve a adquirir la matriz de puntos (si existe).</span><span class="sxs-lookup"><span data-stu-id="c61b6-798">Re-acquires the points array (if it exists).</span></span>  
  
-   <span data-ttu-id="c61b6-799">Dibuja la matriz en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-799">Draws the array to the screen.</span></span>  
  
 <span data-ttu-id="c61b6-800">Tenga en cuenta que no encuentra ninguna matriz después de la llamada de restablecimiento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-800">Notice that it finds no array following the reset call.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#24)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#24)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#24](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public void Reverse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reverse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Reverse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reverse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reverse();" />
      <MemberSignature Language="F#" Value="member this.Reverse : unit -&gt; unit" Usage="graphicsPath.Reverse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-801">Invierte el orden de los puntos en la matriz de <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> de este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-801">Reverses the order of points in the <see cref="P:System.Drawing.Drawing2D.GraphicsPath.PathPoints" /> array of this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-802">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-802">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-803">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-803">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-804">Crea una ruta de acceso y agrega a varios elementos primitivos a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-804">Creates a path and adds several primitives to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-805">Dibuja la matriz de puntos de la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-805">Draws the path's points array to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-806">Dibuja la matriz de puntos en orden invertido en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-806">Draws the reversed points array to the screen.</span></span>  
  
 <span data-ttu-id="c61b6-807">Tenga en cuenta que el segundo listado de puntos está en orden inverso de la primera.</span><span class="sxs-lookup"><span data-stu-id="c61b6-807">Notice that the second listing of points is in reverse order from the first.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#25)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#25)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#25](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMarkers">
      <MemberSignature Language="C#" Value="public void SetMarkers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMarkers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.SetMarkers" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMarkers ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMarkers();" />
      <MemberSignature Language="F#" Value="member this.SetMarkers : unit -&gt; unit" Usage="graphicsPath.SetMarkers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-808">Establece un marcador en este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-808">Sets a marker on this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-809">Este método crea un marcador en la ruta de acceso que puede usarse para separar dos secciones de la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-809">This method creates a marker on the path that can be used to separate sections of the path.</span></span> <span data-ttu-id="c61b6-810">A continuación, puede usar el <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> métodos para recorrer en iteración los marcadores en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-810">You can then use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator.NextMarker%2A> methods to iterate through the markers in the path.</span></span>  
  
 <span data-ttu-id="c61b6-811">Los marcadores se utilizan para separar grupos de subtrazados.</span><span class="sxs-lookup"><span data-stu-id="c61b6-811">Markers are used to separate groups of subpaths.</span></span> <span data-ttu-id="c61b6-812">Entre dos marcadores en la ruta de acceso puede ser uno o varios subtrazados.</span><span class="sxs-lookup"><span data-stu-id="c61b6-812">One or more subpaths can be contained between two markers in the path.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-813">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-813">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-814">El código crea una ruta de acceso y agrega a varios elementos primitivos separado por marcadores de la ruta de acceso y dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-814">The code creates a path and adds several primitives to the path separated by markers, and draws the path to the screen.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#26)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#26)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#26](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartFigure">
      <MemberSignature Language="C#" Value="public void StartFigure ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartFigure() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.StartFigure" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartFigure ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartFigure();" />
      <MemberSignature Language="F#" Value="member this.StartFigure : unit -&gt; unit" Usage="graphicsPath.StartFigure " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-815">Inicia una nueva figura sin cerrar la actual.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-815">Starts a new figure without closing the current figure.</span>
          </span>
          <span data-ttu-id="c61b6-816">Todos los puntos siguientes agregados al trazado se incorporan a esta nueva figura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-816">All subsequent points added to the path are added to this new figure.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-817">El usuario debe mantener los puntos originales si son necesarias.</span><span class="sxs-lookup"><span data-stu-id="c61b6-817">The user must keep the original points if they are needed.</span></span> <span data-ttu-id="c61b6-818">Los puntos originales se convierten en puntos de control de Bézier cúbicos internamente, por lo tanto, no hay ningún mecanismo para devolver los puntos originales.</span><span class="sxs-lookup"><span data-stu-id="c61b6-818">The original points are converted to cubic Bézier control points internally, therefore there is no mechanism for returning the original points.</span></span>  
  
 <span data-ttu-id="c61b6-819">Este método inicia una subruta de acceso nuevo en la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-819">This method starts a new subpath in the path.</span></span> <span data-ttu-id="c61b6-820">Subtrazados permiten dividir un trazado en secciones y usar la <xref:System.Drawing.Drawing2D.GraphicsPathIterator> clase para recorrer en iteración los subtrazados.</span><span class="sxs-lookup"><span data-stu-id="c61b6-820">Subpaths allow you to separate a path into sections and use the <xref:System.Drawing.Drawing2D.GraphicsPathIterator> class to iterate through the subpaths.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-821">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-821">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-822">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-822">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-823">Crea una ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-823">Creates a path.</span></span>  
  
-   <span data-ttu-id="c61b6-824">Agrega dos conjuntos de figuras.</span><span class="sxs-lookup"><span data-stu-id="c61b6-824">Adds two sets of figures.</span></span> <span data-ttu-id="c61b6-825">El primer conjunto de figuras combina a cuatro elementos primitivos en dos figuras.</span><span class="sxs-lookup"><span data-stu-id="c61b6-825">The first set of figures combines four primitives into two figures.</span></span> <span data-ttu-id="c61b6-826">El segundo conjunto de figuras combina a los mismos cuatro elementos primitivos (salvo que se calcula el desplazamiento en el eje y) en tres cifras.</span><span class="sxs-lookup"><span data-stu-id="c61b6-826">The second set of figures combines the same four primitives (except that they are offset in the y-axis) into three figures.</span></span>  
  
-   <span data-ttu-id="c61b6-827">Dibuja todas las figuras en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-827">Draws all the figures to the screen.</span></span>  
  
 <span data-ttu-id="c61b6-828">Observe la diferencia en el aspecto entre los dos conjuntos de figuras.</span><span class="sxs-lookup"><span data-stu-id="c61b6-828">Notice the difference in the appearance between the two sets of figures.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#27)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#27)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#27](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix">
          <span data-ttu-id="c61b6-829">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que representa la transformación que se va a aplicar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-829">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that represents the transformation to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-830">Aplica una matriz de transformación a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-830">Applies a transform matrix to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-831">La transformación puede escalar, traducir, girar o sesgar la <xref:System.Drawing.Drawing2D.GraphicsPath>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-831">The transformation can scale, translate, rotate, or skew the <xref:System.Drawing.Drawing2D.GraphicsPath>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-832">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-832">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-833">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-833">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-834">Crea una ruta de acceso y agrega una elipse a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-834">Creates a path and adds an ellipse to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-835">Dibuja la ruta de acceso a la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-835">Draws path to the screen.</span></span>  
  
-   <span data-ttu-id="c61b6-836">Crea una matriz de transformación para convertir la ruta de acceso de 100 unidades en la dirección del eje x.</span><span class="sxs-lookup"><span data-stu-id="c61b6-836">Creates a transform matrix to translate the path 100 units in the x-axis direction.</span></span>  
  
-   <span data-ttu-id="c61b6-837">Dibuja el trazado transformado en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="c61b6-837">Draws the transformed path to the screen.</span></span>  
  
 <span data-ttu-id="c61b6-838">Observe que la elipse original se dibuja en negro y la elipse transformada se dibuja en rojo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-838">Notice that the original ellipse is drawn in black and the transformed ellipse is drawn in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#28)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#28)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#28](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Warp">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-839">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-839">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Warp (destPoints As PointF(), srcRect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="c61b6-840">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que definen un paralelogramo en el que se transforma el rectángulo definido por <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-840">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="c61b6-841">La matriz puede contener tres elementos o cuatro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-841">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="c61b6-842">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-842">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="c61b6-843">
            <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-843">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-844">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-844">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-845">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-845">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="c61b6-846">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que definen un paralelogramo en el que se transforma el rectángulo definido por <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-846">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="c61b6-847">La matriz puede contener tres elementos o cuatro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-847">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="c61b6-848">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-848">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="c61b6-849">
            <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-849">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="c61b6-850">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación geométrica que se va a aplicar al trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-850">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-851">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-851">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-852">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-852">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="c61b6-853">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que define un paralelogramo en el que se transforma el rectángulo definido por <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-853">An array of <see cref="T:System.Drawing.PointF" /> structures that defines a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="c61b6-854">La matriz puede contener tres elementos o cuatro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-854">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="c61b6-855">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-855">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="c61b6-856">
            <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-856">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="c61b6-857">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación geométrica que se va a aplicar al trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-857">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="c61b6-858">Enumeración <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica si esta operación de alabeo usa el modo en perspectiva o bilineal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-858">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-859">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-859">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-860">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-860">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Warp%28System.Drawing.PointF%5B%5D%2CSystem.Drawing.RectangleF%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Drawing.Drawing2D.WarpMode%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Warp">
      <MemberSignature Language="C#" Value="public void Warp (System.Drawing.PointF[] destPoints, System.Drawing.RectangleF srcRect, System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.WarpMode warpMode, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Warp(valuetype System.Drawing.PointF[] destPoints, valuetype System.Drawing.RectangleF srcRect, class System.Drawing.Drawing2D.Matrix matrix, valuetype System.Drawing.Drawing2D.WarpMode warpMode, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Warp(System.Drawing.PointF[],System.Drawing.RectangleF,System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.WarpMode,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Warp(cli::array &lt;System::Drawing::PointF&gt; ^ destPoints, System::Drawing::RectangleF srcRect, System::Drawing::Drawing2D::Matrix ^ matrix, System::Drawing::Drawing2D::WarpMode warpMode, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Warp : System.Drawing.PointF[] * System.Drawing.RectangleF * System.Drawing.Drawing2D.Matrix * System.Drawing.Drawing2D.WarpMode * single -&gt; unit" Usage="graphicsPath.Warp (destPoints, srcRect, matrix, warpMode, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destPoints" Type="System.Drawing.PointF[]" />
        <Parameter Name="srcRect" Type="System.Drawing.RectangleF" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="warpMode" Type="System.Drawing.Drawing2D.WarpMode" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="destPoints">
          <span data-ttu-id="c61b6-861">Matriz de estructuras <see cref="T:System.Drawing.PointF" /> que definen un paralelogramo en el que se transforma el rectángulo definido por <c>srcRect</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-861">An array of <see cref="T:System.Drawing.PointF" /> structures that define a parallelogram to which the rectangle defined by <c>srcRect</c> is transformed.</span>
          </span>
          <span data-ttu-id="c61b6-862">La matriz puede contener tres elementos o cuatro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-862">The array can contain either three or four elements.</span>
          </span>
          <span data-ttu-id="c61b6-863">Si la matriz contiene tres elementos, el ángulo inferior derecho del paralelogramo viene definido por los tres primeros puntos.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-863">If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</span>
          </span>
        </param>
        <param name="srcRect">
          <span data-ttu-id="c61b6-864">
            <see cref="T:System.Drawing.RectangleF" /> que representa el rectángulo que se transforma en el paralelogramo definido por <c>destPoints</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-864">A <see cref="T:System.Drawing.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <c>destPoints</c>.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="c61b6-865">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación geométrica que se va a aplicar al trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-865">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a geometric transform to apply to the path.</span>
          </span>
        </param>
        <param name="warpMode">
          <span data-ttu-id="c61b6-866">Enumeración <see cref="T:System.Drawing.Drawing2D.WarpMode" /> que especifica si esta operación de alabeo usa el modo en perspectiva o bilineal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-866">A <see cref="T:System.Drawing.Drawing2D.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="c61b6-867">Valor de 0 a 1 que especifica cómo es de plano el trazado resultante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-867">A value from 0 through 1 that specifies how flat the resulting path is.</span>
          </span>
          <span data-ttu-id="c61b6-868">Para obtener más información, vea los métodos <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-868">For more information, see the <see cref="M:System.Drawing.Drawing2D.GraphicsPath.Flatten" /> methods.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-869">Aplica una transformación de alabeo, definida por un rectángulo y un paralelogramo, a este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-869">Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="c61b6-870">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-870">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-871">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-871">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-872">Crea una ruta de acceso y agrega un rectángulo a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-872">Creates a path and adds a rectangle to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-873">Dibuja el rectángulo en la pantalla en negro.</span><span class="sxs-lookup"><span data-stu-id="c61b6-873">Draws that rectangle to the screen in black.</span></span>  
  
-   <span data-ttu-id="c61b6-874">Distorsiona la ruta de acceso con una deformación de perspectiva.</span><span class="sxs-lookup"><span data-stu-id="c61b6-874">Warps the path with a perspective warp.</span></span>  
  
-   <span data-ttu-id="c61b6-875">Dibuja el rectángulo alabeado (ruta de acceso) en la pantalla en rojo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-875">Draws the warped rectangle (path) to the screen in red.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#29)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#29)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#29](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Widen">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c61b6-876">Reemplaza este trazado con curvas que rodean el área que está rellena cuando ese trazado se dibuja con el lápiz especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-876">Replaces this path with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen -&gt; unit" Usage="graphicsPath.Widen pen" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="c61b6-877">
            <see cref="T:System.Drawing.Pen" /> que especifica el ancho entre el contorno original del trazado y el nuevo contorno que este método crea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-877">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-878">Agrega un contorno adicional al trazado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-878">Adds an additional outline to the path.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-879">Este método crea un contorno alrededor de las líneas originales en este <xref:System.Drawing.Drawing2D.GraphicsPath>, con una distancia entre las líneas existentes y el nuevo contorno es igual a la que el ancho de la <xref:System.Drawing.Pen> usada en la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-879">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="c61b6-880">Si desea rellenar el espacio entre las líneas debe utilizar el <xref:System.Drawing.Graphics.FillPath%2A> en lugar de tener la <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-880">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-881">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-881">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="graphicsPath.Widen (pen, matrix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="c61b6-882">
            <see cref="T:System.Drawing.Pen" /> que especifica el ancho entre el contorno original del trazado y el nuevo contorno que este método crea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-882">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="c61b6-883">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar al trazado antes de ensancharlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-883">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-884">Agrega un contorno adicional al trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-884">Adds an additional outline to the <see cref="T:System.Drawing.Drawing2D.GraphicsPath" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-885">Este método crea un contorno alrededor de las líneas originales en este <xref:System.Drawing.Drawing2D.GraphicsPath>, con una distancia entre las líneas existentes y el nuevo contorno es igual a la que el ancho de la <xref:System.Drawing.Pen> usada en la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-885">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="c61b6-886">Si desea rellenar el espacio entre las líneas debe utilizar el <xref:System.Drawing.Graphics.FillPath%2A> en lugar de tener la <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-886">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-887">Para obtener un ejemplo, consulta <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-887">For an example, see <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%28System.Drawing.Pen%2CSystem.Drawing.Drawing2D.Matrix%2CSystem.Single%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Widen">
      <MemberSignature Language="C#" Value="public void Widen (System.Drawing.Pen pen, System.Drawing.Drawing2D.Matrix matrix, float flatness);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Widen(class System.Drawing.Pen pen, class System.Drawing.Drawing2D.Matrix matrix, float32 flatness) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.GraphicsPath.Widen(System.Drawing.Pen,System.Drawing.Drawing2D.Matrix,System.Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Widen(System::Drawing::Pen ^ pen, System::Drawing::Drawing2D::Matrix ^ matrix, float flatness);" />
      <MemberSignature Language="F#" Value="member this.Widen : System.Drawing.Pen * System.Drawing.Drawing2D.Matrix * single -&gt; unit" Usage="graphicsPath.Widen (pen, matrix, flatness)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pen" Type="System.Drawing.Pen" />
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
        <Parameter Name="flatness" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="pen">
          <span data-ttu-id="c61b6-888">
            <see cref="T:System.Drawing.Pen" /> que especifica el ancho entre el contorno original del trazado y el nuevo contorno que este método crea.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-888">A <see cref="T:System.Drawing.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</span>
          </span>
        </param>
        <param name="matrix">
          <span data-ttu-id="c61b6-889">
            <see cref="T:System.Drawing.Drawing2D.Matrix" /> que especifica la transformación que se va a aplicar al trazado antes de ensancharlo.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-889">A <see cref="T:System.Drawing.Drawing2D.Matrix" /> that specifies a transform to apply to the path before widening.</span>
          </span>
        </param>
        <param name="flatness">
          <span data-ttu-id="c61b6-890">Valor que especifica cómo son de planas las curvas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-890">A value that specifies the flatness for curves.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c61b6-891">Reemplaza este trazado <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> con curvas que rodean el área rellena cuando se dibuja este trazado con el lápiz especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c61b6-891">Replaces this <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c61b6-892">Este método crea un contorno alrededor de las líneas originales en este <xref:System.Drawing.Drawing2D.GraphicsPath>, con una distancia entre las líneas existentes y el nuevo contorno es igual a la que el ancho de la <xref:System.Drawing.Pen> usada en la llamada a <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-892">This method creates an outline around the original lines in this <xref:System.Drawing.Drawing2D.GraphicsPath>, with a distance between the existing lines and the new outline equal to that of the width of the <xref:System.Drawing.Pen> used in the call to <xref:System.Drawing.Drawing2D.GraphicsPath.Widen%2A>.</span></span> <span data-ttu-id="c61b6-893">Si desea rellenar el espacio entre las líneas debe utilizar el <xref:System.Drawing.Graphics.FillPath%2A> en lugar de tener la <xref:System.Drawing.Graphics.DrawPath%2A>.</span><span class="sxs-lookup"><span data-stu-id="c61b6-893">If you want to fill the space between the lines you must use the <xref:System.Drawing.Graphics.FillPath%2A> rather then the <xref:System.Drawing.Graphics.DrawPath%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c61b6-894">El siguiente ejemplo de código está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Form.OnPaint%2A> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="c61b6-894">The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Form.OnPaint%2A> event object.</span></span> <span data-ttu-id="c61b6-895">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="c61b6-895">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="c61b6-896">Crea una ruta de acceso y agrega dos elipses a la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-896">Creates a path and adds two ellipses to the path.</span></span>  
  
-   <span data-ttu-id="c61b6-897">Dibuja la ruta de acceso en negro.</span><span class="sxs-lookup"><span data-stu-id="c61b6-897">Draws the path in black.</span></span>  
  
-   <span data-ttu-id="c61b6-898">Se amplía la ruta de acceso.</span><span class="sxs-lookup"><span data-stu-id="c61b6-898">Widens the path.</span></span>  
  
-   <span data-ttu-id="c61b6-899">Dibuja la ruta de acceso en rojo.</span><span class="sxs-lookup"><span data-stu-id="c61b6-899">Draws the path in red.</span></span>  
  
 <span data-ttu-id="c61b6-900">Tenga en cuenta que utiliza la segunda representación <xref:System.Drawing.Graphics.FillPath%2A> en lugar de <xref:System.Drawing.Graphics.DrawPath%2A>, por lo que la figura representada tiene el contorno relleno.</span><span class="sxs-lookup"><span data-stu-id="c61b6-900">Notice that the second rendering uses <xref:System.Drawing.Graphics.FillPath%2A> instead of <xref:System.Drawing.Graphics.DrawPath%2A>, and hence the rendered figure has the outline filled.</span></span>  
  
 [!code-cpp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CPP/form1.cpp#30)]
 [!code-csharp[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/CS/form1.cs#30)]
 [!code-vb[System.Drawing.Drawing2D.ClassicGraphicsPathExamples#30](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Drawing2D.ClassicGraphicsPathExamples/VB/form1.vb#30)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>