<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CustomLineCap.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f5c75a608ce54c941da40e7941b926a057ce5265.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f5c75a608ce54c941da40e7941b926a057ce5265</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Encapsulates a custom user-defined line cap.</source>
          <target state="translated">Encapsula un extremo de línea personalizado definido por el usuario.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objects.</source>
          <target state="translated">Extremos de línea se usan al comienzo y al final de líneas o curvas dibujadas por GDI + <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> objetos.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</source>
          <target state="translated">GDI + admite varios estilos de extremo predefinidos y también permite a los usuarios definir sus propios estilos de extremo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>This class is used to create custom cap styles.</source>
          <target state="translated">Esta clase se utiliza para crear estilos de extremo personalizado.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> class.</source>
          <target state="translated">En el siguiente ejemplo se muestra cómo utilizar la clase <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>To run this example paste, the code into a Windows Form.</source>
          <target state="translated">Para ejecutar este ejemplo, pegue, el código en un formulario Windows Forms.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar el formato <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos y llame al método <ph id="ph2">`DrawCaps`</ph> desde el formulario <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de control de eventos, pasando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Drawing.Drawing2D.CustomLineCap">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class with the specified outline and fill.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> con el contorno y el relleno especificados.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que define el relleno del extremo personalizado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que define el contorno del extremo personalizado.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class with the specified outline and fill.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> con el contorno y el relleno especificados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> usa un modo de relleno de "liquidación" independientemente del modo de relleno especificado para la operación.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated">El <ph id="ph1">`fillPath`</ph> y <ph id="ph2">`strokePath`</ph> parámetros no pueden usarse al mismo tiempo.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">Un parámetro se debe pasar un valor null.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">Si ninguno de estos parámetros se pasan un valor null, <ph id="ph1">`fillPath`</ph> se pasará por alto.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">Si <ph id="ph1">`strokePath`</ph> es <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> debería interceptar el eje y negativo.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">En el ejemplo siguiente se muestra cómo utilizar el <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A&gt;</ph> constructor.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar el formato <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos y llame al método <ph id="ph2">`DrawCaps`</ph> desde el formulario <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de control de eventos, pasando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que define el relleno del extremo personalizado.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que define el contorno del extremo personalizado.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">Extremo de línea a partir del cual se va a crear el extremo de línea personalizado.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class from the specified existing <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration with the specified outline and fill.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> de la enumeración <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> existente especificada, con el contorno y el relleno especificados.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> usa un modo de relleno de "liquidación" independientemente del modo de relleno especificado para la operación.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated">El <ph id="ph1">`fillPath`</ph> y <ph id="ph2">`strokePath`</ph> parámetros no pueden usarse al mismo tiempo.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">Un parámetro se debe pasar un valor null.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">Si ninguno de estos parámetros se pasan un valor null, <ph id="ph1">`fillPath`</ph> se pasará por alto.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">Si <ph id="ph1">`strokePath`</ph> es <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> debería interceptar el eje y negativo.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the fill for the custom cap.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que define el relleno del extremo personalizado.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> object that defines the outline of the custom cap.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.GraphicsPath" /&gt;</ph> que define el contorno del extremo personalizado.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The line cap from which to create the custom cap.</source>
          <target state="translated">Extremo de línea a partir del cual se va a crear el extremo de línea personalizado.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The distance between the cap and the line.</source>
          <target state="translated">Distancia entre el extremo y la línea.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> class from the specified existing <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration with the specified outline, fill, and inset.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> de la enumeración <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> existente especificada, con el contorno, el relleno y el insertado especificados.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> usa un modo de relleno de "liquidación" independientemente del modo de relleno especificado para la operación.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>The <ph id="ph1">`fillPath`</ph> and <ph id="ph2">`strokePath`</ph> parameters cannot be used at the same time.</source>
          <target state="translated">El <ph id="ph1">`fillPath`</ph> y <ph id="ph2">`strokePath`</ph> parámetros no pueden usarse al mismo tiempo.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>One parameter must be passed a null value.</source>
          <target state="translated">Un parámetro se debe pasar un valor null.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>If neither parameter is passed a null value, <ph id="ph1">`fillPath`</ph> will be ignored.</source>
          <target state="translated">Si ninguno de estos parámetros se pasan un valor null, <ph id="ph1">`fillPath`</ph> se pasará por alto.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)">
          <source>If <ph id="ph1">`strokePath`</ph> is <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> should intercept the negative y-axis.</source>
          <target state="translated">Si <ph id="ph1">`strokePath`</ph> es <ph id="ph2">`null`</ph>, <ph id="ph3">`fillPath`</ph> debería interceptar el eje y negativo.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration on which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is based.</source>
          <target state="translated">Obtiene o establece la enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> en que se basa este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration on which this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is based.</source>
          <target state="translated">Enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> en que se basa este <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
          <source>Gets or sets the distance between the cap and the line.</source>
          <target state="translated">Obtiene o establece la distancia entre el extremo y la línea.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset">
          <source>The distance between the beginning of the cap and the end of the line.</source>
          <target state="translated">Distancia entre el principio del extremo y el final de la línea.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</source>
          <target state="translated">Crea una copia exacta de este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> this method creates, cast as an object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> que crea este método, convertido en objeto.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The following example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, an <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event object.</source>
          <target state="translated">El ejemplo siguiente está diseñado para su uso con Windows Forms y requiere <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, un <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> objeto de evento.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">El código realiza las siguientes acciones:</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a custom line cap by using the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object.</source>
          <target state="translated">Crea un extremo de línea personalizado mediante la <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object, <ph id="ph2">`firstCap`</ph>,using the <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object just created.</source>
          <target state="translated">Crea un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> objeto, <ph id="ph2">`firstCap`</ph>, usando la <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> objeto recién creado.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Creates a clone of <ph id="ph1">`firstCap`</ph> by using the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A&gt;</ph> method.</source>
          <target state="translated">Crea un clon de <ph id="ph1">`firstCap`</ph> utilizando el <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A&gt;</ph> método.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Clone">
          <source>Sets up the <ph id="ph1">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> object, and uses that pen to draw a line and the custom caps to the screen.</source>
          <target state="translated">Configura el <ph id="ph1">&lt;xref:System.Drawing.Pen.CustomStartCap%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Drawing.Pen.CustomEndCap%2A&gt;</ph> propiedades de la <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> objeto y utiliza ese lápiz para dibujar una línea y los extremos personalizados en la pantalla.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object.</source>
          <target state="translated">Libera todos los recursos utilizados por este objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object to be reallocated for other purposes.</source>
          <target state="translated">Al llamar a <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> permite que los recursos utilizados por este <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> objeto se reasignen para otros fines.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated">Es <ph id="ph1">&lt;see langword="true" /&gt;</ph> para liberar tanto recursos administrados como no administrados; es <ph id="ph2">&lt;see langword="false" /&gt;</ph> para liberar únicamente recursos no administrados.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libera los recursos no administrados que usa <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> y, de forma opcional, libera los recursos administrados.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.Finalize">
          <source>Allows an <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> to attempt to free resources and perform other cleanup operations before the <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> is reclaimed by garbage collection.</source>
          <target state="translated">Permite que un objeto <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> intente liberar recursos y realizar otras operaciones de limpieza antes de que el objeto <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> sea reclamado por la recolección de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated">Enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> usada al principio de una línea dentro de este extremo.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the end of a line within this cap.</source>
          <target state="translated">Enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> usada al final de una línea dentro de este extremo.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>Gets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">Obtiene los extremos utilizados para iniciar y finalizar las líneas que forman este extremo personalizado.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A&gt;</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra cómo se utiliza el método <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar el formato <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos y llame al método <ph id="ph2">`DrawCaps`</ph> desde el formulario <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de control de eventos, pasando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the beginning of a line within this cap.</source>
          <target state="translated">Enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> usada al principio de una línea dentro de este extremo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> enumeration used at the end of a line within this cap.</source>
          <target state="translated">Enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> usada al final de una línea dentro de este extremo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>Sets the caps used to start and end lines that make up this custom cap.</source>
          <target state="translated">Establece los extremos utilizados para iniciar y finalizar las líneas que forman este extremo personalizado.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A&gt;</ph> method.</source>
          <target state="translated">En el siguiente ejemplo se muestra cómo se utiliza el método <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>To run this example, paste the code into a Windows Form.</source>
          <target state="translated">Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)">
          <source>Handle the form's <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event and call <ph id="ph2">`DrawCaps`</ph> from the form's <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event-handling method, passing <ph id="ph4">`e`</ph> as <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Controlar el formato <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> eventos y llame al método <ph id="ph2">`DrawCaps`</ph> desde el formulario <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> método de control de eventos, pasando <ph id="ph4">`e`</ph> como <ph id="ph5">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> enumeration that determines how lines that compose this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object are joined.</source>
          <target state="translated">Obtiene o establece la enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> que determina cómo se unen las líneas que forman este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> enumeration this <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> object uses to join lines.</source>
          <target state="translated">Enumeración <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> que usa este objeto <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> para unir las líneas.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin">
          <source>This property specifies a <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.LineJoin&gt;</ph> enumeration that is used to join lines and curves that make up the stroked path of this <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> object.</source>
          <target state="translated">Esta propiedad especifica un <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.LineJoin&gt;</ph> enumeración que se usa para unir líneas y curvas que forman los trazos de este <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.CustomLineCap&gt;</ph> objeto.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>Gets or sets the amount by which to scale this <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> Class object with respect to the width of the <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> object.</source>
          <target state="translated">Obtiene o establece la cantidad por la que se debe ajustar este objeto de la clase <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> en relación con el ancho del objeto <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>The amount by which to scale the cap.</source>
          <target state="translated">Cantidad por la que se debe ajustar el extremo de línea.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</source>
          <target state="translated">Esta propiedad especifica el múltiplo del ancho del lápiz por el que se va a multiplicar el tamaño del extremo personalizado.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</source>
          <target state="translated">Por ejemplo, si esta propiedad es igual a 1, el ancho del extremo personalizado es 10, el alto de extremo personalizado es 5 y se dibuja una línea con un lápiz con un ancho de 3, el límite es dibujado 30 ancho y 15 unidades alta.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale">
          <source>Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</source>
          <target state="translated">Si establece esta propiedad en 3 hace que el extremo se dibujado ancho de 90 unidades y 45 unidades de alta.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>