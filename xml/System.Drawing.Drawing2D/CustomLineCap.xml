<Type Name="CustomLineCap" FullName="System.Drawing.Drawing2D.CustomLineCap">
  <TypeSignature Language="C#" Value="public class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomLineCap extends System.MarshalByRefObject implements class System.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Drawing2D.CustomLineCap" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomLineCap&#xA;Inherits MarshalByRefObject&#xA;Implements ICloneable, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomLineCap : MarshalByRefObject, ICloneable, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="ba0d5-101">Encapsula un extremo de línea personalizado definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-101">Encapsulates a custom user-defined line cap.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba0d5-102">Extremos de línea se usan al comienzo y al final de líneas o curvas dibujadas por GDI + <xref:System.Drawing.Pen> objetos.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-102">Line caps are used at the beginnings and ends of lines or curves drawn by GDI+ <xref:System.Drawing.Pen> objects.</span></span> <span data-ttu-id="ba0d5-103">GDI + admite varios estilos de extremo predefinidos y también permite a los usuarios definir sus propios estilos de extremo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-103">GDI+ supports several predefined cap styles, and also allows users to define their own cap styles.</span></span> <span data-ttu-id="ba0d5-104">Esta clase se utiliza para crear estilos de extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-104">This class is used to create custom cap styles.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba0d5-105">En el siguiente ejemplo se muestra cómo utilizar la clase <xref:System.Drawing.Drawing2D.CustomLineCap>.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-105">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap> class.</span></span> <span data-ttu-id="ba0d5-106">Para ejecutar este ejemplo, pegue, el código en un formulario Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-106">To run this example paste, the code into a Windows Form.</span></span> <span data-ttu-id="ba0d5-107">Controlar el formato <xref:System.Windows.Forms.Control.Paint> eventos y llame al método `DrawCaps` desde el formulario <xref:System.Windows.Forms.Control.Paint> método de control de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-107">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ba0d5-108">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> con el contorno y el relleno especificados.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-108">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="fillPath"><span data-ttu-id="ba0d5-109">Objeto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que define el relleno del extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-109">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span></span></param>
        <param name="strokePath"><span data-ttu-id="ba0d5-110">Objeto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que define el contorno del extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-110">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span></span></param>
        <summary><span data-ttu-id="ba0d5-111">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> con el contorno y el relleno especificados.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-111">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class with the specified outline and fill.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba0d5-112"><xref:System.Drawing.Drawing2D.CustomLineCap> usa un modo de relleno de "liquidación" independientemente del modo de relleno especificado para la operación.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-112"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="ba0d5-113">El `fillPath` y `strokePath` parámetros no pueden usarse al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-113">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="ba0d5-114">Un parámetro se debe pasar un valor null.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-114">One parameter must be passed a null value.</span></span> <span data-ttu-id="ba0d5-115">Si ninguno de estos parámetros se pasan un valor null, `fillPath` se pasará por alto.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-115">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="ba0d5-116">Si `strokePath` es `null`, `fillPath` debería interceptar el eje y negativo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-116">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ba0d5-117">En el ejemplo siguiente se muestra cómo utilizar el <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> constructor.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-117">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.%23ctor%2A> constructor.</span></span> <span data-ttu-id="ba0d5-118">Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-118">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="ba0d5-119">Controlar el formato <xref:System.Windows.Forms.Control.Paint> eventos y llame al método `DrawCaps` desde el formulario <xref:System.Windows.Forms.Control.Paint> método de control de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-119">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="fillPath"><span data-ttu-id="ba0d5-120">Objeto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que define el relleno del extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-120">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span></span></param>
        <param name="strokePath"><span data-ttu-id="ba0d5-121">Objeto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que define el contorno del extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-121">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span></span></param>
        <param name="baseCap"><span data-ttu-id="ba0d5-122">Extremo de línea a partir del cual se va a crear el extremo de línea personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-122">The line cap from which to create the custom cap.</span></span></param>
        <summary><span data-ttu-id="ba0d5-123">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> de la enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> existente especificada, con el contorno y el relleno especificados.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-123">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline and fill.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba0d5-124"><xref:System.Drawing.Drawing2D.CustomLineCap> usa un modo de relleno de "liquidación" independientemente del modo de relleno especificado para la operación.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-124"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="ba0d5-125">El `fillPath` y `strokePath` parámetros no pueden usarse al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-125">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="ba0d5-126">Un parámetro se debe pasar un valor null.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-126">One parameter must be passed a null value.</span></span> <span data-ttu-id="ba0d5-127">Si ninguno de estos parámetros se pasan un valor null, `fillPath` se pasará por alto.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-127">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="ba0d5-128">Si `strokePath` es `null`, `fillPath` debería interceptar el eje y negativo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-128">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomLineCap (System.Drawing.Drawing2D.GraphicsPath fillPath, System.Drawing.Drawing2D.GraphicsPath strokePath, System.Drawing.Drawing2D.LineCap baseCap, float baseInset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath fillPath, class System.Drawing.Drawing2D.GraphicsPath strokePath, valuetype System.Drawing.Drawing2D.LineCap baseCap, float32 baseInset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.#ctor(System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.GraphicsPath,System.Drawing.Drawing2D.LineCap,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (fillPath As GraphicsPath, strokePath As GraphicsPath, baseCap As LineCap, baseInset As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomLineCap(System::Drawing::Drawing2D::GraphicsPath ^ fillPath, System::Drawing::Drawing2D::GraphicsPath ^ strokePath, System::Drawing::Drawing2D::LineCap baseCap, float baseInset);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="fillPath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="strokePath" Type="System.Drawing.Drawing2D.GraphicsPath" />
        <Parameter Name="baseCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="baseInset" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="fillPath"><span data-ttu-id="ba0d5-129">Objeto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que define el relleno del extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-129">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the fill for the custom cap.</span></span></param>
        <param name="strokePath"><span data-ttu-id="ba0d5-130">Objeto <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> que define el contorno del extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-130">A <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> object that defines the outline of the custom cap.</span></span></param>
        <param name="baseCap"><span data-ttu-id="ba0d5-131">Extremo de línea a partir del cual se va a crear el extremo de línea personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-131">The line cap from which to create the custom cap.</span></span></param>
        <param name="baseInset"><span data-ttu-id="ba0d5-132">Distancia entre el extremo y la línea.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-132">The distance between the cap and the line.</span></span></param>
        <summary><span data-ttu-id="ba0d5-133">Inicializa una nueva instancia de la clase <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> de la enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> existente especificada, con el contorno, el relleno y el insertado especificados.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-133">Initializes a new instance of the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> class from the specified existing <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration with the specified outline, fill, and inset.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba0d5-134"><xref:System.Drawing.Drawing2D.CustomLineCap> usa un modo de relleno de "liquidación" independientemente del modo de relleno especificado para la operación.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-134"><xref:System.Drawing.Drawing2D.CustomLineCap> uses a fill mode of "winding" regardless of the fill mode specified for the operation.</span></span>  
  
 <span data-ttu-id="ba0d5-135">El `fillPath` y `strokePath` parámetros no pueden usarse al mismo tiempo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-135">The `fillPath` and `strokePath` parameters cannot be used at the same time.</span></span> <span data-ttu-id="ba0d5-136">Un parámetro se debe pasar un valor null.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-136">One parameter must be passed a null value.</span></span> <span data-ttu-id="ba0d5-137">Si ninguno de estos parámetros se pasan un valor null, `fillPath` se pasará por alto.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-137">If neither parameter is passed a null value, `fillPath` will be ignored.</span></span> <span data-ttu-id="ba0d5-138">Si `strokePath` es `null`, `fillPath` debería interceptar el eje y negativo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-138">If `strokePath` is `null`, `fillPath` should intercept the negative y-axis.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseCap">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineCap BaseCap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineCap BaseCap" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseCap" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseCap As LineCap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineCap BaseCap { System::Drawing::Drawing2D::LineCap get(); void set(System::Drawing::Drawing2D::LineCap value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineCap</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba0d5-139">Obtiene o establece la enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> en que se basa este <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-139">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span></span></summary>
        <value><span data-ttu-id="ba0d5-140">Enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> en que se basa este <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-140">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration on which this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is based.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseInset">
      <MemberSignature Language="C#" Value="public float BaseInset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 BaseInset" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.BaseInset" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseInset As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float BaseInset { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba0d5-141">Obtiene o establece la distancia entre el extremo y la línea.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-141">Gets or sets the distance between the cap and the line.</span></span></summary>
        <value><span data-ttu-id="ba0d5-142">Distancia entre el principio del extremo y el final de la línea.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-142">The distance between the beginning of the cap and the end of the line.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba0d5-143">Crea una copia exacta de este objeto <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-143">Creates an exact copy of this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span></span></summary>
        <returns><span data-ttu-id="ba0d5-144"><see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> que crea este método, convertido en objeto.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-144">The <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> this method creates, cast as an object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba0d5-145">El ejemplo siguiente está diseñado para su uso con Windows Forms y requiere <xref:System.Windows.Forms.PaintEventArgs> `e`, un <xref:System.Windows.Forms.Control.Paint> objeto de evento.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-145">The following example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, an <xref:System.Windows.Forms.Control.Paint> event object.</span></span> <span data-ttu-id="ba0d5-146">El código realiza las siguientes acciones:</span><span class="sxs-lookup"><span data-stu-id="ba0d5-146">The code performs the following actions:</span></span>  
  
-   <span data-ttu-id="ba0d5-147">Crea un extremo de línea personalizado mediante la <xref:System.Drawing.Drawing2D.GraphicsPath> objeto.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-147">Creates a custom line cap by using the <xref:System.Drawing.Drawing2D.GraphicsPath> object.</span></span>  
  
-   <span data-ttu-id="ba0d5-148">Crea un <xref:System.Drawing.Drawing2D.CustomLineCap> objeto, `firstCap`, usando la <xref:System.Drawing.Drawing2D.GraphicsPath> objeto recién creado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-148">Creates a <xref:System.Drawing.Drawing2D.CustomLineCap> object, `firstCap`,using the <xref:System.Drawing.Drawing2D.GraphicsPath> object just created.</span></span>  
  
-   <span data-ttu-id="ba0d5-149">Crea un clon de `firstCap` utilizando el <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> método.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-149">Creates a clone of `firstCap` by using the <xref:System.Drawing.Drawing2D.CustomLineCap.Clone%2A> method.</span></span>  
  
-   <span data-ttu-id="ba0d5-150">Configura el <xref:System.Drawing.Pen.CustomStartCap%2A> y <xref:System.Drawing.Pen.CustomEndCap%2A> propiedades de la <xref:System.Drawing.Pen> objeto y utiliza ese lápiz para dibujar una línea y los extremos personalizados en la pantalla.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-150">Sets up the <xref:System.Drawing.Pen.CustomStartCap%2A> and <xref:System.Drawing.Pen.CustomEndCap%2A> properties of the <xref:System.Drawing.Pen> object, and uses that pen to draw a line and the custom caps to the screen.</span></span>  
  
```vb  
Public Sub CloneExample(e As PaintEventArgs)  
 Dim points As Point() = New Point(- 5, - 5) New Point(0, 0) _  
 New Point(5, - 5)  
 Dim capPath As New GraphicsPath()  
 ' Create a Path and add two lines to it,  
 ' forming a custom line cap.  
 capPath.AddLines(points)  
 ' Create a CustomLineCap object.  
 Dim firstCap As New CustomLineCap(Nothing, capPath)  
 ' Create a copy of firstCap.  
 Dim secondCap As CustomLineCap = CType(firstCap.Clone(), _  
 CustomLineCap)  
 ' Create a Pen object.  
 Dim pen As New Pen(Color.Black, 3F)  
 'Set up the line.  
 Dim point1 As New Point(20, 20)  
 Dim point2 As New Point(100, 100)  
 ' Set up the caps.  
 pen.CustomStartCap = firstCap  
 pen.CustomEndCap = secondCap  
 ' Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2)  
 End Sub  
```  
  
```csharp  
private void CloneExample(PaintEventArgs e)  
 {  
 // Create a Path and add two lines to it,  
 // forming a custom line cap.  
 Point[] points =  
 {  
 new Point(-5, -5),  
 new Point(0, 0),  
 new Point(5, -5)  
 };  
 GraphicsPath capPath = new GraphicsPath();  
 capPath.AddLines(points);  
 // Create a CustomLineCap object.  
 CustomLineCap firstCap = new CustomLineCap(null, capPath);  
 // Create a copy of firstCap.  
 CustomLineCap secondCap = (CustomLineCap)firstCap.Clone();  
 // Create a Pen object.  
 Pen pen = new Pen(Color.Black, 3.0f);  
 // Set up the line.  
 Point point1 = new Point(20, 20);  
 Point point2 = new Point(100, 100);  
 // Set up the caps.  
 pen.CustomStartCap = firstCap;  
 pen.CustomEndCap = secondCap;  
 // Draw the line and caps to the screen.  
 e.Graphics.DrawLine(pen, point1, point2);  
 }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba0d5-151">Libera todos los recursos utilizados por este objeto <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-151">Releases all resources used by this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba0d5-152">Al llamar a <xref:System.IDisposable.Dispose%2A> permite que los recursos utilizados por este <xref:System.Drawing.Drawing2D.CustomLineCap> objeto se reasignen para otros fines.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-152">Calling <xref:System.IDisposable.Dispose%2A> allows the resources used by this <xref:System.Drawing.Drawing2D.CustomLineCap> object to be reallocated for other purposes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="ba0d5-153">Es <see langword="true" /> para liberar tanto recursos administrados como no administrados; es <see langword="false" /> para liberar únicamente recursos no administrados.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-153"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="ba0d5-154">Libera los recursos no administrados que usa <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> y, de forma opcional, libera los recursos administrados.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-154">Releases the unmanaged resources used by the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~CustomLineCap ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!CustomLineCap ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ba0d5-155">Permite que un objeto <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> intente liberar recursos y realizar otras operaciones de limpieza antes de que el objeto <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> sea reclamado por la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-155">Allows an <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> to attempt to free resources and perform other cleanup operations before the <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStrokeCaps">
      <MemberSignature Language="C#" Value="public void GetStrokeCaps (out System.Drawing.Drawing2D.LineCap startCap, out System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetStrokeCaps([out] valuetype System.Drawing.Drawing2D.LineCap&amp; startCap, [out] valuetype System.Drawing.Drawing2D.LineCap&amp; endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps(System.Drawing.Drawing2D.LineCap@,System.Drawing.Drawing2D.LineCap@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetStrokeCaps (ByRef startCap As LineCap, ByRef endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetStrokeCaps([Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % startCap, [Runtime::InteropServices::Out] System::Drawing::Drawing2D::LineCap % endCap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="startCap"><span data-ttu-id="ba0d5-156">Enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> usada al principio de una línea dentro de este extremo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-156">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span></span></param>
        <param name="endCap"><span data-ttu-id="ba0d5-157">Enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> usada al final de una línea dentro de este extremo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-157">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span></span></param>
        <summary><span data-ttu-id="ba0d5-158">Obtiene los extremos utilizados para iniciar y finalizar las líneas que forman este extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-158">Gets the caps used to start and end lines that make up this custom cap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba0d5-159">En el siguiente ejemplo se muestra cómo se utiliza el método <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-159">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.GetStrokeCaps%2A> method.</span></span> <span data-ttu-id="ba0d5-160">Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-160">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="ba0d5-161">Controlar el formato <xref:System.Windows.Forms.Control.Paint> eventos y llame al método `DrawCaps` desde el formulario <xref:System.Windows.Forms.Control.Paint> método de control de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-161">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStrokeCaps">
      <MemberSignature Language="C#" Value="public void SetStrokeCaps (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStrokeCaps(valuetype System.Drawing.Drawing2D.LineCap startCap, valuetype System.Drawing.Drawing2D.LineCap endCap) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetStrokeCaps (startCap As LineCap, endCap As LineCap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStrokeCaps(System::Drawing::Drawing2D::LineCap startCap, System::Drawing::Drawing2D::LineCap endCap);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startCap" Type="System.Drawing.Drawing2D.LineCap" />
        <Parameter Name="endCap" Type="System.Drawing.Drawing2D.LineCap" />
      </Parameters>
      <Docs>
        <param name="startCap"><span data-ttu-id="ba0d5-162">Enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> usada al principio de una línea dentro de este extremo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-162">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the beginning of a line within this cap.</span></span></param>
        <param name="endCap"><span data-ttu-id="ba0d5-163">Enumeración <see cref="T:System.Drawing.Drawing2D.LineCap" /> usada al final de una línea dentro de este extremo.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-163">The <see cref="T:System.Drawing.Drawing2D.LineCap" /> enumeration used at the end of a line within this cap.</span></span></param>
        <summary><span data-ttu-id="ba0d5-164">Establece los extremos utilizados para iniciar y finalizar las líneas que forman este extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-164">Sets the caps used to start and end lines that make up this custom cap.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ba0d5-165">En el siguiente ejemplo se muestra cómo se utiliza el método <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A>.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-165">The following example demonstrates how to use the <xref:System.Drawing.Drawing2D.CustomLineCap.SetStrokeCaps%2A> method.</span></span> <span data-ttu-id="ba0d5-166">Para ejecutar este ejemplo, pegue el código en un formulario Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-166">To run this example, paste the code into a Windows Form.</span></span> <span data-ttu-id="ba0d5-167">Controlar el formato <xref:System.Windows.Forms.Control.Paint> eventos y llame al método `DrawCaps` desde el formulario <xref:System.Windows.Forms.Control.Paint> método de control de eventos, pasando `e` como <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-167">Handle the form's <xref:System.Windows.Forms.Control.Paint> event and call `DrawCaps` from the form's <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.Misc3#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.Misc3#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokeJoin">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.LineJoin StrokeJoin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Drawing2D.LineJoin StrokeJoin" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.StrokeJoin" />
      <MemberSignature Language="VB.NET" Value="Public Property StrokeJoin As LineJoin" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Drawing2D::LineJoin StrokeJoin { System::Drawing::Drawing2D::LineJoin get(); void set(System::Drawing::Drawing2D::LineJoin value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.LineJoin</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba0d5-168">Obtiene o establece la enumeración <see cref="T:System.Drawing.Drawing2D.LineJoin" /> que determina cómo se unen las líneas que forman este objeto <see cref="T:System.Drawing.Drawing2D.CustomLineCap" />.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-168">Gets or sets the <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object are joined.</span></span></summary>
        <value><span data-ttu-id="ba0d5-169">Enumeración <see cref="T:System.Drawing.Drawing2D.LineJoin" /> que usa este objeto <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> para unir las líneas.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-169">The <see cref="T:System.Drawing.Drawing2D.LineJoin" /> enumeration this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> object uses to join lines.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba0d5-170">Esta propiedad especifica un <xref:System.Drawing.Drawing2D.LineJoin> enumeración que se usa para unir líneas y curvas que forman los trazos de este <xref:System.Drawing.Drawing2D.CustomLineCap> objeto.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-170">This property specifies a <xref:System.Drawing.Drawing2D.LineJoin> enumeration that is used to join lines and curves that make up the stroked path of this <xref:System.Drawing.Drawing2D.CustomLineCap> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthScale">
      <MemberSignature Language="C#" Value="public float WidthScale { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 WidthScale" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.Drawing2D.CustomLineCap.WidthScale" />
      <MemberSignature Language="VB.NET" Value="Public Property WidthScale As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float WidthScale { float get(); void set(float value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ba0d5-171">Obtiene o establece la cantidad por la que se debe ajustar este objeto de la clase <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> en relación con el ancho del objeto <see cref="T:System.Drawing.Pen" />.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-171">Gets or sets the amount by which to scale this <see cref="T:System.Drawing.Drawing2D.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.</span></span></summary>
        <value><span data-ttu-id="ba0d5-172">Cantidad por la que se debe ajustar el extremo de línea.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-172">The amount by which to scale the cap.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ba0d5-173">Esta propiedad especifica el múltiplo del ancho del lápiz por el que se va a multiplicar el tamaño del extremo personalizado.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-173">This property specifies the multiple of the pen width by which to multiply the size of the custom cap.</span></span> <span data-ttu-id="ba0d5-174">Por ejemplo, si esta propiedad es igual a 1, el ancho del extremo personalizado es 10, el alto de extremo personalizado es 5 y se dibuja una línea con un lápiz con un ancho de 3, el límite es dibujado 30 ancho y 15 unidades alta.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-174">For example, if this property equals 1, the custom cap width is 10, the custom cap height is 5, and a line is drawn with a pen with a width of 3, then the cap is drawn 30 units wide and 15 units high.</span></span> <span data-ttu-id="ba0d5-175">Si establece esta propiedad en 3 hace que el extremo se dibujado ancho de 90 unidades y 45 unidades de alta.</span><span class="sxs-lookup"><span data-stu-id="ba0d5-175">Setting this property to 3 causes the cap to be drawn 90 units wide and 45 units high.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>