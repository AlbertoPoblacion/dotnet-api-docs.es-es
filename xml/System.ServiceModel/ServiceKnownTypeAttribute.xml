<Type Name="ServiceKnownTypeAttribute" FullName="System.ServiceModel.ServiceKnownTypeAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d0f0d67a30b7c21cb1a09ece0d36315d97cec93b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36609372" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ServiceKnownTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ServiceKnownTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ServiceKnownTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ServiceKnownTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ServiceKnownTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ServiceKnownTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Interface | System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Especifica los tipos conocidos que un servicio va a usar cuando se serializa o deserializa.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.ServiceModel.ServiceKnownTypeAttribute> está pensado para su uso al crear contratos de servicio de Windows Communication Foundation (WCF) (interfaces que definen el servicio y sus métodos). El *tipos conocidos* son tipos que pueden estar presentes en un gráfico de objetos cuando se produce serialización o deserialización. Para obtener más información sobre los tipos conocidos, consulte [tipos conocidos de contrato de datos](~/docs/framework/wcf/feature-details/data-contract-known-types.md).  
  
 Para usar la propiedad <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A>, cree una clase que contenga un método (o métodos) que devuelva una matriz de tipos (cada una es un tipo conocido). Al aplicar el atributo, defina `methodName` en el nombre de un método que devuelva la lista de tipos y defina `declaringType` en el tipo que contiene el método. El método debe devolver un tipo que implemente la interfaz <xref:System.Collections.Generic.IEnumerable%601>. El método también debe incluir un parámetro de tipo <xref:System.Reflection.ICustomAttributeProvider>.  
  
 También puede aplicar el atributo varias veces en una interfaz, clase o método. En cada caso se especificaría un nuevo tipo conocido.  
  
> [!NOTE]
>  Puede utilizar la palabra `ServiceKnownType` en el código de Microsoft Visual Basic o C# en lugar de `ServiceKnownTypeAttribute`, que es más larga.  
  
   
  
## Examples  
 En el ejemplo siguiente se aplica el atributo <xref:System.ServiceModel.ServiceKnownTypeAttribute> a una interfaz donde el atributo especifica un nombre de método y un tipo de declaración.  
  
 [!code-csharp[ServiceKnownTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#1)]
 [!code-vb[ServiceKnownTypeAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#1)]  
  
 Por otra parte, aplique el atributo a la interfaz especificando el tipo conocido que se vaya a incluir.  
  
 [!code-csharp[ServiceKnownTypeAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#2)]
 [!code-vb[ServiceKnownTypeAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.DataContractAttribute" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(System::String ^ methodName);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceKnownTypeAttribute : string -&gt; System.ServiceModel.ServiceKnownTypeAttribute" Usage="new System.ServiceModel.ServiceKnownTypeAttribute methodName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="methodName">El nombre de un método que devuelve los tipos conocidos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> y especifica el nombre de un método que devuelve los tipos conocidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Use este constructor al aplicar <xref:System.ServiceModel.ServiceKnownTypeAttribute> a una clase que contiene métodos que devuelven tipos conocidos.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(Type ^ type);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceKnownTypeAttribute : Type -&gt; System.ServiceModel.ServiceKnownTypeAttribute" Usage="new System.ServiceModel.ServiceKnownTypeAttribute type" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Especifica un tipo conocido que se puede usar en un parámetro o el valor devuelto definido por el servicio.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con el tipo conocido especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceKnownTypeAttribute> puede aplicarse varias veces a un método, con cada aplicación que dé un nombre a un tipo conocido diferente que puede encontrarse en el gráfico de objetos devuelto por el método.  
  
   
  
## Examples  
 El ejemplo siguiente aplica el atributo <xref:System.ServiceModel.ServiceKnownTypeAttribute> a una interfaz donde el atributo especifica el tipo que se vaya a incluir.  
  
 [!code-csharp[ServiceKnownTypeAttribute#2](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#2)]
 [!code-vb[ServiceKnownTypeAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ServiceKnownTypeAttribute (string methodName, Type declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string methodName, class System.Type declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ServiceKnownTypeAttribute.#ctor(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (methodName As String, declaringType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ServiceKnownTypeAttribute(System::String ^ methodName, Type ^ declaringType);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.ServiceKnownTypeAttribute : string * Type -&gt; System.ServiceModel.ServiceKnownTypeAttribute" Usage="new System.ServiceModel.ServiceKnownTypeAttribute (methodName, declaringType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="methodName">El nombre de un método que devuelve los tipos conocidos.</param>
        <param name="declaringType">El tipo que puede utilizar los tipos conocidos en su gráfico de objetos.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.ServiceKnownTypeAttribute" /> con el nombre de un método que devuelve los tipos conocidos y el tipo que contiene el método (o métodos) que devuelve los tipos conocidos.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 En el ejemplo siguiente se aplica el atributo <xref:System.ServiceModel.ServiceKnownTypeAttribute> a una interfaz donde el atributo especifica un nombre de método y un tipo de declaración.  
  
 [!code-csharp[ServiceKnownTypeAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/serviceknowntypeattribute/cs/source.cs#1)]
 [!code-vb[ServiceKnownTypeAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/serviceknowntypeattribute/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
        <altmember cref="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el tipo que contiene los métodos que devuelven los tipos conocidos.</summary>
        <value>El tipo <see cref="T:System.Type" /> que contiene los métodos que devuelven los tipos conocidos.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MethodName">
      <MemberSignature Language="C#" Value="public string MethodName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MethodName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MethodName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MethodName : string" Usage="System.ServiceModel.ServiceKnownTypeAttribute.MethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el nombre de un método que devuelve la colección de tipos conocidos.</summary>
        <value>El nombre del método que devuelve los tipos conocidos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.ServiceKnownTypeAttribute.MethodName%2A> debe ser el nombre de un método en el tipo especificado por la propiedad <xref:System.ServiceModel.ServiceKnownTypeAttribute.DeclaringType%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type Type" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ Type { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : Type" Usage="System.ServiceModel.ServiceKnownTypeAttribute.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>El tipo conocido que puede estar incluido en un gráfico de objetos.</summary>
        <value>
          <see cref="T:System.Type" /> del tipo conocido.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>