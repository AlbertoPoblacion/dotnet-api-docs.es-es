<Type Name="EndpointIdentity" FullName="System.ServiceModel.EndpointIdentity">
  <Metadata><Meta Name="ms.openlocfilehash" Value="783b1865fa4eafb11b0c829b0ce091155558b43b" /><Meta Name="ms.sourcegitcommit" Value="22744e2f9d07a51900a968efffd9e390117d64a1" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/03/2019" /><Meta Name="ms.locfileid" Value="55673895" /></Metadata><TypeSignature Language="C#" Value="public abstract class EndpointIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EndpointIdentity extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.EndpointIdentity" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EndpointIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointIdentity abstract" />
  <TypeSignature Language="F#" Value="type EndpointIdentity = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Una clase abstracta que, cuando se implementa, proporciona una identidad que habilita la autenticación de un punto de conexión por parte de clientes que intercambian mensajes con él.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor de la identidad para un extremo se puede establecer con constructores de <xref:System.ServiceModel.EndpointAddress>, donde también se puede tener acceso a su valor como una propiedad <xref:System.ServiceModel.EndpointAddress.Identity%2A> de solo lectura.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EndpointIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EndpointIdentity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crea una instancia <see cref="T:System.ServiceModel.EndpointIdentity" /> vacía.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDnsIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateDnsIdentity (string dnsName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateDnsIdentity(string dnsName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateDnsIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateDnsIdentity (dnsName As String) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateDnsIdentity(System::String ^ dnsName);" />
      <MemberSignature Language="F#" Value="static member CreateDnsIdentity : string -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateDnsIdentity dnsName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dnsName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dnsName">El nombre para la identidad DNS.</param>
        <summary>Crea una identidad DNS con un nombre DNS especificado.</summary>
        <returns>DNS <see cref="T:System.ServiceModel.EndpointIdentity" /> asociado al <paramref name="dnsName" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cliente WCF seguro que se conecta a un punto de conexión con esta identidad comprueba que las notificaciones presentadas por el servidor contienen una notificación DNS que representa esta identidad.  
  
 Este método estático crea una instancia de <xref:System.ServiceModel.DnsEndpointIdentity> llamando a su constructor <xref:System.ServiceModel.DnsEndpointIdentity.%23ctor%2A>.  
  
   
  
## Examples  
 El siguiente código muestra cómo llamar a este método.  
  
 [!code-csharp[S_UEEndpointIdentity#41](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="dnsName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateIdentity (System.IdentityModel.Claims.Claim identity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateIdentity(class System.IdentityModel.Claims.Claim identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateIdentity(System.IdentityModel.Claims.Claim)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateIdentity (identity As Claim) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateIdentity(System::IdentityModel::Claims::Claim ^ identity);" />
      <MemberSignature Language="F#" Value="static member CreateIdentity : System.IdentityModel.Claims.Claim -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateIdentity identity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identity" Type="System.IdentityModel.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="identity"><see cref="T:System.IdentityModel.Claims.Claim" /> utilizado para crear la identidad nueva.</param>
        <summary>Crea una identidad con la notificación especificada.</summary>
        <returns><see cref="T:System.ServiceModel.EndpointIdentity" /> asociado al <paramref name="identity" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cliente WCF seguro que se conecta a un punto de conexión con esta identidad comprueba que las notificaciones presentadas por el servidor contienen la notificación de identidad utilizada para construir esta identidad.  
  
 Este método puede crear una identidad de tipo <xref:System.ServiceModel.DnsEndpointIdentity>, <xref:System.ServiceModel.SpnEndpointIdentity>, <xref:System.ServiceModel.UpnEndpointIdentity> o <xref:System.ServiceModel.RsaEndpointIdentity>.  
  
   
  
## Examples  
 El siguiente código muestra cómo llamar a este método.  
  
 [!code-csharp[S_UEEndpointIdentity#42](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#42)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateRsaIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una identidad RSA.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cliente WCF seguro que se conecta a un punto de conexión con esta identidad comprueba que las notificaciones presentadas por el servidor contienen una notificación que incluye la clave pública RSA utilizada para construir esta identidad.  
  
 Uno de estos métodos estáticos crea una instancia de <xref:System.ServiceModel.RsaEndpointIdentity> llamando a su constructor <xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateRsaIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateRsaIdentity (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateRsaIdentity(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRsaIdentity (certificate As X509Certificate2) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateRsaIdentity(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="static member CreateRsaIdentity : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateRsaIdentity certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contiene el certificado para la identidad RSA.</param>
        <summary>Crea una identidad RSA con el certificado X.509 especificado.</summary>
        <returns>RSA <see cref="T:System.ServiceModel.EndpointIdentity" /> asociado con el <paramref name="certificate" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cliente WCF seguro que se conecta a un punto de conexión con esta identidad comprueba que las notificaciones presentadas por el servidor contienen una notificación que contiene la clave pública RSA obtenida en el certificado usado para construir esta identidad.  
  
 Este método estático crea una instancia de <xref:System.ServiceModel.RsaEndpointIdentity> llamando a su constructor <xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A>.  
  
   
  
## Examples  
 El siguiente código muestra cómo llamar a este método.  
  
 [!code-csharp[S_UEEndpointIdentity#41](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#41)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> es <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="certificate" /> no es un certificado de RSA.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateRsaIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateRsaIdentity (string publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateRsaIdentity(string publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateRsaIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateRsaIdentity (publicKey As String) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateRsaIdentity(System::String ^ publicKey);" />
      <MemberSignature Language="F#" Value="static member CreateRsaIdentity : string -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateRsaIdentity publicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="publicKey">La clave pública para la identidad RSA.</param>
        <summary>Crea una identidad RSA con la clave pública especificada.</summary>
        <returns>RSA <see cref="T:System.ServiceModel.EndpointIdentity" /> asociado con el <paramref name="publicKey" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cliente WCF seguro que se conecta a un punto de conexión con esta identidad comprueba que las notificaciones presentadas por el servidor contienen una notificación que incluye la clave pública RSA utilizada para construir esta identidad.  
  
 Este método estático crea una instancia de <xref:System.ServiceModel.RsaEndpointIdentity> llamando a su constructor <xref:System.ServiceModel.RsaEndpointIdentity.%23ctor%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="publicKey" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSpnIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateSpnIdentity (string spnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateSpnIdentity(string spnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateSpnIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSpnIdentity (spnName As String) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateSpnIdentity(System::String ^ spnName);" />
      <MemberSignature Language="F#" Value="static member CreateSpnIdentity : string -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateSpnIdentity spnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="spnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="spnName">Nombre para la identidad SPN.</param>
        <summary>Crea una identidad de nombre de entidad de seguridad de servidor (SPN) con un nombre especificado.</summary>
        <returns>SPN <see cref="T:System.ServiceModel.EndpointIdentity" /> asociado al <paramref name="spnName" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cliente WCF seguro que se conecta a un punto de conexión con esta identidad utiliza SPN al realizar la autenticación de SSPI con el punto de conexión.  
  
 Este método estático crea una instancia de <xref:System.ServiceModel.SpnEndpointIdentity> llamando a su constructor, <xref:System.ServiceModel.SpnEndpointIdentity.%23ctor%2A>, utilizando `spnName` como parámetro de entrada.  
  
 Si `spnName` se especifica con una cadena vacía, la autenticación se retirará de Kerberos a NTLM si es posible. Si <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> es `false`, se produce un error de autenticación.  
  
   
  
## Examples  
 El siguiente código muestra cómo llamar a este método.  
  
 [!code-csharp[S_UEEndpointIdentity#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="spnName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUpnIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateUpnIdentity (string upnName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateUpnIdentity(string upnName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateUpnIdentity(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateUpnIdentity (upnName As String) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateUpnIdentity(System::String ^ upnName);" />
      <MemberSignature Language="F#" Value="static member CreateUpnIdentity : string -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateUpnIdentity upnName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="upnName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="upnName">Nombre para la identidad UPN.</param>
        <summary>Crea una identidad de nombre principal de usuario (UPN) con un nombre especificado.</summary>
        <returns>UPN <see cref="T:System.ServiceModel.EndpointIdentity" /> asociado al <paramref name="upnName" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un cliente WCF seguro que se conecta a un punto de conexión con esta identidad utiliza UPN al realizar la autenticación de SSPI con el punto de conexión.  
  
 Este método estático crea una instancia de <xref:System.ServiceModel.UpnEndpointIdentity> llamando a su constructor, <xref:System.ServiceModel.UpnEndpointIdentity.%23ctor%2A>, utilizando `upnName` como parámetro de entrada.  
  
 Si `upnName` se especifica con una cadena vacía, la autenticación se retirará de Kerberos a NTLM si es posible. Si <xref:System.ServiceModel.Security.WindowsClientCredential.AllowNtlm%2A> es `false`, WCF permite un mayor esfuerzo para producir una excepción si se utiliza NTLM. Tenga en cuenta que, aunque se establezca esta propiedad en `false`, es posible que se envíen igualmente las credenciales NTLM a través de la conexión.  
  
   
  
## Examples  
 El siguiente código muestra cómo llamar a este método.  
  
 [!code-csharp[S_UEEndpointIdentity#30](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#30)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="upnName" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateX509CertificateIdentity">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crea una identidad de X509Certificate.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Elija entre estos dos constructores en función de si tiene certificados de apoyo.  
  
 Cliente WCF seguro que se conecta a un punto de conexión con esta identidad y comprueba que las notificaciones presentadas por el servidor contengan la notificación con la huella digital del certificado utilizado para construir esta identidad.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateX509CertificateIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateX509CertificateIdentity (certificate As X509Certificate2) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateX509CertificateIdentity(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="static member CreateX509CertificateIdentity : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity certificate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contiene el certificado para la identidad.</param>
        <summary>Crea una identidad X509Certificate con el certificado especificado.</summary>
        <returns>X509Certificate <see cref="T:System.ServiceModel.EndpointIdentity" /> asociado al <paramref name="certificate" /> especificado.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cliente WCF seguro que se conecta a un punto de conexión con esta identidad y comprueba que las notificaciones presentadas por el servidor contengan la notificación con la huella digital del certificado utilizado para construir esta identidad.  
  
 Este método `static` crea una instancia de <xref:System.ServiceModel.X509CertificateEndpointIdentity> llamando a su constructor, <xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A>, utilizando `certificate` como parámetro de entrada.  
  
   
  
## Examples  
 El siguiente código muestra cómo llamar a este método.  
  
 [!code-csharp[S_UEEndpointIdentity#40](~/samples/snippets/csharp/VS_Snippets_CFX/s_ueendpointidentity/cs/source.cs#40)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateX509CertificateIdentity">
      <MemberSignature Language="C#" Value="public static System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity (System.Security.Cryptography.X509Certificates.X509Certificate2 primaryCertificate, System.Security.Cryptography.X509Certificates.X509Certificate2Collection supportingCertificates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.ServiceModel.EndpointIdentity CreateX509CertificateIdentity(class System.Security.Cryptography.X509Certificates.X509Certificate2 primaryCertificate, class System.Security.Cryptography.X509Certificates.X509Certificate2Collection supportingCertificates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Certificate2Collection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateX509CertificateIdentity (primaryCertificate As X509Certificate2, supportingCertificates As X509Certificate2Collection) As EndpointIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::ServiceModel::EndpointIdentity ^ CreateX509CertificateIdentity(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ primaryCertificate, System::Security::Cryptography::X509Certificates::X509Certificate2Collection ^ supportingCertificates);" />
      <MemberSignature Language="F#" Value="static member CreateX509CertificateIdentity : System.Security.Cryptography.X509Certificates.X509Certificate2 * System.Security.Cryptography.X509Certificates.X509Certificate2Collection -&gt; System.ServiceModel.EndpointIdentity" Usage="System.ServiceModel.EndpointIdentity.CreateX509CertificateIdentity (primaryCertificate, supportingCertificates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="primaryCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="supportingCertificates" Type="System.Security.Cryptography.X509Certificates.X509Certificate2Collection" />
      </Parameters>
      <Docs>
        <param name="primaryCertificate"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2" /> que contiene el certificado primario para la identidad.</param>
        <param name="supportingCertificates"><see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection" /> que contiene los certificados de apoyo para la identidad.</param>
        <summary>Crea una identidad de X509Certificate con los certificados primario y de apoyo especificados.</summary>
        <returns>Cliente WCF seguro que se conecta a un punto de conexión con esta identidad y comprueba que las notificaciones presentadas por el servidor contengan la notificación con la huella digital del certificado utilizado para construir esta identidad.  
  
X509Certificate <see cref="T:System.ServiceModel.EndpointIdentity" /> asociado al <paramref name="primaryCertificate" /> y a los <paramref name="supportingCertificates." /> especificados.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método estático crea una instancia de <xref:System.ServiceModel.X509CertificateEndpointIdentity> llamando a su constructor, <xref:System.ServiceModel.X509CertificateEndpointIdentity.%23ctor%2A>, utilizando `primaryCertificate` y `supportingCertificates` como parámetros de entrada.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="primaryCertificate" /> o <paramref name="supportingCertificates" /> es <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-1.0;netcore-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="C#" Value="public override bool Equals (object other);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object other) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (other As Object) As Boolean" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ other);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="endpointIdentity.Equals obj" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="endpointIdentity.Equals other" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.Equals(System.Object)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;netcore-1.0;netcore-1.1;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="other" Type="System.Object" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><see cref="T:System.Object" /> cuya igualdad con la identidad actual se ha comprobado.</param>
        <param name="other">To be added.</param>
        <summary>Devuelve un valor que determina si un objeto especificado equivale al objeto de identidad actual o si tienen propiedades de seguridad equivalentes.</summary>
        <returns><see langword="true" /> si el objeto <paramref name="obj" /> especificado es equivalente a la identidad actual o contiene las mismas propiedades de seguridad; de lo contrario, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="endpointIdentity.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Proporciona un código hash para la instancia actual de la identidad.</summary>
        <returns>Código hash para la identidad actual.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentityClaim">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Claims.Claim IdentityClaim { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Claims.Claim IdentityClaim" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IdentityClaim As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Claims::Claim ^ IdentityClaim { System::IdentityModel::Claims::Claim ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IdentityClaim : System.IdentityModel.Claims.Claim" Usage="System.ServiceModel.EndpointIdentity.IdentityClaim" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.Claim</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la notificación de identidad que corresponde a la identidad.</summary>
        <value><see cref="T:System.IdentityModel.Claims.Claim" /> que representa la notificación de identidad.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los clientes que autentican el servidor deben comprobar que las demandas que representan el servidor contienen la notificación de identidad proporcionada por `EndpointIdentity`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una <see cref="T:System.ServiceModel.EndpointIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.IdentityModel.Claims.Claim identityClaim);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.IdentityModel.Claims.Claim identityClaim) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (identityClaim As Claim)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::IdentityModel::Claims::Claim ^ identityClaim);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected void Initialize (System.IdentityModel.Claims.Claim claim);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.IdentityModel.Claims.Claim claim) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::IdentityModel::Claims::Claim ^ claim);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.IdentityModel.Claims.Claim -&gt; unit" Usage="endpointIdentity.Initialize claim" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityClaim" Type="System.IdentityModel.Claims.Claim" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="claim" Type="System.IdentityModel.Claims.Claim" Index="0" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="identityClaim"><see cref="T:System.IdentityModel.Claims.Claim" /> que se utiliza para inicializar la <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
        <param name="claim"><see cref="T:System.IdentityModel.Claims.Claim" /> que se utiliza para inicializar la <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
        <summary>Inicializa una <see cref="T:System.ServiceModel.EndpointIdentity" /> con la notificación especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los constructores de todas las clases derivadas de <xref:System.ServiceModel.EndpointIdentity.Initialize%2A> llaman a este método.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected void Initialize (System.IdentityModel.Claims.Claim identityClaim, System.Collections.Generic.IEqualityComparer&lt;System.IdentityModel.Claims.Claim&gt; claimComparer);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.IdentityModel.Claims.Claim identityClaim, class System.Collections.Generic.IEqualityComparer`1&lt;class System.IdentityModel.Claims.Claim&gt; claimComparer) cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.Initialize(System.IdentityModel.Claims.Claim,System.Collections.Generic.IEqualityComparer{System.IdentityModel.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Initialize (identityClaim As Claim, claimComparer As IEqualityComparer(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::IdentityModel::Claims::Claim ^ identityClaim, System::Collections::Generic::IEqualityComparer&lt;System::IdentityModel::Claims::Claim ^&gt; ^ claimComparer);" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected void Initialize (System.IdentityModel.Claims.Claim claim, System.Collections.Generic.IEqualityComparer&lt;System.IdentityModel.Claims.Claim&gt; comparer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Initialize(class System.IdentityModel.Claims.Claim claim, class System.Collections.Generic.IEqualityComparer`1&lt;class System.IdentityModel.Claims.Claim&gt; comparer) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Initialize(System::IdentityModel::Claims::Claim ^ claim, System::Collections::Generic::IEqualityComparer&lt;System::IdentityModel::Claims::Claim ^&gt; ^ comparer);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Initialize : System.IdentityModel.Claims.Claim * System.Collections.Generic.IEqualityComparer&lt;System.IdentityModel.Claims.Claim&gt; -&gt; unit" Usage="endpointIdentity.Initialize (claim, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="identityClaim" Type="System.IdentityModel.Claims.Claim" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="claim" Type="System.IdentityModel.Claims.Claim" Index="0" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="claimComparer" Type="System.Collections.Generic.IEqualityComparer&lt;System.IdentityModel.Claims.Claim&gt;" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;xamarinandroid-7.1;xamarinios-10.8;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IEqualityComparer&lt;System.IdentityModel.Claims.Claim&gt;" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="identityClaim"><see cref="T:System.IdentityModel.Claims.Claim" /> que se utiliza para inicializar la <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
        <param name="claim"><see cref="T:System.IdentityModel.Claims.Claim" /> que se utiliza para inicializar la <see cref="T:System.ServiceModel.EndpointIdentity" />.</param>
        <param name="claimComparer"><see cref="T:System.Collections.IEqualityComparer" /> utilizado para comparar las notificaciones.</param>
        <param name="comparer"><see cref="T:System.Collections.IEqualityComparer" /> utilizado para comparar las notificaciones.</param>
        <summary>Inicializa una <see cref="T:System.ServiceModel.EndpointIdentity" /> con la notificación especificada y una interfaz y compara la igualdad.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.EndpointIdentity.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="endpointIdentity.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve la identidad.</summary>
        <returns>Valor de tipo <see cref="T:System.String" /> con el formato "identidad(cadena)" donde la cadena es igual que la propiedad <see cref="P:System.ServiceModel.EndpointIdentity.IdentityClaim" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>