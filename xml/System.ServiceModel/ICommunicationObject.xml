<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd9ca885385b63277201f3de3ef6b40a8f66af9e" />
    <Meta Name="ms.sourcegitcommit" Value="1ed56302ed1a98fc49550c1db40aae2529449969" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="09/11/2018" />
    <Meta Name="ms.locfileid" Value="44369999" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <TypeSignature Language="F#" Value="type ICommunicationObject = interface" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b992f-101">Define el contrato para la máquina de estados básicos para todos los objetos orientados a la comunicación en el sistema, incluidos los canales, administradores de canales, generadores, agentes de escucha, distribuidores y hosts de servicio.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b992f-101">Defines the contract for the basic state machine for all communication-oriented objects in the system, including channels, the channel managers, factories, listeners, and dispatchers, and service hosts.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-102">La interfaz <xref:System.ServiceModel.ICommunicationObject> define:</span><span class="sxs-lookup"><span data-stu-id="b992f-102">The <xref:System.ServiceModel.ICommunicationObject> interface defines:</span></span>  
  
-   <span data-ttu-id="b992f-103">Un conjunto de métodos abiertos, cerrados y anulados para iniciar las transiciones de estado:</span><span class="sxs-lookup"><span data-stu-id="b992f-103">A set of open, close and abort methods for initiating state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   <span data-ttu-id="b992f-104">Versiones asincrónicas de los métodos abiertos y cerrados:</span><span class="sxs-lookup"><span data-stu-id="b992f-104">Asynchronous versions of the open and close methods:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   <span data-ttu-id="b992f-105">Un conjunto de eventos que proporcionan notificaciones de las transiciones de estado:</span><span class="sxs-lookup"><span data-stu-id="b992f-105">A set of events that provide notifications of state transitions:</span></span>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   <span data-ttu-id="b992f-106">Una propiedad <xref:System.ServiceModel.ICommunicationObject.State%2A> común para inspeccionar el estado de un objeto</span><span class="sxs-lookup"><span data-stu-id="b992f-106">A common <xref:System.ServiceModel.ICommunicationObject.State%2A> property for inspecting the state of an object</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberSignature Language="F#" Value="abstract member Abort : unit -&gt; unit" Usage="iCommunicationObject.Abort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b992f-107">Hace que un objeto de comunicación pase inmediatamente de su estado actual al estado cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-107">Causes a communication object to transition immediately from its current state into the closed state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-108">Este método indica que se debería omitir o terminar de forma discreta cualquier trabajo inacabado antes de devolverse.</span><span class="sxs-lookup"><span data-stu-id="b992f-108">This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</span></span> <span data-ttu-id="b992f-109">El método <xref:System.ServiceModel.ICommunicationObject.Abort%2A> se puede usar para cancelar cualquier operación pendiente, incluidas las llamadas pendientes a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b992f-109">The <xref:System.ServiceModel.ICommunicationObject.Abort%2A> method can be used to cancel any outstanding operations, including outstanding calls to <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 <span data-ttu-id="b992f-110">Para pasar de forma correcta un <xref:System.ServiceModel.ICommunicationObject> del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>, llame a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b992f-110">To gracefully transition an <xref:System.ServiceModel.ICommunicationObject> from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state call <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-111">Comienza una operación asincrónica para cerrar un objeto de comunicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-111">Begins an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-112">Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>.</span><span class="sxs-lookup"><span data-stu-id="b992f-112">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span>  
  
 <span data-ttu-id="b992f-113">Se proporcionan las versiones con y sin un tiempo de espera concreto.</span><span class="sxs-lookup"><span data-stu-id="b992f-113">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="b992f-114">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-114">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b992f-115">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-115">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-116">Comienza una operación asincrónica para cerrar un objeto de comunicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-116">Begins an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b992f-117">
            <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-117">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-118">Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente desde cualquier estado, distinto del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>.</span><span class="sxs-lookup"><span data-stu-id="b992f-118">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="b992f-119">El método <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> permite completar cualquier trabajo inacabado antes de devolverse.</span><span class="sxs-lookup"><span data-stu-id="b992f-119">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b992f-120">Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.</span><span class="sxs-lookup"><span data-stu-id="b992f-120">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b992f-121">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-121">
              <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-122">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-122">The default timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b992f-123">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-123">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="b992f-124">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-124">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous close operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b992f-125">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-125">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-126">Comienza una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-126">Begins an asynchronous operation to close a communication object with a specified timeout.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b992f-127">
            <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-127">The <see cref="T:System.IAsyncResult" /> that references the asynchronous close operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-128">Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente de un estado, distinto del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed> en un intervalo de tiempo especificado.</span><span class="sxs-lookup"><span data-stu-id="b992f-128">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from any state, other than the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state with in a specified interval of time.</span></span> <span data-ttu-id="b992f-129">El método <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> permite completar cualquier trabajo inacabado antes de devolverse.</span><span class="sxs-lookup"><span data-stu-id="b992f-129">The <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b992f-130">Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.</span><span class="sxs-lookup"><span data-stu-id="b992f-130">For example, finish sending any buffered messages).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b992f-131">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-131">
              <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-132">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-132">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-133">Comienza una operación asincrónica para cerrar un objeto de comunicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-133">Begins an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-134">El método <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> provoca que un <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que su transición al estado <xref:System.ServiceModel.CommunicationState.Opened> se complete o no se produzca.</span><span class="sxs-lookup"><span data-stu-id="b992f-134">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until its transition to the <xref:System.ServiceModel.CommunicationState.Opened> state is completed or fails.</span></span>  
  
 <span data-ttu-id="b992f-135">Se proporcionan las versiones con y sin un tiempo de espera concreto.</span><span class="sxs-lookup"><span data-stu-id="b992f-135">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="b992f-136">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-136">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b992f-137">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-137">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-138">Comienza una operación asincrónica para abrir un objeto de comunicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-138">Begins an asynchronous operation to open a communication object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b992f-139">
            <see cref="T:System.IAsyncResult" />, que hace referencia a la operación de apertura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-139">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-140">Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>.</span><span class="sxs-lookup"><span data-stu-id="b992f-140">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b992f-141">En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes.</span><span class="sxs-lookup"><span data-stu-id="b992f-141">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b992f-142">El método <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-142">The <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b992f-143">En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.</span><span class="sxs-lookup"><span data-stu-id="b992f-143">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b992f-144">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-144">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-145">El tiempo de espera para la apertura predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-145">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iCommunicationObject.BeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b992f-146">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-146">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="b992f-147">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-147">The <see cref="T:System.AsyncCallback" /> delegate that receives notification of the completion of the asynchronous open operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b992f-148">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-148">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-149">Comienza una operación asincrónica para abrir un objeto de comunicación dentro de un intervalo de tiempo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-149">Begins an asynchronous operation to open a communication object within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b992f-150">
            <see cref="T:System.IAsyncResult" />, que hace referencia a la operación de apertura asincrónica.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-150">The <see cref="T:System.IAsyncResult" /> that references the asynchronous open operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-151">Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>.</span><span class="sxs-lookup"><span data-stu-id="b992f-151">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b992f-152">En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes.</span><span class="sxs-lookup"><span data-stu-id="b992f-152">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b992f-153">El método <xref:System.ServiceModel.ICommunicationObject.Open%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-153">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b992f-154">En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.</span><span class="sxs-lookup"><span data-stu-id="b992f-154">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b992f-155">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-155">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-156">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-156">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b992f-157">La operación debe iniciar un <see cref="T:System.TimeoutException" /> si se supera el parámetro <paramref name="timeout" /> especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b992f-157">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-158">Provoca que un objeto de comunicación pase de su estado actual al estado cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-158">Causes a communication object to transition from its current state into the closed state.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit" Usage="iCommunicationObject.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b992f-159">Provoca que un objeto de comunicación pase de su estado actual al estado cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-159">Causes a communication object to transition from its current state into the closed state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-160">Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>.</span><span class="sxs-lookup"><span data-stu-id="b992f-160">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state.</span></span> <span data-ttu-id="b992f-161">El método <xref:System.ServiceModel.ICommunicationObject.Close%2A> permite completar cualquier trabajo inacabado antes de devolverse.</span><span class="sxs-lookup"><span data-stu-id="b992f-161">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b992f-162">Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.</span><span class="sxs-lookup"><span data-stu-id="b992f-162">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="b992f-163"><xref:System.ServiceModel.ICommunicationObject> introduce el estado <xref:System.ServiceModel.CommunicationState.Closing> y permanece en él hasta que la transición al estado <xref:System.ServiceModel.CommunicationState.Closed> se haya completado.</span><span class="sxs-lookup"><span data-stu-id="b992f-163">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="b992f-164"><xref:System.ServiceModel.ICommunicationObject.Close%2A> se devuelve una vez que se ha alcanzado el estado <xref:System.ServiceModel.CommunicationState.Closed>.</span><span class="sxs-lookup"><span data-stu-id="b992f-164"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="b992f-165">Si el tiempo de espera predeterminado transcurre antes de que <xref:System.ServiceModel.ICommunicationObject> pueda cerrarse correctamente, se anulará <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-165">If the default close timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to close gracefully, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b992f-166">Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening> o <xref:System.ServiceModel.CommunicationState.Faulted>, se anulará <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-166">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span> <span data-ttu-id="b992f-167">Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Closing> o <xref:System.ServiceModel.CommunicationState.Closed>, la llamada se devolverá inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="b992f-167">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="b992f-168">Hay también una versión asincrónica del método de cierre que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b992f-168">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b992f-169">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-169">
              <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-170">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-170">The default close timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Close : TimeSpan -&gt; unit" Usage="iCommunicationObject.Close timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b992f-171">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-171">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-172">Provoca que un objeto de comunicación pase de su estado actual al estado cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-172">Causes a communication object to transition from its current state into the closed state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-173">Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase de forma correcta del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed> dentro de un intervalo especificado de tiempo.</span><span class="sxs-lookup"><span data-stu-id="b992f-173">This method causes an <xref:System.ServiceModel.ICommunicationObject> to gracefully transition from the <xref:System.ServiceModel.CommunicationState.Opened> state to the <xref:System.ServiceModel.CommunicationState.Closed> state within a specified interval of time.</span></span> <span data-ttu-id="b992f-174">El método <xref:System.ServiceModel.ICommunicationObject.Close%2A> permite completar cualquier trabajo inacabado antes de devolverse.</span><span class="sxs-lookup"><span data-stu-id="b992f-174">The <xref:System.ServiceModel.ICommunicationObject.Close%2A> method allows any unfinished work to be completed before returning.</span></span> <span data-ttu-id="b992f-175">Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.</span><span class="sxs-lookup"><span data-stu-id="b992f-175">For example, finish sending any buffered messages).</span></span>  
  
 <span data-ttu-id="b992f-176"><xref:System.ServiceModel.ICommunicationObject> introduce el estado <xref:System.ServiceModel.CommunicationState.Closing> y permanece en él hasta que la transición al estado <xref:System.ServiceModel.CommunicationState.Closed> se haya completado.</span><span class="sxs-lookup"><span data-stu-id="b992f-176">The <xref:System.ServiceModel.ICommunicationObject> enters the <xref:System.ServiceModel.CommunicationState.Closing> state and remains in it until the transition to the <xref:System.ServiceModel.CommunicationState.Closed> state is completed.</span></span>  
  
 <span data-ttu-id="b992f-177"><xref:System.ServiceModel.ICommunicationObject.Close%2A> se devuelve una vez que se ha alcanzado el estado <xref:System.ServiceModel.CommunicationState.Closed>.</span><span class="sxs-lookup"><span data-stu-id="b992f-177"><xref:System.ServiceModel.ICommunicationObject.Close%2A> returns once the <xref:System.ServiceModel.CommunicationState.Closed> state is reached.</span></span>  
  
 <span data-ttu-id="b992f-178">Si el tiempo de espera transcurre antes de que <xref:System.ServiceModel.ICommunicationObject> pueda cerrarse correctamente, se anulará <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-178">If the timeout elapses before the <xref:System.ServiceModel.ICommunicationObject> is able to gracefully close, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b992f-179">Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening> o <xref:System.ServiceModel.CommunicationState.Faulted>, se anulará <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-179">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening>, or <xref:System.ServiceModel.CommunicationState.Faulted> state, the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  <span data-ttu-id="b992f-180">Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Closing> o <xref:System.ServiceModel.CommunicationState.Closed>, la llamada se devolverá inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="b992f-180">If <xref:System.ServiceModel.ICommunicationObject.Close%2A> is called on an <xref:System.ServiceModel.ICommunicationObject> in the <xref:System.ServiceModel.CommunicationState.Closing> or <xref:System.ServiceModel.CommunicationState.Closed> state, the call returns immediately.</span></span>  
  
 <span data-ttu-id="b992f-181">Hay también una versión asincrónica del método de cierre que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="b992f-181">There is also an asynchronous version of the close method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.Close%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b992f-182">Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-182">
              <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-183">El tiempo de espera transcurrido antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-183">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b992f-184">La operación debe iniciar un <see cref="T:System.TimeoutException" /> si se supera el parámetro <paramref name="timeout" /> especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b992f-184">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-185">Se produce cuando el objeto de comunicación completa su transición del estado de cierre al estado cerrado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-185">Occurs when the communication object completes its transition from the closing state into the closed state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : EventHandler " Usage="member this.Closing : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-186">Se produce cuando el objeto de comunicación introduce primero el estado de cierre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-186">Occurs when the communication object first enters the closing state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-187">Este evento se produce cuando el objeto de comunicación comienza primero a pasar del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>, inmediatamente después se invoca el método <xref:System.ServiceModel.ICommunicationObject.Close%2A> o <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>.</span><span class="sxs-lookup"><span data-stu-id="b992f-187">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Opened> state into the <xref:System.ServiceModel.CommunicationState.Closed> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Close%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndClose : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b992f-188">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-188">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-189">Completa una operación asincrónica para cerrar un objeto de comunicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-189">Completes an asynchronous operation to close a communication object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="b992f-190">Se llamó a <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-190">
              <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> was called on an object in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-191">El tiempo de espera transcurrido antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-191">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to close gracefully.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndOpen : IAsyncResult -&gt; unit" Usage="iCommunicationObject.EndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b992f-192">
            <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-192">The <see cref="T:System.IAsyncResult" /> that is returned by a call to the <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-193">Completa una operación asincrónica para abrir un objeto de comunicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-193">Completes an asynchronous operation to open a communication object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b992f-194">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-194">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-195">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-195">The timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberSignature Language="F#" Value="member this.Faulted : EventHandler " Usage="member this.Faulted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-196">Se produce cuando el objeto de comunicación introduce primero el estado de error.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-196">Occurs when the communication object first enters the faulted state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-197">Hace que un objeto de comunicación pase del estado creado al estado abierto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-197">Causes a communication object to transition from the created state into the opened state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-198">Se proporcionan las versiones con y sin un tiempo de espera concreto.</span><span class="sxs-lookup"><span data-stu-id="b992f-198">Versions with and without an explicit timeout are provided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberSignature Language="F#" Value="abstract member Open : unit -&gt; unit" Usage="iCommunicationObject.Open " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b992f-199">Hace que un objeto de comunicación pase del estado creado al estado abierto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-199">Causes a communication object to transition from the created state into the opened state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-200">Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>.</span><span class="sxs-lookup"><span data-stu-id="b992f-200">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b992f-201">En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes.</span><span class="sxs-lookup"><span data-stu-id="b992f-201">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b992f-202">El método <xref:System.ServiceModel.ICommunicationObject.Open%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-202">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b992f-203">En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.</span><span class="sxs-lookup"><span data-stu-id="b992f-203">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="b992f-204">Existe también una versión asincrónica del método de apertura que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="b992f-204">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b992f-205">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-205">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-206">El tiempo de espera para la apertura predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-206">The default open timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Open : TimeSpan -&gt; unit" Usage="iCommunicationObject.Open timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="b992f-207">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-207">The <see cref="T:System.TimeSpan" /> that specifies how long the send operation has to complete before timing out.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b992f-208">Hace que un objeto de comunicación pase del estado creado al estado abierto dentro de un intervalo de tiempo especificado.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-208">Causes a communication object to transition from the created state into the opened state within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-209">Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>.</span><span class="sxs-lookup"><span data-stu-id="b992f-209">When an <xref:System.ServiceModel.ICommunicationObject> is instantiated, it begins in the <xref:System.ServiceModel.CommunicationState.Created> state.</span></span> <span data-ttu-id="b992f-210">En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes.</span><span class="sxs-lookup"><span data-stu-id="b992f-210">In the <xref:System.ServiceModel.CommunicationState.Created> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</span></span> <span data-ttu-id="b992f-211">El método <xref:System.ServiceModel.ICommunicationObject.Open%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.</span><span class="sxs-lookup"><span data-stu-id="b992f-211">The <xref:System.ServiceModel.ICommunicationObject.Open%2A> method causes an <xref:System.ServiceModel.ICommunicationObject> to enter into the <xref:System.ServiceModel.CommunicationState.Opening> state where it remains until the open operation succeeds, the open operation times out or fails and the object becomes faulted, or the <xref:System.ServiceModel.ICommunicationObject> is aborted.</span></span>  
  
 <span data-ttu-id="b992f-212">En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.</span><span class="sxs-lookup"><span data-stu-id="b992f-212">In the <xref:System.ServiceModel.CommunicationState.Opened> state, the <xref:System.ServiceModel.ICommunicationObject> is usable (for example, messages can be received), but it is no longer configurable.</span></span>  
  
 <span data-ttu-id="b992f-213">Existe también una versión asincrónica del método de apertura que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span><span class="sxs-lookup"><span data-stu-id="b992f-213">There is also an asynchronous version of the open method that is initiated by calling <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> and completed by calling <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">
          <span data-ttu-id="b992f-214">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-214">The <see cref="T:System.ServiceModel.ICommunicationObject" /> was unable to be opened and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.TimeoutException">
          <span data-ttu-id="b992f-215">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-215">The specified timeout elapsed before the <see cref="T:System.ServiceModel.ICommunicationObject" /> was able to enter the <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state and has entered the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b992f-216">La operación debe iniciar un <see cref="T:System.TimeoutException" /> si se supera el parámetro <paramref name="timeout" /> especificado.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b992f-216">The operation must throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberSignature Language="F#" Value="member this.Opened : EventHandler " Usage="member this.Opened : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-217">Se produce cuando el objeto de comunicación completa su transición del estado de apertura al estado abierto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-217">Occurs when the communication object completes its transition from the opening state into the opened state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberSignature Language="F#" Value="member this.Opening : EventHandler " Usage="member this.Opening : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-218">Se produce cuando el objeto de comunicación introduce primero el estado de apertura.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-218">Occurs when the communication object first enters the opening state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-219">Este evento se produce cuando el objeto de comunicación comienza primero a pasar del estado <xref:System.ServiceModel.CommunicationState.Created> al estado <xref:System.ServiceModel.CommunicationState.Opened>, inmediatamente después se invoca el método <xref:System.ServiceModel.ICommunicationObject.Open%2A> o <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>.</span><span class="sxs-lookup"><span data-stu-id="b992f-219">This event occurs when the communication object first begins to transition from the <xref:System.ServiceModel.CommunicationState.Created> state into the <xref:System.ServiceModel.CommunicationState.Opened> state, immediately after either the <xref:System.ServiceModel.ICommunicationObject.Open%2A> or <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> method is invoked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberSignature Language="F#" Value="member this.State : System.ServiceModel.CommunicationState" Usage="System.ServiceModel.ICommunicationObject.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b992f-220">Obtiene el estado actual del objeto orientado a la comunicación.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-220">Gets the current state of the communication-oriented object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b992f-221">El valor de <see cref="T:System.ServiceModel.CommunicationState" /> correspondiente al objeto.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b992f-221">The value of the <see cref="T:System.ServiceModel.CommunicationState" /> of the object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b992f-222">Los estados de comunicación principales disponibles para <xref:System.ServiceModel.ICommunicationObject> son:</span><span class="sxs-lookup"><span data-stu-id="b992f-222">The main communication states available to an <xref:System.ServiceModel.ICommunicationObject> are:</span></span>  
  
-   <span data-ttu-id="b992f-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span><span class="sxs-lookup"><span data-stu-id="b992f-223"><xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened></span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 <span data-ttu-id="b992f-224">Existen también estados transitorios que este tipo de objeto puede ocupar cuando se produce la transición entre los tres primeros estados principales:</span><span class="sxs-lookup"><span data-stu-id="b992f-224">There are also transitory states that such an object can occupy when transitioning between the first three main states:</span></span>  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 <span data-ttu-id="b992f-225"><xref:System.ServiceModel.CommunicationState> define los estados que son válidos para todos los objetos orientados a la comunicación en el sistema, incluidos los canales, agentes de escucha, generadores de canales y de agentes de escuchas y la clase <xref:System.ServiceModel.ServiceHost>.</span><span class="sxs-lookup"><span data-stu-id="b992f-225">This <xref:System.ServiceModel.CommunicationState> defines the states that are valid for all communication-oriented objects in the system, including channels, listeners, the channel and listener factories, and the <xref:System.ServiceModel.ServiceHost> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>