<Type Name="ICommunicationObject" FullName="System.ServiceModel.ICommunicationObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="864e880f75f69ec7b5b1eaad2fa2a42f3c1377ea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30520339" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define el contrato para la máquina de estados básicos para todos los objetos orientados a la comunicación en el sistema, incluidos los canales, administradores de canales, generadores, agentes de escucha, distribuidores y hosts de servicio.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La interfaz <xref:System.ServiceModel.ICommunicationObject> define:  
  
-   Un conjunto de métodos abiertos, cerrados y anulados para iniciar las transiciones de estado:  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Open%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Close%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Abort%2A>  
  
-   Versiones asincrónicas de los métodos abiertos y cerrados:  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.EndClose%2A>  
  
-   Un conjunto de eventos que proporcionan notificaciones de las transiciones de estado:  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opening>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Opened>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closing>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Closed>  
  
    -   <xref:System.ServiceModel.ICommunicationObject.Faulted>  
  
-   Una propiedad <xref:System.ServiceModel.ICommunicationObject.State%2A> común para inspeccionar el estado de un objeto  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Abort">
      <MemberSignature Language="C#" Value="public void Abort ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Abort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Abort" />
      <MemberSignature Language="VB.NET" Value="Public Sub Abort ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Abort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que un objeto de comunicación pase inmediatamente de su estado actual al estado cerrado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método indica que se debería omitir o terminar de forma discreta cualquier trabajo inacabado antes de devolverse. El método <xref:System.ServiceModel.ICommunicationObject.Abort%2A> se puede usar para cancelar cualquier operación pendiente, incluidas las llamadas pendientes a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 Para pasar de forma correcta un <xref:System.ServiceModel.ICommunicationObject> del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>, llame a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginClose">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>.  
  
 Se proporcionan las versiones con y sin un tiempo de espera concreto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
        <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
        <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente desde cualquier estado, distinto del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>. El método <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> permite completar cualquier trabajo inacabado antes de devolverse. Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginClose">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
        <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de cierre asincrónica.</param>
        <param name="state">Objeto, especificado por la aplicación, que contiene la información de estado asociada a la operación de cierre asincrónica.</param>
        <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación con un tiempo de espera especificado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" /> que hace referencia a la operación de cierre asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente de un estado, distinto del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed> en un intervalo de tiempo especificado. El método <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> permite completar cualquier trabajo inacabado antes de devolverse. Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginOpen">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Comienza una operación asincrónica para cerrar un objeto de comunicación.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El método <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> provoca que un <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que su transición al estado <xref:System.ServiceModel.CommunicationState.Opened> se complete o no se produzca.  
  
 Se proporcionan las versiones con y sin un tiempo de espera concreto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
        <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
        <summary>Comienza una operación asincrónica para abrir un objeto de comunicación.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" />, que hace referencia a la operación de apertura asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>. En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes. El método <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.  
  
 En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera para la apertura predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginOpen">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
        <param name="callback">Delegado de <see cref="T:System.AsyncCallback" /> que recibe la notificación de la finalización de la operación de apertura asincrónica.</param>
        <param name="state">Un objeto, especificado por la aplicación, que contiene información de estado asociada a la operación de apertura asincrónica.</param>
        <summary>Comienza una operación asincrónica para abrir un objeto de comunicación dentro de un intervalo de tiempo especificado.</summary>
        <returns>
          <see cref="T:System.IAsyncResult" />, que hace referencia a la operación de apertura asincrónica.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>. En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes. El método <xref:System.ServiceModel.ICommunicationObject.Open%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.  
  
 En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <block subset="none" type="overrides">
          <para>La operación debe iniciar un <see cref="T:System.TimeoutException" /> si se supera el parámetro <paramref name="timeout" /> especificado.</para>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="Close">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Provoca que un objeto de comunicación pase de su estado actual al estado cerrado.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Provoca que un objeto de comunicación pase de su estado actual al estado cerrado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase correctamente del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>. El método <xref:System.ServiceModel.ICommunicationObject.Close%2A> permite completar cualquier trabajo inacabado antes de devolverse. Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.  
  
 <xref:System.ServiceModel.ICommunicationObject> introduce el estado <xref:System.ServiceModel.CommunicationState.Closing> y permanece en él hasta que la transición al estado <xref:System.ServiceModel.CommunicationState.Closed> se haya completado.  
  
 <xref:System.ServiceModel.ICommunicationObject.Close%2A> se devuelve una vez que se ha alcanzado el estado <xref:System.ServiceModel.CommunicationState.Closed>.  
  
 Si el tiempo de espera predeterminado transcurre antes de que <xref:System.ServiceModel.ICommunicationObject> pueda cerrarse correctamente, se anulará <xref:System.ServiceModel.ICommunicationObject>.  
  
 Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening> o <xref:System.ServiceModel.CommunicationState.Faulted>, se anulará <xref:System.ServiceModel.ICommunicationObject>. Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Closing> o <xref:System.ServiceModel.CommunicationState.Closed>, la llamada se devolverá inmediatamente.  
  
 Hay también una versión asincrónica del método de cierre que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
        <summary>Provoca que un objeto de comunicación pase de su estado actual al estado cerrado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este método provoca que <xref:System.ServiceModel.ICommunicationObject> pase de forma correcta del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed> dentro de un intervalo especificado de tiempo. El método <xref:System.ServiceModel.ICommunicationObject.Close%2A> permite completar cualquier trabajo inacabado antes de devolverse. Por ejemplo, terminar de enviar cualquier mensaje almacenado en búfer.  
  
 <xref:System.ServiceModel.ICommunicationObject> introduce el estado <xref:System.ServiceModel.CommunicationState.Closing> y permanece en él hasta que la transición al estado <xref:System.ServiceModel.CommunicationState.Closed> se haya completado.  
  
 <xref:System.ServiceModel.ICommunicationObject.Close%2A> se devuelve una vez que se ha alcanzado el estado <xref:System.ServiceModel.CommunicationState.Closed>.  
  
 Si el tiempo de espera transcurre antes de que <xref:System.ServiceModel.ICommunicationObject> pueda cerrarse correctamente, se anulará <xref:System.ServiceModel.ICommunicationObject>.  
  
 Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Created>, <xref:System.ServiceModel.CommunicationState.Opening> o <xref:System.ServiceModel.CommunicationState.Faulted>, se anulará <xref:System.ServiceModel.ICommunicationObject>.  Si se llama a <xref:System.ServiceModel.ICommunicationObject.Close%2A> en un <xref:System.ServiceModel.ICommunicationObject> en el estado <xref:System.ServiceModel.CommunicationState.Closing> o <xref:System.ServiceModel.CommunicationState.Closed>, la llamada se devolverá inmediatamente.  
  
 Hay también una versión asincrónica del método de cierre que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.Close%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          Se llamó a <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera transcurrido antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
        <block subset="none" type="overrides">
          <para>La operación debe iniciar un <see cref="T:System.TimeoutException" /> si se supera el parámetro <paramref name="timeout" /> especificado.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closed" />
      <MemberSignature Language="VB.NET" Value="Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el objeto de comunicación completa su transición del estado de cierre al estado cerrado.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="event EventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Closing" />
      <MemberSignature Language="VB.NET" Value="Event Closing As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closing;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el objeto de comunicación introduce primero el estado de cierre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se produce cuando el objeto de comunicación comienza primero a pasar del estado <xref:System.ServiceModel.CommunicationState.Opened> al estado <xref:System.ServiceModel.CommunicationState.Closed>, inmediatamente después se invoca el método <xref:System.ServiceModel.ICommunicationObject.Close%2A> o <xref:System.ServiceModel.ICommunicationObject.BeginClose%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndClose">
      <MemberSignature Language="C#" Value="public void EndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndClose(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" />.</param>
        <summary>Completa una operación asincrónica para cerrar un objeto de comunicación.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          Se llamó a <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginClose" /> en un objeto con el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera transcurrido antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera cerrarse correctamente.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndOpen">
      <MemberSignature Language="C#" Value="public void EndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.EndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndOpen(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <see cref="T:System.IAsyncResult" /> que se devuelve al llamar al método <see cref="Overload:System.ServiceModel.ICommunicationObject.BeginOpen" />.</param>
        <summary>Completa una operación asincrónica para abrir un objeto de comunicación.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Faulted">
      <MemberSignature Language="C#" Value="event EventHandler Faulted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Faulted" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Faulted" />
      <MemberSignature Language="VB.NET" Value="Event Faulted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Faulted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el objeto de comunicación introduce primero el estado de error.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Open">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se proporcionan las versiones con y sin un tiempo de espera concreto.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>. En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes. El método <xref:System.ServiceModel.ICommunicationObject.Open%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.  
  
 En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.  
  
 Existe también una versión asincrónica del método de apertura que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera para la apertura predeterminado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public void Open (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Open(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.ICommunicationObject.Open(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Open (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Open(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">El objeto <see cref="T:System.TimeSpan" /> que especifica el tiempo con el que cuenta la operación de envío para completarse antes de que se agote el tiempo de espera.</param>
        <summary>Hace que un objeto de comunicación pase del estado creado al estado abierto dentro de un intervalo de tiempo especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando se crea una instancia de <xref:System.ServiceModel.ICommunicationObject>, comienza en el estado <xref:System.ServiceModel.CommunicationState.Created>. En el estado <xref:System.ServiceModel.CommunicationState.Created>, el objeto se puede configurar (por ejemplo, se pueden establecer las propiedades o registrar los eventos), pero no se puede usar todavía para enviar o recibir mensajes. El método <xref:System.ServiceModel.ICommunicationObject.Open%2A> hace que <xref:System.ServiceModel.ICommunicationObject> pase al estado <xref:System.ServiceModel.CommunicationState.Opening> donde permanecerá hasta que la operación de apertura se realice correctamente, se agote el tiempo de espera de la operación de apertura y el objeto genere un error o se anule <xref:System.ServiceModel.ICommunicationObject>.  
  
 En el estado <xref:System.ServiceModel.CommunicationState.Opened>, se puede utilizar <xref:System.ServiceModel.ICommunicationObject> (por ejemplo, se pueden recibir los mensajes), pero ya no se pueden configurar.  
  
 Existe también una versión asincrónica del método de apertura que se inicia llamando a <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A> y se completa llamando a <xref:System.ServiceModel.ICommunicationObject.EndOpen%28System.IAsyncResult%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ServiceModel.CommunicationException">El <see cref="T:System.ServiceModel.ICommunicationObject" /> no pudo abrirse y ha entrado en el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <exception cref="T:System.TimeoutException">El tiempo de espera especificado transcurrió antes de que <see cref="T:System.ServiceModel.ICommunicationObject" /> pudiera introducir el estado <see cref="F:System.ServiceModel.CommunicationState.Opened" /> y ha introducido el estado <see cref="F:System.ServiceModel.CommunicationState.Faulted" />.</exception>
        <block subset="none" type="overrides">
          <para>La operación debe iniciar un <see cref="T:System.TimeoutException" /> si se supera el parámetro <paramref name="timeout" /> especificado.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Opened">
      <MemberSignature Language="C#" Value="event EventHandler Opened;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opened" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opened" />
      <MemberSignature Language="VB.NET" Value="Event Opened As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opened;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el objeto de comunicación completa su transición del estado de apertura al estado abierto.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Opening">
      <MemberSignature Language="C#" Value="event EventHandler Opening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Opening" />
      <MemberSignature Language="DocId" Value="E:System.ServiceModel.ICommunicationObject.Opening" />
      <MemberSignature Language="VB.NET" Value="Event Opening As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Opening;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produce cuando el objeto de comunicación introduce primero el estado de apertura.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este evento se produce cuando el objeto de comunicación comienza primero a pasar del estado <xref:System.ServiceModel.CommunicationState.Created> al estado <xref:System.ServiceModel.CommunicationState.Opened>, inmediatamente después se invoca el método <xref:System.ServiceModel.ICommunicationObject.Open%2A> o <xref:System.ServiceModel.ICommunicationObject.BeginOpen%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public System.ServiceModel.CommunicationState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.CommunicationState State" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.ICommunicationObject.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As CommunicationState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::CommunicationState State { System::ServiceModel::CommunicationState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.CommunicationState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el estado actual del objeto orientado a la comunicación.</summary>
        <value>El valor de <see cref="T:System.ServiceModel.CommunicationState" /> correspondiente al objeto.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Los estados de comunicación principales disponibles para <xref:System.ServiceModel.ICommunicationObject> son:  
  
-   <xref:System.ServiceModel.CommunicationState.Created> <xref:System.ServiceModel.CommunicationState.Opened>  
  
-   <xref:System.ServiceModel.CommunicationState.Closed>  
  
-   <xref:System.ServiceModel.CommunicationState.Faulted>  
  
 Existen también estados transitorios que este tipo de objeto puede ocupar cuando se produce la transición entre los tres primeros estados principales:  
  
-   <xref:System.ServiceModel.CommunicationState.Opening>  
  
-   <xref:System.ServiceModel.CommunicationState.Closing>  
  
 <xref:System.ServiceModel.CommunicationState> define los estados que son válidos para todos los objetos orientados a la comunicación en el sistema, incluidos los canales, agentes de escucha, generadores de canales y de agentes de escuchas y la clase <xref:System.ServiceModel.ServiceHost>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>