<Type Name="OperationContextScope" FullName="System.ServiceModel.OperationContextScope">
  <Metadata><Meta Name="ms.openlocfilehash" Value="109260e41899323b36fa66fd9054ab04203b7107" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56783417" /></Metadata><TypeSignature Language="C#" Value="public sealed class OperationContextScope : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OperationContextScope extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.OperationContextScope" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OperationContextScope&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class OperationContextScope sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type OperationContextScope = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Crea un bloque dentro del cual un objeto <see cref="T:System.ServiceModel.OperationContext" /> se encontrará dentro del ámbito.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice la clase <xref:System.ServiceModel.OperationContextScope> para crear un ámbito para un objeto <xref:System.ServiceModel.OperationContext> concreto o un ámbito para un nuevo objeto <xref:System.ServiceModel.OperationContext> utilizando un objeto <xref:System.ServiceModel.IContextChannel> especificado. Un <xref:System.ServiceModel.OperationContextScope> puede usarse en un servicio de Windows Communication Foundation (WCF) o una aplicación cliente de WCF.  
  
 Cuando el objeto <xref:System.ServiceModel.OperationContextScope> ha establecido el contexto de la operación actual, puede utilizar <xref:System.ServiceModel.OperationContext> para:  
  
-   Acceder y modificar los encabezados de mensajes entrantes y salientes y demás propiedades.  
  
-   Tener acceso al tiempo de ejecución, incluidos los distribuidores, el host, el canal y las extensiones.  
  
-   Tener acceso a otros tipos de contextos, como la seguridad, la instancia y los contextos de la solicitud.  
  
-   Tener acceso al canal asociado al objeto <xref:System.ServiceModel.OperationContext> o (si el canal implementa <xref:System.ServiceModel.Channels.ISession?displayProperty=nameWithType>) el identificador de sesión del canal asociado.  
  
 Cuando se crea <xref:System.ServiceModel.OperationContextScope>, el <xref:System.ServiceModel.OperationContext> actual está almacenado y el nuevo <xref:System.ServiceModel.OperationContext> será el que devuelva la propiedad <xref:System.ServiceModel.OperationContext.Current%2A>. Cuando se dispone <xref:System.ServiceModel.OperationContextScope>, se restaura el <xref:System.ServiceModel.OperationContext> original.  
  
> [!WARNING]
>  No use el patrón asincrónico "await" dentro de un bloque de OperationContextScope. Cuando se produce la continuación, se puede ejecutar en un subproceso diferente y OperationContextScope es específico del subproceso. Si necesita llamar a "await" para una llamada asincrónica, puede usar fuera del bloque de OperationContextScope.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo utilizar <xref:System.ServiceModel.OperationContextScope> para crear un nuevo contexto en una aplicación cliente con objeto de agregar un encabezado personalizado al mensaje saliente.  
  
 [!code-csharp[OperationContextScope#3](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#3)]
 [!code-vb[OperationContextScope#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.IContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.IContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.IContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (channel As IContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::IContextChannel ^ channel);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.IContextChannel -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope channel" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel">El canal que usar para crear el ámbito para un nuevo <see cref="T:System.ServiceModel.OperationContext" />.</param>
        <summary>Inicializa un nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContextScope" /> que utiliza el <see cref="T:System.ServiceModel.IContextChannel" /> especificado para crear un nuevo <see cref="T:System.ServiceModel.OperationContext" /> para el ámbito.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el constructor <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> para crear un nuevo <xref:System.ServiceModel.OperationContext> para un canal de cliente que se puede usar para agregar o modificar los encabezados de mensajes salientes, leer los encabezados de mensajes entrantes o tener acceso a otras propiedades del tiempo de ejecución de <xref:System.ServiceModel.OperationContext>.  
  
 Los encabezados agregados a la propiedad <xref:System.ServiceModel.OperationContext.IncomingMessageHeaders%2A?displayProperty=nameWithType> del <xref:System.ServiceModel.OperationContext> que se acaba de crear sólo se aplican al canal que se pasó al constructor <xref:System.ServiceModel.OperationContextScope.%23ctor%2A>. Si el usuario crea a continuación un nuevo canal dentro de su ámbito, los encabezados no se aplicarán a los mensajes enviados al nuevo canal.  
  
   
  
## Examples  
 El ejemplo siguiente muestra cómo utilizar <xref:System.ServiceModel.OperationContextScope> para crear un nuevo contexto en una aplicación cliente con objeto de agregar un encabezado personalizado al mensaje saliente.  
  
 [!code-csharp[OperationContextScope#4](~/samples/snippets/csharp/VS_Snippets_CFX/operationcontextscope/cs/client.cs#4)]
 [!code-vb[OperationContextScope#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/operationcontextscope/vb/client.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OperationContextScope (System.ServiceModel.OperationContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.OperationContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.#ctor(System.ServiceModel.OperationContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As OperationContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OperationContextScope(System::ServiceModel::OperationContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.OperationContextScope : System.ServiceModel.OperationContext -&gt; System.ServiceModel.OperationContextScope" Usage="new System.ServiceModel.OperationContextScope context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.OperationContext" />
      </Parameters>
      <Docs>
        <param name="context">El <see cref="T:System.ServiceModel.OperationContext" /> activo en el ámbito creado.</param>
        <summary>Inicializa un nueva instancia de la clase <see cref="T:System.ServiceModel.OperationContextScope" /> para crear un ámbito para el objeto <see cref="T:System.ServiceModel.OperationContext" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice el constructor <xref:System.ServiceModel.OperationContextScope.%23ctor%2A> para crear un bloque de código dentro del cual el objeto <xref:System.ServiceModel.OperationContextScope> especificado es el ámbito actual.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.OperationContextScope.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="operationContextScope.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restaura el <see cref="T:System.ServiceModel.OperationContext" /> original al contexto activo y recicla el objeto <see cref="T:System.ServiceModel.OperationContextScope" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>