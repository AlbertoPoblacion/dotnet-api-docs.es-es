<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ChannelFactory.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b0c019732636ba8d785451859fcce5953a995955.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b0c019732636ba8d785451859fcce5953a995955</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Creates and manages the channels that are used by clients to send messages to service endpoints.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Channel factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> interface and their associated channels are generally used by the initiators of a communication pattern.</source>
          <target state="translated">Los iniciadores de un modelo de la comunicación utilizan generalmente los generadores de canales que implementan la interfaz <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> y sus canales asociados.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Listener factories that implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> interface and their associated listeners provide the mechanisms with which channels are accepted for communications.</source>
          <target state="translated">Los generadores de agente de escucha que implementan la interfaz <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> y sus agentes de escucha asociados proporcionan los mecanismos con los que se aceptan canales para las comunicaciones.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>This class is not part of the channel model, but of the service model.</source>
          <target state="translated">Esta clase no forma parte del modelo del canal, sino del modelo del servicio.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> method provides the means to create an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> for a service endpoint.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.CreateFactory%2A&gt;</ph> proporciona los recursos para crear <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> para un extremo de servicio.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Use it to construct a client that hooks up to an interface contract on the service without using metadata or policy.</source>
          <target state="translated">Utilícelo para construir un cliente que enlaza hasta un contrato de interfaz en el servicio sin utilizar metadatos ni directiva.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated">Establecer <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> en <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> siempre produce un inicio de sesión anónimo independientemente del nivel de suplantación.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">Nota especial para los usuarios de C++ que deriven de esta clase:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">Coloque su código de limpieza en (On)(Begin)Close (y/o OnAbort), no en un destructor.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid destructors; they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">Evite los destructores; hacen que el compilador genere automáticamente <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid non-reference members; they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">Evite los miembros sin referencia; pueden hacer que el compilador genere automáticamente <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>Avoid using a finalizer; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">Evite los finalizadores; pero si incluye uno, debería suprimir la advertencia de creación y llamar a <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> y al propio finalizador de (On)(Begin)Close (y/o OnAbort) para emular lo que habría sido el comportamiento de <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> generado automáticamente.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>When adding behaviors programmatically, the behavior is added to the appropriate <ph id="ph1">`Behaviors`</ph> property on the <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> prior to the creation of any channel.</source>
          <target state="translated">Al agregar los comportamientos mediante programación, el comportamiento se agrega a la propiedad <ph id="ph1">`Behaviors`</ph> la adecuada en <ph id="ph2">&lt;xref:System.ServiceModel.ChannelFactory&gt;</ph> antes de la creación de cualquier canal.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>See the example section for a code sample.</source>
          <target state="translated">Vea la sección de ejemplo para obtener una muestra de código.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>The following code example shows how to insert programmatically a client behavior prior to the creation of the channel object by the factory.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo insertar mediante programación un comportamiento de cliente antes de la creación del objeto del canal por parte del generador.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.ChannelFactory" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The name of the configuration file.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Initializes the channel factory with the behaviors provided by a specified configuration file and with those in the service endpoint of the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If <ph id="ph1">`configurationName`</ph> is <ph id="ph2">`null`</ph>, only the behaviors specified in the service endpoint are loaded.</source>
          <target state="translated">Si <ph id="ph1">`configurationName`</ph> es <ph id="ph2">`null`</ph>, se cargan sólo los comportamientos especificados en el extremo de servicio.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>If the wildcard, "*", is used, any endpoint configuration in the client configuration file is used, but only if there is precisely one.</source>
          <target state="translated">Si se utiliza el carácter comodín, "*", se utiliza cualquier configuración del extremo en el archivo de configuración del cliente, pero solo si hay precisamente uno.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Otherwise an exception is thrown.</source>
          <target state="translated">De lo contrario, se produce una excepción.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>Any other value for the <ph id="ph1">`configurationName`</ph>, including the empty string "", matches the endpoint configuration with the same name.</source>
          <target state="translated">Cualquier otro valor para <ph id="ph1">`configurationName`</ph>, incluso la cadena vacía" ", coincide con la configuración del extremo con el mismo nombre.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>See the <bpt id="p1">[</bpt>WCF Client Configuration<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept> topic for a discussion of the client configuration.</source>
          <target state="translated">Consulte la <bpt id="p1">[</bpt>configuración de cliente de WCF<ept id="p1">](~/docs/framework/wcf/feature-details/client-configuration.md)</ept> tema para obtener una descripción de la configuración del cliente.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.ApplyConfiguration(System.String)">
          <source>The service endpoint of the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>When implemented in a derived class, creates a description of the service endpoint associated with the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateDescription">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> associated with the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>Builds the channel factory for the current endpoint of the factory.</source>
          
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>An <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory" /&gt;</ph> for the endpoint of the current factory.</source>
          
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.CreateFactory">
          <source>The endpoint of the service that the factory channels connect to is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or the endpoint's binding is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is missing the element with the configuration name specified.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Gets the credentials used by clients to communicate a service endpoint over the channels produced by the factory.</source>
          
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> used by clients if they are configured for the factory or if the endpoint is non-<ph id="ph2">&lt;see langword="null" /&gt;</ph> and is in either the created or opening communication state; otherwise <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> utilizado por los clientes si se han configurado para el generador o si el extremo es no <ph id="ph2">&lt;see langword="null" /&gt;</ph> y está en estado de comunicación creado o de apertura; de lo contrario <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> está almacenado como tipo de comportamiento del extremo y se puede acceder a través de la propiedad <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> method initializes a read-only copy of the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object for the factory.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnOpened%2A&gt;</ph> inicializa una copia de solo lectura del objeto <ph id="ph2">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> para el generador.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is used by the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> class (or a class that derives from this class) to create the proxy objects that can call services.</source>
          <target state="translated">La clase  <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> (o una clase que deriva de esta clase) utiliza el objeto <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601&gt;</ph> para crear los objetos proxy que pueden llamar a los servicios.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is also accessible through the <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph> property.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> también es accesible a través de la propiedad <ph id="ph2">&lt;xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Credentials">
          <source>Setting <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> to <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> always results in an anonymous logon regardless of impersonation level.</source>
          <target state="translated">Establecer <ph id="ph1">`ChannelFactory.Credentials.Windows.AllowedImpersonationLevel`</ph> en <ph id="ph2">`TokenImpersonationLevel.Anonymous`</ph> siempre produce un inicio de sesión anónimo independientemente del nivel de suplantación.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default interval of time provided for a close operation to complete.</source>
          
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Timespan" /&gt;</ph> predeterminado que especifica el tiempo con el que cuenta la operación de cierre para completarse antes de que se agote el tiempo de espera.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Gets the default service model close time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Obtiene el tiempo de espera de cierre del ejemplo de servicio predeterminado si tanto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> como <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> son <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>The default value for the service model close time-out is 1 minute.</source>
          <target state="translated">El valor predeterminado para el tiempo de espera de cierre del ejemplo de servicio es 1 minuto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultCloseTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">De lo contrario, el valor se establece en el valor <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.CloseTimeout%2A&gt;</ph> asociado con <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default interval of time provided for an open operation to complete.</source>
          
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> predeterminado que especifica el tiempo con el que cuenta la operación de apertura para completarse antes de que se agote el tiempo de espera.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Gets the default service model open time-out if both the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> are <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Obtiene el tiempo de espera de apertura del ejemplo de servicio predeterminado si tanto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph> como <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Binding%2A&gt;</ph> son <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>The default value for the service model open time-out is 1 minute.</source>
          <target state="translated">El valor predeterminado para el tiempo de espera de apertura del ejemplo de servicio es 1 minuto.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.DefaultOpenTimeout">
          <source>Otherwise, the value is set to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph> value associated with the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</source>
          <target state="translated">De lo contrario, el valor se establece en el valor <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Binding.OpenTimeout%2A&gt;</ph> asociado con <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>Gets the service endpoint to which the channels produced by the factory connect.</source>
          
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.ChannelFactory.Endpoint">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to which the channels produced by the factory connect.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> al que se conectan los canales producidos por el generador.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Opens the current channel factory if it is not yet opened.</source>
          
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>Before opening the channel factory, checks that it is not <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph>, or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</source>
          <target state="translated">Antes de abrir el generador de canales, comprueba que no es <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> o <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.EnsureOpened">
          <source>The current factory is either closing or closed and so cannot be opened.</source>
          
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">El objeto con tipo que está consultando el método.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Returns the typed object requested, if present, from the appropriate layer in the channel stack, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if not present.</source>
          
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>Use this to retrieve capabilities, requirements and parameters from the channel stack.</source>
          <target state="translated">Utilice esto para recuperar funciones, requisitos y parámetros de la pila del canal.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If a channel factory supports returning the requested object, it returns it.</source>
          <target state="translated">Si un generador del canal admite la devolución del objeto solicitado, lo devuelve.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If not, it delegates the call down to the next level in the stack.</source>
          <target state="translated">Si no, delega la llamada al nivel siguiente de la pila.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If it gets to the bottom of the stack and no channel factory supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si se llega a la parte inferior de la pila y ningún generador de canales admite el objeto solicitado, el método devuelve <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source><ph id="ph1">`T`</ph> is typically some channel interface that the channel factory can support.</source>
          <target state="translated"><ph id="ph1">`T`</ph> es normalmente alguna interfaz de canal que el generador de canales puede admitir.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.GetProperty``1">
          <source>If, for example, <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph> is called on a duplex channel factory, it returns the underlying listener.</source>
          <target state="translated">Por ejemplo, si se llama a <ph id="ph1">`GetProperty&lt;IChannelListener&gt;`</ph> en un generador de canales dúplex, devuelve el agente de escucha subyacente.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.ChannelFactory">
          <source>Initializes the service endpoint of the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.ChannelFactory">
          <source>You must have an address to initialize an endpoint, but can have just the binding or configuration instead of the full endpoint.</source>
          <target state="translated">Debe tener una dirección para inicializar un punto de conexión, pero puede tener solo el enlace o la configuración en lugar del punto de conexión completo.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ServiceEndpoint" /&gt;</ph> to initialize the channel factory with.</source>
          
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Initializes the service endpoint of the channel factory with a specified endpoint.</source>
          
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> si tiene sólo el enlace.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> si tiene la configuración.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Description.ServiceEndpoint)">
          <source><ph id="ph1">&lt;paramref name="endpoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Binding" /&gt;</ph> with which to initialize the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.EndpointAddress" /&gt;</ph> with which to initialize the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified binding and address.</source>
          
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.ServiceModel.Channels.Binding,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have the configuration.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.String%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> si tiene la configuración.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>The name of the configuration file used to initialize the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Initializes the service endpoint of the channel factory with a specified address and configuration.</source>
          
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.InitializeEndpoint(System.String,System.ServiceModel.EndpointAddress)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> if you have just the binding.</source>
          <target state="translated">Utilice <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.InitializeEndpoint%28System.ServiceModel.Channels.Binding%2CSystem.ServiceModel.EndpointAddress%29&gt;</ph> si tiene sólo el enlace.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>Terminates the inner channel factory of the current channel factory.</source>
          
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnAbort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> method is called on a factory after it transitions to the closing state if the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method is invoked.</source>
          <target state="translated">Se llama al método <ph id="ph1">&lt;xref:System.ServiceModel.ChannelFactory.OnAbort%2A&gt;</ph> en un generador después de que pase a estado de cierre si se invoca el método <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous close operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Este método recibe una notificación, mediante una devolución de llamada, de la identidad del controlador de eventos de la operación.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous close on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">La operación no ha finalizado hasta que regrese del cierre asincrónico del generador de canales interno o que expire.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous operation completion.</source>
          
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous operation.</source>
          
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous open operation on the inner channel factory of the current channel factory that has a state object associated with it.</source>
          
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous operation.</source>
          
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Este método recibe una notificación, mediante una devolución de llamada, de la identidad del controlador de eventos de la operación.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the asynchronous open on the inner channel factory returns or the time-out occurs.</source>
          <target state="translated">La operación no ha finalizado hasta que regrese de la apertura asincrónica del generador de canales interno o que expire.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the operation has to complete before timing out.</source>
          
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnClose(System.TimeSpan)">
          <source>Calls close on the inner channel factory with a specified time-out for the completion of the operation.</source>
          
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous close operation on the inner channel factory of the current channel factory.</source>
          
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.ChannelFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous open operation on the inner channel factory of the current channel factory.</source>
          
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>Calls open on the inner channel factory of the current channel factory with a specified time-out for the completion of the operation.</source>
          
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpen(System.TimeSpan)">
          <source>The inner channel of the current channel is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Initializes a read-only copy of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Description.ClientCredentials" /&gt;</ph> object for the channel factory.</source>
          
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>Overrides and invokes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method, which is called during the transition of an object into the opened state.</source>
          <target state="translated">Invalida e invoca el método <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>, al que se llama durante la transición de un objeto en el estado abierto.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.ChannelFactory.OnOpened">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> object is stored as a type of endpoint behavior and can be accessed through the <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph> property.</source>
          <target state="translated">El objeto <ph id="ph1">&lt;xref:System.ServiceModel.Description.ClientCredentials&gt;</ph> está almacenado como tipo de comportamiento del extremo y se puede acceder a través de la propiedad <ph id="ph2">&lt;xref:System.ServiceModel.Description.ServiceEndpoint.Behaviors%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>Builds the inner channel factory for the current channel.</source>
          
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.OnOpening">
          <source>The inner channel factory for the channel factory is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.ChannelFactory.System#IDisposable#Dispose">
          <source>Closes the current channel factory.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>