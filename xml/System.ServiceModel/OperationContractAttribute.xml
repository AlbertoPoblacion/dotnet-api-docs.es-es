<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="OperationContractAttribute.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b7224d299999e4ff11d9e24a5dd7f0e8c01a8576bfe.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">24d299999e4ff11d9e24a5dd7f0e8c01a8576bfe</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Indicates that a method defines an operation that is part of a service contract in a Windows Communication Foundation (WCF) application.</source>
          <target state="translated">Indica que un método define una operación que forma parte de un contrato de servicio en una aplicación Windows Communication Foundation (WCF).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> to a method to indicate that the method implements a service operation as part of a service contract (specified by a <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph> attribute).</source>
          <target state="translated">Aplique <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> a un método para indicar que el método implementa una operación de servicio como parte de un contrato de servicio (especificado por un atributo <ph id="ph2">&lt;xref:System.ServiceModel.ServiceContractAttribute&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> properties to control the structure of the operation and the values expressed in metadata:</source>
          <target state="translated">Use las propiedades <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> para controlar la estructura de la operación y los valores expresados en metadatos:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property specifies the action that uniquely identifies this operation.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> especifica la acción que identifica de forma unívoca esta operación.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>WCF dispatches request messages to methods based on their action.</source>
          <target state="translated">WCF envía los mensajes de solicitud a métodos basados en su acción.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property indicates that the operation is implemented or can be called asynchronously using a Begin/End method pair.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> indica que la operación se implementa o se puede llamar de forma asincrónica utilizando un par de métodos Begin/End.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> property indicates whether the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property has been explicitly set.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> indica si se ha definido de forma explícita la propiedad <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property indicates that the operation only consists of a single input message.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> indica que la operación solo consiste en un mensaje de entrada.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The operation has no associated output message.</source>
          <target state="translated">La operación no tiene ningún mensaje de salida asociado.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property specifies whether this operation can be the initial operation in a session.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> especifica si esta operación puede ser la operación inicial en una sesión.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property specifies whether WCF attempts to terminate the current session after the operation completes.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> propiedad especifica si los intentos de WCF finalizar la sesión actual cuando se complete la operación.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property specifies the message-level security that an operation requires at run time.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> especifica la seguridad del nivel de mensaje que una operación necesita en el tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> property specifies the action of the reply message for the operation.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> especifica la acción del mensaje de respuesta para la operación.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> attribute declares that a method is an operation in a service contract.</source>
          <target state="translated">El atributo <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> declara que un método es una operación en un contrato de servicio.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Only methods attributed with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> are exposed as service operations.</source>
          <target state="translated">Solo los métodos atribuidos a <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> se exponen como operaciones de servicio.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>A service contract without any methods marked with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> exposes no operations.</source>
          <target state="translated">Un contrato de servicio sin métodos marcado con <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute&gt;</ph> no expone ninguna operación.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property indicates that a pair of <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; and <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; methods form a single operation implemented asynchronously (whether on the client or the service).</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> propiedad indica que un par de <ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; y <ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; métodos forman una sola operación implementada de forma asincrónica (ya sea en el cliente o el servicio).</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The ability of a service to implement operations asynchronously is a service implementation detail and is not exposed in metadata (such as Web Services Description Language (WSDL)).</source>
          <target state="translated">La capacidad de un servicio de implementar operaciones de forma asincrónica es un detalle de implementación de servicio y no está expuesto en metadatos (como el Lenguaje de descripción de servicios Web [WSDL]).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Similarly, clients can choose to invoke operations asynchronously independent of how the service method is implemented.</source>
          <target state="translated">De igual forma, los clientes pueden decidir invocar de forma asincrónica las operaciones independientemente de cómo se implemente el método de servicio.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Calling service operations asynchronously in the client is recommended when a service method takes some time but must return information directly to the client.</source>
          <target state="translated">Se recomienda llamar a las operaciones de servicio asincrónicas en el cliente cuando un método de servicio tarda algo de tiempo pero debe devolver la información directamente al cliente.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For details, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>.</source>
          <target state="translated">Para obtener información detallada, vea <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property indicates that a method does not return any value at all, including an empty underlying response message.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> indica que un método no devuelve ningún valor en absoluto, incluido un mensaje de respuesta subyacente vacío.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>This type of method is useful for notifications or event-style communication.</source>
          <target state="translated">Este tipo de método es útil para notificaciones o comunicaciones con estilo de eventos.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Methods of this kind cannot return a reply message so the method's declaration must return <ph id="ph1">`void`</ph>.</source>
          <target state="translated">Los métodos de este tipo no pueden devolver un mensaje de respuesta de manera que la declaración del método debe devolver el valor <ph id="ph1">`void`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>When programmatically retrieving the information store in this attribute, use the <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> class instead of reflection.</source>
          <target state="translated">Cuando se recuperan mediante programación el almacén de información en este atributo, use la <ph id="ph1">&lt;xref:System.ServiceModel.Description.ContractDescription&gt;</ph> clase en lugar de reflexión.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>, (the default), even methods that return <ph id="ph3">`void`</ph> are two-way methods at the underlying message level.</source>
          <target state="translated">Si la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> está establecida en <ph id="ph2">`false`</ph> (el valor predeterminado), incluso los métodos que devuelven el valor <ph id="ph3">`void`</ph> son métodos bidireccionales en el nivel de mensaje subyacente.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</source>
          <target state="translated">En este caso, la infraestructura crea y envía un mensaje vacío para indicar al autor de la llamada que se ha devuelto el método.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Using this approach enables the application and the infrastructure to send error information (such as a SOAP fault) back to the client.</source>
          <target state="translated">Utilizar este enfoque permite a la aplicación y a la infraestructura devolver información de error (como error de SOAP) al cliente.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> to <ph id="ph2">`true`</ph> is the only way to prevent the creation and dispatch of a reply message.</source>
          <target state="translated">Establecer <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> en <ph id="ph2">`true`</ph> es la única manera de evitar la creación y distribución de un mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>unidireccional servicios<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties can be used not only to modify the default action of SOAP messages but also to create handlers for unrecognized messages or to disable adding actions for direct message programming.</source>
          <target state="translated">Se pueden usar las propiedades <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> no solo para modificar la acción predeterminada de mensajes SOAP sino también para crear controladores para mensajes desconocidos o deshabilitar la adición de acciones para la programación directa del mensaje.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property to prevent clients from calling a particular service operation prior to other operations.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> para evitar que los clientes llamen a una operación de servicio determinada antes de otras operaciones.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property to have WCF close the channel after clients call a particular service operation.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> propiedad que WCF cierre el canal después de que los clientes llamar a una operación de servicio determinado.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>mediante sesiones<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property enables you to specify on the operation contract whether the operation messages are signed, encrypted, or signed and encrypted.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> le permite especificar en el contrato de la operación si los mensajes de la operación están firmados, cifrados, o firmados y cifrados.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>If a binding cannot provide the security level required by the contract, an exception is thrown at run time.</source>
          <target state="translated">Si un enlace no puede proporcionar el nivel de seguridad exigido por el contrato, se producirá una excepción en el tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>For more information, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> and <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> y <bpt id="p1">[</bpt>nivel de protección descripción<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The following code example shows a simple service contract with one operation.</source>
          <target state="translated">El ejemplo de código siguiente muestra un contrato de servicio simple con una operación.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The following example is a service that implements an implicit service contract that specifies three operations.</source>
          <target state="translated">El ejemplo siguiente es un servicio que implementa un contrato de servicio implícito que especifica tres operaciones.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>Two of the operations are two-way operations, which return underlying response messages to the caller no matter what the return value is.</source>
          <target state="translated">Dos de las operaciones son bidireccionales, que devuelven mensajes de respuesta subyacentes al autor de la llamada sin tener en cuenta el valor devuelto.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.OperationContractAttribute">
          <source>The third operation receives a call, an underlying inbound message, but returns no underlying response message.</source>
          <target state="translated">La tercera operación recibe una llamada, un mensaje entrante subyacente, pero no devuelve ningún mensaje de respuesta subyacente.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.OperationContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContractAttribute" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.ServiceModel.OperationContractAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Gets or sets the WS-Addressing action of the request message.</source>
          <target state="translated">Obtiene o establece la acción WS-Addressing del mensaje de solicitud.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The action to use in generating the WS-Addressing Action header.</source>
          <target state="translated">La acción que utilizar al generar el encabezado de la acción WS-Addressing.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property to control the action of the method's input message.</source>
          <target state="translated">Use el <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> mensaje de entrada de propiedad para controlar la acción del método.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Because WCF uses this action to dispatch an incoming message to the appropriate method, messages used within a contract operation must have unique actions.</source>
          <target state="translated">Dado que WCF usa esta acción para enviar un mensaje entrante con el método adecuado, mensajes utilizados dentro de una operación de contrato deben tener acciones únicas.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The default action value is a combination of the contract namespace (the default value is "<ph id="ph1">http://tempuri.org/</ph>"), the contract name (interface name or the class name, if no explicit service interface is used), the operation name, and an additional string ("Response") if the message is a correlated response.</source>
          <target state="translated">El valor de la acción predeterminada es una combinación del espacio de nombres de contrato (el valor predeterminado es "<ph id="ph1">http://tempuri.org/</ph>"), el nombre del contrato (nombre de la interfaz o el nombre de clase, si no se utiliza ninguna interfaz de servicio explícita), el nombre de la operación y una cadena adicional ("respuesta") si el mensaje es una respuesta asociada.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>You can override this default with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
          <target state="translated">Puede invalidar este valor predeterminado con la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>To indicate that a service operation handles all messages that the service receives but cannot be directed to a service operation, specify the value "*" (an asterisk).</source>
          <target state="translated">Para indicar que una operación de servicio administra todos los mensajes que el servicio recibe pero que no se pueden dirigir a una operación de servicio, especifique el valor "*" (un asterisco).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>This type of operation, called an unmatched message handler, must have one of following method signatures, or a <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown:</source>
          <target state="translated">Este tipo de operación, denominada "controlador de mensajes que no coinciden", debe tener una de las siguientes firmas de método, si no se iniciará <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The service operation can take only a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object and return a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object.</source>
          <target state="translated">La operación de servicio solo puede tomar un objeto <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> y devolver un objeto <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The service operation can take only a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object and return nothing (that is, return <ph id="ph2">`void`</ph>).</source>
          <target state="translated">La operación de servicio puede tomar sólo un objeto <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> y no devolver nada (es decir, devolver el valor <ph id="ph2">`void`</ph>).</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>A service contract can have only one service operation with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "*".</source>
          <target state="translated">Un contrato de servicio sólo puede contar con una operación de servicio con la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> establecida en "*."</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Any group of service contracts hosted at the same listenUri that a service class implements can have many service operations with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" when the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cualquier grupo de contratos de servicios hospedados en el mismo listenUri que una clase de servicio implementa puede tener muchas operaciones de servicio con el <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> propiedad establecida en "<ph id="ph2">\*</ph>" cuando el <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> propiedad está establecida en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>However, only one of those service operations can have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property set to true.</source>
          <target state="translated">Sin embargo, solo una de estas operaciones de servicio puede tener la <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> propiedad establecida en "<ph id="ph2">\*</ph>" y el <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> propiedad establecida en true.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>For more details, see <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The following example is a service that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties to explicitly control the SOAP actions of both the input and output (or reply) messages, and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to control the name of the operation in metadata.</source>
          <target state="translated">El ejemplo siguiente es un servicio que utiliza las propiedades <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> para controlar explícitamente las acciones SOAP de los mensajes de entrada y salida (o respuesta), y la propiedad <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> para controlar el nombre de la operación en los metadatos.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>Finally, the application also uses an <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> value of "*" to indicate a method that handles unrecognized messages.</source>
          <target state="translated">Finalmente, la aplicación también utiliza un valor <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> de "*" para indicar un método que administra los mensajes desconocidos.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>A service that implements this contract sends messages that look like the following example:</source>
          <target state="translated">Un servicio que implementa este contrato envía mensajes que se parecen al ejemplo siguiente:</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Action">
          <source>The value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">El valor es <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Indicates that an operation is implemented asynchronously using a <ph id="ph1">&lt;see langword="Begin" /&gt;</ph><ph id="ph2">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph3">&amp;gt;</ph> and <ph id="ph4">&lt;see langword="End" /&gt;</ph><ph id="ph5">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph6">&amp;gt;</ph> method pair in a service contract.</source>
          <target state="translated">Indica que una operación se implementa usando de forma asincrónica un par de métodos <ph id="ph1">&lt;see langword="Begin" /&gt;</ph><ph id="ph2">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph3">&amp;gt;</ph> y <ph id="ph4">&lt;see langword="End" /&gt;</ph><ph id="ph5">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph6">&amp;gt;</ph> en un contrato de servicio.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see langword="Begin" /&gt;</ph><ph id="ph3">&amp;lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph4">&amp;gt;</ph>method is matched by an <ph id="ph5">&lt;see langword="End" /&gt;</ph><ph id="ph6">&amp;lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept><ph id="ph7">&amp;gt;</ph> method and can be treated by the infrastructure as an operation that is implemented as an asynchronous method pair on the service interface; otherwise, <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> Si el <ph id="ph2">&lt;see langword="Begin" /&gt;</ph> <ph id="ph3">&amp;lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept><ph id="ph4">&amp;gt;</ph>método coincide con un <ph id="ph5">&lt;see langword="End" /&gt;</ph> <ph id="ph6">&amp;lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept> <ph id="ph7">&amp;gt;</ph> método y se puede tratar por el infraestructura como una operación que se implementa como un par de métodos asincrónicos en la interfaz de servicio; en caso contrario, <ph id="ph8">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property to build service operations that can be called asynchronously on the server, the client, or both.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> para crear operaciones de servicio a las que se pueden llamar de forma asincrónica en el servidor, el cliente o ambos.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property informs the runtime that a <ph id="ph2">`Begin`</ph> method has a matched <ph id="ph3">`End`</ph> method that conforms to the .NET Framework asynchronous method design pattern.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> informa al tiempo de ejecución que un método <ph id="ph2">`Begin`</ph> tiene un método <ph id="ph3">`End`</ph> con el que coincide y que se ajusta al patrón de diseño de método asincrónico de .NET Framework.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Building server asynchronous methods that implement a service operation increases server scalability and performance without affecting the clients of the service, and is recommended when a service operation must return something to the client after performing a lengthy operation that can be performed asynchronously.</source>
          <target state="translated">Crear métodos asincrónicos de servidor que implementan una operación de servicio aumentan la escalabilidad del servidor y el rendimiento sin afectar a los clientes del servicio. Se recomiendan cuando una operación de servicio debe devolver algo al cliente después de realizar una operación larga que se puede realizar de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Clients remain unaffected because the asynchronous method pair on the server is an implementation detail that does not affect the underlying Web Services Description Language (WSDL) description of the operation.</source>
          <target state="translated">A los clientes no les afecta porque el par de métodos asincrónicos en el servidor es un detalle de implementación que no afecta a la descripción del lenguaje de descripción de servicios Web (WSDL) subyacente de la operación.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Such methods appear to clients as a single operation with <ph id="ph1">`&lt;input&gt;`</ph> and correlated <ph id="ph2">`&lt;output&gt;`</ph> messages.</source>
          <target state="translated">Estos métodos se muestran a los clientes como una operación única con <ph id="ph1">`&lt;input&gt;`</ph> y correlacionados <ph id="ph2">`&lt;output&gt;`</ph> mensajes.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>WCF automatically routes inbound messages to the <ph id="ph1">`Begin`</ph><ph id="ph2">\&lt;</ph><bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; method and routes the results of the <ph id="ph3">`End`</ph><ph id="ph4">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; call to the outbound message.</source>
          <target state="translated">WCF enruta automáticamente los mensajes entrantes en el <ph id="ph1">`Begin`</ph> <ph id="ph2">\&lt;</ph> <bpt id="p1">*</bpt>methodName<ept id="p1">*</ept>&gt; método y enruta los resultados de la <ph id="ph3">`End`</ph> <ph id="ph4">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; llamar a en el mensaje de salida.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Client channels, therefore, can represent the method pair as either a single synchronous operation or as an asynchronous operation pair.</source>
          <target state="translated">Por consiguiente, los canales del cliente pueden representar el par de método como una operación sincrónica o como un par de operaciones asincrónicas.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>In no case does the client representation affect the asynchronous implementation on the server in any way.</source>
          <target state="translated">En ningún caso la representación del cliente afecta a la implementación asincrónica en el servidor.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Client contracts can use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> property to indicate an asynchronous method pair that the client can use to invoke the operation asynchronously.</source>
          <target state="translated">Los contratos del cliente pueden utilizar la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> para indicar un par de métodos asincrónicos que el cliente puede utilizar para invocar de forma asincrónica la operación.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>Typically, client applications use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> tool and the <ph id="ph1">`/async`</ph> option to generate a <ph id="ph2">`Begin`</ph><ph id="ph3">\&lt;</ph><bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; and <ph id="ph4">`End`</ph><ph id="ph5">\&lt;</ph><bpt id="p3">*</bpt>methodName<ept id="p3">*</ept>&gt; method pair that the client can use to invoke the operation asynchronously.</source>
          <target state="translated">Normalmente, las aplicaciones cliente utilizar la <bpt id="p1">[</bpt>la herramienta de utilidad de metadatos de ServiceModel (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> herramienta y la <ph id="ph1">`/async`</ph> opción para generar un <ph id="ph2">`Begin`</ph> <ph id="ph3">\&lt;</ph> <bpt id="p2">*</bpt>methodName<ept id="p2">*</ept>&gt; y <ph id="ph4">`End`</ph> <ph id="ph5">\&lt;</ph> <bpt id="p3">*</bpt>methodName<ept id="p3">*</ept>&gt; par de métodos que el cliente puede utilizar para invocar la operación de forma asincrónica.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If a service operation has both an asynchronous and a synchronous version, the default behavior on the service is to invoke the synchronous version.</source>
          <target state="translated">Si una operación de servicio tiene una versión asincrónica y otra sincrónica, el comportamiento predeterminado en el servicio será invocar la versión sincrónica.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>The following code example shows a client channel to a service contract that includes both a synchronous version of <ph id="ph1">`Add`</ph> and an asynchronous version.</source>
          <target state="translated">El ejemplo de código siguiente muestra un canal de cliente a un contrato de servicio que incluye tanto una versión sincrónica de <ph id="ph1">`Add`</ph> como una asincrónica.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If the contract interface is used on the client, both the <ph id="ph1">`BeginAdd`</ph> and the <ph id="ph2">`Add`</ph> operation invoke a method on the server that may or may not be synchronous.</source>
          <target state="translated">Si la interfaz de contrato se utiliza en el cliente, tanto la operación <ph id="ph1">`BeginAdd`</ph> como la operación <ph id="ph2">`Add`</ph> invocan un método en el servidor que puede ser o no ser sincrónico.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.AsyncPattern">
          <source>If the contract is used to implement the service, the default is that incoming requests are dispatched to the synchronous method.</source>
          <target state="translated">Si el contrato se utiliza para implementar el servicio, el valor predeterminado es que las solicitudes entrantes se envían al método sincrónico.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>Gets a value that indicates whether the messages for this operation must be encrypted, signed, or both.</source>
          <target state="translated">Obtiene un valor que indica si los mensajes para esta operación deben cifrarse, firmarse o ambos.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /&gt;</ph> property is set to a value other than <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se define la propiedad <ph id="ph2">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel" /&gt;</ph> en un valor distinto de <ph id="ph3">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>; de lo contrario, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.HasProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> property to determine whether a specific protection level is required by the messages of this operation.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.HasProtectionLevel%2A&gt;</ph> para determinar si los mensajes de esta operación necesitan un nivel de protección concreto.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Gets or sets a value that indicates whether the method implements an operation that can initiate a session on the server (if such a session exists).</source>
          <target state="translated">Obtiene o establece un valor que indica si el método implementa una operación que puede iniciar una sesión en el servidor (si este tipo de sesión existe).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is permitted to initiate a session on the server, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se permite a la operación iniciar una sesión en el servidor, de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property controls whether an operation can be the first operation called when a session is created.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> controla si una operación puede ser la primera operación a la que se llama cuando se crea una sesión.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The value of <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> must be either <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Allowed&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.SessionMode.Required&gt;</ph> and the binding used must require or allow sessions for the <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property to work properly.</source>
          <target state="translated">El valor de <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.SessionMode%2A?displayProperty=nameWithType&gt;</ph> debe ser <ph id="ph2">&lt;xref:System.ServiceModel.SessionMode.Allowed&gt;</ph> o <ph id="ph3">&lt;xref:System.ServiceModel.SessionMode.Required&gt;</ph> y el enlace utilizado debe requerir o permitir las sesiones para que la propiedad <ph id="ph4">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> funcione correctamente.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The default is <ph id="ph1">`true`</ph>, which means that an operation can be the first one called on a channel.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">`true`</ph>, lo que significa que una operación puede ser la primera a la que se llame en un canal.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Subsequent calls to the initiating method have no effect, other than to call the method.</source>
          <target state="translated">Las siguientes llamadas al método de inicio no tienen otro efecto que llamar al método.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>No other sessions are created.</source>
          <target state="translated">No se crea ninguna otra sesión.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If the contract does not make use of a session, setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`false`</ph> is ignored.</source>
          <target state="translated">Si el contrato no utiliza una sesión, se omitirá la definición de <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> en <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Typically, you set <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`false`</ph> to force clients to call another method on the service before they can invoke this one.</source>
          <target state="translated">Normalmente, define <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> en <ph id="ph2">`false`</ph> para obligar a los clientes a llamar a otro método en el servicio antes de poder invocar a este.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>For example, if your service has a series of operations that depend on an order ID number, you can set <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> to <ph id="ph2">`true`</ph> for a <ph id="ph3">`GetOrderId`</ph> service operation and set all remaining service operations to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Por ejemplo, si su servicio tiene una serie de operaciones que dependen de un número de identificador de orden, puede establecer <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> en <ph id="ph2">`true`</ph> para una operación de servicio <ph id="ph3">`GetOrderId`</ph> y establecer todas las operaciones de servicio restantes en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>This ensures that each new client obtains an order ID prior to using the other methods exposed by the service.</source>
          <target state="translated">Esto garantiza que cada nuevo cliente obtiene un identificador de orden antes de utilizar los otros métodos expuestos por el servicio.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>There is an interaction between <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property.</source>
          <target state="translated">Hay una interacción entre <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> y la propiedad <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>A service contract can have only one service operation with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "*".</source>
          <target state="translated">Un contrato de servicio sólo puede contar con una operación de servicio con la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> establecida en "*."</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>Any group of service contracts hosted at the same listen URI that a service class implements can have many service operations with the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" when the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Cualquier grupo de contratos de servicios hospedados en el mismo ListenUri que una clase de servicio implementa puede tener muchas operaciones de servicio con el <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> propiedad establecida en "<ph id="ph2">\*</ph>" cuando el <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> propiedad está establecida en <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>However, only one of those service methods can have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> property set to "<ph id="ph2">\*</ph>" and the <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> property set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated">Sin embargo, sólo uno de estos métodos de servicio puede tener la <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> propiedad establecida en "<ph id="ph2">\*</ph>" y la <ph id="ph3">&lt;xref:System.ServiceModel.OperationContractAttribute.IsInitiating%2A&gt;</ph> propiedad establecida en <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a service receives a message for a non-initiating operation, the service returns an ActionNotSupported SOAP fault.</source>
          <target state="translated">Si un servicio recibe un mensaje para una operación que no se inicia, el servicio devuelve un error de SOAP ActionNotSupported.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The client experiences this as an <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>.</source>
          <target state="translated">El cliente experimenta este hecho como <ph id="ph1">&lt;xref:System.ServiceModel.FaultException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a client calls a non-initiating operation first, the client runtime throws an <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Si un cliente llama primero a una operación que no se inicia, el tiempo de ejecución del cliente inicia <ph id="ph1">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>For more information, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>mediante sesiones<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The following example is a service that implements a service contract that specifies three methods.</source>
          <target state="translated">El ejemplo siguiente es un servicio que implementa un contrato de servicio que especifica tres métodos.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>The service requires a session.</source>
          <target state="translated">El servicio requiere una sesión.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>If a caller's first call is to any operation other than <ph id="ph1">`MethodOne`</ph>, the channel is refused and an exception is thrown.</source>
          <target state="translated">Si la primera llamada de un autor de la llamada es a cualquier operación distinta de <ph id="ph1">`MethodOne`</ph>, se rechaza el canal y se produce una excepción.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source>When a caller initiates a session by calling <ph id="ph1">`MethodOne`</ph>, that caller can terminate the communication session at any time by calling <ph id="ph2">`MethodThree`</ph>.</source>
          <target state="translated">Cuando un autor de la llamada inicia una sesión llamando a <ph id="ph1">`MethodOne`</ph>, ese autor de la llamada puede terminar la sesión de comunicación en cualquier momento llamando a <ph id="ph2">`MethodThree`</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsInitiating">
          <source><ph id="ph1">`MethodTwo`</ph> can be called any number of times during a session.</source>
          <target state="translated">Se puede llamar a <ph id="ph1">`MethodTwo`</ph> las veces que se quiera durante una sesión.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Gets or sets a value that indicates whether an operation returns a reply message.</source>
          <target state="translated">Obtiene o establece un valor que indica si una operación devuelve un mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method receives a request message and returns no reply message; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si este método recibe un mensaje de solicitud y no devuelve ningún mensaje de respuesta; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property to indicate that an operation does not return a reply message.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> para indicar que una operación no devuelve un mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>This type of operation is useful for notifications or event-style communication, especially in two-way communication.</source>
          <target state="translated">Este tipo de operación es útil para notificaciones o comunicaciones de estilo del evento, sobre todo en comunicaciones bidireccionales.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Without waiting for an underlying response message, callers of one-way operations have no direct way to detect a failure in processing the request message.</source>
          <target state="translated">Sin esperar a un mensaje de respuesta subyacente, los autores de la llamada de operaciones unidireccionales no tienen ninguna manera directa de detectar un error al procesar el mensaje de solicitud.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>(Service applications that use reliable channels and one-way operations can detect a message delivery failure at the channel level.</source>
          <target state="translated">(Las aplicaciones de servicio que utilizan canales confiables y las operaciones unidireccionales pueden detectar un error en la entrega del mensaje en el nivel del canal.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>For details, see <bpt id="p1">[</bpt>Reliable Sessions Overview<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md)</ept>.)</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>información general de las sesiones confiables<ept id="p1">](~/docs/framework/wcf/feature-details/reliable-sessions-overview.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>In duplex (or two-way) service-oriented applications in which the client and server communicate with each other independently, a client channel can use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property on its methods to indicate that the service can make one-way calls to the client that the client can treat as events.</source>
          <target state="translated">En aplicaciones orientadas a servicios dúplex (o bidireccionales) en que el cliente y el servidor se comunican entre sí independientemente, un canal de cliente puede utilizar la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> en sus métodos para indicar que el servicio puede realizar las llamadas unidireccionales al cliente que el cliente puede tratar como eventos.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>No return call or message is generated because the service does not expect any response message.</source>
          <target state="translated">No se genera ninguna llamada o mensaje de devolución porque el servicio no espera ningún mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>If the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph> (the default), even methods that return <ph id="ph3">`void`</ph> result in a reply message.</source>
          <target state="translated">Si la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> se establece en <ph id="ph2">`false`</ph> (el valor predeterminado), incluso los métodos que devuelven <ph id="ph3">`void`</ph> tienen como resultado un mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>In this case, the infrastructure creates and sends an empty message to indicate to the caller that the method has returned.</source>
          <target state="translated">En este caso, la infraestructura crea y envía un mensaje vacío para indicar al autor de la llamada que se ha devuelto el método.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>(Using this approach enables the infrastructure to send SOAP faults back to the client.) Setting <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> to <ph id="ph2">`true`</ph> is the only way to cancel the creation and dispatch of a response message.</source>
          <target state="translated">(Utilizar este enfoque permite a la infraestructura devolver los errores de SOAP al cliente.) Establecer <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsOneWay%2A&gt;</ph> en <ph id="ph2">`true`</ph> es la única manera de cancelar la creación y expedición de un mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>One-way methods must not return a value or have <ph id="ph1">`ref`</ph> or <ph id="ph2">`out`</ph> parameters; otherwise a <ph id="ph3">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph> exception is thrown.</source>
          <target state="translated">Los métodos unidireccionales no deben devolver un valor o tener parámetros <ph id="ph1">`ref`</ph> o <ph id="ph2">`out`</ph>; de lo contrario, se producirá una excepción <ph id="ph3">&lt;xref:System.InvalidOperationException?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Specifying that an operation is a one-way operation means only that there is no response message.</source>
          <target state="translated">Especificar que una operación es unidireccional significa que no hay ningún mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>It is possible to block if a connection cannot be made, or the outbound message is very large, or if the service cannot read inbound information fast enough.</source>
          <target state="translated">Es posible bloquear si no se puede realizar una conexión, si el mensaje saliente es muy grande o si el servicio no puede leer la información entrante con la rapidez necesaria.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>If a client requires a non-blocking call, generate <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph> operations.</source>
          <target state="translated">Si un cliente requiere una llamada que no sea de bloqueo, genere las operaciones <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.AsyncPattern%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>For more information, see <bpt id="p1">[</bpt>One-Way Services<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept> and <bpt id="p2">[</bpt>Accessing Services Using a WCF Client<ept id="p2">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>.</source>
          <target state="translated">Para obtener más información, consulte <bpt id="p1">[</bpt>unidireccional servicios<ept id="p1">](~/docs/framework/wcf/feature-details/one-way-services.md)</ept> y <bpt id="p2">[</bpt>al tener acceso a los servicios mediante un cliente WCF<ept id="p2">](~/docs/framework/wcf/feature-details/accessing-services-using-a-client.md)</ept>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The following example is a service that implements a service contract that specifies three operations.</source>
          <target state="translated">El ejemplo siguiente es un servicio que implementa un contrato de servicio que especifica tres operaciones.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>Two of the methods implement two-way operations, which return underlying response messages to the caller no matter what the return value is.</source>
          <target state="translated">Dos de los métodos implementan operaciones bidireccionales, que devuelven mensajes de respuesta subyacentes al autor de la llamada sin tener en cuenta el valor devuelto.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsOneWay">
          <source>The third method implements an operation that receives a call (an underlying inbound message) but returns no underlying response message.</source>
          <target state="translated">El tercer método implementa una operación que recibe una llamada (un mensaje entrante subyacente) pero no devuelve ningún mensaje de respuesta subyacente.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>Gets or sets a value that indicates whether the service operation causes the server to close the session after the reply message, if any, is sent.</source>
          <target state="translated">Obtiene o establece un valor que indica si la operación de servicio hace que el servidor cierre la sesión después de enviar el mensaje de respuesta, si lo hubiera.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation causes the server to close the session, otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la operación provoca que el servidor cierre la sesión, de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> property to indicate that calling a service operation terminates the communication session.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> para indicar que al llamar a una operación de servicio, se finaliza la sesión de comunicación.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>In a client application, a value of <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> set to <ph id="ph2">`true`</ph> instructs WCF to close the channel after the reply arrives.</source>
          <target state="translated">En una aplicación de cliente, un valor de <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A&gt;</ph> establecido en <ph id="ph2">`true`</ph> indica a WCF para cerrar el canal después de que llegue la respuesta.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>In a service, a timer is set and the channel aborts if the client does not close the channel within that period.</source>
          <target state="translated">En un servicio, se establece un temporizador y el canal anula si el cliente no cierra el canal dentro de ese período.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>For more information about using this property with sessions, see <bpt id="p1">[</bpt>Using Sessions<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de cómo utilizar esta propiedad con las sesiones, consulte <bpt id="p1">[</bpt>mediante sesiones<ept id="p1">](~/docs/framework/wcf/using-sessions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>If a caller is listening for the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> event for an <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph> operation, it is possible to block when the response is received.</source>
          <target state="translated">Si el autor de la llamada está escuchando el evento <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted?displayProperty=nameWithType&gt;</ph> para una operación <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.IsTerminating%2A?displayProperty=nameWithType&gt;</ph>, es posible bloquear cuando se reciba la respuesta.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The proper way to handle this is to schedule work on another thread when <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> is raised and then immediately return from that event handler.</source>
          <target state="translated">La manera adecuada de gestionar esto es programar el trabajo en otro subproceso cuando se llega a <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.OperationCompleted&gt;</ph> y entonces devolver inmediatamente desde ese controlador de eventos.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The following example is a service that implements a service contract that specifies three operations.</source>
          <target state="translated">El ejemplo siguiente es un servicio que implementa un contrato de servicio que especifica tres operaciones.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>The service requires a stateful connection.</source>
          <target state="translated">El servicio requiere una conexión con estado.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>If a caller's first call is to any operation other than <ph id="ph1">`MethodOne`</ph>, the channel is refused and an exception is thrown.</source>
          <target state="translated">Si la primera llamada de un autor de la llamada es a cualquier operación distinta de <ph id="ph1">`MethodOne`</ph>, se rechaza el canal y se produce una excepción.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source>When a caller initiates a session by calling <ph id="ph1">`MethodOne`</ph>, that caller can terminate the communication session at any time by calling <ph id="ph2">`MethodThree`</ph>.</source>
          <target state="translated">Cuando un autor de la llamada inicia una sesión llamando a <ph id="ph1">`MethodOne`</ph>, ese autor de la llamada puede terminar la sesión de comunicación en cualquier momento llamando a <ph id="ph2">`MethodThree`</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.IsTerminating">
          <source><ph id="ph1">`MethodTwo`</ph> can be called any number of times during a session.</source>
          <target state="translated">Se puede llamar a <ph id="ph1">`MethodTwo`</ph> las veces que se quiera durante una sesión.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>Gets or sets the name of the operation.</source>
          <target state="translated">Obtiene o establece el nombre de la operación.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The name of the operation.</source>
          <target state="translated">Nombre de la operación.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to override the &lt;<ph id="ph2">`operation`</ph>&gt; element name in WSDL.</source>
          <target state="translated">Use la <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> propiedad que debe reemplazar el &lt;<ph id="ph2">`operation`</ph>&gt; nombre del elemento en WSDL.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The default operation name is the name of the implementing method.</source>
          <target state="translated">El nombre de la operación predeterminada es el nombre del método de implementación.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to declare the name of the operation as exposed in metadata.</source>
          <target state="translated">El siguiente ejemplo de código utiliza la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> para declarar el nombre de la operación tal y como se ha expuesto en los metadatos.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.Name" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.Name" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.Name">
          <source>The value is an empty string.</source>
          <target state="translated">El valor es una cadena vacía.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Gets or sets a value that specifies whether the messages of an operation must be encrypted, signed, or both.</source>
          <target state="translated">Obtiene o establece un valor que especifica si los mensajes de una operación deben cifrarse, firmarse o ambos.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">Uno de los valores de <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see cref="F:System.Net.Security.ProtectionLevel.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> property to control whether the messages of an operation must be encrypted, signed, or both.</source>
          <target state="translated">Utilice la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> para controlar si los mensajes de una operación deben cifrarse, firmarse o ambas cosas.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The value set here is the default value for all messages specified for this operation unless a narrower scope overrides this value.</source>
          <target state="translated">El valor establecido aquí es el valor predeterminado para todos los mensajes especificados de esta operación, salvo que un ámbito más restringido lo invalide.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>It is important to remember that the protection behavior at runtime is the combination of the protection-level values set on the following properties.</source>
          <target state="translated">Es importante recordar que el comportamiento de protección en el tiempo de ejecución es la combinación de los valores de nivel de protección definidos en las propiedades siguientes.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>These properties have a hierarchical structure.</source>
          <target state="translated">Estas propiedades tienen una estructura jerárquica.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set.</source>
          <target state="translated">Al establecer el valor punto de conexión, se establece la configuración predeterminada para todos los ámbitos más restringidos a menos que se establezca un valor diferente para un ámbito más restringido explícitamente.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.</source>
          <target state="translated">En este caso, el valor externo sigue siendo el predeterminado para todos los ámbitos más restringidos con la excepción del definido específicamente.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>For example, if <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed.</source>
          <target state="translated">Por ejemplo, si <ph id="ph1">&lt;xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> está establecido en <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph> y ningún otro ámbito más restringido tiene valores de nivel de protección, se cifrarán y firmarán todos los mensajes en un contrato de la operación.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>If, however, one of those operations has the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> set to <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed.</source>
          <target state="translated">Si, sin embargo, una de esas operaciones tiene <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A&gt;</ph> definido en <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel.Sign?displayProperty=nameWithType&gt;</ph>, se firmarán los mensajes para esa operación pero se cifrarán y firmarán todos los demás mensajes en el contrato.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>For details about protection levels and their assumptions and scopes, see <bpt id="p1">[</bpt>Understanding Protection Level<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</source>
          <target state="translated">Para obtener más información acerca de los niveles de protección y sus suposiciones y ámbitos, consulte <bpt id="p1">[</bpt>nivel de protección descripción<ept id="p1">](~/docs/framework/wcf/understanding-protection-level.md)</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The scopes at which these values are set are:</source>
          <target state="translated">Los ámbitos en los que se establecen estos valores son:</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> en <ph id="ph2">&lt;xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> property on <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La propiedad <ph id="ph1">&lt;xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=nameWithType&gt;</ph> en <ph id="ph2">&lt;xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Cuando no se haya especificado de manera concreta ningún nivel de protección en el contrato y el enlace subyacente admita la seguridad (ya sea en el nivel de transporte o de mensaje), el nivel de protección efectivo para todo el contrato será <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.EncryptAndSign?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>If the binding does not support security (such as <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), the effective <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> is <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> for the whole contract.</source>
          <target state="translated">Si el enlace no admite la seguridad (como <ph id="ph1">&lt;xref:System.ServiceModel.BasicHttpBinding&gt;</ph>), el <ph id="ph2">&lt;xref:System.Net.Security.ProtectionLevel?displayProperty=nameWithType&gt;</ph> eficaz será <ph id="ph3">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph> para todo el contrato.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">El resultado será (en función del enlace del extremo) que los clientes pueden exigir una protección de nivel de seguridad diferente para los mensajes o el transporte aun cuando el contrato especifique <ph id="ph1">&lt;xref:System.Net.Security.ProtectionLevel.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ProtectionLevel">
          <source>The value is not one of the <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph> values.</source>
          <target state="translated">El valor no es uno de los valores de <ph id="ph1">&lt;see cref="T:System.Net.Security.ProtectionLevel" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Gets or sets the value of the SOAP action for the reply message of the operation.</source>
          <target state="translated">Obtiene o establece el valor de la acción SOAP para el mensaje de respuesta de la operación.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>The value of the SOAP action for the reply message.</source>
          <target state="translated">El valor de la acción de SOAP para el mensaje de respuesta.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>In addition to specifying a particular value for the action header of the reply message, you can also specify the string "*" (an asterisk).</source>
          <target state="translated">Además de especificar un valor en concreto para el encabezado de la acción del mensaje de respuesta, también puede especificar la cadena "*" (un asterisco).</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Specifying an asterisk in the service instructs WCF not to add a reply action to the message, which is useful if you are programming against messages directly.</source>
          <target state="translated">Especificar un asterisco en el servicio indica a WCF no para agregar una acción de respuesta al mensaje, lo que resulta útil si está programando directamente contra los mensajes.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>Specifying an asterisk in a client application instructs WCF not to validate the reply action.</source>
          <target state="translated">Especificar un asterisco en una aplicación cliente indica a WCF no para validar la acción de respuesta.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>The following example is a service that uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> properties to explicitly control the SOAP actions of both the input and output (or reply) messages.</source>
          <target state="translated">El ejemplo siguiente es un servicio que utiliza las propiedades <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Action%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.ServiceModel.OperationContractAttribute.ReplyAction%2A&gt;</ph> para controlar de manera explícita las acciones de SOAP de los mensajes entrantes y salientes (o de respuesta).</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source>It also uses the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> property to declare the name of the operation as exposed in metadata.</source>
          <target state="translated">También utiliza la propiedad <ph id="ph1">&lt;xref:System.ServiceModel.OperationContractAttribute.Name%2A&gt;</ph> para declarar el nombre de la operación tal y como se ha expuesto en los metadatos.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.OperationContractAttribute.ReplyAction">
          <source><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ServiceModel.OperationContractAttribute.ReplyAction" /&gt;</ph> es <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>