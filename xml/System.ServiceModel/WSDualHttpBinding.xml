<Type Name="WSDualHttpBinding" FullName="System.ServiceModel.WSDualHttpBinding">
  <TypeSignature Language="C#" Value="public class WSDualHttpBinding : System.ServiceModel.Channels.Binding, System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSDualHttpBinding extends System.ServiceModel.Channels.Binding implements class System.ServiceModel.Channels.IBindingRuntimePreferences" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.WSDualHttpBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class WSDualHttpBinding&#xA;Inherits Binding&#xA;Implements IBindingRuntimePreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSDualHttpBinding : System::ServiceModel::Channels::Binding, System::ServiceModel::Channels::IBindingRuntimePreferences" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.Binding</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IBindingRuntimePreferences</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="51d00-101">Un enlace seguro e interoperable que está diseñado para su utilización con contratos de servicios dúplex que permiten a servicios y a clientes enviar y recibir mensajes.</span><span class="sxs-lookup"><span data-stu-id="51d00-101">A secure and interoperable binding that is designed for use with duplex service contracts that allows both services and clients to send and receive messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-102"><xref:System.ServiceModel.WSDualHttpBinding> proporciona la misma compatibilidad para los protocolos de servicio Web que <xref:System.ServiceModel.WSHttpBinding>, pero para el uso con contratos dúplex.</span><span class="sxs-lookup"><span data-stu-id="51d00-102">The <xref:System.ServiceModel.WSDualHttpBinding> provides the same support for Web Service protocols as the <xref:System.ServiceModel.WSHttpBinding>, but for use with duplex contracts.</span></span> <span data-ttu-id="51d00-103"><xref:System.ServiceModel.WSDualHttpBinding> solo admite la seguridad de SOAP y requiere mensajería de confianza.</span><span class="sxs-lookup"><span data-stu-id="51d00-103"><xref:System.ServiceModel.WSDualHttpBinding> only supports SOAP security and requires reliable messaging.</span></span> <span data-ttu-id="51d00-104">Este enlace requiere que el cliente tenga un URI público que proporciona un punto de conexión de devolución de llamada para el servicio.</span><span class="sxs-lookup"><span data-stu-id="51d00-104">This binding requires that the client has a public URI that provides a callback endpoint for the service.</span></span> <span data-ttu-id="51d00-105"><xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A> lo proporciona.</span><span class="sxs-lookup"><span data-stu-id="51d00-105">This is provided by the <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement.ClientBaseAddress%2A>.</span></span> <span data-ttu-id="51d00-106">Un enlace dual expone la dirección IP del cliente al servicio.</span><span class="sxs-lookup"><span data-stu-id="51d00-106">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="51d00-107">El cliente debería utilizar la seguridad para asegurarse de que sólo se conecta a servicios de confianza.</span><span class="sxs-lookup"><span data-stu-id="51d00-107">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
 <span data-ttu-id="51d00-108">De forma predeterminada <xref:System.ServiceModel.WSDualHttpBinding> genera la siguiente pila de elementos de enlace:</span><span class="sxs-lookup"><span data-stu-id="51d00-108">By default the <xref:System.ServiceModel.WSDualHttpBinding> generates the following binding element stack:</span></span>  
  
-   <xref:System.ServiceModel.Channels.TransactionFlowBindingElement>  
  
-   <xref:System.ServiceModel.Channels.ReliableSessionBindingElement>  
  
-   <xref:System.ServiceModel.Channels.SymmetricSecurityBindingElement>  
  
-   <xref:System.ServiceModel.Channels.CompositeDuplexBindingElement>  
  
-   <xref:System.ServiceModel.Channels.OneWayBindingElement>  
  
-   <xref:System.ServiceModel.Channels.TextMessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.HttpTransportBindingElement>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-109">El siguiente ejemplo muestra cómo especificar el enlace `wsDualHttpBinding` en un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="51d00-109">The following example shows how to specify the `wsDualHttpBinding` binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#134](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#134)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="51d00-110">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-110">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51d00-111">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.WSDualHttpBinding" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-111">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-112">En el ejemplo de código siguiente se muestra cómo se utiliza el constructor predeterminado para wsDualHttpBinding.</span><span class="sxs-lookup"><span data-stu-id="51d00-112">The following example shows how to use the default constructor for wsDualHttpBinding.</span></span>  
  
 [!code-csharp[S_dualhttp#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#1)]
 [!code-vb[S_dualhttp#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (System.ServiceModel.WSDualHttpSecurityMode securityMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.WSDualHttpSecurityMode securityMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.ServiceModel.WSDualHttpSecurityMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (securityMode As WSDualHttpSecurityMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::ServiceModel::WSDualHttpSecurityMode securityMode);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="securityMode" Type="System.ServiceModel.WSDualHttpSecurityMode" />
      </Parameters>
      <Docs>
        <param name="securityMode"><span data-ttu-id="51d00-113">El valor de <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> que especifica el tipo de seguridad que se usa con el mensaje SOAP y para el cliente.</span><span class="sxs-lookup"><span data-stu-id="51d00-113">The value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> that specifies the type of security that is used with the SOAP message and for the client.</span></span></param>
        <summary><span data-ttu-id="51d00-114">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.WSDualHttpBinding" /> con un tipo de seguridad especificado utilizado por el enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-114">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a specified type of security used by the binding.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-115"><xref:System.ServiceModel.WSDualHttpBinding> requiere mensajería de confianza, así que no hay ningún constructor que proporcione un modificador para desactivarlo como lo hay en el constructor <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> para <xref:System.ServiceModel.WSHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="51d00-115">Reliable messaging is required by the <xref:System.ServiceModel.WSDualHttpBinding>, so there is no constructor that provides a switch to turn it off as there is on the <xref:System.ServiceModel.WSHttpBinding.%23ctor%28System.ServiceModel.SecurityMode%29> constructor for the <xref:System.ServiceModel.WSHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-116">El siguiente ejemplo muestra cómo utilizar el constructor `wsDualHttpBinding` con un modo de seguridad.</span><span class="sxs-lookup"><span data-stu-id="51d00-116">The following example shows how to use the `wsDualHttpBinding` constructor with a security mode.</span></span>  
  
 [!code-csharp[S_dualhttp#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#3)]
 [!code-vb[S_dualhttp#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSDualHttpBinding (string configName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string configName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSDualHttpBinding(System::String ^ configName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="configName"><span data-ttu-id="51d00-117">Nombre de configuración del enlace para <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-117">The binding configuration name for the <see cref="T:System.ServiceModel.Configuration.WSHttpBindingElement" />.</span></span></param>
        <summary><span data-ttu-id="51d00-118">Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.WSDualHttpBinding" /> con un enlace especificado por su nombre de configuración.</span><span class="sxs-lookup"><span data-stu-id="51d00-118">Initializes a new instance of the <see cref="T:System.ServiceModel.WSDualHttpBinding" /> class with a binding specified by its configuration name.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.ConfigurationErrorsException"><span data-ttu-id="51d00-119">No se encontró el elemento de enlace con el nombre <paramref name="configurationName" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-119">The binding element with the name <paramref name="configurationName" /> was not found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BypassProxyOnLocal">
      <MemberSignature Language="C#" Value="public bool BypassProxyOnLocal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BypassProxyOnLocal" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal" />
      <MemberSignature Language="VB.NET" Value="Public Property BypassProxyOnLocal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BypassProxyOnLocal { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-120">Obtiene o establece un valor que indica si se omitirá el servidor proxy para las direcciones locales.</span><span class="sxs-lookup"><span data-stu-id="51d00-120">Gets or sets a value that indicates whether to bypass the proxy server for local addresses.</span></span></summary>
        <value>
          <span data-ttu-id="51d00-121">Es <see langword="true" /> si se va a omitir el servidor proxy para las direcciones locales; de lo contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-121"><see langword="true" /> to bypass the proxy server for local addresses; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="51d00-122">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-122">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-123">Un recurso de Internet es local si tiene una dirección local.</span><span class="sxs-lookup"><span data-stu-id="51d00-123">An Internet resource is local if it has a local address.</span></span> <span data-ttu-id="51d00-124">Una dirección local es aquella que se encuentra en el mismo equipo, la LAN local o intranet y se identifica, sintácticamente, por la ausencia de un punto (.) como en los URI "http://webserver/"y"http://localhost/".</span><span class="sxs-lookup"><span data-stu-id="51d00-124">A local address is one that is on the same computer, the local LAN or intranet and is identified, syntactically, by the lack of a period (.) as in the URIs "http://webserver/" and "http://localhost/".</span></span>  
  
 <span data-ttu-id="51d00-125">La configuración de la propiedad <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> determina si los extremos configurados con <xref:System.ServiceModel.WSDualHttpBinding> usan el servidor proxy al obtener acceso a los recursos locales.</span><span class="sxs-lookup"><span data-stu-id="51d00-125">Setting the <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> property determines whether endpoints configured with the <xref:System.ServiceModel.WSDualHttpBinding> use the proxy server when accessing local resources.</span></span>  
  
 <span data-ttu-id="51d00-126">Si <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> es `true`, las solicitudes que se realicen a los recursos locales de Internet no usarán el servidor proxy.</span><span class="sxs-lookup"><span data-stu-id="51d00-126">If <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `true`, requests to local Internet resources do not use the proxy server.</span></span> <span data-ttu-id="51d00-127">Utilice el nombre de host (en lugar de `localhost`) si desea que los clientes pasen por un proxy al hablar con los servicios del mismo equipo cuando esta propiedad está establecida como `true`.</span><span class="sxs-lookup"><span data-stu-id="51d00-127">Use the host name (rather than `localhost`) if you want clients to go through a proxy when talking to services on the same machine when this property is set to `true`.</span></span>  
  
 <span data-ttu-id="51d00-128">Cuando <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> es `false`, todas las solicitudes de Internet se realizan a través del servidor proxy.</span><span class="sxs-lookup"><span data-stu-id="51d00-128">When <xref:System.ServiceModel.WSDualHttpBinding.BypassProxyOnLocal%2A> is `false`, all Internet requests are made through the proxy server.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-129">En el ejemplo siguiente se muestra cómo especificar el enlace wsDualHttpBinding en un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="51d00-129">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
  
  
 <span data-ttu-id="51d00-130">El ejemplo siguiente establece esta propiedad para indicar que el proxy se debería omitir para los recursos locales.</span><span class="sxs-lookup"><span data-stu-id="51d00-130">The following example sets this property to indicate that the proxy should be bypassed for local resources.</span></span>  
  
 [!code-csharp[S_dualhttp#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#6)]
 [!code-vb[S_dualhttp#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#6)]  
  
 <span data-ttu-id="51d00-131">El valor de esta propiedad también puede establecerse en el archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="51d00-131">The value of this property can also be set in the configuration file.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientBaseAddress">
      <MemberSignature Language="C#" Value="public Uri ClientBaseAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ClientBaseAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ClientBaseAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientBaseAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ClientBaseAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-132">Obtiene o establece la dirección base del cliente.</span><span class="sxs-lookup"><span data-stu-id="51d00-132">Gets or sets the base address of the client.</span></span></summary>
        <value><span data-ttu-id="51d00-133">El <see cref="T:System.Uri" /> que es la dirección base del cliente.</span><span class="sxs-lookup"><span data-stu-id="51d00-133">The <see cref="T:System.Uri" /> that is the base address of the client.</span></span> <span data-ttu-id="51d00-134">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-134">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-135">Este URI público para el cliente proporciona el punto de conexión de devolución de llamada requerido para que el servicio se ponga en contacto con el cliente cuando el contrato es dúplex.</span><span class="sxs-lookup"><span data-stu-id="51d00-135">This public URI for the client provides the callback endpoint required for the service to contact the client when the contract is duplex.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-136">En el ejemplo siguiente se muestra cómo especificar el enlace wsDualHttpBinding en un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="51d00-136">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#8)]
 [!code-vb[S_dualhttp#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBindingElements">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElementCollection CreateBindingElements() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.CreateBindingElements" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateBindingElements () As BindingElementCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElementCollection ^ CreateBindingElements();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElementCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51d00-137">Devuelve una colección ordenada de los elementos de enlace contenidos en el enlace actual.</span><span class="sxs-lookup"><span data-stu-id="51d00-137">Returns an ordered collection of binding elements contained in the current binding.</span></span></summary>
        <returns><span data-ttu-id="51d00-138"><see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> que incluye <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> y, dado que se requiere una sesión confiable para <see cref="T:System.ServiceModel.WSDualHttpBinding" />, <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-138">A <see cref="T:System.ServiceModel.Channels.BindingElementCollection" /> that includes a <see cref="T:System.ServiceModel.Channels.TransactionFlowBindingElement" /> and, because a reliable session is required for the <see cref="T:System.ServiceModel.WSDualHttpBinding" />, a <see cref="T:System.ServiceModel.Channels.ReliableSessionBindingElement" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-139">En el siguiente ejemplo se muestra cómo obtener una colección ordenada de elementos de enlace contenidos en el enlace actual.</span><span class="sxs-lookup"><span data-stu-id="51d00-139">The following example shows how to get an ordered collection of binding elements contained in the current binding.</span></span>  
  
 [!code-csharp[S_dualhttp#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#20)]
 [!code-vb[S_dualhttp#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvelopeVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EnvelopeVersion EnvelopeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EnvelopeVersion EnvelopeVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.EnvelopeVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnvelopeVersion As EnvelopeVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EnvelopeVersion ^ EnvelopeVersion { System::ServiceModel::EnvelopeVersion ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EnvelopeVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-140">Obtiene la versión de SOAP que se utiliza para los mensajes procesados por este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-140">Gets the version of SOAP that is used for messages that are processed by this binding.</span></span></summary>
        <value><span data-ttu-id="51d00-141">El valor de <see cref="T:System.ServiceModel.EnvelopeVersion" /> que se utiliza con este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-141">The value of the <see cref="T:System.ServiceModel.EnvelopeVersion" /> that is used with this binding.</span></span> <span data-ttu-id="51d00-142">El valor siempre debe ser SOAP 1.2.</span><span class="sxs-lookup"><span data-stu-id="51d00-142">The value must always be SOAP 1.2.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-143">En el siguiente ejemplo se muestra cómo obtener la versión de SOAP que se utiliza para los mensajes que son procesados por este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-143">The following example shows how to get the version of SOAP that is used for messages that are processed by this binding.</span></span>  
  
 [!code-csharp[S_dualhttp#21](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#21)]
 [!code-vb[S_dualhttp#21](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-144">Obtiene o establece un valor que indica si el nombre del host se usa para alcanzar el servicio al coincidir con el URI.</span><span class="sxs-lookup"><span data-stu-id="51d00-144">Gets or sets a value that indicates whether the hostname is used to reach the service when matching the URI.</span></span></summary>
        <value><span data-ttu-id="51d00-145">Valor de <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> que indica si el nombre del host se usa para alcanzar el servicio cuando coincide con el URI.</span><span class="sxs-lookup"><span data-stu-id="51d00-145">The <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that indicates whether the hostname is used to reach the service when matching on the URI.</span></span> <span data-ttu-id="51d00-146">El valor predeterminado es <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, que omite el nombre del host en la coincidencia.</span><span class="sxs-lookup"><span data-stu-id="51d00-146">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-147">En el ejemplo siguiente se muestra cómo especificar el enlace wsDualHttpBinding en un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="51d00-147">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#9)]
 [!code-vb[S_dualhttp#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(524288)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-148">Obtiene o establece la cantidad máxima de memoria, en bytes, que se puede asignar al administrador de búferes de mensajes, que reciben los mensajes en los extremos configurados con este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-148">Gets or sets the maximum amount of memory, in bytes, that can be allocated for the manager of message buffers that receive messages at the endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="51d00-149">Tamaño máximo, en bytes, para el grupo de búferes que usa un punto de conexión configurado con este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-149">The maximum size, in bytes, for the pool of buffers used by an endpoint configured with this binding.</span></span> <span data-ttu-id="51d00-150">El valor predeterminado es 524288 bytes.</span><span class="sxs-lookup"><span data-stu-id="51d00-150">The default value is 524288 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-151"><xref:System.ServiceModel.Channels.BufferManager> reduce el costo que supone utilizar los búferes con un grupo de búferes.</span><span class="sxs-lookup"><span data-stu-id="51d00-151">The <xref:System.ServiceModel.Channels.BufferManager> minimizes the cost of using buffers with a buffer pool.</span></span> <span data-ttu-id="51d00-152">Es necesario que los búferes procesen los mensajes del servicio cuando salen del canal.</span><span class="sxs-lookup"><span data-stu-id="51d00-152">Buffers are required to process messages by the service when they come out of the channel.</span></span> <span data-ttu-id="51d00-153">Si no hay memoria suficiente en el grupo de búferes para procesar la carga de mensajes, <xref:System.ServiceModel.Channels.BufferManager> debe asignar memoria adicional del montón CLR, lo que aumenta la carga de trabajo de la recolección de elementos no utilizados.</span><span class="sxs-lookup"><span data-stu-id="51d00-153">If there is not sufficient memory in the buffer pool to process the message load, the <xref:System.ServiceModel.Channels.BufferManager> must allocate additional memory from the CLR heap, which increases the garbage collection overhead.</span></span> <span data-ttu-id="51d00-154">La amplia asignación del montón de elementos no utilizados de CLR es una indicación de que el tamaño del grupo de búferes es demasiado pequeño y de que el rendimiento podría mejorar con una asignación mayor aumentando el límite de <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="51d00-154">Extensive allocation from the CLR garbage heap is an indication that the buffer pool size is too small and that performance can be improved with a larger allocation by increasing the <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> limit.</span></span>  
  
 <span data-ttu-id="51d00-155">Las limitaciones en el tamaño de búfer establecidas aquí son para optimizar el rendimiento de intercambios de mensajes.</span><span class="sxs-lookup"><span data-stu-id="51d00-155">The limitations on buffer size set here are for optimizing the performance of message exchanges.</span></span> <span data-ttu-id="51d00-156">Si un mensaje supera el conjunto de valores máximos para el búfer, no se coloca.</span><span class="sxs-lookup"><span data-stu-id="51d00-156">If a message exceeds the maximum value set for the buffer, it is not dropped.</span></span> <span data-ttu-id="51d00-157">En su lugar, se solicita más memoria del montón CLR y esto ocasiona más sobrecarga de recolección de elementos no utilizados que utilizar los búferes.</span><span class="sxs-lookup"><span data-stu-id="51d00-157">Instead, more memory is requested from the CLR heap and this incurs more garbage collection overhead than using the buffers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-158">En el ejemplo siguiente se muestra cómo establecer `MaxBufferPoolSize`.</span><span class="sxs-lookup"><span data-stu-id="51d00-158">The following example shows how to set the `MaxBufferPoolSize`.</span></span>  
  
 [!code-csharp[S_dualhttp#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#10)]
 [!code-vb[S_dualhttp#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(65536)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-159">Obtiene o establece el tamaño máximo, en bytes, de un mensaje que se puede recibir en un canal configurado con este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-159">Gets or sets the maximum size, in bytes, for a message that can be received on a channel configured with this binding.</span></span></summary>
        <value><span data-ttu-id="51d00-160">El tamaño máximo, en bytes, de un mensaje que procesa el enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-160">The maximum size, in bytes, for a message that is processed by the binding.</span></span> <span data-ttu-id="51d00-161">El valor predeterminado es 65.536 bytes.</span><span class="sxs-lookup"><span data-stu-id="51d00-161">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-162">El tamaño de los mensajes que se pueden recibir durante la conexión a los servicios mediante <xref:System.ServiceModel.WSDualHttpBinding> está limitado por la cantidad de memoria asignada para cada mensaje.</span><span class="sxs-lookup"><span data-stu-id="51d00-162">The size of the messages that can be received on the wire by services using the <xref:System.ServiceModel.WSDualHttpBinding> is bounded by the amount of memory allocated for each message.</span></span> <span data-ttu-id="51d00-163">Este límite en el tamaño del mensaje es para limitar la exposición a ataques de estilo de DOS.</span><span class="sxs-lookup"><span data-stu-id="51d00-163">This bound on message size is intended to limit exposure to DOS-style attacks.</span></span>  
  
 <span data-ttu-id="51d00-164">Observe que la configuración de <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> y <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> son configuraciones de comportamiento locales.</span><span class="sxs-lookup"><span data-stu-id="51d00-164">Note that the settings for <xref:System.ServiceModel.WSDualHttpBinding.MaxBufferPoolSize%2A> and <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> are local behavioral settings.</span></span> <span data-ttu-id="51d00-165">Esto significa que no se transmiten a otros extremos en metadatos.</span><span class="sxs-lookup"><span data-stu-id="51d00-165">This means that they are not transmitted to other endpoints in metadata.</span></span> <span data-ttu-id="51d00-166">Si genera un proxy para un servicio con un tamaño máximo de mensaje de 2GB de metadatos, el proxy tendrá aún un valor predeterminado de 64 KB.</span><span class="sxs-lookup"><span data-stu-id="51d00-166">If you generate a proxy to a service with a maximum message size of 2GB from metadata, the proxy still has a default value 64K.</span></span> <span data-ttu-id="51d00-167">Esto deja el control de los límites adecuados para mensajes y tamaño de búfer de mensajes en manos de los administradores locales.</span><span class="sxs-lookup"><span data-stu-id="51d00-167">This leaves control of the appropriate bounds for message and message buffer size in the scope of local administrators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-168">En el ejemplo siguiente se muestra cómo obtener la propiedad <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="51d00-168">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.MaxReceivedMessageSize%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#22](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#22)]
 [!code-vb[S_dualhttp#22](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#22)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="51d00-169">El valor es menor que cero.</span><span class="sxs-lookup"><span data-stu-id="51d00-169">The value is less than zero.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MessageEncoding">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.WSMessageEncoding MessageEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.MessageEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageEncoding As WSMessageEncoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSMessageEncoding MessageEncoding { System::ServiceModel::WSMessageEncoding get(); void set(System::ServiceModel::WSMessageEncoding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSMessageEncoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-170">Obtiene o establece si se usa MTOM o texto/XML para codificar los mensajes SOAP.</span><span class="sxs-lookup"><span data-stu-id="51d00-170">Gets or sets whether MTOM or Text/XML is used to encode SOAP messages.</span></span></summary>
        <value><span data-ttu-id="51d00-171">El valor de <see cref="T:System.ServiceModel.WSMessageEncoding" /> que indica que se usa MTOM o texto/XML para codificar los mensajes SOAP.</span><span class="sxs-lookup"><span data-stu-id="51d00-171">The value of <see cref="T:System.ServiceModel.WSMessageEncoding" /> that indicates that MTOM or Text/XML is used to encode SOAP messages.</span></span> <span data-ttu-id="51d00-172">El valor predeterminado es <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-172">The default value is <see cref="F:System.ServiceModel.WSMessageEncoding.Text" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-173">En el siguiente ejemplo, se muestra cómo establecer la propiedad `WSMessageEncoding` como MTOM.</span><span class="sxs-lookup"><span data-stu-id="51d00-173">The following example shows how to set the `WSMessageEncoding` property to MTOM.</span></span>  
  
 [!code-csharp[S_dualhttp#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#11)]
 [!code-vb[S_dualhttp#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProxyAddress">
      <MemberSignature Language="C#" Value="public Uri ProxyAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri ProxyAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ProxyAddress" />
      <MemberSignature Language="VB.NET" Value="Public Property ProxyAddress As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ ProxyAddress { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-174">Obtiene o establece la dirección URI del proxy HTTP.</span><span class="sxs-lookup"><span data-stu-id="51d00-174">Gets or sets the URI address of the HTTP proxy.</span></span></summary>
        <value><span data-ttu-id="51d00-175"><see cref="T:System.Uri" /> que se usa como la dirección del proxy HTTP.</span><span class="sxs-lookup"><span data-stu-id="51d00-175">A <see cref="T:System.Uri" /> that serves as the address of the HTTP proxy.</span></span> <span data-ttu-id="51d00-176">El valor predeterminado es <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-176">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-177">Si <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> se establece en `true`, se omite el valor de <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A>.</span><span class="sxs-lookup"><span data-stu-id="51d00-177">If the <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A> is set to `true`, the value of the <xref:System.ServiceModel.WSDualHttpBinding.ProxyAddress%2A> is ignored.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-178">En el ejemplo siguiente se muestra cómo especificar la dirección del proxy HTTP.</span><span class="sxs-lookup"><span data-stu-id="51d00-178">The following example shows how to specify the address of the HTTP proxy.</span></span>  
  
 [!code-csharp[S_dualhttp#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#12)]
 [!code-vb[S_dualhttp#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas ReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property ReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ ReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-179">Obtiene o establece restricciones en la complejidad de mensajes SOAP que pueden ser procesados por puntos de conexión configurados con este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-179">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="51d00-180"><see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> que especifica las restricciones de complejidad.</span><span class="sxs-lookup"><span data-stu-id="51d00-180">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-181">Las restricciones de complejidad incluyen elementos como una profundidad máxima de elemento y una longitud máxima para el contenido de la cadena dentro del mensaje.</span><span class="sxs-lookup"><span data-stu-id="51d00-181">The complexity constraints include items such as a maximum element depth and a maximum length for string content within the message.</span></span> <span data-ttu-id="51d00-182">Las restricciones protegen contra una clase de ataques por denegación de servicio (DOS) que intentan utilizar la complejidad del mensaje para atar los recursos de procesamiento del punto de conexión.</span><span class="sxs-lookup"><span data-stu-id="51d00-182">The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-183">En el ejemplo siguiente se muestra cómo obtener la propiedad `ReaderQuotas`.</span><span class="sxs-lookup"><span data-stu-id="51d00-183">The following example shows how to get the `ReaderQuotas` property.</span></span>  
  
 [!code-csharp[S_dualhttp#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#13)]
 [!code-vb[S_dualhttp#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReliableSession">
      <MemberSignature Language="C#" Value="public System.ServiceModel.ReliableSession ReliableSession { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ReliableSession ReliableSession" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Property ReliableSession As ReliableSession" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::ReliableSession ^ ReliableSession { System::ServiceModel::ReliableSession ^ get(); void set(System::ServiceModel::ReliableSession ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ReliableSession</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-184">Obtiene un objeto que proporciona acceso conveniente a las propiedades de un elemento de enlace de la sesión confiable que están disponibles al utilizar uno de los enlaces proporcionados por el sistema.</span><span class="sxs-lookup"><span data-stu-id="51d00-184">Gets an object that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></summary>
        <value><span data-ttu-id="51d00-185"><see cref="T:System.ServiceModel.ReliableSession" /> que proporciona acceso conveniente a las propiedades de un elemento de enlace de la sesión confiable que están disponibles al utilizar uno de los enlaces proporcionados por el sistema.</span><span class="sxs-lookup"><span data-stu-id="51d00-185">The <see cref="T:System.ServiceModel.ReliableSession" /> that provides convenient access to the properties of a reliable session binding element that are available when using one of the system-provided bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-186">La sesión confiable se requiere para el servicio configurado con <xref:System.ServiceModel.WSDualHttpBinding>.</span><span class="sxs-lookup"><span data-stu-id="51d00-186">The reliable session is required for service configured with a <xref:System.ServiceModel.WSDualHttpBinding>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-187">En el ejemplo siguiente se muestra cómo obtener la propiedad <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A>.</span><span class="sxs-lookup"><span data-stu-id="51d00-187">The following example shows how to get the <xref:System.ServiceModel.WSDualHttpBinding.ReliableSession%2A> property.</span></span>  
  
 [!code-csharp[S_dualhttp#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#14)]
 [!code-vb[S_dualhttp#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scheme">
      <MemberSignature Language="C#" Value="public override string Scheme { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scheme" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Scheme" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Scheme As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Scheme { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-188">Obtiene el esquema de transporte de URI para los canales y agentes de escucha que se configuran con este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-188">Gets the URI transport scheme for the channels and listeners that are configured with this binding.</span></span></summary>
        <value><span data-ttu-id="51d00-189">Esquema de transporte: "http".</span><span class="sxs-lookup"><span data-stu-id="51d00-189">The transport scheme: "http".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-190">En el ejemplo siguiente se muestra cómo especificar el enlace wsDualHttpBinding en un archivo de configuración.</span><span class="sxs-lookup"><span data-stu-id="51d00-190">The following example shows how to specify the wsDualHttpBinding binding in a configuration file.</span></span>  
  
 [!code-csharp[S_dualhttp#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#15)]
 [!code-vb[S_dualhttp#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.WSDualHttpSecurity Security { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.WSDualHttpSecurity Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.Security" />
      <MemberSignature Language="VB.NET" Value="Public Property Security As WSDualHttpSecurity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::WSDualHttpSecurity ^ Security { System::ServiceModel::WSDualHttpSecurity ^ get(); void set(System::ServiceModel::WSDualHttpSecurity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.WSDualHttpSecurity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-191">Obtiene un objeto que especifica la configuración de seguridad utilizados con este enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-191">Gets an object that specifies the security settings used with this binding.</span></span></summary>
        <value><span data-ttu-id="51d00-192"><see cref="T:System.ServiceModel.WSDualHttpSecurity" /> que especifica los valores de seguridad usados con el enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-192">The <see cref="T:System.ServiceModel.WSDualHttpSecurity" /> that specifies security settings used with the binding.</span></span> <span data-ttu-id="51d00-193">El valor predeterminado de <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> es <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-193">The default value of <see cref="T:System.ServiceModel.WSDualHttpSecurityMode" /> is <see cref="F:System.ServiceModel.WSDualHttpSecurityMode.Message" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-194">Un enlace dual expone la dirección IP del cliente al servicio.</span><span class="sxs-lookup"><span data-stu-id="51d00-194">A dual binding exposes the IP address of the client to the service.</span></span> <span data-ttu-id="51d00-195">El cliente debería utilizar la seguridad para asegurarse de que sólo se conecta a servicios de confianza.</span><span class="sxs-lookup"><span data-stu-id="51d00-195">The client should use security to ensure that it only connects to services it trusts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-196">En el siguiente ejemplo se muestra cómo obtener el tipo de seguridad del enlace.</span><span class="sxs-lookup"><span data-stu-id="51d00-196">The following example shows how to get the type of security of the binding.</span></span>  
  
 [!code-csharp[S_dualhttp#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#16)]
 [!code-vb[S_dualhttp#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReaderQuotas">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReaderQuotas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReaderQuotas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReaderQuotas () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReaderQuotas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51d00-197">Devuelve un valor que indica si la propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> ha cambiado respecto de su valor predeterminado y se debe serializar.</span><span class="sxs-lookup"><span data-stu-id="51d00-197">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="51d00-198">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> debe serializarse; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-198"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReaderQuotas" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeReliableSession">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeReliableSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeReliableSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeReliableSession" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeReliableSession () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeReliableSession();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51d00-199">Devuelve un valor que indica si la propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> ha cambiado respecto de su valor predeterminado y se debe serializar.</span><span class="sxs-lookup"><span data-stu-id="51d00-199">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="51d00-200">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> debe serializarse; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-200"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.ReliableSession" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSecurity">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSecurity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSecurity() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSecurity () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSecurity();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51d00-201">Devuelve un valor que indica si la propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> ha cambiado respecto de su valor predeterminado y se debe serializar.</span><span class="sxs-lookup"><span data-stu-id="51d00-201">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="51d00-202">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> debe serializarse; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-202"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.Security" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTextEncoding">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTextEncoding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTextEncoding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.WSDualHttpBinding.ShouldSerializeTextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTextEncoding () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTextEncoding();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="51d00-203">Devuelve un valor que indica si la propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> ha cambiado respecto de su valor predeterminado y se debe serializar.</span><span class="sxs-lookup"><span data-stu-id="51d00-203">Returns a value that indicates whether the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property has changed from its default value and should be serialized.</span></span></summary>
        <returns>
          <span data-ttu-id="51d00-204">Es <see langword="true" /> si el valor de propiedad <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> debe serializarse; en caso contrario, es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-204"><see langword="true" /> if the <see cref="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously">
      <MemberSignature Language="C#" Value="bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ReceiveSynchronously As Boolean Implements IBindingRuntimePreferences.ReceiveSynchronously" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-205">Obtiene un valor que indica si las solicitudes de entrada se administran de forma sincrónica o asincrónica.</span><span class="sxs-lookup"><span data-stu-id="51d00-205">Gets a value that indicates whether incoming requests are handled synchronously or asynchronously.</span></span></summary>
        <value>
          <span data-ttu-id="51d00-206"><see langword="true" /> si se administran las solicitudes sincrónicamente; <see langword="false" /> si se administran de forma asincrónica.</span><span class="sxs-lookup"><span data-stu-id="51d00-206"><see langword="true" /> if requests are handled synchronously; <see langword="false" /> if handled asynchronously.</span></span> <span data-ttu-id="51d00-207">El valor devuelto es siempre es <see langword="false" />, administrar de forma asincrónica las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="51d00-207">The value returned is always is <see langword="false" />, to handle requests asynchronously.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-208">Este valor se puede cambiar utilizando un comportamiento de modelo de servicio.</span><span class="sxs-lookup"><span data-stu-id="51d00-208">This value can be changed by using a service model behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-209">En el siguiente ejemplo se muestra cómo obtener el valor <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A>.</span><span class="sxs-lookup"><span data-stu-id="51d00-209">The following examples show how to get the <xref:System.ServiceModel.WSDualHttpBinding.System%23ServiceModel%23Channels%23IBindingRuntimePreferences%23ReceiveSynchronously%2A> value.</span></span>  
  
 [!code-csharp[S_dualhttp#23](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#23)]
 [!code-vb[S_dualhttp#23](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#23)]  
  
 [!code-csharp[S_dualhttp#24](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#24)]
 [!code-vb[S_dualhttp#24](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#24)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextEncoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding TextEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding TextEncoding" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TextEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Property TextEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ TextEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.EncodingConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-210">Obtiene o establece la codificación de caracteres que se usa para el texto del mensaje.</span><span class="sxs-lookup"><span data-stu-id="51d00-210">Gets or sets the character encoding that is used for the message text.</span></span></summary>
        <value><span data-ttu-id="51d00-211"><see cref="T:System.Text.Encoding" /> que indica la codificación de caracteres que se usa.</span><span class="sxs-lookup"><span data-stu-id="51d00-211">The <see cref="T:System.Text.Encoding" /> that indicates the character encoding that is used.</span></span> <span data-ttu-id="51d00-212">El valor predeterminado es <see cref="T:System.Text.UTF8Encoding" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-212">The default is <see cref="T:System.Text.UTF8Encoding" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-213">En el siguiente ejemplo se muestra cómo obtener la codificación de caracteres que se utiliza para el texto del mensaje.</span><span class="sxs-lookup"><span data-stu-id="51d00-213">The following example shows how to get the character encoding that is used for the message text.</span></span>  
  
 [!code-csharp[S_dualhttp#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#17)]
 [!code-vb[S_dualhttp#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-214">Obtiene o establece un valor que indica si este enlace debería admitir las transacciones WS de flujo.</span><span class="sxs-lookup"><span data-stu-id="51d00-214">Gets or sets a value that indicates whether this binding should support flowing WS-Transactions.</span></span></summary>
        <value>
          <span data-ttu-id="51d00-215"><see langword="true" /> si se admite el flujo de transacciones; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-215"><see langword="true" /> if the flowing of transactions is supported; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="51d00-216">El valor predeterminado es <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-216">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="51d00-217">El valor predeterminado especifica que los clientes no fluyen las transacciones y que los servicios rechazan los mensajes con un encabezado de mensaje de la transacción de flujo.</span><span class="sxs-lookup"><span data-stu-id="51d00-217">The default value specifies that clients do not flow transactions and services reject messages with a flowed transaction message header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="51d00-218">En el siguiente ejemplo se muestra cómo establecer la propiedad `TransactionFlow` para admitir el flujo de transacciones.</span><span class="sxs-lookup"><span data-stu-id="51d00-218">The following example shows how to set the `TransactionFlow` property to support the flowing of transactions.</span></span>  
  
 [!code-csharp[S_dualhttp#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#18)]
 [!code-vb[S_dualhttp#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#18)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultWebProxy">
      <MemberSignature Language="C#" Value="public bool UseDefaultWebProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultWebProxy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultWebProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultWebProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="51d00-219">Obtiene o establece un valor que indica si se debería usar el proxy HTTP del sistema configurado automáticamente, si está disponible.</span><span class="sxs-lookup"><span data-stu-id="51d00-219">Gets or sets a value that indicates whether the auto-configured HTTP proxy of the system should be used, if available.</span></span></summary>
        <value>
          <span data-ttu-id="51d00-220"><see langword="true" /> si se debería usar el proxy HTTP configurado automáticamente del sistema, si está disponible; de lo contrario, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-220"><see langword="true" /> if the auto-configured HTTP proxy of the system should be used, if available; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="51d00-221">El valor predeterminado es <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="51d00-221">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="51d00-222">En el siguiente ejemplo se muestra cómo establecer la propiedad `UseDefaultWebProxy` para que utilice el proxy HTTP del sistema configurado automáticamente.</span><span class="sxs-lookup"><span data-stu-id="51d00-222">The following example shows how to set the `UseDefaultWebProxy` property to use the auto-configured HTTP proxy of the system.</span></span>  
  
 [!code-csharp[S_dualhttp#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_dualhttp/cs/program.cs#19)]
 [!code-vb[S_dualhttp#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_dualhttp/vb/module1.vb#19)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>