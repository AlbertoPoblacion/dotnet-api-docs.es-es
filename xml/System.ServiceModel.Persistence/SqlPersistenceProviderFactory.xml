<Type Name="SqlPersistenceProviderFactory" FullName="System.ServiceModel.Persistence.SqlPersistenceProviderFactory">
  <Metadata><Meta Name="ms.openlocfilehash" Value="788b41649d0586c96ba4f4a09d138d9bb40d07e1" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48770099" /></Metadata><TypeSignature Language="C#" Value="public class SqlPersistenceProviderFactory : System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlPersistenceProviderFactory extends System.ServiceModel.Persistence.PersistenceProviderFactory" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlPersistenceProviderFactory&#xA;Inherits PersistenceProviderFactory" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPersistenceProviderFactory : System::ServiceModel::Persistence::PersistenceProviderFactory" />
  <TypeSignature Language="F#" Value="type SqlPersistenceProviderFactory = class&#xA;    inherit PersistenceProviderFactory" />
  <AssemblyInfo>
    <AssemblyName>System.WorkflowServices</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Persistence.PersistenceProviderFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementación de <see cref="T:System.ServiceModel.Persistence.PersistenceProviderFactory" /> proporcionada por el sistema usada para crear una instancia de <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" />, que usa una base de datos SQL para almacenar datos de estado del servicio guardado.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La clase <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> representa una clase de generador de un proveedor de persistencia de un servicio duradero y completamente funcional. Puede usar este proveedor proporcionado por el sistema para conservar y recuperar información de estado sobre un servicio WCF duradero.  
  
 Además de la persistencia, el proveedor creado por la clase <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>, implementa el bloqueo de los registros de datos de estado del servicio heredando de la clase <xref:System.ServiceModel.Persistence.LockingPersistenceProvider> abstracta.  Los métodos que interactúan con datos guardados (como <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Create%2A> o <xref:System.ServiceModel.Persistence.LockingPersistenceProvider.Update%2A>) poseen un parámetro opcional (`lockInstance`) que define si se publicadas o se mantienen bloqueos en los datos en cuestión.  
  
> [!NOTE]
>  Las excepciones <xref:System.ServiceModel.Persistence.PersistenceException> producidas por <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> no tienen los detalles de la excepción ocultos de forma predeterminada. Para protegerse contra las vulnerabilidades de seguridad, estos detalles se pueden ocultar estableciendo <xref:System.Workflow.Activities.WorkflowServiceAttributes.IncludeExceptionDetailInFaults%2A> a `false`.  
  
> [!NOTE]
>  El proveedor de persistencia SQL almacena y recupera los datos desde una base de datos de SQL Server. El host debe crear un entorno de SQL Server seguro como protección frente a atacantes que obtengan acceso de lectura y escritura al estado de la instancia, tanto en la base de datos, como en la conexión entre ésta y la aplicación.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Las sobrecargas del constructor para la clase <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> proporcionan los parámetros para establecer los siguientes valores:  
  
-   Cadena de conexión usada para obtener acceso a la base de datos SQL.  
  
-   Tiempo de espera del bloqueo usado para definir la duración de la propiedad del bloqueo.  
  
-   Si se serializan los datos de persistencia como XML o como datos binarios.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (System.Collections.Specialized.NameValueCollection parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Specialized.NameValueCollection parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameters As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::Collections::Specialized::NameValueCollection ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : System.Collections.Specialized.NameValueCollection -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory parameters" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameters" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="parameters">Colección de parámetros utilizada por el nuevo generador de proveedores de persistencia. Los parámetros válidos incluyen <see langword="lockTimeout" />, <see langword="connectionStringName" />, y <see langword="serializeAsText" />.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, configurada con la colección de parámetros específica.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Este constructor puede utilizarse para especificar arbitrariamente `lockTimeout`, `connectionString`y `serializeAsText`, sin especificar otros parámetros como exigen otros constructores (por ejemplo, especificar los parámetros `connectionString` y `lockTimeout`, sin especificar el parámetro `serializeAsText`.)  
  
   
  
## Examples  
 El siguiente ejemplo de código muestra cómo crear una nueva instancia de la clase <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> mediante una colección de parámetros.  
  
 [!code-csharp[SqlPersistenceProviderFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Los parámetros de conexión de la nueva instancia del proveedor de persistencia.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, configurada con la cadena de conexión especificada.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código muestra cómo crear una nueva instancia de la clase <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory> mediante una cadena de conexión.  
  
 [!code-csharp[SqlPersistenceProviderFactory#2](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="connectionString">Los parámetros de conexión de la nueva instancia del proveedor de persistencia.</param>
        <param name="serializeAsText">Especifica si los datos se serializan como texto en lugar de como datos binarios.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, configurada con la cadena de conexión especificada y los parámetros <see langword="serializeAsText" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado de `serializeAsText` es `false`, lo que indica que esa información de persistencia se serializará como datos binarios.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo crear una nueva instancia de la clase <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.  
  
 [!code-csharp[SqlPersistenceProviderFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlPersistenceProviderFactory (string connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, bool serializeAsText, valuetype System.TimeSpan lockTimeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.#ctor(System.String,System.Boolean,System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, serializeAsText As Boolean, lockTimeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlPersistenceProviderFactory(System::String ^ connectionString, bool serializeAsText, TimeSpan lockTimeout);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory : string * bool * TimeSpan -&gt; System.ServiceModel.Persistence.SqlPersistenceProviderFactory" Usage="new System.ServiceModel.Persistence.SqlPersistenceProviderFactory (connectionString, serializeAsText, lockTimeout)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="serializeAsText" Type="System.Boolean" />
        <Parameter Name="lockTimeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="connectionString">Los parámetros de conexión de la nueva instancia del generador de proveedores de persistencia.</param>
        <param name="serializeAsText">Especifica si los datos se serializan como texto en lugar de como datos binarios.</param>
        <param name="lockTimeout">Tiempo de espera de la propiedad del bloqueo. Las instancias bloqueadas se desbloquean automáticamente una vez finalizado este tiempo. Un tiempo de espera de <see langword="TimeSpan.Zero" />especifica que no se usa ningún bloqueo.</param>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.ServiceModel.Persistence.SqlPersistenceProviderFactory" />, configurada con la cadena de conexión especificada, <see langword="serializeAsText" />, y los parámetros <see langword="lockTimeout" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado de `serializeAsText` es `false`, lo que indica que esa información de persistencia se serializará como datos binarios.  
  
 El valor predeterminado de `lockTimeout` es `TimeSpan.Zero`, lo que indica que el bloqueo no se utiliza. Si `TimeSpan.MaxValue` se usa, a continuación, los bloqueos se mantienen indefinidamente.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo crear una nueva instancia de la clase <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory>.  
  
 [!code-csharp[SqlPersistenceProviderFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene los parámetros de conexión para las instancias del proveedor de persistencia creadas con este generador.</summary>
        <value>Los parámetros de conexión para las instancias del proveedor de persistencia creadas con este generador.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El siguiente ejemplo de código muestra cómo establecer y tener acceso a la propiedad `ConnectionString`.  
  
 [!code-csharp[SqlPersistenceProviderFactory#4](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProvider">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Persistence.PersistenceProvider CreateProvider (Guid id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Persistence.PersistenceProvider CreateProvider(valuetype System.Guid id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.CreateProvider(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateProvider (id As Guid) As PersistenceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Persistence::PersistenceProvider ^ CreateProvider(Guid id);" />
      <MemberSignature Language="F#" Value="override this.CreateProvider : Guid -&gt; System.ServiceModel.Persistence.PersistenceProvider" Usage="sqlPersistenceProviderFactory.CreateProvider id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Persistence.PersistenceProvider</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="id">El identificador único del proveedor de persistencia que se está creando.</param>
        <summary>Inicializa una nueva instancia <see cref="T:System.ServiceModel.Persistence.LockingPersistenceProvider" /> que utiliza una base de datos SQL como almacén de persistencia.</summary>
        <returns>Una clase <see cref="T:System.ServiceModel.Persistence.PersistenceProvider" /> recién creada.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El proveedor de persistencia inicializado usa los parámetros actuales del generador de creación (<xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.ConnectionString%2A>, <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout%2A> y <xref:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText%2A>), aunque se cambien los parámetros del generador una vez creado el proveedor de persistencia.  
  
   
  
## Examples  
 El siguiente ejemplo de código muestra cómo ejecutar el método `CreateProvider`. Tenga en cuenta que se obtiene acceso al proveedor resultante como si se tratase de una instancia <xref:System.ServiceModel.Persistence.LockingPersistenceProvider>.  
  
 [!code-csharp[SqlPersistenceProviderFactory#7](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCloseTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultCloseTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de tiempo de espera predeterminado utilizado cuando se cierran los proveedores de persistencia creados con este generador.</summary>
        <value>El valor del tiempo de espera predeterminado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado para el tiempo de espera de cierre es de 15 segundos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultOpenTimeout : TimeSpan" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.DefaultOpenTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene el valor de tiempo de espera predeterminado utilizado cuando se abre el proveedor de persistencia.</summary>
        <value>El valor del tiempo de espera predeterminado.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado para el tiempo de espera de apertura es de 15 segundos.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan LockTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan LockTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property LockTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan LockTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.LockTimeout : TimeSpan with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.LockTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tiempo de espera de la propiedad del bloqueo que utilizan las instancias del proveedor de persistencia creadas por esta instancia. Las instancias bloqueadas se desbloquean automáticamente una vez finalizado este tiempo.</summary>
        <value>El valor del tiempo de espera de la propiedad del bloqueo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un tiempo de espera de `TimeSpan.Zero`especifica que no se usa ningún bloqueo.  
  
   
  
## Examples  
 El siguiente ejemplo de código muestra cómo obtener acceso a la propiedad `LockTimeout`.  
  
 [!code-csharp[SqlPersistenceProviderFactory#5](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberSignature Language="F#" Value="override this.OnAbort : unit -&gt; unit" Usage="sqlPersistenceProviderFactory.OnAbort " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Representa la fase Abort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `OnAbort` se desencadena cuando el host de servicio se cierra repentinamente y los comandos activos que se estaban procesados se cierran.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginClose : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginClose (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Período de tiempo después del cual el proveedor de persistencia anula este intento.</param>
        <param name="callback">Método al que se llama una vez completada la operación.</param>
        <param name="state">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</param>
        <summary>Representa el principio de la fase Close.</summary>
        <returns>El estado de la llamada de método asincrónico <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase Close se produce al cerrar el servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.OnBeginOpen : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="sqlPersistenceProviderFactory.OnBeginOpen (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">Período de tiempo después del cual el proveedor de persistencia anula este intento.</param>
        <param name="callback">Método al que se llama una vez completada la operación.</param>
        <param name="state">Objeto proporcionado por el usuario que distingue esta operación asincrónica concreta de otras.</param>
        <summary>Representa el principio de la fase Open.</summary>
        <returns>El estado de la llamada de método asincrónico <see cref="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase Open se produce al abrir el servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnClose : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnClose timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Período de tiempo después del cual el proveedor de persistencia anula este intento.</param>
        <summary>Representa la fase Close.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase Close se produce al cerrar el servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndClose : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndClose result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Referencia al resultado de la operación.</param>
        <summary>Representa el fin de la fase Close.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase Close se produce al cerrar el servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="override this.OnEndOpen : IAsyncResult -&gt; unit" Usage="sqlPersistenceProviderFactory.OnEndOpen result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Referencia al resultado de la operación.</param>
        <summary>Representa el fin de la fase Open.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase Open se produce al abrir el servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="override this.OnOpen : TimeSpan -&gt; unit" Usage="sqlPersistenceProviderFactory.OnOpen timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">Período de tiempo después del cual el proveedor de persistencia anula este intento.</param>
        <summary>Representa la fase Open.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La fase Open se produce al abrir el servicio.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsText">
      <MemberSignature Language="C#" Value="public bool SerializeAsText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SerializeAsText" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberSignature Language="VB.NET" Value="Public Property SerializeAsText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SerializeAsText { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SerializeAsText : bool with get, set" Usage="System.ServiceModel.Persistence.SqlPersistenceProviderFactory.SerializeAsText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.WorkflowServices</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Especifica si, en los proveedores de persistencia creados con este generador, los datos se serializan como texto en lugar de como datos binarios.</summary>
        <value><see langword="true" /> si la información de servicio se serializa como texto; de lo contrario, es <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El valor predeterminado de `serializeAsText` es `false`, lo que indica que esa información de persistencia se serializará como datos binarios.  
  
   
  
## Examples  
 El siguiente ejemplo de código muestra cómo obtener acceso a la propiedad `SerializeAsText`.  
  
 [!code-csharp[SqlPersistenceProviderFactory#6](~/samples/snippets/csharp/VS_Snippets_CFX/sqlpersistenceproviderfactory/cs/sqlpersistenceproviderfactory.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>