<Type Name="IPendingWork" FullName="System.Workflow.Runtime.IPendingWork">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a519061d31a9ba6f2445be7c69497c588a08f3af" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48721355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPendingWork" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPendingWork" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.IPendingWork" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPendingWork" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPendingWork" />
  <TypeSignature Language="F#" Value="type IPendingWork = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona los métodos para participar en un lote de trabajo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 La interfaz <xref:System.Workflow.Runtime.IPendingWork> se proporciona para los servicios que quieren participar en el mecanismo por lotes del motor en tiempo de ejecución de flujo de trabajo. El mecanismo por lotes es especialmente útil para los servicios que utilizan un almacén duradero. A menudo es importante en estos casos para mantener la coherencia entre el almacén duradero utilizado por el servicio y el estado interno del motor en tiempo de ejecución de flujo de trabajo.  
  
 Si desea que su servicio participe en el procesamiento por lotes de transacción de flujo de trabajo proporcionado por <xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService>, debe implementar los métodos definidos por la interfaz <xref:System.Workflow.Runtime.IPendingWork>. El motor en tiempo de ejecución de flujo de trabajo llamará al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> en su servicio para confirmar el lote.  
  
 La clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> implementa la interfaz <xref:System.Workflow.Runtime.IPendingWork>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Commit">
      <MemberSignature Language="C#" Value="public void Commit (System.Transactions.Transaction transaction, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Commit(class System.Transactions.Transaction transaction, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Commit(System.Transactions.Transaction,System.Collections.ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Commit(System::Transactions::Transaction ^ transaction, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Commit : System.Transactions.Transaction * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Commit (transaction, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transaction" Type="System.Transactions.Transaction" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="transaction">La clase <see cref="T:System.Transactions.Transaction" /> asociada a este trabajo pendiente.</param>
        <param name="items">Los elementos de trabajo que se van a confirmar.</param>
        <summary>Confirma la lista de elementos de trabajo utilizando el objeto <see cref="T:System.Transactions.Transaction" /> especificado.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El motor en tiempo de ejecución de flujo de trabajo llama al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> cuando su semántica dicta que se debería confirmar el trabajo pendiente en el lote de trabajo. Cuando llega a un punto de la confirmación, el motor en tiempo de ejecución de flujo de trabajo llama al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> en cada objeto <xref:System.Workflow.Runtime.IPendingWork> en su lote de trabajo; el motor en tiempo de ejecución de flujo de trabajo pasa el método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> a la colección de elementos asociada a ese objeto <xref:System.Workflow.Runtime.IPendingWork>. O se ejecuta correctamente todo el trabajo en un lote o ninguno lo hará. Debería iniciar una excepción si no se puede confirmar alguno de los elementos de trabajo pasa al método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> en su implementación. Dependiendo de su implementación, puede querer realizar alguna reversión en su método <xref:System.Workflow.Runtime.IPendingWork.Commit%2A> si no puede confirmar sus elementos de trabajo. Si el motor en tiempo de ejecución de flujo de trabajo confirma correctamente todo el trabajo en el lote de trabajo, llama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con el parámetro `succeeded` establecido en `true`; de lo contrario, llama <xref:System.Workflow.Runtime.IPendingWork.Complete%2A> con `succeeded` establecido en `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete (bool succeeded, System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete(bool succeeded, class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.Complete(System.Boolean,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete (succeeded As Boolean, items As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete(bool succeeded, System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member Complete : bool * System.Collections.ICollection -&gt; unit" Usage="iPendingWork.Complete (succeeded, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="succeeded" Type="System.Boolean" />
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="succeeded">Es <see langword="true" /> si la transacción se realiza correctamente; de lo contrario, es <see langword="false" />.</param>
        <param name="items">Un <see cref="T:System.Collections.ICollection" /> de elementos de trabajo.</param>
        <summary>Llamado cuando se ha completado la transacción.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `succeeded` es `true`, la transacción se ejecutó correctamente y se pueden liberar los recursos utilizado por el lote de trabajo. Si `succeeded` es `false`, se produjo un error en la transacción. Dependiendo de su implementación, puede realizar una reversión adecuada sobre el trabajo en el lote de trabajo cuando se produzca un error en la transacción.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MustCommit">
      <MemberSignature Language="C#" Value="public bool MustCommit (System.Collections.ICollection items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MustCommit(class System.Collections.ICollection items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.Runtime.IPendingWork.MustCommit(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function MustCommit (items As ICollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool MustCommit(System::Collections::ICollection ^ items);" />
      <MemberSignature Language="F#" Value="abstract member MustCommit : System.Collections.ICollection -&gt; bool" Usage="iPendingWork.MustCommit items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="items">Un <see cref="T:System.Collections.ICollection" /> de elementos de trabajo.</param>
        <summary>Permite que los elementos en el lote de trabajo afirmen cuando deben confirmar inmediatamente.</summary>
        <returns>
          <see langword="true" /> si se debe confirmar cualquier elemento de la colección inmediatamente; de lo contrario, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Workflow.Runtime.IPendingWork.MustCommit%2A> devuelve `false`, el trabajo se puede posponer a un punto posterior de la confirmación. Si se debe confirmar cualquiera de los elementos, a continuación, devuelva `true` y todos los elementos se confirmarán en el punto actual de la confirmación. Para obtener una discusión de posibles puntos de la confirmación, vea la clase <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>