<Type Name="WorkflowEventArgs" FullName="System.Workflow.Runtime.WorkflowEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="260d4c31e05a92ceb2f2e58402a99cd47801f3bd" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36445533" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WorkflowEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.Runtime.WorkflowEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type WorkflowEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Proporciona los datos para los eventos de flujo de trabajo.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Los eventos de flujo de trabajo están asociados a una instancia de flujo de trabajo. <xref:System.Workflow.Runtime.WorkflowEventArgs> contiene <xref:System.Workflow.Runtime.WorkflowInstance> asociado al evento de flujo de trabajo. <xref:System.Workflow.Runtime.WorkflowEventArgs> o un objeto que deriva de la clase <xref:System.Workflow.Runtime.WorkflowEventArgs> proporciona los datos para todos los eventos de flujo de trabajo en la clase <xref:System.Workflow.Runtime.WorkflowRuntime>. <xref:System.Workflow.Runtime.WorkflowEventArgs> es la clase base de <xref:System.Workflow.Runtime.WorkflowCompletedEventArgs>, <xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs> y <xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs>.  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra cómo obtener un objeto <xref:System.Workflow.Runtime.WorkflowInstance> mediante la propiedad <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> cuando se llama a un método de control de eventos. Cuando se produce el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, se llama al método `OnWorkflowIdled` definido en este ejemplo. Determina qué flujo de trabajo está inactivo utilizando la propiedad <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> y, a continuación, obtiene una colección de elementos en cola para la instancia de flujo de trabajo llamando al método <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>. El código itera sobre la colección para determinar qué actividad está esperando para el evento que ralentizó el flujo de trabajo. Envía a continuación una excepción a la cola del flujo de trabajo utilizando el método <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> junto con el nombre del elemento de cola de evento.  
  
 Este ejemplo de código forma parte de la muestra de SDK Cancelar un Flujo de trabajo, del archivo Program.cs. Para obtener más información, consulte [cancelar un flujo de trabajo](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="WorkflowInstance">
      <MemberSignature Language="C#" Value="public System.Workflow.Runtime.WorkflowInstance WorkflowInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.Runtime.WorkflowInstance WorkflowInstance" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WorkflowInstance As WorkflowInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Workflow::Runtime::WorkflowInstance ^ WorkflowInstance { System::Workflow::Runtime::WorkflowInstance ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WorkflowInstance : System.Workflow.Runtime.WorkflowInstance" Usage="System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.Runtime.WorkflowInstance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la instancia de flujo de trabajo asociada al evento de flujo de trabajo.</summary>
        <value>
          <see cref="T:System.Workflow.Runtime.WorkflowInstance" /> asociado al evento de flujo de trabajo.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 El ejemplo de código siguiente muestra cómo obtener un objeto <xref:System.Workflow.Runtime.WorkflowInstance> mediante la propiedad <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> cuando se llama a un método de control de eventos. Cuando se produce el evento <xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled>, se llama al método `OnWorkflowIdled` definido en este ejemplo. Determina qué flujo de trabajo está inactivo utilizando la propiedad <xref:System.Workflow.Runtime.WorkflowEventArgs.WorkflowInstance%2A> y, a continuación, obtiene una colección de elementos en cola para la instancia de flujo de trabajo llamando al método <xref:System.Workflow.Runtime.WorkflowInstance.GetWorkflowQueueData%2A>. El código itera sobre la colección para determinar qué actividad está esperando para el evento que ralentizó el flujo de trabajo. Envía a continuación una excepción a la cola del flujo de trabajo utilizando el método <xref:System.Workflow.Runtime.WorkflowInstance.EnqueueItem%2A> junto con el nombre del elemento de cola de evento.  
  
 Este ejemplo de código forma parte de la muestra de SDK Cancelar un Flujo de trabajo, del archivo Program.cs. Para obtener más información, consulte [cancelar un flujo de trabajo](http://msdn.microsoft.com/library/d5077f56-a78b-48e7-825c-f6c77c8e54fb).  
  
 [!code-csharp[WF_Samples#261](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets24.cs#261)]
 [!code-vb[WF_Samples#261](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets24.vb#261)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>