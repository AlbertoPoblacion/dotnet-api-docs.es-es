<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowRuntime.xml" source-language="en-US" target-language="es-ES">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72b56222b135353cb74ae07f5080a11e67e2b1dc21.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b56222b135353cb74ae07f5080a11e67e2b1dc21</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Represents the configurable execution environment provided by the workflow run-time engine for workflows.</source>
          <target state="translated">Representa el entorno de ejecución configurable proporcionado por el motor en tiempo de ejecución de flujo de trabajo para los flujos de trabajo.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> exposes functionality required by a host application and services to configure and control the workflow run-time engine and to be notified of changes to both the workflow run-time engine and any of its workflow instances.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> expone la funcionalidad requerida por una aplicación host y servicios para configurar y controlar el motor en tiempo de ejecución de flujo de trabajo y recibir notificaciones de los cambios realizados en el motor en tiempo de ejecución de flujo de trabajo y en cualquiera de sus instancias de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It provides examples of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor and the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> methods.</source>
          <target state="translated">Proporciona ejemplos de cómo utilizar el constructor <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> y los métodos <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>The code also shows the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">El código también muestra la forma recomendada de crear un objeto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> en un host del flujo de trabajo utilizando el método <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>It also shows how to set event handlers for the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph>, and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events.</source>
          <target state="translated">También muestra cómo establecer controladores de eventos para <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> y los eventos <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>This type is thread safe.</source>
          <target state="translated">Este tipo es seguro para la ejecución de subprocesos.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized with the default property values and contains the default core services.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> se inicializa con los valores de propiedad predeterminados y contiene los servicios centrales predeterminados.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>To additionally configure the workflow run-time engine, you can add and remove services by using <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, and you can set <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</source>
          <target state="translated">Para configurar también el motor en tiempo de ejecución de flujo de trabajo, puede agregar y quitar los servicios utilizando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> y <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph>, y puede establecer <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>After the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is configured, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> to start the workflow run-time engine and its services.</source>
          <target state="translated">Una vez configurado <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, llame al <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> para iniciar el motor en tiempo de ejecución de flujo de trabajo y sus servicios.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following table shows initial property values for an instance of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">En la siguiente tabla se muestran los valores iniciales de las propiedades de una instancia de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Property</source>
          <target state="translated">Propiedad.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>Initial Value</source>
          <target state="translated">Valor inicial</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>"WorkflowRuntime"</source>
          <target state="translated">"WorkflowRuntime"</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The default core services are <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">Los servicios centrales predeterminados son: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> y <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host de flujos de trabajo.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>It provides an example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> constructor to create an instance of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and access its methods and events.</source>
          <target state="translated">Proporciona un ejemplo de cómo utilizar el constructor <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> para crear una instancia de <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y tener acceso a sus métodos y eventos.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The name of a valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section in the application configuration file.</source>
          <target state="translated">El nombre de una sección <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> válida en el archivo de configuración de la aplicación.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the specified section of the application configuration file.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> utilizando la sección especificada del archivo de configuración de aplicación.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> is initialized according to the settings in the section specified by <ph id="ph2">`configSectionName`</ph> in the application configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> se inicializa según los valores de la sección especificada por <ph id="ph2">`configSectionName`</ph> en el archivo de configuración de la aplicación.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">`configSectionName`</ph> must correspond to a valid <ph id="ph2">`workflowSettings`</ph> section of a configuration file.</source>
          <target state="translated"><ph id="ph1">`configSectionName`</ph> debe corresponder a válido <ph id="ph2">`workflowSettings`</ph> sección de un archivo de configuración.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine is configured by using an application configuration file, it loads and instantiates classes of the types listed in the <ph id="ph1">`Services`</ph> section of the configuration file.</source>
          <target state="translated">Cuando el motor de tiempo de ejecución de flujo de trabajo se configura mediante un archivo de configuración de aplicación, carga y crea instancias de clases de los tipos enumerados en la <ph id="ph1">`Services`</ph> sección del archivo de configuración.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">Cuando el motor en tiempo de ejecución de flujo de trabajo construye estas clases, busca constructores de clase con las firmas siguientes en este orden:</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Servicio (tiempo de ejecución WorkflowRuntime, parámetros NameValueCollection)</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Servicio (tiempo de ejecución WorkflowRuntime)</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Servicio (parámetros NameValueCollection)</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>Service()</source>
          <target state="translated">Servicio()</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>All service classes that are loaded from a configuration file must implement at least one of these constructor signatures.</source>
          <target state="translated">Todas las clases de servicio cargadas desde un archivo de configuración deben implementar por lo menos una de estas firmas de constructor.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</source>
          <target state="translated">Para obtener más información, vea <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="configSectionName" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A valid <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> section could not be found in the application configuration file.</source>
          <target state="translated">Una sección <ph id="ph1">&lt;see langword="workflowSettings" /&gt;</ph> válida no se pudo encontrar en el archivo de configuración de la aplicación.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> ya existe para este dominio de aplicación.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated">Objeto <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> class by using the settings in the specified <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph>.</source>
          <target state="translated">Inicializa una nueva instancia de la clase <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> utilizando los valores del <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>This constructor provides a mechanism to configure the workflow run-time engine using a single method call for hosts that do not use an application configuration file.</source>
          <target state="translated">Este constructor proporciona un mecanismo para configurar el motor en tiempo de ejecución de flujo de trabajo mediante una llamada al método única para los hosts que no utilizan un archivo de configuración de aplicación.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>There are many reasons for not using the application configuration file.</source>
          <target state="translated">Hay muchas razones para no utilizar el archivo de configuración de aplicación.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A host can run in an environment that does not allow using configuration files; for example, in trusted environments that do not allow reading from the application configuration file for security reasons.</source>
          <target state="translated">Un host puede ejecutarse en un entorno que no permita la utilización de archivos de configuración; por ejemplo, en entornos de confianza que no permiten la lectura del archivo de configuración de la aplicación por razones de seguridad.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Also, a host can use a proprietary configuration mechanism; for example, the host can store the workflow run-time engine configuration settings in a SQL database.</source>
          <target state="translated">Además, puede que un host quiera utilizar un mecanismo de configuración de propiedad; por ejemplo, el host puede almacenar la configuración del motor en tiempo de ejecución de flujo de trabajo en una base de datos SQL.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>The workflow run-time engine loads and instantiates classes of the types contained in <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo carga y crea instancias de clases de los tipos contenidos en <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.Services%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>When the workflow run-time engine constructs these classes it looks for class constructors with the following signatures in the following order:</source>
          <target state="translated">Cuando el motor en tiempo de ejecución de flujo de trabajo construye estas clases, busca constructores de clase con las firmas siguientes en este orden:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime, NameValueCollection parameters)</source>
          <target state="translated">Servicio (tiempo de ejecución WorkflowRuntime, parámetros NameValueCollection)</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(WorkflowRuntime runtime)</source>
          <target state="translated">Servicio (tiempo de ejecución WorkflowRuntime)</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service(NameValueCollection parameters)</source>
          <target state="translated">Servicio (parámetros NameValueCollection)</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>Service()</source>
          <target state="translated">Servicio()</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>All service classes that are specified in <ph id="ph1">`settings`</ph> must implement at least one of these constructor signatures.</source>
          <target state="translated">Todas las clases de servicio especificadas en <ph id="ph1">`settings`</ph> deben implementar por lo menos una de estas firmas de constructor.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="settings" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.#ctor(System.Workflow.Runtime.Configuration.WorkflowRuntimeSection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> already exists for this application domain.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> ya existe para este dominio de aplicación.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>An object that represents the service to add.</source>
          <target state="translated">Objeto que representa el servicio que se va añadir.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Adds the specified service to the workflow run-time engine.</source>
          <target state="translated">Agrega el servicio especificado al motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>You can configure the workflow run-time engine by adding core services.</source>
          <target state="translated">Puede configurar el motor en tiempo de ejecución de flujo de trabajo agregando servicios centrales.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services are those that derive from any of the following service base classes: the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Los servicios centrales son los que derivan de cualquiera de las clases base de servicio siguientes: la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> y la clase <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>Core services can only be added when the workflow run-time engine is not running; that is, when <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Servicios centrales pueden agregarse sólo cuando el motor de tiempo de ejecución de flujo de trabajo no se está ejecutando; es decir, cuando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> es <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> can also be used as a storage container for other services that can be used by other workflows or by applications running on a host.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> también se puede utilizar como contenedor de almacenamiento para otros servicios que pueden ser utilizados por otros flujos de trabajo o por aplicaciones en ejecución en un host.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add a non-core service that derives from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class after the workflow run-time engine has been started, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> calls the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by that service.</source>
          <target state="translated">Si agrega un servicio no central derivado de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> después de que el motor en tiempo de ejecución del flujo de trabajo se haya iniciado, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> llamará al método <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> implementado por ese servicio.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> enforces the restriction that no two services of the same <ph id="ph2">&lt;xref:System.Type&gt;</ph> can be added to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> aplica la restricción de que ninguno de los dos servicios del mismo <ph id="ph2">&lt;xref:System.Type&gt;</ph> podrá agregarse a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>However, you can add multiple services that derive from the same base class.</source>
          <target state="translated">Sin embargo, puede agregar varios servicios que derivan de la misma clase base.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>There can be only one service derived from each of the following service base classes in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>: the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated">Puede haber sólo uno servicio derivado de cada una de las clases base de servicio siguientes en <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>: la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> y la clase <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>If you add multiple services derived from one of these classes, for example two persistence services, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
          <target state="translated">Si agrega varios servicios derivados de una de estas clases, por ejemplo, dos servicios de persistencia, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> lanzará un <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>It provides example of how to use the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> method to add an <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> to the workflow run-time engine.</source>
          <target state="translated">Proporciona ejemplo de cómo utilizar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> para agregar <ph id="ph2">&lt;xref:System.Workflow.Activities.ExternalDataExchangeService&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> al motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Cancelling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated">Se eliminará <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is already registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> ya se registró con el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.AddService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a core service and the workflow run-time engine is already running (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> es un servicio central y el motor en tiempo de ejecución de flujo de trabajo ya está en ejecución (<ph id="ph2">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> es <ph id="ph3">&lt;see langword="true" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crea una instancia de flujo de trabajo utilizando los parámetros especificados.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>If the workflow run-time engine has not been started, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> methods call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated">Si el motor en tiempo de ejecución de flujo de trabajo no se inició, los métodos <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> llaman a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>See <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> for a list of possible exceptions.</source>
          <target state="translated">Consulte <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> para obtener una lista de posibles excepciones.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.WorkflowRuntime">
          <source>After you create the workflow instance, call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> on the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object returned by the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method to begin its execution.</source>
          <target state="translated">Después de crear la instancia de flujo de trabajo, llame <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Start%2A?displayProperty=nameWithType&gt;</ph> en el objeto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> devuelto por el método <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> para comenzar su ejecución.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flujo de trabajo que se va a crear.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Creates a new workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Crea una nueva instancia de flujo de trabajo utilizando el <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>del flujo de trabajo especificado.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The created workflow instance.</source>
          <target state="translated">La instancia de flujo de trabajo creada.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Antes de que se cree <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>, se ejecuta en él la validación.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Si se producen errores de validación, se inicia <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Esto funciona bien para los escenarios simples, pero en un entorno del servidor, volver a validar un flujo de trabajo para cada activación podría sobrecargarse de forma innecesaria.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>For more information about disabling validation, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de cómo deshabilitar la validación, consulte <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>The following code example demonstrates the recommended way to create a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> object in a workflow host using the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">El ejemplo de código siguiente muestra cuál es la manera recomendada para crear un objeto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> en un host de flujo de trabajo mediante el método <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que contiene la definición de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Crea una instancia de flujo de trabajo utilizando el <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The created workflow instance.</source>
          <target state="translated">La instancia de flujo de trabajo creada.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The workflow instance is created from a XAML workflow definition file referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">La instancia de flujo de trabajo se crea a partir de un archivo de definición de flujo de trabajo XAML al cual hace referencia <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Antes de que se cree <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>, se ejecuta en él la validación.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Si se producen errores de validación, se inicia <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Esto funciona bien para los escenarios simples, pero en un entorno del servidor, volver a validar un flujo de trabajo para cada activación podría sobrecargarse de forma innecesaria.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>For more information about disabling validation, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de cómo deshabilitar la validación, consulte <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The following example demonstrates how to create a workflow given a XAML-based workflow definition.</source>
          <target state="translated">El ejemplo siguiente muestra cómo crear un flujo de trabajo determinado a partir de una definición de flujo de trabajo basada en XAML determinada.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated">Se eliminará <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flujo de trabajo que se va a crear.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by string that represents the arguments to the workflow.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de objetos con clave por cadena que representa los argumentos para el flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified workflow <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> and the arguments to the workflow contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Crea una instancia de flujo de trabajo utilizando los <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flujo de trabajo especificados y los argumentos al flujo de trabajo contenido en el <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">La instancia de flujo de trabajo creada.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Antes de que se cree <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>, se ejecuta en él la validación.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Si se producen errores de validación, se inicia <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Esto funciona bien para los escenarios simples, pero en un entorno del servidor, volver a validar un flujo de trabajo para cada activación podría sobrecargarse de forma innecesaria.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For more information about disabling validation, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de cómo deshabilitar la validación, consulte <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</source>
          <target state="translated">Para obtener un ejemplo de paso de parámetros a <ph id="ph1">`CreateWorkflow`</ph>, consulte <bpt id="p1">[</bpt>flujo de trabajo con parámetros de ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the workflow to create.</source>
          <target state="translated">El <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del flujo de trabajo que se va a crear.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de objetos con clave asignada por una cadena que representa los argumentos para el flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> específico que se va a crear.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crea una instancia de flujo de trabajo utilizando los parámetros especificados.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">La instancia de flujo de trabajo creada.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Antes de que se cree <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>, se ejecuta en él la validación.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Si se producen errores de validación, se inicia <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Esto funciona bien para los escenarios simples, pero en un entorno del servidor, volver a validar un flujo de trabajo para cada activación podría sobrecargarse de forma innecesaria.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For more information about disabling validation, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de cómo deshabilitar la validación, consulte <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated"><ph id="ph1">`instanceId`</ph> del flujo de trabajo para los flujos de trabajo en ejecución cargados por <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> deben ser únicos.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si usted pasa un <ph id="ph1">`instanceId`</ph> para crear un flujo de trabajo y un flujo de trabajo en ejecución ya lo está utilizando <ph id="ph2">`instanceId`</ph>, se iniciará un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Para obtener un ejemplo de paso de parámetros a <ph id="ph1">`CreateWorkflow`</ph>, consulte <bpt id="p1">[</bpt>flujo de trabajo con parámetros de ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Type,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que contiene la definición de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Una clase <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de objetos con clave asignada por una cadena que representa los argumentos para el flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Creates a workflow instance by using the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> objects and the arguments contained in the specified <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph>.</source>
          <target state="translated">Crea una instancia de flujo de trabajo utilizando los objetos <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> y los argumentos contenidos en el <ph id="ph2">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The created workflow instance.</source>
          <target state="translated">La instancia de flujo de trabajo creada.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The workflow instance is created from the workflow definition referenced by the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> and the arguments supplied by <ph id="ph2">`namedArgumentValues`</ph>.</source>
          <target state="translated">La instancia de flujo de trabajo se crea a partir de la definición de flujo de trabajo a la cual hace referencia <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> y los argumentos proporcionados por <ph id="ph2">`namedArgumentValues`</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Antes de que se cree <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>, se ejecuta en él la validación.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Si se producen errores de validación, se inicia <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Esto funciona bien para los escenarios simples, pero en un entorno del servidor, volver a validar un flujo de trabajo para cada activación podría sobrecargarse de forma innecesaria.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For more information about disabling validation, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de cómo deshabilitar la validación, consulte <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Para obtener un ejemplo de paso de parámetros a <ph id="ph1">`CreateWorkflow`</ph>, consulte <bpt id="p1">[</bpt>flujo de trabajo con parámetros de ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</source>
          <target state="translated">Para obtener un ejemplo del uso de las reglas definidas en XML, vea <bpt id="p1">[</bpt>IfElse con reglas de ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157404)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowDefinitionReader" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object})">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated">Se eliminará <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the workflow definition.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> que contiene la definición de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Una clase <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> of objects keyed by a string that represents the arguments to the workflow.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.Dictionary`2" /&gt;</ph> de objetos con clave asignada por una cadena que representa los argumentos para el flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the specific <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> to create.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> específico que se va a crear.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Creates a workflow instance by using the specified parameters.</source>
          <target state="translated">Crea una instancia de flujo de trabajo utilizando los parámetros especificados.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The created workflow instance.</source>
          <target state="translated">La instancia de flujo de trabajo creada.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>Before the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> is created, validation is executed on it.</source>
          <target state="translated">Antes de que se cree <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>, se ejecuta en él la validación.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If any validation errors occur, the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph> is thrown.</source>
          <target state="translated">Si se producen errores de validación, se inicia <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Compiler.WorkflowValidationFailedException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>This works well for simple scenarios, but in a server environment, revalidating a workflow for every activation might be unnecessary overhead.</source>
          <target state="translated">Esto funciona bien para los escenarios simples, pero en un entorno del servidor, volver a validar un flujo de trabajo para cada activación podría sobrecargarse de forma innecesaria.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For more information about disabling validation, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</source>
          <target state="translated">Para obtener más información acerca de cómo deshabilitar la validación, consulte <ph id="ph1">&lt;xref:System.Workflow.Runtime.Configuration.WorkflowRuntimeSection.ValidateOnCreate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>The workflow <ph id="ph1">`instanceId`</ph> for any running workflows loaded by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> must be unique.</source>
          <target state="translated"><ph id="ph1">`instanceId`</ph> del flujo de trabajo para los flujos de trabajo en ejecución cargados por <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> deben ser únicos.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>If you pass an <ph id="ph1">`instanceId`</ph> to create a workflow and a running workflow is already using that <ph id="ph2">`instanceId`</ph>, an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Si usted pasa un <ph id="ph1">`instanceId`</ph> para crear un flujo de trabajo y un flujo de trabajo en ejecución ya lo está utilizando <ph id="ph2">`instanceId`</ph>, se iniciará un <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of passing in parameters to <ph id="ph1">`CreateWorkflow`</ph>, see <bpt id="p1">[</bpt>Workflow with Parameters Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</source>
          <target state="translated">Para obtener un ejemplo de paso de parámetros a <ph id="ph1">`CreateWorkflow`</ph>, consulte <bpt id="p1">[</bpt>flujo de trabajo con parámetros de ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157403)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source>For an example of using rules defined in XML, see <bpt id="p1">[</bpt>IfElse with Rules Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</source>
          <target state="translated">Para obtener un ejemplo del uso de las reglas definidas en XML, vea <bpt id="p1">[</bpt>IfElse con reglas de ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157404)</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.CreateWorkflow(System.Xml.XmlReader,System.Xml.XmlReader,System.Collections.Generic.Dictionary{System.String,System.Object},System.Guid)">
          <source><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="workflowType" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Libera los recursos que usa <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, you should only call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> after you have called <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">Para cerrar correctamente <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, debería llamar a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> después de haber llamado a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This is because calling the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method alone leaves the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> in an unusable state.</source>
          <target state="translated">Esto ocurre porque la llamada al método <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> deja <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> en estado no utilizable.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> frees the resources used by the runtime by closing open file handles, database connections, and so on, but it does not unload workflow instances, stop services, or do any of the other actions that <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> does.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> libera los recursos utilizados por el tiempo de ejecución cerrando los identificadores de archivos abiertos, las conexiones a bases de datos, etc., pero no descarga las instancias de flujo de trabajo ni detiene los servicios ni hace ninguna de las otras acciones que hace <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> should be called only when the host application must free the resources used by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> before they are automatically freed by the garbage collector.</source>
          <target state="translated">Se debería llamar a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> solo cuando la aplicación host necesite liberar los recursos utilizados por <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> antes de ser liberados automáticamente por el recolector de elementos no utilizados.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>For general information about <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Para obtener información general sobre <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>, consulte <bpt id="p1">[</bpt>limpiar recursos no administrados<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> y <bpt id="p2">[</bpt>implementa un método Dispose<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>The following example demonstrates how to call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">En el siguiente ejemplo se muestra cómo llamar <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> en un objeto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>In this sample, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method is called from the FormClosing event handler for the main form of the application; this ensures that the objects created by the runtime are properly cleaned up when the application shuts down.</source>
          <target state="translated">En este ejemplo, se llama al método <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> desde el controlador de eventos FormClosing para el formulario principal de la aplicación; esto garantiza que se limpiarán correctamente los objetos creados por el motor en tiempo de ejecución cuando se cierre la aplicación.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.Dispose">
          <source>This sample is from the <bpt id="p1">[</bpt>Speech Application Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</source>
          <target state="translated">Este ejemplo es de la <bpt id="p1">[</bpt>ejemplo de aplicación de voz<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157405)</ept>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that services must implement to be returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> que los servicios deben implementar para que se devuelva.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Recupera todos los servicios agregados al motor en tiempo de ejecución de flujo de trabajo que implementa o deriva de un <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>Services that implement or derive from the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">Servicios que implementan o derivan del <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services that implement or derive from the specified <ph id="ph2">&lt;xref:System.Type&gt;</ph> have been added to the workflow run-time engine.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> vacío indica que ningún servicio que implemente o derive del <ph id="ph2">&lt;xref:System.Type&gt;</ph> especificado se ha agregado al motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">En el siguiente ejemplo de código se muestra cómo recuperar todos los servicios de un tipo determinado desde el objeto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated">Se eliminará <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The service type.</source>
          <target state="translated">El tipo de servicio.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Retrieves all the services that are added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">Recupera todos los servicios agregados al motor en tiempo de ejecución de flujo de trabajo que implementa o deriva del tipo genérico especificado.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>Services that implement or derive from the specified generic type.</source>
          <target state="translated">Servicios que implementan o derivan del tipo genérico especificado.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>An empty <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> indicates that no services have been added to the workflow run-time engine that implement or derive from the specified generic type.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt;</ph> vacío indica que no se agregó ningún servicio al motor en tiempo de ejecución de flujo de trabajo que implementa o deriva del tipo genérico especificado.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The following example demonstrates how to retrieve all services of a given type from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">En el siguiente ejemplo de código se muestra cómo recuperar todos los servicios de un tipo determinado desde el objeto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetAllServices``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated">Se eliminará <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Gets a collection that contains all the workflow instances currently loaded in memory.</source>
          <target state="translated">Obtiene una colección que contiene todas las instancias de flujo de trabajo actualmente cargadas en la memoria.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> object for each workflow instance currently loaded in memory.</source>
          <target state="translated">Un <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> para cada instancia de flujo de trabajo actualmente cargada en la memoria.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>Note that, unlike <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, this method does not throw a <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if the runtime is not started.</source>
          <target state="translated">Tenga en cuenta que, a diferencia de <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>, este método no lanza ninguna <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> si no se inicia el tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The following example demonstrates how to retrieve a collection of loaded workflows from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">En el siguiente ejemplo de código se muestra cómo utilizar una colección de flujos de trabajo cargados de un objeto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetLoadedWorkflows">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated">Se eliminará <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the service to retrieve.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> del servicio que se va a recuperar.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Retrieves a service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> from the workflow run-time engine.</source>
          <target state="translated">Recupera un servicio del <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> especificado del motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The service of the specified <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</source>
          <target state="translated">El servicio de a clase <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> especificada.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> inicia <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> si existe más de un servicio para el <ph id="ph3">&lt;xref:System.Type&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the specified type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Por consiguiente, debería utilizar uno de los métodos sobrecargados de <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> si es posible que varios servicios del tipo especificado estén presentes en <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">Por ejemplo, el motor en ejecución del flujo de trabajo puede tener varios servicios de seguimiento.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">Si solicita un servicio de seguimiento especificando la clase base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>, es posible que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> ya se ha eliminado.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService(System.Type)">
          <source>More than one service of type <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph> was found.</source>
          <target state="translated">Se buscó más de un servicio de tipo <ph id="ph1">&lt;paramref name="serviceType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The service type.</source>
          <target state="translated">El tipo de servicio.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Retrieves a service of the specified generic type from the workflow run-time engine.</source>
          <target state="translated">Recupera un servicio del tipo genérico especificado desde el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>A single service of the specified generic type.</source>
          <target state="translated">Un servicio del tipo genérico especificado.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> throws an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> if more than one service exists for the specified generic type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetService%2A&gt;</ph> inicia <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> si más de un servicio existe para el tipo genérico especificado.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>Therefore, you should use one of the overloaded methods of <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> if it is possible that multiple services of the generic type are present in the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">Por consiguiente, debería utilizar uno de los métodos sobrecargados de <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetAllServices%2A&gt;</ph> si es posible que varios servicios del tipo genérico estén presentes en <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>For example, the workflow run-time engine may have multiple tracking services.</source>
          <target state="translated">Por ejemplo, el motor en ejecución del flujo de trabajo puede tener varios servicios de seguimiento.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>If you request a tracking service by specifying the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> base class, it is possible that an exception will be thrown.</source>
          <target state="translated">Si solicita un servicio de seguimiento especificando la clase base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>, es posible que se produzca una excepción.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The following example demonstrates how to retrieve a single service from a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object; in this case, a service of type <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</source>
          <target state="translated">El ejemplo siguiente muestra cómo recuperar un servicio único de un objeto <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>; en este caso, un servicio de tipo <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>This example is from the <bpt id="p1">[</bpt>Workflow Threading Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</source>
          <target state="translated">Este ejemplo es de la <bpt id="p1">[</bpt>ejemplo de subprocesamiento de flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157350)</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> has already been disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> ya se ha eliminado.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetService``1">
          <source>More than one service of the generic type was found.</source>
          <target state="translated">Se encontró más de un servicio del tipo genérico.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of a workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> de una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>Retrieves the workflow instance that has the specified <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated">Recupera la instancia de flujo de trabajo que tiene el <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> that has the specified <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowInstance" /&gt;</ph> que tiene el <ph id="ph2">&lt;see cref="T:System.Guid" /&gt;</ph> especificado.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>If <ph id="ph1">`instanceId`</ph> specifies a workflow instance that is not currently in memory, the workflow instance is loaded into memory and scheduled for execution.</source>
          <target state="translated">Si <ph id="ph1">`instanceId`</ph> especifica una instancia de flujo de trabajo que no está actualmente en la memoria, la instancia de flujo de trabajo se carga en la memoria y se programa para la ejecución.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>For example, after a workflow instance is aborted, you can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> to load the workflow instance back into memory.</source>
          <target state="translated">Por ejemplo, una vez anulada una instancia de flujo de trabajo, puede llamar a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> para volver a cargar la instancia de flujo de trabajo en la memoria.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In this case, the last persisted state of the workflow instance is loaded into memory by the persistence service.</source>
          <target state="translated">En este caso, el último estado conservado de la instancia de flujo de trabajo se carga en la memoria por el servicio de persistencia.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The following code example demonstrates a <ph id="ph1">`ReloadWorkflow`</ph> method that calls the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> method.</source>
          <target state="translated">El siguiente ejemplo de código muestra un método <ph id="ph1">`ReloadWorkflow`</ph> que llama al método <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The <ph id="ph1">`ReloadWorkflow`</ph> method is part of a larger class that has a <ph id="ph2">`Runtime`</ph> property to access all of the methods, properties, and events of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> class.</source>
          <target state="translated">El método <ph id="ph1">`ReloadWorkflow`</ph> forma parte de una clase mayor que tiene una propiedad <ph id="ph2">`Runtime`</ph> para tener acceso a todos los métodos, propiedades y eventos de la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157351)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>In the example, the call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> is redundant because both the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> methods use the same internal helper method to load the workflow instance into memory.</source>
          <target state="translated">En el ejemplo, la llamada a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> es redundante porque <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow%2A&gt;</ph> y los métodos <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Load%2A&gt;</ph> utilizan el mismo método auxiliar interno para cargar la instancia de flujo de trabajo en la memoria.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.GetWorkflow(System.Guid)">
          <source>The workflow runtime is not started.</source>
          <target state="translated">No se inicia el tiempo de ejecución del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Gets a value that indicates whether the workflow run-time engine has been started.</source>
          <target state="translated">Obtiene un valor que indica si se inició el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow run-time engine has been started; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si se inició el motor en tiempo de ejecución de flujo de trabajo; de lo contrario, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">El valor predeterminado es <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indicates that the workflow run-time engine services are running.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> indica que los servicios de tiempo de ejecución de flujo de trabajo se están ejecutando.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`false`</ph> until the host calls <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> es <ph id="ph2">`false`</ph> hasta que el host llame <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>It remains <ph id="ph1">`true`</ph> until the host calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</source>
          <target state="translated">Sigue siendo <ph id="ph1">`true`</ph> hasta que el host llame <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>You cannot add core services to the workflow run-time engine while it is running.</source>
          <target state="translated">No pueden agregar servicios centrales al motor en tiempo de ejecución de flujo de trabajo mientras se está ejecutando.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, and the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Los servicios centrales son servicios que derivan de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph>, la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> y la clase <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">El ejemplo siguiente muestra cómo tener acceso a la propiedad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> de un objeto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted">
          <source>In this example, if the runtime is started, a message is printed to the console.</source>
          <target state="translated">En este ejemplo, si se inicia el tiempo de ejecución, se imprime un mensaje en la consola.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>Gets or sets the name associated with the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Obtiene o establece el nombre asociado a <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The name associated with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">El nombre asociado a esta <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>You cannot set <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> while the workflow run-time engine is running (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph3">`true`</ph>).</source>
          <target state="translated">No se puede establecer <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> mientras el flujo de trabajo se ejecuta el motor en tiempo de ejecución (<ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> es <ph id="ph3">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>The following example demonstrates how to access the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> property of a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> object.</source>
          <target state="translated">El ejemplo siguiente muestra cómo tener acceso a la propiedad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Name%2A&gt;</ph> de un objeto <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>In this example, the name of the runtime is set to "Main Runtime".</source>
          <target state="translated">En este ejemplo, el nombre del tiempo de ejecución está establecido en "Tiempo de ejecución Principal."</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> on a <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> that is disposed occurs.</source>
          <target state="translated">Se produce un intento para establecer <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> en un <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> que se elimina.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="P:System.Workflow.Runtime.WorkflowRuntime.Name">
          <source>An attempt to set <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> while the workflow run-time engine is running occurs.</source>
          <target state="translated">Se produce un intento para establecer <ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.Name" /&gt;</ph> mientras el motor en tiempo de ejecución de flujo de trabajo está en ejecución.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>An object that represents the service to remove.</source>
          <target state="translated">Objeto que representa el servicio que se va eliminar.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Removes the specified service from the workflow run-time engine.</source>
          <target state="translated">Quita el servicio especificado del motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>You cannot remove a core service while the workflow run-time engine is running (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> is <ph id="ph2">`true`</ph>).</source>
          <target state="translated">No se puede quitar un servicio principal mientras se ejecuta el motor de tiempo de ejecución de flujo de trabajo (<ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> es <ph id="ph2">`true`</ph>).</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Los servicios centrales son servicios que derivan de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> y la clase <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>If <ph id="ph1">`service`</ph> derives from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> calls the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by <ph id="ph5">`service`</ph>.</source>
          <target state="translated">Si <ph id="ph1">`service`</ph> deriva de la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>, <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.RemoveService%2A&gt;</ph> llama al método <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> implementado por <ph id="ph5">`service`</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> is added and removed from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente, <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> se agrega y quita de <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> es una referencia nula (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> en Visual Basic).</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> ya se ha eliminado.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source>The workflow run-time engine has started (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>) and <ph id="ph3">&lt;paramref name="service" /&gt;</ph> is a core service.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo se inició (<ph id="ph1">&lt;see cref="P:System.Workflow.Runtime.WorkflowRuntime.IsStarted" /&gt;</ph> es <ph id="ph2">&lt;see langword="true" /&gt;</ph>) y <ph id="ph3">&lt;paramref name="service" /&gt;</ph> es un servicio central.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> o -</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.RemoveService(System.Object)">
          <source><ph id="ph1">&lt;paramref name="service" /&gt;</ph> is not registered with the workflow run-time engine.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="service" /&gt;</ph> no se registró con el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Occurs when a service that is derived from the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> class calls <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</source>
          <target state="translated">Se produce cuando un servicio derivado de la clase <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowRuntimeService" /&gt;</ph> llama <ph id="ph2">&lt;see cref="M:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>A service that is derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class can call the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method to inform subscribers to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event that an exception that it was unable to handle occurred during its execution.</source>
          <target state="translated">Un servicio que se deriva de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> puede llamar al método <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> para informar a los suscriptores al evento <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> de que se produjo una excepción que no se pudo controlar durante su ejecución.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>You can subscribe to this event to implement a recovery mechanism.</source>
          <target state="translated">Puede suscribirse a este evento para implementar un mecanismo de recuperación.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This event is raised when a workflow instance has not been created yet by the workflow run-time engine and an exception occurs.</source>
          <target state="translated">Se genera este evento cuando el motor en tiempo de ejecución de flujo de trabajo no ha creado todavía una instancia de flujo de trabajo y se produce una excepción.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>In this scenario, the only way to inform a host application that an exception occurred is to raise this event.</source>
          <target state="translated">En este escenario, la única manera de informar a una aplicación host que se produjo una excepción es generar este evento.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>However, the workflow run-time engine does not call this directly.</source>
          <target state="translated">Sin embargo, el motor en tiempo de ejecución del flujo de trabajo no lo llama directamente.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>Instead, the workflow run-time engine either delivers an exception to the workflow instance or, if there is no instance, throws back to the caller, which in this case is actually the service that fires this event.</source>
          <target state="translated">En su lugar, el motor en tiempo de ejecución de flujo de trabajo entrega una excepción a la instancia de flujo de trabajo o, si no hay ninguna instancia, vuelve al llamador, que en este caso es realmente el servicio que dispara este evento.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>If you create your own persistence or scheduler service, you must implement this event yourself through the base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph> method.</source>
          <target state="translated">Si crea su propia persistencia o servicio programador, tendrá que implementar este evento usted mismo a través del método base <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Guid&gt;</ph> of the workflow instance that was using the service and the <ph id="ph5">&lt;xref:System.Exception&gt;</ph> that could not be handled.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph>, el remitente contendrá <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contendrá <ph id="ph4">&lt;xref:System.Guid&gt;</ph> de la instancia de flujo de trabajo que estaba utilizando el servicio y el <ph id="ph5">&lt;xref:System.Exception&gt;</ph> que no se pudo controlar.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>The code associates <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnExceptionNotHandled`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnExceptionNotHandled`</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.ServicesExceptionNotHandled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Occurs when the workflow run-time engine is started.</source>
          <target state="translated">Se produce cuando el motor en tiempo de ejecución de flujo de trabajo se inicia.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event after it has validated the core service configuration of the workflow run-time engine, has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, and has set <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph6">`true`</ph>.</source>
          <target state="translated">El <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> método genera el <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> evento después de validar la configuración del servicio de núcleo del motor de tiempo de ejecución de flujo de trabajo, se invoca el <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> método implementado por cada uno de sus servicios que derivan de la <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> clase y ha establecido <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> a <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>There is no guarantee about the order in which the services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class are started by the workflow run-time engine, and some of these workflow run-time engine services may depend on functionality supplied by other of these services to complete their startup tasks.</source>
          <target state="translated">No hay ninguna garantía sobre el orden con el que el motor en tiempo de ejecución de flujo de trabajo inicia los servicios que derivan de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>. Alguno de estos servicios del motor en tiempo de ejecución de flujo de trabajo pueden depender de la funcionalidad proporcionada por otro de estos servicios para completar sus tareas de inicio.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>Workflow run-time engine services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> method to perform any final startup tasks that require the support of other workflow run-time engine services when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event is raised.</source>
          <target state="translated">Los servicios del motor en tiempo de ejecución de flujo de trabajo pueden invalidar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted%2A?displayProperty=nameWithType&gt;</ph> para realizar cualquier tarea de inicio final que requiere la compatibilidad de otros servicios de motor en tiempo de ejecución de flujo de trabajo cuando se genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente, un controlador de eventos se agrega al evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> de <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Started">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">En este ejemplo, el controlador es un método anónimo que imprime un mensaje simple en la consola.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Starts the workflow run-time engine and the workflow run-time engine services.</source>
          <target state="translated">Inicia el motor en tiempo de ejecución de flujo de trabajo y los servicios correspondientes.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This method verifies that a valid set of core services exists and then starts any services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Este método comprueba que existe un conjunto válido de servicios centrales y, a continuación, inicia los servicios que derivan de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There must be one and only one of each of the following core services: a workflow <ph id="ph1">`CommitWorkBatch`</ph> service derived from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> base class and a scheduler service derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> base class.</source>
          <target state="translated">Debe haber uno y sólo uno de cada uno de los siguientes servicios básicos: un flujo de trabajo <ph id="ph1">`CommitWorkBatch`</ph> servicio derivado de la <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> derivan la clase base y un servicio de programador la <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> clase base.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If either or both of these core services are missing, the workflow run-time engine supplies the appropriate default service: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> for the workflow <ph id="ph2">`CommitWorkBatch`</ph> service and <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> for the scheduler service.</source>
          <target state="translated">Si faltan uno o ambos de estos servicios principales, el motor de tiempo de ejecución de flujo de trabajo proporciona el servicio predeterminado adecuado: <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowCommitWorkBatchService&gt;</ph> del flujo de trabajo <ph id="ph2">`CommitWorkBatch`</ph> servicio y <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> para el servicio de programador.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>A persistence service is optional, but there can be at most only one persistence service present.</source>
          <target state="translated">El servicio de persistencia es opcional, pero solamente puede haber uno presente.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>After it has validated the service configuration, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> calls <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> on all of the services that are derived from the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">Después de haber validado la configuración del servicio, <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> llama <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start%2A&gt;</ph> en todos los servicios que se derivan de la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Finally, the workflow run-time engine sets <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> and raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph> event.</source>
          <target state="translated">Finalmente, el motor en tiempo de ejecución de flujo de trabajo establece <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> y genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Started&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>You cannot add or remove core services after the workflow run-time engine is started.</source>
          <target state="translated">No pueden agregar o quitar los servicios centrales después de que el motor en tiempo de ejecución de flujo de trabajo se haya iniciado.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>Core services are services that derive from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> class, the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> class, the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class, or the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph> class.</source>
          <target state="translated">Los servicios centrales son servicios que derivan de la clase <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph>, la clase <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, la clase <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> y la clase <ph id="ph4">&lt;xref:System.Workflow.Runtime.Tracking.TrackingService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>If you call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> while the workflow run-time engine is running, no action is performed.</source>
          <target state="translated">Si llama a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> mientras el motor en tiempo de ejecución de flujo de trabajo está en ejecución, no se realiza ninguna acción.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> after the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> creates a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> instance and after it calls <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> to add services to the runtime.</source>
          <target state="translated">El código llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> después de que <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.%23ctor%2A&gt;</ph> cree una instancia <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y después llama <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> para agregar los servicios al tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>It also calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> before any other processing occurs.</source>
          <target state="translated">También llama <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StartRuntime%2A&gt;</ph> antes de que se produzca cualquier otro procesamiento.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is disposed.</source>
          <target state="translated">Se eliminará <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one service workflow <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> service registered with this <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Hay más que un flujo de trabajo de servicio <ph id="ph1">&lt;see langword="CommitWorkBatch" /&gt;</ph> registrado con este <ph id="ph2">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one scheduler service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Hay más de un servicio programador registrado con este <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>-or-</source>
          <target state="translated">O bien</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StartRuntime">
          <source>There is more than one persistence service registered with this <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</source>
          <target state="translated">Hay más de un servicio de persistencia registrado con este <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Occurs when the workflow run-time engine is stopped.</source>
          <target state="translated">Se produce cuando el motor en tiempo de ejecución de flujo de trabajo se detiene.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> method raises the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event after it has invoked the <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> method implemented by each of its services that derive from the <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class.</source>
          <target state="translated">El método <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> después de haber invocado el método <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop%2A&gt;</ph> implementado por cada uno de sus servicios que derivan de la clase <ph id="ph4">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>There is no guarantee about the order in which these workflow run-time engine services are stopped, and some of these services may need to preserve some functionality that is relied on by other services until they too are stopped.</source>
          <target state="translated">No hay ninguna garantía sobre el orden en que se detienen estos servicios de motor en tiempo de ejecución de flujo de trabajo y algunos de estos servicios pueden necesitar conservar alguna funcionalidad basada en otros servicios hasta que también se detengan.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>Such services can override the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> method to perform any residual shutdown logic when the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event is raised.</source>
          <target state="translated">Dichos servicios pueden invalidar el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped%2A?displayProperty=nameWithType&gt;</ph> para realizar cualquier lógica de apagado residual cuando se genera el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In the following example, an event handler is added to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event of the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</source>
          <target state="translated">En el ejemplo siguiente, un controlador de eventos se agrega al evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> de <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.Stopped">
          <source>In this example, the handler is an anonymous method that prints a simple message to the console.</source>
          <target state="translated">En este ejemplo, el controlador es un método anónimo que imprime un mensaje simple en la consola.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>Stops the workflow run-time engine and the run-time services.</source>
          <target state="translated">Detiene el motor en tiempo de ejecución de flujo de trabajo y los servicios en tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This method causes the workflow run-time engine to unload each of its workflow instances, stop all of its services that are derived from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> class, set <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> to <ph id="ph3">`false`</ph>, and raise the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> event.</source>
          <target state="translated">Este método hace que el motor de tiempo de ejecución de flujo de trabajo para cada uno de sus instancias de flujo de trabajo de descarga, detenga todos sus servicios que se derivan de la <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowRuntimeService&gt;</ph> clase, establezca <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.IsStarted%2A&gt;</ph> a <ph id="ph3">`false`</ph>y generar el <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Stopped&gt;</ph> eventos.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>To shut down the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> gracefully, call <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> before you call <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</source>
          <target state="translated">Para cerrar correctamente <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, llame a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> antes de llamar a <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph> method.</source>
          <target state="translated">Para obtener más información, vea el método <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.Dispose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> is called after the host has completed all other processing associated with the runtime.</source>
          <target state="translated">Se llama a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> después de que el host haya completado el resto del procesamiento asociado al tiempo de ejecución.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.WorkflowRuntime.StopRuntime">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> is already disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowRuntime" /&gt;</ph> ya se ha eliminado.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>Occurs when a workflow instance is aborted.</source>
          <target state="translated">Se produce cuando se anula una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> occurs after all pending work for the workflow instance is cleared, but before the workflow instance is invalidated in memory.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> se produce después de haber borrado todo el trabajo pendiente de la instancia de flujo de trabajo, pero antes de que la instancia de flujo de trabajo se invalide en la memoria.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>You can abort a workflow instance by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Puede anular una instancia de flujo de trabajo llamando <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Abort%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para este evento, el remitente contendrá <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contendrá el <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado al evento.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowAborted`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowAborted`</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowAborted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>Occurs when a workflow instance has completed.</source>
          <target state="translated">Se produce cuando una instancia de flujo de trabajo se ha completado.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> is raised after the workflow instance has completed but before the instance is invalidated in memory.</source>
          <target state="translated">Se genera <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> después de que la instancia de flujo de trabajo se haya completado pero antes de que la instancia se invalide en memoria.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and its output parameters.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, el remitente incluye <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowCompletedEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> y los parámetros de salida.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>Occurs when a workflow instance is created.</source>
          <target state="translated">Se produce cuando se crea una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> event after the workflow instance is completely constructed but before activities are processed.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> después de que la instancia de flujo de trabajo se haya construido completamente pero antes de que se procesen las actividades.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para este evento, el remitente contendrá <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contendrá el <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado al evento.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCreated`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowCreated`</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowCreated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>Occurs when a workflow instance enters the idle state.</source>
          <target state="translated">Se produce cuando una instancia de flujo de trabajo entra en el estado inactivo.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> event when the workflow instance enters an idle state; for example, when the workflow is waiting for a <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> activity to complete.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> cuando la instancia de flujo de trabajo entra en un estado inactivo; por ejemplo, cuando el flujo de trabajo está esperando a que una actividad <ph id="ph2">&lt;xref:System.Workflow.Activities.DelayActivity&gt;</ph> se complete.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para este evento, el remitente contendrá <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contendrá el <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado al evento.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](https://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67(v=vs.100))</ept>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowIdled`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowIdled`</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowIdled">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>Occurs when the workflow instance is loaded into memory.</source>
          <target state="translated">Se produce cuando la instancia de flujo de trabajo se carga en la memoria.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> occurs after the persistence service has restored the workflow instance, but before the workflow run-time engine begins to execute any activities.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> se produce después de que el servicio de persistencia ha restaurado la instancia de flujo de trabajo, pero antes de que el motor en tiempo de ejecución de flujo de trabajo empiece a ejecutar una actividad.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph>, el remitente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene el <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado con el evento.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowLoad`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowLoad`</ph>.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowLoaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>servicio de persistencia personalizado<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>Occurs when the state of a workflow instance is persisted.</source>
          <target state="translated">Se produce cuando se conserva el estado de una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The workflow instance can be persisted for many reasons.</source>
          <target state="translated">La instancia de flujo de trabajo puede conservarse por muchas razones.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For example, the host can call <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on a workflow instance, or the workflow run-time engine can persist a workflow instance because the instance is idle or because an atomic scope has completed.</source>
          <target state="translated">Por ejemplo, el host puede llamar a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> en una instancia de flujo de trabajo; o el motor en tiempo de ejecución de flujo de trabajo puede conservar una instancia de flujo de trabajo porque la instancia está inactiva o porque un ámbito atómico se ha completado.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is present in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> is raised by the runtime after the state of the workflow instance is saved to memory.</source>
          <target state="translated">Si un servicio de persistencia se encuentra en <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph>, el tiempo de ejecución genera <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> después de que el estado de la instancia del flujo de trabajo se guarde en la memoria.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If a persistence service is not present, the event is still raised but the instance state is not saved.</source>
          <target state="translated">Si un servicio de persistencia no está presente, el evento se sigue generando pero el estado de la instancia no se guarda.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>If the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event occurs because the workflow instance is being unloaded, it is followed by a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">Si el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> se produce porque se descarga la instancia de flujo de trabajo, le seguirá un evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, el remitente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene el <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado con el evento.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host de flujos de trabajo.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowPersisted`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowPersisted`</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=15735)</ept>.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>Occurs when execution of a workflow instance is resumed following a suspension.</source>
          <target state="translated">Se produce cuando se reanuda la ejecución de una instancia de flujo de trabajo después de una suspensión.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event just before the workflow instance is scheduled.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> solo antes de que se programe la instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is usually raised because of an explicit call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">El evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> normalmente se genera debido a una llamada explícita a <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Resume%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>However, the workflow run-time engine can temporarily suspend an instance to perform an operation, for example, to apply a workflow change.</source>
          <target state="translated">Sin embargo, el motor en tiempo de ejecución del flujo de trabajo puede suspender temporalmente una instancia para realizar una operación, por ejemplo, aplicar un cambio del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>In this case, the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event is raised when the runtime resumes execution of the workflow instance following the operation.</source>
          <target state="translated">En este caso, el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> se genera cuando el tiempo de ejecución reanuda la ejecución de la instancia del flujo de trabajo que sigue a la operación.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph>, el remitente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene el <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado con el evento.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The following code example demonstrates how you can use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host de flujos de trabajo.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowResume`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowResume`</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowResumed">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>suspender y finalizar ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157402)</ept>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>Occurs when a workflow instance has been started.</source>
          <target state="translated">Se produce cuando se ha iniciado una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> event after the workflow instance is started by scheduling the root activity for execution.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> una vez iniciada la instancia de flujo de trabajo programando la actividad raíz para la ejecución.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>For this event, the sender contains the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para este evento, el remitente contendrá <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contendrá el <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado al evento.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowStarted`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowStarted`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowStarted">
          <source>This code example is part of the <bpt id="p1">[</bpt>Host Communication Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>ejemplo de comunicación de Host<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=157406)</ept>.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>Occurs when a workflow instance is suspended.</source>
          <target state="translated">Se produce cuando se suspende una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The workflow instance can be suspended by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph> activity, or implicitly by the workflow run-time engine.</source>
          <target state="translated">Una instancia de flujo de trabajo puede ser suspendida por el host a través de una llamada al método <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Suspend%2A&gt;</ph>, por una actividad <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.SuspendActivity&gt;</ph>, o implícitamente por el motor en tiempo de ejecución de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For example, the workflow run-time engine temporarily suspends the instance when it applies dynamic changes to the instance.</source>
          <target state="translated">Por ejemplo, el motor en tiempo de ejecución de flujo de trabajo suspende temporalmente la instancia cuando aplica cambios dinámicos a la instancia.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and a string that describes the reason the instance was suspended.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph>, el remitente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowSuspendedEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> y una cadena que describe el motivo por el que se suspendió la instancia.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowSuspended`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowSuspended`</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowSuspended">
          <source>This code example is part of the <bpt id="p1">[</bpt>Suspend and Terminate Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>suspender y finalizar ejemplo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157402)</ept>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>Occurs when a workflow instance is terminated.</source>
          <target state="translated">Se produce cuando se finaliza una instancia de flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow can be terminated by the host through a call to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph> method, by a <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> activity, or by the workflow run-time engine when an unhandled exception occurs.</source>
          <target state="translated">El flujo de trabajo puede ser terminado por el host a través de una llamada al método <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Terminate%2A&gt;</ph>, por una actividad <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.TerminateActivity&gt;</ph> o por el motor en tiempo de ejecución de flujo de trabajo cuando se produce una excepción no controlada.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The workflow run-time engine raises the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> event after the workflow instance is terminated, but before it is invalidated in memory.</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> una vez finalizada la instancia de flujo de trabajo, pero antes de invalidarse en memoria.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> and information about the reason the instance was terminated in the <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph>, el remitente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs&gt;</ph> contiene <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> e información sobre la razón por la cual la instancia se finalizó en la propiedad <ph id="ph5">&lt;xref:System.Workflow.Runtime.WorkflowTerminatedEventArgs.Exception%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowCompleted`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowCompleted`</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated">
          <source>This code example is part of the <bpt id="p1">[</bpt>Canceling a Workflow<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> sample.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>cancelar un flujo de trabajo<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157346)</ept> ejemplo.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Occurs when the workflow instance is unloaded from memory.</source>
          <target state="translated">Se produce cuando la instancia de flujo de trabajo se descarga de la memoria.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>A workflow instance can be unloaded from memory by an explicit call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph>, or implicitly by the workflow run-time engine according to its own semantics.</source>
          <target state="translated">Una instancia de flujo de trabajo puede descargarse de la memoria por una llamada explícita a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A&gt;</ph>o implícitamente por el motor en tiempo de ejecución de flujo de trabajo, según su propia semántica.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For example, the workflow run-time engine unloads a workflow instance if the instance becomes idle and the runtime has a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> added for which <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Por ejemplo, el motor de tiempo de ejecución de flujo de trabajo descarga una instancia de flujo de trabajo si la instancia se vuelve inactiva y el tiempo de ejecución tiene una <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> agregado para el que <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle%2A&gt;</ph> es <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The workflow run-time engine raises the</source>
          <target state="translated">El motor en tiempo de ejecución de flujo de trabajo genera el</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event after the state of the workflow instance has been successfully persisted but before the instance is invalidated in memory.</source>
          <target state="translated">Evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> una vez conservado correctamente el estado de la instancia de flujo de trabajo pero antes de que la instancia se invalide en la memoria.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>Therefore, a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> event precedes the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event.</source>
          <target state="translated">Por consiguiente, un evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowPersisted&gt;</ph> precederá el evento <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> event, the sender contains the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> and <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contains the <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with the event.</source>
          <target state="translated">Para el evento <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph>, el remitente contiene <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> y <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEventArgs&gt;</ph> contiene el <ph id="ph4">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> asociado con el evento.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>For more information about handling events, see <bpt id="p1">[</bpt>Consuming Events<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</source>
          <target state="translated">Para obtener más información sobre el control de eventos, vea <bpt id="p1">[</bpt>consumir eventos<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157352)</ept>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The following code example demonstrates how to use <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> functionality from a workflow host.</source>
          <target state="translated">El ejemplo de código siguiente muestra cómo se puede utilizar la funcionalidad <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> desde un host del flujo de trabajo.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>The code associates the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> with an event handler, a method named <ph id="ph2">`OnWorkflowUnload`</ph>.</source>
          <target state="translated">El código asocia <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded&gt;</ph> a un controlador de eventos, un método denominado <ph id="ph2">`OnWorkflowUnload`</ph>.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Workflow.Runtime.WorkflowRuntime.WorkflowUnloaded">
          <source>This code example is part of the <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</source>
          <target state="translated">Este ejemplo de código forma parte de la <bpt id="p1">[</bpt>ejemplo de servicio de persistencia personalizado<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=157351)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>