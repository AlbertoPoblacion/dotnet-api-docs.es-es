<Type Name="SafeMemoryMappedViewHandle" FullName="Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle">
  <TypeSignature Language="C#" Value="public sealed class SafeMemoryMappedViewHandle : System.Runtime.InteropServices.SafeBuffer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SafeMemoryMappedViewHandle extends System.Runtime.InteropServices.SafeBuffer" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SafeMemoryMappedViewHandle&#xA;Inherits SafeBuffer" />
  <TypeSignature Language="C++ CLI" Value="public ref class SafeMemoryMappedViewHandle sealed : System::Runtime::InteropServices::SafeBuffer" />
  <AssemblyInfo>
    <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.SafeBuffer</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6d74e-101">Proporciona un controlador seguro que representa una vista de un bloque de memoria no administrada para el acceso aleatorio.</span><span class="sxs-lookup"><span data-stu-id="6d74e-101">Provides a safe handle that represents a view of a block of unmanaged memory for random access.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d74e-102">Use la <xref:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle%2A?displayProperty=nameWithType> propiedad que se va a obtener el identificador seguro.</span><span class="sxs-lookup"><span data-stu-id="6d74e-102">Use the <xref:System.IO.MemoryMappedFiles.MemoryMappedViewAccessor.SafeMemoryMappedViewHandle%2A?displayProperty=nameWithType> property to obtain the safe handle.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="6d74e-103">Este tipo implementa la <xref:System.IDisposable> interfaz.</span><span class="sxs-lookup"><span data-stu-id="6d74e-103">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="6d74e-104">Cuando haya terminado de utilizar el tipo, debe eliminar del mismo directa o indirectamente.</span><span class="sxs-lookup"><span data-stu-id="6d74e-104">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="6d74e-105">Para deshacerse del tipo directamente, llame a su <xref:System.IDisposable.Dispose%2A> método en un `try` / `catch` bloque.</span><span class="sxs-lookup"><span data-stu-id="6d74e-105">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="6d74e-106">Para deshacerse de él indirectamente, use una construcción de lenguaje como `using` (en C#) o `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6d74e-106">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="6d74e-107">Para obtener más información, vea la sección "Uso de un objeto que implementa IDisposable" en el <xref:System.IDisposable> tema de la interfaz.</span><span class="sxs-lookup"><span data-stu-id="6d74e-107">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="protected override bool ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ReleaseHandle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ReleaseHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.MemoryMappedFiles</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>