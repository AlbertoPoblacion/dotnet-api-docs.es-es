<Type Name="IWebPartField" FullName="System.Web.UI.WebControls.WebParts.IWebPartField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e394a26b3c9c60bd5b01ccbaf7ae38a6ac135251" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590209" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartField" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartField" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define una interfaz de proveedor para conectar dos controles de servidor mediante un único campo de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta interfaz está diseñada para usarse con conexiones de elementos Web. En una conexión de elementos Web, dos controles de servidor que se encuentran en un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona establecer una conexión y recurso compartido de datos, con un control que actúa como consumidor y el otro control que actúa como un proveedor. El mecanismo para compartir datos en una conexión de elementos Web es una instancia de la interfaz que el proveedor proporciona al consumidor por medio de un método de devolución de llamada. Para establecer una conexión, el consumidor y el proveedor deben trabajar con el mismo tipo de interfaz para compartir datos. Si el consumidor no reconoce el tipo de interfaz enviado por el proveedor, todavía es posible conectar los controles por medio de un transformador (un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> objeto) que convierte la instancia de la interfaz enviada por el proveedor a un tipo que el consumidor reconoce. Para obtener información detallada sobre las conexiones, vea <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> y [Web Parts Connections Overview](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 La <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz es una interfaz de proveedor que se incluye con el conjunto como una interfaz estándar para crear conexiones basadas en un campo de datos de controles de elementos Web. También puede crear interfaces personalizadas para utilizar con conexiones de elementos Web, pero en muchas aplicaciones Web orientadas a datos, resulta útil crear conexiones basadas en una fila comunes (para obtener más información, consulte el <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfaz), tabla (para obtener más información, consulte el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz), o de campo de los datos de origen, con el <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz. En una conexión normal, un <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar actúa como un proveedor implementaría el <xref:System.Web.UI.WebControls.WebParts.IWebPartField> de interfaz y proporcionar una instancia de la interfaz a los consumidores en un método de devolución de llamada especial. Por ejemplo, el proveedor podría implementar un <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz para un campo en la tabla de información de usuario que contiene los datos del código postal de un usuario Web. Otro <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar actúa como un consumidor definiría un método especial para recibir la instancia de la interfaz, puede extraer los datos de código postal y buscar y mostrar información meteorológica según el código postal.  
  
 La <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz tiene dos miembros expuestos. El <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> propiedad devuelve información de esquema sobre el campo de datos encapsulado en un <xref:System.ComponentModel.PropertyDescriptor> objeto. El <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método declara un método que un implementador (por ejemplo, un control proveedor) utiliza para recuperar datos del campo de la instancia de la interfaz cuando se invoca el método de devolución de llamada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una conexión estática entre dos controles mediante el <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz. El ejemplo de código consta de tres partes:  
  
-   Origen de código para dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles que pueden formar una conexión mediante el <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz, pero con un control que actúa como el proveedor, el otro actúa como consumidor.  
  
-   Una página Web que hospeda los controles y declara la conexión estática en formato de persistencia.  
  
-   Una descripción de lo que sucede cuando se ejecuta el código de ejemplo.  
  
 La primera parte del ejemplo de código es el código fuente de los dos controles personalizados. En primer lugar se muestra el código para el proveedor, que implementa el <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz. Para simplificar el trabajo en el ejemplo, el proveedor crea una tabla con algunos datos en lugar de conectarse a una base de datos. El `GetConnectionInterface` método actúa como punto de conexión del proveedor, el método de devolución de llamada que devuelve la instancia de la interfaz al consumidor. En cuanto al consumidor, recupera la instancia de la interfaz del proveedor en su método denominado `SetConnectionInterface`, que se marca con un `ConnectionConsumer` atributo. Después de recuperar la instancia de la interfaz, el consumidor, en su `OnPreRender` método, llama a la implementación de la <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método del proveedor para recuperar los datos reales.  
  
 Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Este ejemplo de código utiliza la compilación dinámica. Para ver un tutorial que muestra cómo se compila, vea [Tutorial: desarrollar y usar un Control de servidor Web personalizado](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 La segunda parte del ejemplo de código es la página Web que declara la conexión estática y hospeda los controles. En la parte superior de la página es una `Register` directiva que declara el espacio de nombres del código fuente contenido en el directorio App_Code. La conexión se declara mediante un `<asp:webpartconnection>` elemento. Los controles de consumidor y proveedor personalizados se declaran en una `<zonetemplate>` elemento dentro de un `<asp:webpartzone>` elemento, que es necesario para que puedan conectarse (deben residir dentro de una zona que hereda de la <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> clase).  
  
 [!code-aspx-csharp[WebParts_IWebPartField_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartField_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/Defaultvb.aspx#1)]  
  
 Cargar la página en un explorador. El control consumidor muestra los datos proporcionados desde el campo especificado, el cual el proveedor pone a disposición a través de una instancia de la <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="GetFieldValue">
      <MemberSignature Language="C#" Value="public void GetFieldValue (System.Web.UI.WebControls.WebParts.FieldCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetFieldValue(class System.Web.UI.WebControls.WebParts.FieldCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue(System.Web.UI.WebControls.WebParts.FieldCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetFieldValue (callback As FieldCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetFieldValue(System::Web::UI::WebControls::WebParts::FieldCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.FieldCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Un delegado <see cref="T:System.Web.UI.WebControls.WebParts.FieldCallback" /> que contiene la dirección de un método que recibe los datos.</param>
        <summary>Devuelve el valor del campo que la interfaz está utilizando como base de una conexión entre dos controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para recuperar los valores de campo de datos transferidos por la interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la implementación y uso de la <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método. El ejemplo completo se muestra en la información general de la clase para la <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz. El control proveedor implementa el <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método, que devuelve el valor de un campo determinado en la tabla de datos. El control consumidor llama el <xref:System.Web.UI.WebControls.WebParts.IWebPartField.GetFieldValue%2A> método en su `OnPreRender` método, por lo que se puede escribir el valor de los datos a la página.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptor Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartField.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptor ^ Schema { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información del esquema de un campo de datos que se utiliza para compartir los datos entre dos controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>
          <see cref="T:System.ComponentModel.PropertyDescriptor" /> que describe la información del esquema del campo de datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad proporciona información sobre propiedades de los datos transferidos por la interfaz. Los controles de la clase transformer y consumidor pueden consultar esta propiedad para obtener información sobre el tipo de contenido, y otros detalles del campo incluyen en el <xref:System.Web.UI.WebControls.WebParts.IWebPartField> enviado por un proveedor de instancia de interfaz.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la implementación y uso de la <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> propiedad. El ejemplo completo se muestra en la información general de la clase para la <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz. El control proveedor implementa el <xref:System.Web.UI.WebControls.WebParts.IWebPartField.Schema%2A> propiedad. A continuación, en su `GetFieldValue` método, utiliza la propiedad para recuperar el valor del campo.  
  
 [!code-csharp[WebParts_IWebPartField_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/CS/IFieldSample.cs#2)]
 [!code-vb[WebParts_IWebPartField_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartField_Overview/VB/IFieldSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
      </Docs>
    </Member>
  </Members>
</Type>