<Type Name="IPersonalizable" FullName="System.Web.UI.WebControls.WebParts.IPersonalizable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5c4607d8f3145d7baae6242847fae9c9eaa5ffb0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585137" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPersonalizable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPersonalizable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPersonalizable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPersonalizable" />
  <TypeSignature Language="F#" Value="type IPersonalizable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define las funciones de administración adicionales para la aplicación y extracción del estado de personalización.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Además de utilizar el `Personalizable` atributo en Propiedades de control, también puede implementar un control <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> de funcionalidades de administración adicionales para la aplicación y extracción del estado de personalización. Por ejemplo, los controles que necesiten administrar información de estado privado deben implementar esta interfaz. Controles que tienen acceso a datos personalizados a través de mecanismos complejos, como soluciones de caché personalizadas, persistencia de datos en grandes sistemas o servicios Web XML, también deben implementar esta interfaz.  
  
> [!IMPORTANT]
>  No debe agregar tipos basados en clases definidas en el directorio App_Code y, a continuación, dependen el mecanismo de serialización binaria de forma predeterminada. Los artefactos basados en App_Code no son constantemente serialización binaria debido al hecho de que pueden tener sus nombres de ensamblado modificados en puntos aleatorios en el tiempo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar el <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfaz. El ejemplo consta de una página .aspx que hace referencia a un control de elemento Web denominado `UrlListWebPart`. El código siguiente es el archivo .aspx para el ejemplo.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 El código siguiente es el origen personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Este archivo debe colocarse en el directorio App_Code.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Cargar la página en un explorador. Escriba un nombre para representar una dirección URL, a continuación, agregue una dirección URL real que empiece con `http://`y haga clic en el **agregar** botón para agregar la dirección URL.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene un valor que indica si han cambiado los datos personalizados que administra un control.</summary>
        <value>
          <see langword="true" /> si han cambiado los datos personalizados administrados con la interfaz <see cref="T:System.Web.UI.WebControls.WebParts.IPersonalizable" />; de lo contrario, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cuando los datos administrados por un control cambian, el control se considera "sucio". Un control debe devolver `true` si los datos personalizados que TI administra a través de la <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> interfaz ha cambiado. Si un control devuelve `true` del esta propiedad, el control <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> implementación de método de interfaz se llama durante la extracción del valor de propiedad.  
  
> [!NOTE]
>  La infraestructura de personalización comprueba automáticamente esta propiedad durante las fases últimas del procesamiento de una solicitud POST. Sin embargo, para las solicitudes GET, el valor devuelto desde el <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> no se comprueba la propiedad. Algún otro evento tiene que haber causado que el control se considere "sucio" para cualquier estado del control--no sólo los datos administrados por <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>--se guarden. Si un control puede marcar como "modificados" durante una solicitud GET, o si la infraestructura de personalización en determinadas condiciones muy específicas de límite considera que un control "sucio" durante una solicitud GET, a continuación, <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> siempre se llama.  
  
 Un control puede hacer referencia a su asociado <xref:System.Web.UI.WebControls.WebParts.WebPartManager> de control y compruebe la <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> propiedad para determinar el ámbito actual. El estado "sucio" de datos personalizados de un control debe ser adecuado para el ámbito actual.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso de la <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> propiedad. La primera parte del ejemplo es la página Web que hospeda una <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 [!code-aspx-csharp[WebParts_IPersonalizable_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/IPersonalizableCS.aspx#1)]
 [!code-aspx-vb[WebParts_IPersonalizable_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/IPersonalizableVB.aspx#1)]  
  
 La segunda parte del ejemplo es el código de la opción de instalación <xref:System.Web.UI.WebControls.WebParts.WebPart> control denominado `UrlListWebPart`. Este archivo debe colocarse en el directorio App_Code para ejecutar el ejemplo. Tenga en cuenta que el código fuente implementa la <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> propiedad.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 Cargar la página en un explorador. Escriba un nombre para representar una dirección URL, a continuación, agregue una dirección URL real que empiece con `http://`y haga clic en el **agregar** botón para agregar la dirección URL.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Load state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> que contiene datos con ámbito personalizados cargados desde el almacén de datos subyacente.</param>
        <summary>Carga los datos personalizados en un control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Se llama a este método en un control para que pueda cargar los datos personalizados a sí misma. También puede devolver un valor que indica si se debe escribir nuevo estado de un control personalizado en el almacén de datos subyacente, independientemente de si ha cambiado cualquier otro dato de personalización en la página. Un control puede establecer sus propias propiedades personalizadas y realizar lógica interna adicional basada en los valores contenidos en el diccionario de personalización. Este método es llamado por el control de elementos Web establecido al aplicar los datos de personalización a un control.  
  
 También debe tener en cuenta el comportamiento de combinación de <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-ámbito frente a <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared>-propiedades contenidas en el ámbito del <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> objeto. El `state` parámetro contiene una representación combinada de datos personalizados que se cargaron desde el almacén de datos subyacente. En <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> establecer el ámbito, todos los valores que se agregaron previamente cuando la propia página estaba en <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> ámbito estaría disponible. En <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> establecer el ámbito, si un valor asociado a <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> ámbito de personalización tenía un valor agregado cuando la página estaba en <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> ámbito y un valor diferente cuando la página estaba en <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User> establecer el ámbito, a continuación, sería la infraestructura de personalización solo se incluyen el <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-valor de ámbito (en contraposición a la <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> valor de ámbito) dentro de la `state` parámetro.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra una implementación de la <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> método en un personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Para el código completo necesario para ejecutar este ejemplo, vea la sección de ejemplo en el <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> general sobre la clase.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Web.UI.WebControls.WebParts.PersonalizationDictionary state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IPersonalizable.Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (state As PersonalizationDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Web::UI::WebControls::WebParts::PersonalizationDictionary ^ state);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Web.UI.WebControls.WebParts.PersonalizationDictionary -&gt; unit" Usage="iPersonalizable.Save state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Web.UI.WebControls.WebParts.PersonalizationDictionary" />
      </Parameters>
      <Docs>
        <param name="state">
          <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> que contiene datos con ámbito personalizados cargados desde el almacén de datos subyacente.</param>
        <summary>Guarda propiedades personalizadas e información del estado interno en el objeto <see cref="T:System.Web.UI.WebControls.WebParts.PersonalizationDictionary" /> del control.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un control de servidor puede almacenar sus propias propiedades personalizadas y la información de estado interna el <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> especificado en el `state` parámetro. La información se almacena como una serie de pares nombre/valor. Es responsabilidad del control que se usarán los pares de nombre/valor que pueda reconocer durante las llamadas subsiguientes realizadas para el control mediante la <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> método.  
  
 Un control puede hacer referencia a su asociado <xref:System.Web.UI.WebControls.WebParts.WebPartManager> de control y compruebe el <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope> para determinar el ámbito actual. Información de estado personalizada debe ser adecuada para el ámbito actual. Tenga en cuenta que cada <xref:System.Web.UI.WebControls.WebParts.PersonalizationEntry> valor que se agrega a la <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> objeto debe asociarse con el valor de ámbito adecuado, ya que depende de la infraestructura de personalización en el objeto cuando se mezclan <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.Shared> y <xref:System.Web.UI.WebControls.WebParts.PersonalizationScope.User>-ámbito de datos personalizados antes de pasarlo a la <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A> método.  
  
 Cuando se utiliza la implementación de ASP.NET estándar de elementos Web, controles deben asegurarse de que se pueden serializar los objetos almacenados en el diccionario de estados por ASP.NET <xref:System.Web.UI.ObjectStateFormatter> clase. En la práctica, esto significa lo siguiente:  
  
-   Los tipos primitivos de .NET Framework, las cadenas y orientado a la colección de tipos de .NET Framework, como matrices, listas de matrices, tablas hash y diccionarios híbridos, son serializables automáticamente.  
  
-   Tipos personalizados que proporcionan sus propios <xref:System.ComponentModel.TypeConverter> clases capaces de serialización y deserialización de las cadenas se consideran serializables.  
  
-   Tipos personalizados que se pueden serializar mediante el <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter> clase se consideran serializables.  
  
> [!IMPORTANT]
>  No debe agregar tipos basados en clases definidas en el directorio App_Code y, a continuación, dependen el mecanismo de serialización binaria de forma predeterminada. Los artefactos basados en App_Code no son constantemente serialización binaria debido al hecho de que pueden tener sus nombres de ensamblado modificados en puntos aleatorios en el tiempo.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo implementar el <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A> método en un personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Para el código completo necesario para ejecutar este ejemplo, vea la sección de ejemplo en el <xref:System.Web.UI.WebControls.WebParts.IPersonalizable> general sobre la clase.  
  
 [!code-csharp[WebParts_IPersonalizable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/CS/urllistwebpart.cs#2)]
 [!code-vb[WebParts_IPersonalizable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IPersonalizable_Overview/VB/urllistwebpart.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>