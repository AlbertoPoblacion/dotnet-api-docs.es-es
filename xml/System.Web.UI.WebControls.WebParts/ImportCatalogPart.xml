<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata><Meta Name="ms.openlocfilehash" Value="138ffda1aa735e92748c86113cfcda75fc5b451d" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="59353062" /></Metadata><TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Importa un archivo de descripción para un control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (u otro control de servidor ASP.NET utilizado como control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />), de forma que los usuarios puedan agregar el control a una página Web con una configuración predefinida. Esta clase no puede heredarse.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control permite a los usuarios importar un archivo de descripción que describe la configuración en un <xref:System.Web.UI.WebControls.WebParts.WebPart> control o control de servidor que un usuario desea agregar a un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona.  
  
 Una vez que un usuario importe un archivo de descripción, el <xref:System.Web.UI.WebControls.WebParts.WebPart> control hace referenciado en el archivo aparece dentro de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control y un usuario pueden agregar el control a la página.  
  
 El archivo de descripción no es igual que el propio control. Es un archivo XML que termina con un. Extensión de WebPart y contiene pares nombre/valor--principalmente valores de propiedad, que describen el estado del control. El archivo de descripción se crea según un formato XML especificado, como se describe en el tema [archivos de descripción de controles de elementos Web](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Para el control al que hace referencia el archivo de descripción, se puede compilar en un ensamblado, o puede ser un control de usuario definido en un archivo .ascx. En cualquier caso, el control al que hace referencia en un archivo de descripción importado debe existir en el servidor Web que hospeda la página que está intentando importar el control. El archivo de descripción hace referencia al control nombre y el ensamblado (o archivo) que contiene el control y el archivo de descripción contiene la configuración que afecta a los valores de propiedad del control, la apariencia y comportamiento.  
  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control permite a los usuarios compartir la configuración de los controles. Un control complejo puede tener muchas propiedades y configuraciones. Por ejemplo, en un sitio de intranet típico dentro de una empresa grande, un personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control podría contener un número de propiedades que contienen valores específicos de su entorno, como conexiones de base de datos, información del departamento y así sucesivamente. El control también puede contener un número de propiedades que afectan a su apariencia. Un usuario podría personalizar el control en un sitio determinado y hacer que funcione correctamente, exportar un archivo de descripción para el control y, a continuación, comparta el archivo de descripción con otros usuarios, que se podrían importar el archivo para agregar el control completamente configurado para otra intranet sitios que se pueden personalizar. Siempre que el ensamblado compilado o el archivo de control de usuario que contiene el control existe en el servidor Web que hospeda su sitio, los usuarios pueden agregar el control a otros sitios Web.  
  
 El mecanismo por el que los usuarios importar un archivo de descripción (y por lo tanto, controlar su servidor asociado) en una página Web es el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, que debe agregar un desarrollador de páginas a una página Web. Cuando un usuario cambia la página a modo de presentación de catálogo, el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> aparezca el control y el usuario puede utilizar este control para ir a la. WebPart correspondiente al control de servidor van a importar. Después de la interfaz de usuario y las instrucciones proporcionadas por el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> (control), un usuario es capaz de agregar el control de servidor que desee en la página Web, con su apariencia y propiedades completamente configuradas según lo especificado en el archivo de descripción importado.  
  
 Antes de un <xref:System.Web.UI.WebControls.WebParts.WebPart> se puede importar el archivo de descripción del control, un usuario debe crear (exportar) el archivo basado en un <xref:System.Web.UI.WebControls.WebParts.WebPart> control. Un archivo de descripción se puede exportar para un control si se cumplen las condiciones siguientes:  
  
-   El control tiene las propiedades marcadas con el `Personalizable` atributo.  
  
-   El archivo Web.config tiene el `enableExport` establecido en el valor del atributo `true` en el `<webParts>` elemento.  
  
-   Un desarrollador establece el valor de la <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> propiedad del control en un valor que no sea el valor predeterminado de <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, que prohíbe la exportación. Si el <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> el valor de propiedad se establece en <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, cualquier propiedad que contiene un <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> parámetro con un `Personalizable` no se exporta el atributo cuando un usuario exporte un archivo de descripción. Esto permite a los desarrolladores de controles impedir que los datos confidenciales, como las cadenas de conexión que se va a exportar en determinadas situaciones.  
  
 Un usuario puede exportar un control que se ha habilitado para la exportación, haga clic en el verbo de exportación que aparece en el menú de verbos del control y siga las instrucciones para guardar un. Archivo de descripción del elemento Web para el control. Otros usuarios, a continuación, pueden importar este archivo para configurar sus propias instancias del control.  
  
 La <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> clase contiene varias propiedades. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> propiedad contiene el texto con instrucciones para los usuarios cuando exploran para buscar el archivo de descripción. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> propiedad contiene el texto que actúa como una etiqueta para el control importado tal como aparece en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> contiene texto que se muestra si se produce un error al obtener una descripción del control que se va a importar. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> propiedad reemplaza la propiedad base para asignar un título predeterminado para un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controlar si el desarrollador no asigna un título. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> propiedad contiene el texto del botón que el usuario hace clic para cargar el archivo de descripción, y el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> propiedad contiene las instrucciones para el proceso de carga.  
  
 La <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> clase también contiene varios métodos únicos. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método recupera un <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> para cada objeto <xref:System.Web.UI.WebControls.WebParts.WebPart> control en el catálogo, lo que permite un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control para mostrar información sobre cada control de servidor sin tener que crear una instancia de ella. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> método obtiene una instancia de un determinado <xref:System.Web.UI.WebControls.WebParts.WebPart> control, según la descripción pasada al método.  
  
 Hay algunos riesgos inherentes asociados con el uso de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Un ejemplo es la posibilidad de importar datos malintencionados a la aplicación Web a través de los archivos de descripción que se puede usados para importar. Si alguien ha colocado el código de script malintencionado como el valor de una propiedad de cadena en el archivo de descripción, a continuación, ese script potencialmente se pudo ejecutar cuando un usuario importa el archivo de descripción y agrega el control de servidor que se hace referencia a una página Web. Para minimizar el riesgo de la importación de archivos de descripción con datos malintencionados, los controles de servidor que tienen propiedades de tipo cadena siempre deben codificar los datos de propiedad. Otro riesgo implica la importación de tipos a través de los archivos de descripción (consulte [archivos de descripción de controles de elementos Web](https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Un usuario malintencionado podría enviar solicitudes para cargar muchos ensamblados en el <xref:System.AppDomain>, lo que provocará una cantidad excesiva de memoria que se consume.  
  
 Para evitar los riesgos asociados con la importación, puede deshabilitar la característica por completo sin usar la característica de importación o la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. O bien, puede limitar qué usuarios tienen acceso al control. Puede hacerlo mediante programación, mediante la administración de funciones (consulte [administrar autorizaciones con Roles](https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Por ejemplo, cuando se carga la página, puede probar para ver si un usuario está en un rol, por ejemplo, el rol de administrador. Si el usuario está en el rol, puede agregar mediante programación el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control a la página para ese usuario. También puede usar un enfoque declarativo para limitar el conjunto de usuarios que puede usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control.  En la página web que contiene un catálogo, puede colocar dos <xref:System.Web.UI.WebControls.WebParts.CatalogZone> controles: uno para los usuarios que se pueden importar y otro para aquellos que no se puede. La zona para los usuarios que pueden importar contendría el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. La propia zona podría colocarse dentro de un <xref:System.Web.UI.WebControls.LoginView> control, que le permitirá limitar el uso del control en la zona a solo aquellos autentican los usuarios o roles que especifique.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controlar mediante declaración y mediante programación en una página Web. El ejemplo consta de cuatro partes:  
  
-   Un control de usuario que le permite cambiar los modos de presentación en una página de elementos Web.  
  
-   Una página Web que contiene un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control y un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control.  
  
-   Un archivo de código fuente que contiene dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles.  
  
-   Explicación de cómo funciona el ejemplo al cargar la página en un explorador.  
  
 La primera parte de este ejemplo de código es el control de usuario que permite a los usuarios cambiar los modos de presentación en una página Web. Debe colocar el siguiente código fuente en un archivo y asígnele el nombre Displaymodemenucs.ascx o Displaymodemenuvb.ascx (dependiendo del lenguaje que esté utilizando). Para obtener información detallada acerca de modos de presentación y una descripción del código fuente de este control, vea [Tutorial: Cambiar los modos de presentación en un servidor Web de elementos página](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 La segunda parte del ejemplo de código es la página Web. En la parte superior de la página tiene dos `register` directivas, uno para el control de usuario y otro para el componente compilado que contiene dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Tenga en cuenta que la página tiene una referencia declarativa a la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, anidada dentro de la jerarquía de elementos declarativos apropiada. Observe también que varios valores de propiedad se asignan mediante declaración en el `<asp:importcatalogpart>` elemento. Además, el `Button1_Click` método actualiza un número de valores de propiedad en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control.  
  
 En la página <xref:System.Web.UI.WebControls.WebParts.WebPartZone> (control), dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> se declaran los controles. El `<aspSample:userinfowebpart>` control tiene un `exportmode="all"` atributo en él. Este atributo es necesario para permitir que los usuarios exportar un archivo de descripción para el control, que después puede importarse por otros usuarios que quieran para importar el control mediante el archivo de descripción.  
  
> [!NOTE]
>  Para permitir que los usuarios de una aplicación de elementos Web para exportar un archivo de descripción de <xref:System.Web.UI.WebControls.WebParts.WebPart> controles, también debe habilitar la característica de exportación en la aplicación Web mediante la adición de un `enableExport="true"` atributo a la `<webParts>` elemento (que es un elemento secundario de la `<system.web>`elemento) en el archivo Web.config. La exportación está deshabilitada de forma predeterminada, por lo tanto, si aún no ha habilitado exportación para la aplicación, edite el archivo Web.config y hágalo ahora.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 La tercera parte del ejemplo de código es el código fuente de los dos <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Tenga en cuenta que algunas propiedades de estos controles se marcan con el `WebBrowsable` atributo. Esto permite la <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> control para generar dinámicamente la interfaz de usuario (UI) de un usuario editar estas propiedades cuando los controles están en modo de edición. Las propiedades también se marcan con un `WebDisplayName` atributo para especificar el texto de la etiqueta que aparece junto a cada control en la interfaz de usuario de edición. Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Este ejemplo de código utiliza la compilación dinámica. Para ver un tutorial que muestra ambos métodos de compilación, véase [Tutorial: Control de servidor Web de desarrollo y el uso de un personalizado](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 El control personalizado denominado `TextDisplayWebPart` se hace referencia en la página Web con un `<aspSample:TextDisplayWebPart>` elemento. El otro control, llamado `UserInfoWebPart`, también se declara en la página Web inicialmente, aunque lo quitará más tarde para demostrar la capacidad para importar un archivo de descripción para un control.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Ahora ejecute el ejemplo de código. Cargue la página Web en un explorador. El primer paso consiste en Editar el `UserInfoWebPart` control. Use la **modo de presentación** control de lista desplegable y seleccione **editar** para cambiar la página modo de edición. Haga clic en el menú de verbos de la `UserInfoWebPart` control (la flecha hacia abajo en la barra de título) y, a continuación, haga clic en **editar**. Cuando aparezca la interfaz de usuario de edición, varios controles de edición aparecen debajo de la `UserInfoWebPart` control que puede usar para modificar sus valores de campo. Editar algunos campos, haga clic en **Aceptar**y, a continuación, utilice el **modo de presentación** desplegable para devolver la página modo de exploración.  
  
 El segundo paso consiste en exportar una. Archivo de descripción del elemento Web para el `UserInfoWebPart` control. Haga clic en el menú de verbos en el control personalizado (representado por la flecha hacia abajo en la barra de título) y haga clic en **exportar**. Siga las instrucciones para guardar un. Archivo de descripción del elemento Web para el control. Ahora cierre la página Web y editar el origen de la página en un editor. Eliminar el `<aspSample:userinfowebpart>` controlar el elemento de declaración, a continuación, guarde y cierre el archivo. (Va a realizar este paso para simular un usuario que todavía no tiene el `UserInfoWebPart` controlar, por lo que puede importar el control a la página).  
  
 Cargue la página Web nuevo en un explorador. El `UserInfoWebPart` control no debe aparecer, porque lo quitó. Use la **modo de presentación** control de lista desplegable y seleccione **catálogo** para cambiar la página al modo de catálogo. En el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> de control, haga clic en el **examinar** botón y vaya a la. Elemento Web que ha creado y, después, haga clic en el **cargar** botón. Debe aparecer una referencia al control con una casilla de verificación junto a él. Seleccione la casilla de verificación, a continuación, haga clic en **agregar** para agregar el control a la página.  
  
 Mientras está en esta vista de la página, haga clic en el **actualizar ImportCatalogPart** situado cerca de la parte inferior de la página para ver el efecto de actualizar un número de valores de propiedad mediante programación en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Después de hacer clic en el botón, observe cómo cambian las distintas propiedades en la interfaz de usuario.  
  
 Por último, haga clic en **cerrar** para salir del modo de catálogo y devolver la página al modo de exploración. El `UserInfoWebPart` control debería aparecer ahora en la página, que contiene los valores que tenía cuando se exportó anteriormente.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
    <related type="Article" href="https://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8">Archivos de descripción de controles de elementos Web</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> constructor es un valor predeterminado; se declara ningún constructor en la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> clase y tareas especiales, por tanto, no se llevan a cabo cuando se crea una nueva instancia de la clase. .NET Framework utiliza el constructor internamente para crear una instancia de la clase.  
  
 Normalmente no necesitará utilizar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> constructor mediante programación en su propio código. El uso previsto del control es para que los desarrolladores de páginas agregarlo a una página mediante declaración en tiempo de diseño.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un mensaje de texto que indica a los usuarios que vayan a la ubicación de un archivo de descripción.</summary>
        <value>Una cadena que contiene el texto del mensaje. El valor predeterminado es un mensaje específico de la referencia cultural suministrado por .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> propiedad ofrece a los usuarios una visión general sencilla de lo primero que deben hacer en el proceso de agregar un control importado: proporcionar la ubicación de un archivo de descripción, buscando el archivo o escribir en una ruta de acceso. Una razón habitual para proporcionar un valor personalizado para esta propiedad es si tiene instrucciones especiales para los usuarios, como un recurso compartido de red específico al que debe examinar para buscar un archivo de descripción.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> propiedad mediante declaración y mediante programación. Para el código completo y las instrucciones necesarias para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> información general de clases.  
  
 En la siguiente sección de código, tenga en cuenta que el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> valor de propiedad se establece mediante declaración para el control.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 En esta sección del código, la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> valor de propiedad se asigna mediante programación.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Cuando se carga la página en un explorador, puede usar el **modo de presentación** control de lista desplegable para seleccionar **modo catálogo** y cambiar la página al modo de catálogo. Con la página en modo de catálogo y cargado el archivo de descripción, tenga en cuenta las distintas cadenas de texto mostradas en la interfaz de usuario (UI) para el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Si hace clic en el **cargar archivo de descripción** se cambia el botón, el texto para varias de las propiedades de la interfaz de usuario, incluido el texto de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece qué botón de la interfaz de usuario (IU) se trata como el botón predeterminado que recibe el foco cuando se representa el formulario que contiene el botón. Esta propiedad no está diseñada para ser llamada desde código del desarrollador de páginas.</summary>
        <value>Una cadena que contiene el id. del objeto <see cref="T:System.Web.UI.WebControls.Button" /> que recibe el foco predeterminado en un control <see cref="T:System.Web.UI.WebControls.Panel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El código de esta propiedad reemplaza la propiedad base heredada de la <xref:System.Web.UI.WebControls.Panel> clase para ocultar la propiedad a los diseñadores y evitar que se vean afectados por los temas. Aunque es pública, esta propiedad se utiliza internamente por el control de elementos Web establecido para la representación predeterminada de este control y no está pensada para usarse por los desarrolladores de páginas.  
  
 Esta propiedad no se puede establecer mediante temas o temas de la hoja de estilos. Para obtener más información, consulte <xref:System.Web.UI.ThemeableAttribute> y [ASP.NET temas y máscaras](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Devuelve una colección de descripciones de los controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> disponibles en un catálogo.</summary>
        <returns>Una colección <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" /> que contiene un objeto <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> para cada control de un catálogo.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método proporciona una implementación para el método base abstracto declaradas en el <xref:System.Web.UI.WebControls.WebParts.CatalogPart> clase. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método devuelve información de descripción de cada control en un catálogo. Tenga en cuenta que en el caso de un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> de control, puede haber solo un control de servidor en el catálogo a la vez, aunque el método funcionaría si hubiera varios controles.  
  
 Un <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> es un objeto que contiene información esencial sobre un <xref:System.Web.UI.WebControls.WebParts.WebPart> control, incluida su identificador, una referencia de objeto para el control y los valores de varias propiedades importantes que se heredan de la <xref:System.Web.UI.WebControls.WebParts.Part> clase, como <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> y <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.  
  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método mejora el rendimiento. Cuando se crea un catálogo, necesita cierta información acerca de cada control que contiene, incluido un título, una descripción, un icono (si existe) y un identificador. En lugar de tener que crear una instancia de cada control para obtener esta información, un <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> zona que crea un catálogo llama el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método y la llamada devuelve solo la información de descripción para el control en lugar de una instancia de la control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método en una página Web. El ejemplo consta de cuatro partes:  
  
-   Un control de usuario que le permite cambiar los modos de presentación en una página de elementos Web.  
  
-   Una página Web que contiene un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control y un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, junto con el código que usa el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método.  
  
-   Un archivo de código fuente que contiene dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles.  
  
-   Explicación de cómo funciona el ejemplo al cargar la página en un explorador.  
  
 La primera parte de este ejemplo de código es el control de usuario que permite a los usuarios cambiar los modos de presentación en una página Web. Debe colocar el siguiente código fuente en un archivo y asígnele el nombre Displaymodemenucs.ascx o Displaymodemenuvb.ascx (dependiendo del lenguaje que esté utilizando). Para obtener información detallada acerca de modos de presentación y una descripción del código fuente de este control, vea [Tutorial: Cambiar los modos de presentación en un servidor Web de elementos página](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 La segunda parte del ejemplo de código es la página Web. En la parte superior de la página tiene dos `register` directivas, uno para el control de usuario y otro para el componente compilado que contiene dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Ambos de estos controles se hace referencia mediante declaración en el marcado de la página. En las referencias a declarativa la <xref:System.Web.UI.WebControls.WebParts.WebPart> controles (comienzan con un `aspSample` prefijo), tenga en cuenta que cada uno tiene un `exportMode="all"` atributo agregado a él. Este atributo permite exportar una. Archivo de descripción de elemento Web para el control, que se usará en una versión posterior paso a paso para importar el control a una página.  
  
> [!NOTE]
>  Para permitir que los usuarios de una aplicación de elementos Web para exportar un archivo de descripción de <xref:System.Web.UI.WebControls.WebParts.WebPart> controles, también debe habilitar la característica de exportación en la aplicación Web mediante la adición de un `enableExport="true"` atributo a la `<webParts>` elemento (que es un elemento secundario de la `<system.web>`elemento) en el archivo Web.config. La exportación está deshabilitada de forma predeterminada, por lo tanto, si aún no ha habilitado exportación para la aplicación, edite el archivo Web.config y hágalo ahora.  
  
 La página Web también tiene una referencia declarativa a la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, anidada dentro de la jerarquía de elementos declarativos apropiada. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> se llama al método dentro del código para el `Button1_Click` método.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 La tercera parte del ejemplo de código es el código fuente de los dos <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Este ejemplo de código utiliza la compilación dinámica. Para ver un tutorial que muestra ambos métodos de compilación, véase [Tutorial: Control de servidor Web de desarrollo y el uso de un personalizado](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Ahora ejecute el ejemplo de código. Cargue la página Web en un explorador. El primer paso es exportar una. WebPart para cada uno de ellos <xref:System.Web.UI.WebControls.WebParts.WebPart> control (para el `TextDisplayWebPart` y para el `UserInfoWebPart` control). Para cada control, haga clic en el menú de verbos en el control (representado por la flecha hacia abajo en la barra de título) y haga clic en **exportar**. Siga las instrucciones para guardar un. Archivo de descripción del elemento Web para el control. Después de haber exportado un archivo de descripción de cada control, cierre la página Web y editar el origen de la página en un editor. Eliminar el `<aspSample:userinfowebpart>` y `<aspSample:textdisplaywebpart>` los elementos de la declaración del control, a continuación, guarde y cierre el archivo. (Va a realizar este paso para simular un usuario que todavía no tiene estos controles, para que pueda importar los controles a la página).  
  
 Cargue la página Web nuevo en un explorador. Use la **modo de presentación** control de lista desplegable y seleccione **catálogo** para cambiar la página al modo de catálogo. En el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> de control, haga clic en el **examinar** botón, vaya a la. Archivos de elemento Web que creó, seleccione uno y luego haga clic en el **cargar** botón. Debe aparecer una referencia al control con una casilla de verificación junto a él. Seleccione la casilla de verificación, a continuación, haga clic en **agregar** para agregar el control a la página. Repita este proceso para el otro control.  
  
 Mientras está en esta vista de la página, haga clic en el **Get WebPart Description** situado cerca de la parte inferior de la página para ver el efecto de acceso mediante programación a la <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> de objeto para la descripción del control cargada actualmente en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. El método utilizado para tener acceso a los detalles de la descripción, se encuentra en la `Button1_Click` método para el origen de la página, es el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> método. Una etiqueta debajo del botón muestra los detalles básicos sobre el control.  
  
 Después de agregar el primer control, repita el proceso para agregar el segundo control a la página. Por último, haga clic en **cerrar** para salir del modo de catálogo y devolver la página al modo de exploración. Ambos controles personalizados deberían aparecer ahora en la página, que contiene los valores que tenían cuando se ha exportado previamente los archivos de descripción.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description"><see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> que contiene detalles sobre el control.</param>
        <summary>Devuelve una referencia a un control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> basándose en los valores de la descripción pasada al método.</summary>
        <returns>Un control <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> cuya descripción coincide con los valores contenidos en <paramref name="description" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> método devuelve una referencia a un <xref:System.Web.UI.WebControls.WebParts.WebPart> control cuya descripción coincide con los valores de la <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objeto pasado al método. Normalmente, este método se utiliza junto con el <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> método, que se usa para recuperar las descripciones de los controles en el catálogo. Individuales <xref:System.Web.UI.WebControls.WebParts.WebPart> controles, a continuación, se pueden recuperar o manipular, según sea necesario pasando individuales <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objetos a la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> método.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> método en una página Web. El ejemplo consta de cuatro partes:  
  
-   Un control de usuario que le permite cambiar los modos de presentación en una página de elementos Web.  
  
-   Una página Web que contiene un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control y un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, junto con el código que usa el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> método.  
  
-   Un archivo de código fuente que contiene dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles.  
  
-   Explicación de cómo funciona el ejemplo al cargar la página en un explorador.  
  
 La primera parte de este ejemplo de código es el control de usuario que permite a los usuarios cambiar los modos de presentación en una página Web. Debe colocar el siguiente código fuente en un archivo y asígnele el nombre Displaymodemenucs.ascx o Displaymodemenuvb.ascx (dependiendo del lenguaje que esté utilizando). Para obtener información detallada acerca de modos de presentación y una descripción del código fuente de este control, vea [Tutorial: Cambiar los modos de presentación en un servidor Web de elementos página](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 La segunda parte del ejemplo de código es la página Web. En la parte superior de la página tiene dos `register` directivas, uno para el control de usuario y otro para el componente compilado que contiene dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Ambos de estos controles se hace referencia mediante declaración en el marcado de la página. En las referencias a declarativa la <xref:System.Web.UI.WebControls.WebParts.WebPart> controles (comienzan con un `aspSample` prefijo), tenga en cuenta que cada uno tiene un `exportMode="all"` atributo agregado a él. Este atributo permite exportar una. Archivo de descripción de elemento Web para el control, que se usará en una versión posterior paso a paso para importar el control a una página.  
  
> [!NOTE]
>  Para permitir que los usuarios de una aplicación de elementos Web para exportar un archivo de descripción de <xref:System.Web.UI.WebControls.WebParts.WebPart> controles, también debe habilitar la característica de exportación en la aplicación Web mediante la adición de un `enableExport="true"` atributo a la `<webParts>` elemento (que es un elemento secundario de la `<system.web>`elemento) en el archivo Web.config. La exportación está deshabilitada de forma predeterminada, por lo tanto, si aún no ha habilitado exportación para la aplicación, edite el archivo Web.config y hágalo ahora.  
  
 La página Web también tiene una referencia declarativa a la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control, anidada dentro de la jerarquía de elementos declarativos apropiada. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> se llama al método dentro del código para el `Button2_Click` método.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 La tercera parte del ejemplo de código es el código fuente de los dos <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Este ejemplo de código utiliza la compilación dinámica. Para ver un tutorial que muestra ambos métodos de compilación, véase [Tutorial: Control de servidor Web de desarrollo y el uso de un personalizado](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Ahora ejecute el ejemplo de código. Cargue la página Web en un explorador. El primer paso es exportar una. WebPart para cada uno de ellos <xref:System.Web.UI.WebControls.WebParts.WebPart> control (para el `TextDisplayWebPart` y para el `UserInfoWebPart` control). Para cada control, haga clic en el menú de verbos en el control (representado por la flecha hacia abajo en la barra de título) y haga clic en **exportar**. Siga las instrucciones para guardar un. Archivo de descripción del elemento Web para el control. Después de haber exportado un archivo de descripción de cada control, cierre la página Web y editar el origen de la página en un editor. Eliminar el `<aspSample:userinfowebpart>` y `<aspSample:textdisplaywebpart>` los elementos de la declaración del control, a continuación, guarde y cierre el archivo. (Va a realizar este paso para simular un usuario que todavía no tiene estos controles, para que pueda importar los controles a la página).  
  
 Cargue la página Web nuevo en un explorador. Use la **modo de presentación** control de lista desplegable y seleccione **catálogo** para cambiar la página al modo de catálogo. En el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> de control, haga clic en el **examinar** botón, vaya a la. Archivos de elemento Web que creó, seleccione uno y luego haga clic en el **cargar** botón. Debe aparecer una referencia al control con una casilla de verificación junto a él. Ahora que la descripción del control se carga en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> de control, haga clic en el **uso GetWebPart** situado cerca de la parte inferior de la página. Esto mostrará el efecto de llamar a la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> método y pasarle la descripción del control cargada actualmente en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Tenga en cuenta que el control de servidor asociado se agrega inmediatamente a la página Web, sin que el usuario tenga que hacer clic en el **agregar** botón. El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> método, que se llama en el `Button2_Click` devuelve el método de la fuente de página, el <xref:System.Web.UI.WebControls.WebParts.WebPart> control asociado con la descripción actual que se carga en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Siguiente el <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> método se llama a y el <xref:System.Web.UI.WebControls.WebParts.WebPart> control se agrega directamente a la página. Esto muestra cómo agregar un control mediante programación desde el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control sin intervención del usuario.  
  
 Después de agregar el primer control, repita el proceso para agregar el segundo control a la página. Por último, haga clic en **cerrar** para salir del modo de catálogo y devolver la página al modo de exploración. Ambos controles personalizados deberían aparecer ahora en la página, que contiene los valores que tenían cuando se ha exportado previamente los archivos de descripción.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="description" /> es <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="description" /> no es un valor disponible de <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto que se muestra después de que un usuario importe un archivo de descripción para representar o describir el control importado dentro del catálogo de controles importados.</summary>
        <value>Una cadena que contiene el texto de la etiqueta. El valor predeterminado es un mensaje específico de la referencia cultural suministrado por .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> propiedad se utiliza normalmente para que contenga una etiqueta general breve que describe el control contenido en el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> propiedad mediante declaración y mediante programación. Para el código completo y las instrucciones necesarias para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> información general de clases.  
  
 En la siguiente sección de código, tenga en cuenta que el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> valor de propiedad se establece mediante declaración para el control.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 En esta sección del código, la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> valor de propiedad se asigna mediante programación.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Cuando se carga la página en un explorador, puede usar el **modo de presentación** control de lista desplegable para seleccionar **modo catálogo** y cambiar la página al modo de catálogo. Con la página en modo de catálogo y cargado el archivo de descripción, tenga en cuenta las distintas cadenas de texto mostradas en la interfaz de usuario (UI) para el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Si hace clic en el **cargar archivo de descripción** se cambia el botón, el texto para varias de las propiedades de la interfaz de usuario, incluido el texto de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece un mensaje de error que se muestra si se produce un error durante el proceso de importación.</summary>
        <value>Una cadena que contiene el texto de la etiqueta. El valor predeterminado es un mensaje específico de la referencia cultural suministrado por .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> propiedad resulta útil para notificar al usuario si se produce algún problema o error al intenta importar un archivo de descripción de la página.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> propiedad mediante declaración y mediante programación. Para el código completo y las instrucciones necesarias para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> información general de clases.  
  
 En la siguiente sección de código, tenga en cuenta que el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> valor de propiedad se establece mediante declaración para el control.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 En esta sección del código, la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> valor de propiedad se asigna mediante programación.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Cuando se carga la página en un explorador, puede usar el **modo de presentación** control de lista desplegable para seleccionar **modo catálogo** y cambiar la página al modo de catálogo. Con la página en modo de catálogo y cargado el archivo de descripción, tenga en cuenta las distintas cadenas de texto mostradas en la interfaz de usuario (UI) para el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Si hace clic en el **cargar archivo de descripción** se cambia el botón, el texto para varias de las propiedades de la interfaz de usuario, incluido el texto de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el título que aparece en la barra de título de un control <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <value>Una cadena que se utiliza como título del control. El valor predeterminado es un nombre de control calculado proporcionado por el conjunto de controles de elementos Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> el valor de propiedad se muestra en la barra de título de un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> controlar cuando el control está visible en modo de catálogo. Cuando se declara el control en una página, puede establecer un valor para la propiedad mediante el `Title` atributo. Si no proporciona un valor para el título, un valor predeterminado de la referencia cultural específica se utiliza para describir el tipo de propiedades que este control permite a los usuarios editar.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> propiedad mediante declaración y mediante programación. Para el código completo y las instrucciones necesarias para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> información general de clases.  
  
 En la siguiente sección de código, tenga en cuenta que el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> valor de propiedad se establece mediante declaración para el control.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 En esta sección del código, la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> valor de propiedad se asigna mediante programación.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Cuando se carga la página en un explorador, puede usar el **modo de presentación** control de lista desplegable para seleccionar **modo catálogo** y cambiar la página al modo de catálogo. Con la página en modo de catálogo y cargado el archivo de descripción, tenga en cuenta las distintas cadenas de texto mostradas en la interfaz de usuario (UI) para el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Si hace clic en el **cargar archivo de descripción** se cambia el botón, el texto para varias de las propiedades de la interfaz de usuario, incluido el texto de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto del control <see cref="T:System.Web.UI.WebControls.Button" /> que inicia la carga de un archivo de descripción.</summary>
        <value>Una cadena utilizada como texto de <see cref="T:System.Web.UI.WebControls.Button" />. El valor predeterminado es una cadena específica de la referencia cultural proporcionada por el conjunto de controles de elementos Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> propiedad proporciona el texto para el <xref:System.Web.UI.WebControls.Button> control que inicia el proceso de carga. Si asigna texto personalizado a esta propiedad, así como la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> propiedad, el texto debería dejar claro que el usuario está cargando un archivo de descripción. El texto no debe decir ni implica que el proceso de carga está cargando realmente el propio control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> propiedad mediante declaración y mediante programación. Para el código completo y las instrucciones necesarias para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> información general de clases.  
  
 En la siguiente sección de código, tenga en cuenta que el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> valor de propiedad se establece mediante declaración para el control.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 En esta sección del código, la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> valor de propiedad se asigna mediante programación.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Cuando se carga la página en un explorador, puede usar el **modo de presentación** control de lista desplegable para seleccionar **modo catálogo** y cambiar la página al modo de catálogo. Con la página en modo de catálogo y cargado el archivo de descripción, tenga en cuenta las distintas cadenas de texto mostradas en la interfaz de usuario (UI) para el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Si hace clic en el **cargar archivo de descripción** se cambia el botón, el texto para varias de las propiedades de la interfaz de usuario, incluido el texto de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece el texto del mensaje que indica al usuario cómo cargar un archivo de descripción.</summary>
        <value>Una cadena utilizada como instrucciones para que el usuario pueda cargar un archivo de descripción. El valor predeterminado es una cadena específica de la referencia cultural proporcionada por el conjunto de controles de elementos Web.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> propiedad proporciona una frase breve o una frase de instrucciones para los usuarios, informándoles de hacer clic en un botón para cargar el archivo de descripción. Si asigna texto personalizado a esta propiedad, así como la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> propiedad, el texto debería dejar claro que el usuario está cargando un archivo de descripción. El texto no debe decir ni implica que el proceso de carga está cargando realmente el propio control.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo usar el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> propiedad mediante declaración y mediante programación. Para el código completo y las instrucciones necesarias para ejecutar el ejemplo, vea la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> información general de clases.  
  
 En la siguiente sección de código, tenga en cuenta que el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> valor de propiedad se establece mediante declaración para el control.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 En esta sección del código, la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> valor de propiedad se asigna mediante programación.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 Cuando se carga la página en un explorador, puede usar el **modo de presentación** control de lista desplegable para seleccionar **modo catálogo** y cambiar la página al modo de catálogo. Con la página en modo de catálogo y cargado el archivo de descripción, tenga en cuenta las distintas cadenas de texto mostradas en la interfaz de usuario (UI) para el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Si hace clic en el **cargar archivo de descripción** se cambia el botón, el texto para varias de las propiedades de la interfaz de usuario, incluido el texto de la <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> propiedad.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>