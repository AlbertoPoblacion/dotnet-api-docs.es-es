<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37e85f2a562ac9e4c866a8070ae59f8dd1633f5d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="es-ES" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585579" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Actúa como control primario en el conjunto de controles de elementos web que hospedan los controles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> en una página web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el conjunto de controles de elementos Web, una zona es una región en una página Web que contiene controles de elementos Web. Se crea una zona de elementos Web mediante un control de zona, que es un tipo de <xref:System.Web.UI.WebControls.CompositeControl> diseñado para contener otros controles. Las funciones principales de una zona son para colocar los controles que contiene y para proporcionar una interfaz de usuario (UI) común para los controles. Para obtener información general sobre las zonas y cómo se utilizan en aplicaciones de elementos Web, vea la base de <xref:System.Web.UI.WebControls.WebParts.WebZone> (clase), y [Web Parts Control Set Overview](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Una característica clave de controles de elementos Web es que permiten a los usuarios finales modificar (o personalizar) páginas Web según sus preferencias y guardar su configuración personalizada para futuras sesiones del explorador. Uno de los aspectos de la modificación de páginas de elementos Web incluye la capacidad de agregar <xref:System.Web.UI.WebControls.WebParts.WebPart> controles u otros controles de servidor a una página de elementos Web. El <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control proporciona una lista o un catálogo de controles que los usuarios pueden agregar a una página.  
  
 El <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control es uno de los controles fundamentales en el conjunto de controles de elementos Web. Deriva de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> clase y la mayor parte de su comportamiento se hereda de esa clase. El <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase esencialmente agrega a la clase base una plantilla de zona, que es una implementación de la <xref:System.Web.UI.ITemplate> interfaz. La plantilla de zona permite a los programadores agregar mediante declaración <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles a una zona en el formato de persistencia de página.  
  
> [!IMPORTANT]
>  A <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zona solo puede contener <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles y a la inversa, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles sólo pueden residir en zonas que derivan de la <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> de la clase, como <xref:System.Web.UI.WebControls.WebParts.CatalogZone>.  
  
 A <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control esté visible solo cuando un usuario activa una página Web en modo de presentación de catálogo (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). Un catálogo puede contener varios tipos de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles. Cada <xref:System.Web.UI.WebControls.WebParts.CatalogPart> control es un tipo de contenedor que contiene los controles de servidor que los usuarios pueden agregar a la página. El <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles varían en función de dónde proceden los controles de servidor que contienen. La siguiente tabla resume el <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controla proporcionados con el conjunto de controles de elementos Web y, para cada control, qué tipo de servidor de controles que contiene.  
  
|Control|Descripción|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Mantiene las referencias a los controles que se han cerrado en una página. Estos controles se pueden reabrir (nuevo en la página) por los usuarios.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Contiene referencias a los controles que se declaran en un catálogo de elementos Web en el marcado de una página Web. Estos controles se pueden agregar a una página Web por los usuarios.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Proporciona la interfaz de usuario para un usuario cargar un archivo de definición (un archivo XML con una. Extensión de elemento Web y un formato especificado que contiene la información de estado) para un control en un catálogo, para que el control se pueda agregar a una página Web.|  
  
 Dado que la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase agrega sólo una plantilla de zona en el comportamiento de su clase base, tiene pocos miembros. El <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> constructor es un constructor predeterminado; con él, puede inicializar una nueva instancia de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase. El <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> propiedad obtiene o establece una referencia a la <xref:System.Web.UI.ITemplate> objeto que contiene los controles de la zona. El <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> método es crítico. Reemplaza el método base para crear la colección de todos los <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles incluidos en la plantilla de zona.  
  
> [!NOTE]
>  Los botones de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfaz de usuario requieren secuencias de comandos de cliente para poder funcionar correctamente. Si se deshabilita el scripting en el explorador, el usuario no podrá realizar acciones a través de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> interfaz de usuario.  
  
## <a name="accessibility"></a>Accesibilidad  
 El marcado que se representa de forma predeterminada para este control no puede cumplir los estándares de accesibilidad, como las directrices de prioridad 1 Web Content Accessibility Guidelines 1.0 (WCAG). Para obtener más información sobre la compatibilidad de accesibilidad para este control, vea [controles ASP.NET y accesibilidad](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo utilizar mediante declaración y mediante programación de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control. El ejemplo de código tiene cuatro partes:  
  
-   Un control de usuario que permite cambiar los modos de presentación en la página Web.  
  
-   Un archivo con el código fuente para un personalizado <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control y un personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control que se importa el catálogo y se agrega a la página Web.  
  
-   Una página Web que declara el control de usuario y personalizado <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control.  
  
-   Explicación de cómo ejecutar el ejemplo.  
  
 La primera parte de este ejemplo de código es el control de usuario que permite a los usuarios cambiar los modos de presentación en una página Web. Para obtener más información acerca de modos de presentación y una descripción del código fuente de este control, vea [Tutorial: cambiar modos de mostrar en una página de elementos Web](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 La segunda parte del ejemplo de código contiene el código para personalizado <xref:System.Web.UI.WebControls.WebParts.CatalogZone> y <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. El código para el <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control muestra cómo heredar de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase y personalizar sus propiedades estableciendo de forma predeterminada algunos valores de propiedad en el constructor. El código fuente también muestra cómo crear una personalizada <xref:System.Web.UI.WebControls.WebParts.WebPart> clase denominada `TextDisplayWebPart`. Éste es el control asociado con el. Archivo de descripción del elemento Web que desea importar como parte de este ejemplo de código. Después de importar el archivo de descripción utilizando el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control en la página Web, podrá agregar el `TextDisplayWebPart` control a la página, totalmente preconfigurada según se especifica en el archivo de descripción.  
  
 Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Este ejemplo de código utiliza la compilación dinámica, por lo tanto, si desea ejecutar el ejemplo de esta manera, el nombre de archivo de código fuente y agregarlo a una subcarpeta App_Code del directorio raíz de la aplicación Web. Para ver un tutorial que muestra ambos métodos de compilación, consulte [Tutorial: desarrollar y usar un Control de servidor Web personalizado](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 La tercera parte del ejemplo de código es la página Web que contiene los controles. Contiene un `Register` la directiva para el control de usuario y otro para el archivo de código fuente con los controles personalizados. Tenga en cuenta que en la segunda directiva, no incluye el nombre del ensamblado, puesto que el ejemplo no utiliza un ensamblado, utiliza la compilación dinámica con el código fuente que se coloca en la subcarpeta App_Code. La página Web declara un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> (control) y dentro de su elemento secundario `<zonetemplate>` elemento, declara un <xref:System.Web.UI.WebControls.BulletedList> control. Aunque se trata de un control ASP.NET estándar, tendrá toda la funcionalidad de elementos Web en tiempo de ejecución porque el <xref:System.Web.UI.WebControls.WebParts.WebPartManager> controlar ajusta cualquier control de servidor se coloca en un <xref:System.Web.UI.WebControls.WebParts.WebPartZone> con una <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> de objeto, para que otros controles de servidor pueden participar en la Web Aplicaciones de elementos. También se declaran en esta zona es personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> control denominado `TextDisplayWebPart`. Tenga en cuenta que este control tiene un atributo de `ExportMode="All"` declarado en él. Esto le permite exportar una. Archivo de descripción de elemento Web que contiene los valores de propiedad del control, que puede importarse por otros usuarios para agregar el control preconfigurado a otras páginas Web.  
  
> [!NOTE]
>  Permitir a los usuarios de una aplicación de elementos Web para exportar un archivo de descripción para <xref:System.Web.UI.WebControls.WebParts.WebPart> controles, también debe habilitar la característica de exportación en la aplicación Web mediante la adición de un `enableExport="true"` atribuir a la `<webParts>` elemento (que es un elemento secundario de la `<system.web>`elemento) en el archivo Web.config. La exportación está deshabilitada de forma predeterminada, por lo tanto, si aún no se ha habilitado la exportación para la aplicación, edite el archivo Web.config y hágalo ahora.  
  
 La página Web también declara personalizado <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control y, dentro de él, un `<zonetemplate>` elemento que contiene un <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. El usuario utilizará este control en tiempo de ejecución para importar el. Archivo de descripción de elemento Web personalizada de <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Ahora ejecute el ejemplo de código. Cargar la página Web en un explorador. El primer paso consiste en exportar una. Archivo de descripción de elemento Web para el `TextDisplayWebPart` control. Haga clic en el menú de verbos en el control personalizado (representado por la flecha hacia abajo en la barra de título) y haga clic en **exportar**. Siga las instrucciones para guardar un archivo de descripción para el control. Abra el. Descripción del elemento Web en un editor de archivos y editar el valor de la propiedad del texto de título. Buscar el `<property>` elemento que tiene el atributo `name="Title"`y edite el texto de título que se encuentra entre la apertura y cierre `<property>` etiquetas. Ahora cierre la página Web y editar el origen de la página en un editor. Eliminar el `<aspSample:TextDisplayWebPart>` controlar el elemento de declaración, a continuación, guarde y cierre el archivo.  
  
 Cargar la página Web en un explorador. El `TextDisplayWebPart` control no debe aparecer, porque lo quitó. Use la **modo de presentación** control de lista desplegable y seleccione **catálogo** para cambiar la página al modo de catálogo. Tenga en cuenta que la opción de instalación <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control aparece, junto con el <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> control. Haga clic en el **examinar** botón para buscar el. Archivo de descripción de elemento Web que ha exportado para el `TextDisplayWebPart` control. Puede hacer clic en **cargar**, active la casilla situada junto al control importado y haga clic en **agregar** para agregarlo a la página. Haga clic en **Cerrar catálogo** para devolver la página al modo de exploración normal. El control importado debe aparecer ahora en la página y el título que aparece en la barra de título del control debe ser el texto de título que agregó a la. Archivo de descripción del elemento Web.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">para trabajar en un entorno hospedado. Valor de petición: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; valor de permiso: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" /></permission>
    <block subset="none" type="overrides">
      <para>Puede crear personalizado <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> clases si desea tener mayor control sobre la representación y el comportamiento de la interfaz de usuario del catálogo. Si no es necesario proporcionar a los usuarios del control de la capacidad de agregar <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controla de forma declarativa, a continuación, se puede heredar directamente de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> clase. Si desea permitir que los controles se agregan mediante declaración, el enfoque más sencillo es heredar de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> de la clase, ya que proporciona la plantilla de zona esencial.  Si se hereda de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> (clase), puede invalidar la <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> método y utilice el método para agregar personalizada <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controles a un <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, si desea agregar mayor control mediante programación personalizada <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controles a la zona .</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dado que la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control implementa una plantilla de zona, normalmente se utiliza mediante declaración y rara vez necesitará crear una nueva instancia de la clase utilizando el <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> constructor. Sin embargo, si se hereda de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase para crear una zona personalizada, desea utilizar el constructor para inicializar algunos de sus valores de propiedad y personalizar su apariencia.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso mediante programación de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> constructor en un personalizado <xref:System.Web.UI.WebControls.WebParts.CatalogZone> control. El constructor se utiliza para inicializar algunos valores de propiedad predeterminados para el control. El código siguiente muestra la opción de instalación <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase con el constructor declarado cerca de la parte superior. Para el código completo y las instrucciones necesarias para configurar y ejecutar el ejemplo, vea la sección de ejemplo en el <xref:System.Web.UI.WebControls.WebParts.CatalogZone> general sobre la clase.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea una instancia de cada tipo <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> declarado en la zona.</summary>
        <returns>Un objeto <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> que hace referencia a todos los controles <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> de la zona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> método es un método crítico porque cuando un usuario cambia una página a modo de presentación de catálogo, este método crea todos los <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles que componen el catálogo de elementos Web.  
  
 El <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> método en el <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase proporcionados con los elementos Web de conjunto de controles puede crear cualquier control de servidor que se hereda de la <xref:System.Web.UI.WebControls.WebParts.CatalogPart> clase. Por lo tanto, si ha creado un archivo <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controlar y declarar en una página en un <xref:System.Web.UI.WebControls.WebParts.CatalogZone> (control), este método creará el control cuando un usuario cambia la página al modo de catálogo.  
  
 Sin embargo, debido a distintas razones podría querer control absoluto sobre la <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> método. Puede que sólo cree determinados <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles. Por ejemplo, suponga que crea un conjunto de personalizado <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles que tienen una apariencia coherente y pertenecen a un único producto u organización. Si desea que los desarrolladores de páginas que se limiten a utilizar dichos controles personalizados en un catálogo, debe heredar de la <xref:System.Web.UI.WebControls.WebParts.CatalogZone> clase, invalide el <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> método y permitir que el método para crear sólo los controles del mismo tipo que los controles personalizados.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El control <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> actual no tiene identificador.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene o establece una plantilla para que contenga los controles secundarios dentro de un control <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> en formato de persistencia de página.</summary>
        <value>Un objeto <see cref="T:System.Web.UI.ITemplate" /> que actúa como contenedor de los controles secundarios de la zona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> propiedad hace referencia a una plantilla de tipo <xref:System.Web.UI.ITemplate> que se usa para contener el <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles de la zona. La plantilla de zona permite a los desarrolladores de páginas declarar el <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles que deseen utilizar en formato de persistencia, en lugar de tener que crear todos los controles mediante programación.  
  
 El descriptor de acceso para la <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> propiedad llamadas el <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> método, que obliga a la recopilación de <xref:System.Web.UI.WebControls.WebParts.CatalogPart> controles que se declaran en la plantilla de zona en la página que se va a actualizar. Esto garantiza que la colección de controles que se hace referencia a la zona permanezca actualizada siempre que un usuario cambia realmente los controles declarados dentro de la plantilla en la página.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Si desea crear una personalizada <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> zona, pero se planea crear el <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> controles mediante programación en lugar de permitir que los desarrolladores de páginas al declararlas, no necesita zona compatibilidad con plantillas, y pueden heredar directamente de la <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> clase.</para>
        </block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
  </Members>
</Type>