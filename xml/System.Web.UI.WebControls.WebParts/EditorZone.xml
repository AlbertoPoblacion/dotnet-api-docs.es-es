<Type Name="EditorZone" FullName="System.Web.UI.WebControls.WebParts.EditorZone">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c4fa8111ab29b8f4830c576cda83028f3e1bfd6" /><Meta Name="ms.sourcegitcommit" Value="2982b8c4cce02c2542285fcaf172f7544d6b80bc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="04/09/2019" /><Meta Name="ms.locfileid" Value="59348876" /></Metadata><TypeSignature Language="C#" Value="public class EditorZone : System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EditorZone extends System.Web.UI.WebControls.WebParts.EditorZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.EditorZone" />
  <TypeSignature Language="VB.NET" Value="Public Class EditorZone&#xA;Inherits EditorZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditorZone : System::Web::UI::WebControls::WebParts::EditorZoneBase" />
  <TypeSignature Language="F#" Value="type EditorZone = class&#xA;    inherit EditorZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.EditorZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.EditorZoneDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Actúa como control primario en el conjunto de controles de elementos web que hospedan los controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> en una página web.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En el conjunto de controles de elementos Web, una zona es un control compuesto que cubre una región definida en una página Web y contiene controles de servidor. Las funciones principales de una zona son para disponer los controles que contiene y para proporcionar una interfaz de usuario (IU) común para esos controles. Para obtener información general sobre zonas y cómo se usan en aplicaciones de elementos Web, consulte la documentación de referencia para la base de <xref:System.Web.UI.WebControls.WebParts.WebZone> (clase), y [Web Parts Control Set Overview](https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)).  
  
 El <xref:System.Web.UI.WebControls.WebParts.EditorZone> control es uno de los controles fundamentales en el conjunto de controles de elementos Web. Una característica clave de los elementos Web es la capacidad de los usuarios finales modificar (o personalizar) páginas Web según sus preferencias y guardar su configuración personalizada para futuras sesiones del explorador. Uno de los aspectos de la modificación de las páginas de elementos Web es la edición; los usuarios pueden editar la apariencia, diseño, comportamiento y otras propiedades de la visible <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. Varios controles en el conjunto de controles de elementos Web proporcionan las características de edición, incluida la <xref:System.Web.UI.WebControls.WebParts.EditorZone> control.  
  
 Un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control está visible cuando una página de elementos Web entra en modo de edición y lo pone a disposición diversos <xref:System.Web.UI.WebControls.WebParts.EditorPart> los controles que se pueden usar para personalizar <xref:System.Web.UI.WebControls.WebParts.WebPart> controles. El <xref:System.Web.UI.WebControls.WebParts.EditorZone> control es muy similar a su elemento primario, el <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> (clase), con una diferencia importante: El <xref:System.Web.UI.WebControls.WebParts.EditorZone> control proporciona una plantilla de zona, que se hace referenciada en su <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> propiedad. La plantilla de zona agrega la capacidad de declarar contenido en el formato de persistencia de página. Los desarrolladores de páginas pueden colocar una <xref:System.Web.UI.WebControls.WebParts.EditorZone> control en el marcado declarativo de una página Web, agregue un elemento secundario `<zonetemplate>` elemento y dentro la `<zonetemplate>` elemento, agregar referencias declarativas a <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles.  
  
 El <xref:System.Web.UI.WebControls.WebParts.EditorZone> control también tiene un método, <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A>, lo que invalida un método base en el <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> clase. Este método es necesario para que un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control puede crear la plantilla de zona para contenerlos <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles que se agregan a la zona de forma declarativa.  
  
> [!NOTE]
>  Los botones de la <xref:System.Web.UI.WebControls.WebParts.EditorZone> la interfaz de usuario requieren scripting del lado cliente para poder funcionar correctamente. Si está deshabilitado el scripting en el explorador, el usuario no podrá realizar acciones a través de la <xref:System.Web.UI.WebControls.WebParts.EditorZone> la interfaz de usuario.  
  
## <a name="accessibility"></a>Accesibilidad  
 El marcado representado de forma predeterminada para este control no podría cumplir los estándares de accesibilidad, como las directrices de prioridad 1 de Web Content Accessibility Guidelines 1.0 (WCAG). Para obtener más información sobre la compatibilidad de accesibilidad para este control, vea [controles ASP.NET y accesibilidad](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 El ejemplo de código siguiente muestra algunas declarativo y usos mediante programación de la <xref:System.Web.UI.WebControls.WebParts.EditorZone> clase. El ejemplo crea una zona del editor personalizado que herede de la <xref:System.Web.UI.WebControls.WebParts.EditorZone> clase y lo utiliza en una página de elementos Web.  
  
 El ejemplo de código consta de tres partes:  
  
-   Un control de usuario que le permite cambiar los modos de presentación en la página Web.  
  
-   Una página Web que hace referencia a la personalizada <xref:System.Web.UI.WebControls.WebParts.EditorZone> control.  
  
-   Explicación de cómo funciona el ejemplo.  
  
 La primera parte de este ejemplo de código es el control de usuario que permite a los usuarios cambiar los modos de presentación en una página Web. Para obtener más información acerca de modos de presentación y una descripción del código fuente de este control, vea [Tutorial: Cambiar los modos de presentación en un servidor Web de elementos página](https://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/displaymodecs.ascx#4)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/displaymodevb.ascx#4)]  
  
 La segunda parte del ejemplo de código es una página Web. En la parte superior de la página es una `Register` la directiva para el control de usuario. La etiqueta del control de usuario se declara en la página con un `uc1:` prefijo para el elemento. Tenga en cuenta que, a continuación el `<asp:WebPartZone>` elemento es un `<asp:EditorZone>` elemento que contenga varias <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles, con algunas etiquetas y propiedades establecidos para determinar su apariencia y comportamiento. También hay una serie de métodos que tienen acceso a diversos miembros de la <xref:System.Web.UI.WebControls.WebParts.EditorZone> controlar mediante programación.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#1)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#1)]  
  
 Cuando se carga la página en un explorador, puede seleccionar **del modo de edición** en la lista desplegable para cambiar el modo de edición. Para mostrar la interfaz de usuario de edición, puede haga clic en el menú de verbos (la flecha hacia abajo) en la barra de título de uno de los dos controles y haga clic en **editar** para editar el control. Con la interfaz de usuario edición visible, puede ver los efectos de los usos declarativos y programáticos de los <xref:System.Web.UI.WebControls.WebParts.EditorZone> miembros de clase.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Si desea crear un personalizado <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> zona para conseguir un mayor control sobre la representación de la interfaz de usuario de edición, puede heredar directamente de la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZoneBase" /> clase, siempre y cuando no es necesario proporcionar compatibilidad con la plantilla de zona para los desarrolladores de páginas agregar <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controla de forma declarativa a la zona. En tal caso, agregaría todos <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> controles mediante programación a una zona. Si desea proporcionar compatibilidad con la plantilla de zona, debe heredar la <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> clase.</para></block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.EditorPart" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/k3w2y2tf(v=vs.100)">Conjunto de información general del Control de elementos Web</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/z36h8be9(v=vs.100)">Información general de personalización de elementos Web</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EditorZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EditorZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Inicializa una nueva instancia de la clase <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateEditorParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateEditorParts () As EditorPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::EditorPartCollection ^ CreateEditorParts();" />
      <MemberSignature Language="F#" Value="override this.CreateEditorParts : unit -&gt; System.Web.UI.WebControls.WebParts.EditorPartCollection" Usage="editorZone.CreateEditorParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.EditorPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crea todos los controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> declarados en una plantilla de zona en formato de persistencia de página.</summary>
        <returns>Una colección <see cref="T:System.Web.UI.WebControls.WebParts.EditorPartCollection" /> que contiene las referencias a todos los controles <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> declarados en la plantilla de zona.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.EditorZone.CreateEditorParts%2A> método invalida el método base para crear únicamente la <xref:System.Web.UI.WebControls.WebParts.EditorPart> los controles que se declaran dentro de la plantilla de zona. Cualquier otro <xref:System.Web.UI.WebControls.WebParts.EditorPart> los controles agregados a la zona deben agregarse mediante programación. Esto puede hacerse, por ejemplo, implementando la <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interfaz en un <xref:System.Web.UI.WebControls.WebParts.WebPart> control. A continuación, en invalidado <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> método, puede agregar una colección de personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles a una zona.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">El control <see cref="T:System.Web.UI.WebControls.WebParts.EditorPart" /> actual no tiene identificador.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.EditorZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Proporciona una plantilla para contener los controles secundarios en un control <see cref="T:System.Web.UI.WebControls.WebParts.EditorZone" /> en formato de persistencia de página.</summary>
        <value>Una plantilla de zona <see cref="T:System.Web.UI.ITemplate" /> que actúa como contenedor para los controles secundarios de la zona.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 El <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> propiedad es la diferencia clave entre el <xref:System.Web.UI.WebControls.WebParts.EditorZone> clase y la base de <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> clase. Al agregar compatibilidad con una plantilla de zona, el <xref:System.Web.UI.WebControls.WebParts.EditorZone> clase permite a los desarrolladores de páginas colocar el elemento secundario <xref:System.Web.UI.WebControls.WebParts.EditorPart> controla dentro de un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control en el marcado declarativo de una página Web. La plantilla de zona actúa como contenedor para los controles secundarios.  
  
> [!NOTE]
>  El descriptor de acceso para el <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> propiedad llamadas la <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts%2A> método, que obliga a la recopilación de <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles declaran en la plantilla se vuelve a crear. Esto hace que los cambios en el contenido de la plantilla que se reconozcan.  
  
 Para usar una plantilla de zona mediante declaración dentro un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control, agrega un par de `<zonetemplate>` etiquetas y referencia <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles entre las etiquetas. Plantilla de solo zona se representa por cada instancia de un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control (por lo tanto, no hay ninguna razón para agregar varias `<zonetemplate>` elementos a un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control). Además, la plantilla de zona de un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control puede contener solo los controles de elementos que se derivan de la <xref:System.Web.UI.WebControls.WebParts.EditorPart> clase.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra el uso declarativo de la <xref:System.Web.UI.WebControls.WebParts.EditorZone.ZoneTemplate%2A> propiedad. El código completo para el ejemplo se encuentra en la sección ejemplo de la <xref:System.Web.UI.WebControls.WebParts.EditorZone> información general de clases.  
  
 El ejemplo de código se muestra cómo <xref:System.Web.UI.WebControls.WebParts.EditorPart> controles se pueden colocar dentro de un `<zonetemplate>` elemento en un <xref:System.Web.UI.WebControls.WebParts.EditorZone> control.  
  
 [!code-aspx-csharp[WebParts_EditorZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_EditorZone_Overview/CS/editorzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_EditorZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_EditorZone_Overview/VB/editorzonevb.aspx#2)]  
  
 Cuando se carga la página en un explorador, puede seleccionar **del modo de edición** en la lista desplegable para cambiar el modo de edición. Para mostrar la interfaz de usuario (UI) de edición, puede haga clic en el menú de verbos (la flecha hacia abajo) en la barra de título de uno de los dos controles y haga clic en **editar** para editar el control. Con la interfaz de usuario edición visible, puede ver los diversos <xref:System.Web.UI.WebControls.WebParts.EditorPart> los controles que se declaran dentro de la `<zonetemplate>` elemento.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartZone.ZoneTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.EditorZoneBase.InvalidateEditorParts" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/e0s9t4ck(v=vs.100)">Controles de elementos Web de ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>