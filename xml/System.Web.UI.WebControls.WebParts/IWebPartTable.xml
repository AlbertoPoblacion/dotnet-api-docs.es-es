<Type Name="IWebPartTable" FullName="System.Web.UI.WebControls.WebParts.IWebPartTable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="acaf2a3450e984f608d068e73dae44259d504aab" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="es-ES" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51878378" /></Metadata><TypeSignature Language="C#" Value="public interface IWebPartTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartTable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartTable" />
  <TypeSignature Language="F#" Value="type IWebPartTable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Define una interfaz de proveedor para conectar dos controles de servidor mediante una tabla completa de datos.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta interfaz está diseñada para usarse con conexiones de elementos Web. En una conexión de elementos Web, dos controles de servidor que residen en un <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zona establecer una conexión y el recurso compartido de datos, con un control que actúa como consumidor y el otro control que actúa como un proveedor. El mecanismo para compartir datos en una conexión de elementos Web es una instancia de interfaz, el proveedor proporciona al consumidor por medio de un método de devolución de llamada. Para establecer una conexión, el consumidor y proveedor deben trabajar con el mismo tipo de interfaz para compartir datos. Si el consumidor no reconoce el tipo de interfaz enviado por el proveedor, es posible conectar los controles por medio de un transformador (un <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> objeto) que convierte la instancia de la interfaz enviada por el proveedor en un tipo que el consumidor reconoce. Para obtener más información sobre las conexiones, vea <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> y [Introducción a las conexiones de elementos Web](https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 El <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz es una interfaz de proveedor que se incluye con el control de elementos Web establecido como una interfaz estándar para crear conexiones basadas en una tabla de datos. También puede crear interfaces personalizadas para usar con conexiones de elementos Web, pero en muchas aplicaciones Web controladas por datos, resulta útil crear las conexiones basadas en un campo común (para obtener más información, consulte el <xref:System.Web.UI.WebControls.WebParts.IWebPartField> interfaz), fila (para obtener más información, consulte el <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interfaz), o una tabla del origen de datos. En una conexión normal, un <xref:System.Web.UI.WebControls.WebParts.WebPart> controlar actúa como un proveedor implementaría el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz y proporcionar una instancia de la interfaz a los consumidores de un método de devolución de llamada especial. Por ejemplo, el proveedor podría implementar un <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz para una tabla que contiene los datos de rendimiento financiero. Otro <xref:System.Web.UI.WebControls.WebParts.WebPart> control que actúa como un consumidor definiría un método especial para recibir la instancia de interfaz y podría extraer los datos y presentar un gráfico para mostrar la información resultante.  
  
 El <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz tiene dos miembros expuestos. El <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propiedad devuelve información de esquema de la tabla de datos encapsulada en un <xref:System.ComponentModel.PropertyDescriptorCollection> objeto. El <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> método declara un método que un implementador (por ejemplo, un control proveedor) que se utiliza para recuperar datos de la tabla de la instancia de la interfaz cuando se invoca el método de devolución de llamada.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra cómo crear una conexión estática entre dos controles mediante el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz. El ejemplo de código consta de tres partes:  
  
-   Código fuente de dos personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart> controles que pueden formar una conexión mediante el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz con un control que actúa como proveedor y el otro actúa como consumidor.  
  
-   Una página Web que hospeda los controles y declara la conexión estática en formato de persistencia.  
  
-   Una descripción de lo que sucede cuando se ejecuta el código de ejemplo.  
  
 La primera parte del ejemplo de código es el código fuente para los dos controles personalizados. En primer lugar es el código para el proveedor, que implementa el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz. Para simplificar, en el ejemplo, el proveedor crea una tabla con algunos datos en lugar de conectarse a una base de datos. El `GetConnectionInterface` método actúa como punto de conexión del proveedor, el método de devolución de llamada que devuelve la instancia de interfaz al consumidor. En cuanto al consumidor, recupera la instancia de la interfaz del proveedor en su método denominado `SetConnectionInterface`, que está marcado con un `ConnectionConsumer` atributo. Después de recuperar la instancia de la interfaz, el consumidor, en su `OnPreRender` método, llama a la implementación de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> método del proveedor para recuperar los datos reales y escribirlos en la página.  
  
 Para que ejecutar el ejemplo de código, debe compilar este código fuente. Puede compilar de manera explícita y colocar el ensamblado resultante en la carpeta Bin de su sitio Web o la caché global de ensamblados. Como alternativa, puede colocar el código fuente en la carpeta App_Code de su sitio, donde se compilará dinámicamente en tiempo de ejecución. Este ejemplo de código utiliza la compilación dinámica. Para ver un tutorial que muestra cómo compilar, consulte [Tutorial: desarrollo y el uso de un Control de servidor Web personalizado](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 La segunda parte del ejemplo de código es la página Web que declara la conexión estática y hospeda los controles. En la parte superior de la página es una `Register` directiva que declara el espacio de nombres del código fuente incluido en el directorio App_Code. La conexión se declara con un `<asp:webpartconnection>` elemento. Los controles consumidor y proveedor personalizados se declaran en un `<zonetemplate>` elemento dentro de un `<asp:webpartzone>` elemento, que es necesario para que puedan conectarse (deben residir dentro de una zona que hereda de la <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> clase).  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 Cargue la página en un explorador. El control consumidor muestra los datos proporcionados desde la tabla especificada, que el proveedor pone disponibles a través de una instancia de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
    <related type="Article" href="https://msdn.microsoft.com/library/ab78a66e-9feb-4391-b3c3-8c07555e2308">Páginas de elementos Web de ASP.NET</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b">Introducción a las conexiones de elementos Web</related>
  </Docs>
  <Members>
    <Member MemberName="GetTableData">
      <MemberSignature Language="C#" Value="public void GetTableData (System.Web.UI.WebControls.WebParts.TableCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTableData(class System.Web.UI.WebControls.WebParts.TableCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData(System.Web.UI.WebControls.WebParts.TableCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTableData (callback As TableCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTableData(System::Web::UI::WebControls::WebParts::TableCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetTableData : System.Web.UI.WebControls.WebParts.TableCallback -&gt; unit" Usage="iWebPartTable.GetTableData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.TableCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Un delegado <see cref="T:System.Web.UI.WebControls.WebParts.TableCallback" /> que contiene la dirección de un método que recibe los datos.</param>
        <summary>Devuelve los datos de la tabla que la interfaz está utilizando como base de una conexión entre dos controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilice este método para recuperar los valores de tabla de datos transferidos por la interfaz. El proveedor implementa este método y el consumidor lo invoca en el momento cuando el consumidor está listo para procesar o para representar los datos.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la implementación y uso de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> método. El ejemplo completo se muestra en la información general de clases para el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz. El control proveedor implementa la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> método, que devuelve los datos de la tabla especificada. El control consumidor llama a la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.GetTableData%2A> método en su `OnPreRender` método, para que se puede escribir el valor de los datos a la página.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartTable.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtiene la información del esquema de una tabla de datos que se utiliza para compartir los datos entre dos controles <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Un control <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> que describe los datos.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Esta propiedad proporciona información sobre las propiedades de los datos en un <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> instancia. Hay un contrato implícito entre el esquema al que hace referencia el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propiedad y los datos en la tabla. El contrato es que para cada <xref:System.ComponentModel.PropertyDescriptor> objeto en el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propiedad, puede llamar a <xref:System.ComponentModel.PropertyDescriptor.GetValue%2A> en un elemento de la tabla de datos para obtener el valor de una columna o una fila de la tabla.  
  
   
  
## Examples  
 En el ejemplo de código siguiente se muestra la implementación y uso de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propiedad. El ejemplo completo se muestra en la información general de clases para el <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> interfaz. El control proveedor implementa la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propiedad. A continuación, el consumidor controlar, en su `RenderContents` método, las consultas de la <xref:System.Web.UI.WebControls.WebParts.IWebPartTable.Schema%2A> propiedad para recuperar información acerca de la tabla ya que escribe los datos de tabla a la página.  
  
 [!code-csharp[WebParts_IWebPartTable_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/CS/ITableSample.cs#2)]
 [!code-vb[WebParts_IWebPartTable_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartTable_Overview/VB/ITableSample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>